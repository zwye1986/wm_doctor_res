<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.core.common.sci.dao.ResEducationInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.core.model.ResEducationInfo" >
    <id column="EDUCATION_FLOW" property="educationFlow" jdbcType="VARCHAR" />
    <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
    <result column="GRADUATION_SCHOOL" property="graduationSchool" jdbcType="VARCHAR" />
    <result column="GRADUATION_TIME" property="graduationTime" jdbcType="VARCHAR" />
    <result column="GRADUATION_SPE" property="graduationSpe" jdbcType="VARCHAR" />
    <result column="ACADEMIC_BACKGROUND_ID" property="academicBackgroundId" jdbcType="VARCHAR" />
    <result column="ACADEMIC_BACKGROUND_NAME" property="academicBackgroundName" jdbcType="VARCHAR" />
    <result column="ACADEMIC_BACKGROUND_FILE" property="academicBackgroundFile" jdbcType="VARCHAR" />
    <result column="ACADEMIC_DEGREE_ID" property="academicDegreeId" jdbcType="VARCHAR" />
    <result column="ACADEMIC_DEGREE_NAME" property="academicDegreeName" jdbcType="VARCHAR" />
    <result column="ACADEMIC_DEGREE_FILE" property="academicDegreeFile" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    EDUCATION_FLOW, USER_FLOW, GRADUATION_SCHOOL, GRADUATION_TIME, GRADUATION_SPE, ACADEMIC_BACKGROUND_ID, 
    ACADEMIC_BACKGROUND_NAME, ACADEMIC_BACKGROUND_FILE, ACADEMIC_DEGREE_ID, ACADEMIC_DEGREE_NAME, 
    ACADEMIC_DEGREE_FILE, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
    MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.ResEducationInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.RES_EDUCATION_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.RES_EDUCATION_INFO
    where EDUCATION_FLOW = #{educationFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.RES_EDUCATION_INFO
    where EDUCATION_FLOW = #{educationFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.core.model.ResEducationInfoExample" >
    delete from PDSCI.RES_EDUCATION_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.core.model.ResEducationInfo" >
    insert into PDSCI.RES_EDUCATION_INFO (EDUCATION_FLOW, USER_FLOW, GRADUATION_SCHOOL, 
      GRADUATION_TIME, GRADUATION_SPE, ACADEMIC_BACKGROUND_ID, 
      ACADEMIC_BACKGROUND_NAME, ACADEMIC_BACKGROUND_FILE, 
      ACADEMIC_DEGREE_ID, ACADEMIC_DEGREE_NAME, ACADEMIC_DEGREE_FILE, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW)
    values (#{educationFlow,jdbcType=VARCHAR}, #{userFlow,jdbcType=VARCHAR}, #{graduationSchool,jdbcType=VARCHAR}, 
      #{graduationTime,jdbcType=VARCHAR}, #{graduationSpe,jdbcType=VARCHAR}, #{academicBackgroundId,jdbcType=VARCHAR}, 
      #{academicBackgroundName,jdbcType=VARCHAR}, #{academicBackgroundFile,jdbcType=VARCHAR}, 
      #{academicDegreeId,jdbcType=VARCHAR}, #{academicDegreeName,jdbcType=VARCHAR}, #{academicDegreeFile,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.core.model.ResEducationInfo" >
    insert into PDSCI.RES_EDUCATION_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="educationFlow != null" >
        EDUCATION_FLOW,
      </if>
      <if test="userFlow != null" >
        USER_FLOW,
      </if>
      <if test="graduationSchool != null" >
        GRADUATION_SCHOOL,
      </if>
      <if test="graduationTime != null" >
        GRADUATION_TIME,
      </if>
      <if test="graduationSpe != null" >
        GRADUATION_SPE,
      </if>
      <if test="academicBackgroundId != null" >
        ACADEMIC_BACKGROUND_ID,
      </if>
      <if test="academicBackgroundName != null" >
        ACADEMIC_BACKGROUND_NAME,
      </if>
      <if test="academicBackgroundFile != null" >
        ACADEMIC_BACKGROUND_FILE,
      </if>
      <if test="academicDegreeId != null" >
        ACADEMIC_DEGREE_ID,
      </if>
      <if test="academicDegreeName != null" >
        ACADEMIC_DEGREE_NAME,
      </if>
      <if test="academicDegreeFile != null" >
        ACADEMIC_DEGREE_FILE,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="educationFlow != null" >
        #{educationFlow,jdbcType=VARCHAR},
      </if>
      <if test="userFlow != null" >
        #{userFlow,jdbcType=VARCHAR},
      </if>
      <if test="graduationSchool != null" >
        #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null" >
        #{graduationTime,jdbcType=VARCHAR},
      </if>
      <if test="graduationSpe != null" >
        #{graduationSpe,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundId != null" >
        #{academicBackgroundId,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundName != null" >
        #{academicBackgroundName,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundFile != null" >
        #{academicBackgroundFile,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeId != null" >
        #{academicDegreeId,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeName != null" >
        #{academicDegreeName,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeFile != null" >
        #{academicDegreeFile,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.core.model.ResEducationInfoExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.RES_EDUCATION_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.RES_EDUCATION_INFO
    <set >
      <if test="record.educationFlow != null" >
        EDUCATION_FLOW = #{record.educationFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.userFlow != null" >
        USER_FLOW = #{record.userFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationSchool != null" >
        GRADUATION_SCHOOL = #{record.graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationTime != null" >
        GRADUATION_TIME = #{record.graduationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationSpe != null" >
        GRADUATION_SPE = #{record.graduationSpe,jdbcType=VARCHAR},
      </if>
      <if test="record.academicBackgroundId != null" >
        ACADEMIC_BACKGROUND_ID = #{record.academicBackgroundId,jdbcType=VARCHAR},
      </if>
      <if test="record.academicBackgroundName != null" >
        ACADEMIC_BACKGROUND_NAME = #{record.academicBackgroundName,jdbcType=VARCHAR},
      </if>
      <if test="record.academicBackgroundFile != null" >
        ACADEMIC_BACKGROUND_FILE = #{record.academicBackgroundFile,jdbcType=VARCHAR},
      </if>
      <if test="record.academicDegreeId != null" >
        ACADEMIC_DEGREE_ID = #{record.academicDegreeId,jdbcType=VARCHAR},
      </if>
      <if test="record.academicDegreeName != null" >
        ACADEMIC_DEGREE_NAME = #{record.academicDegreeName,jdbcType=VARCHAR},
      </if>
      <if test="record.academicDegreeFile != null" >
        ACADEMIC_DEGREE_FILE = #{record.academicDegreeFile,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.RES_EDUCATION_INFO
    set EDUCATION_FLOW = #{record.educationFlow,jdbcType=VARCHAR},
      USER_FLOW = #{record.userFlow,jdbcType=VARCHAR},
      GRADUATION_SCHOOL = #{record.graduationSchool,jdbcType=VARCHAR},
      GRADUATION_TIME = #{record.graduationTime,jdbcType=VARCHAR},
      GRADUATION_SPE = #{record.graduationSpe,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_ID = #{record.academicBackgroundId,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_NAME = #{record.academicBackgroundName,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_FILE = #{record.academicBackgroundFile,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_ID = #{record.academicDegreeId,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_NAME = #{record.academicDegreeName,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_FILE = #{record.academicDegreeFile,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.ResEducationInfo" >
    update PDSCI.RES_EDUCATION_INFO
    <set >
      <if test="userFlow != null" >
        USER_FLOW = #{userFlow,jdbcType=VARCHAR},
      </if>
      <if test="graduationSchool != null" >
        GRADUATION_SCHOOL = #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null" >
        GRADUATION_TIME = #{graduationTime,jdbcType=VARCHAR},
      </if>
      <if test="graduationSpe != null" >
        GRADUATION_SPE = #{graduationSpe,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundId != null" >
        ACADEMIC_BACKGROUND_ID = #{academicBackgroundId,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundName != null" >
        ACADEMIC_BACKGROUND_NAME = #{academicBackgroundName,jdbcType=VARCHAR},
      </if>
      <if test="academicBackgroundFile != null" >
        ACADEMIC_BACKGROUND_FILE = #{academicBackgroundFile,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeId != null" >
        ACADEMIC_DEGREE_ID = #{academicDegreeId,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeName != null" >
        ACADEMIC_DEGREE_NAME = #{academicDegreeName,jdbcType=VARCHAR},
      </if>
      <if test="academicDegreeFile != null" >
        ACADEMIC_DEGREE_FILE = #{academicDegreeFile,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where EDUCATION_FLOW = #{educationFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.ResEducationInfo" >
    update PDSCI.RES_EDUCATION_INFO
    set USER_FLOW = #{userFlow,jdbcType=VARCHAR},
      GRADUATION_SCHOOL = #{graduationSchool,jdbcType=VARCHAR},
      GRADUATION_TIME = #{graduationTime,jdbcType=VARCHAR},
      GRADUATION_SPE = #{graduationSpe,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_ID = #{academicBackgroundId,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_NAME = #{academicBackgroundName,jdbcType=VARCHAR},
      ACADEMIC_BACKGROUND_FILE = #{academicBackgroundFile,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_ID = #{academicDegreeId,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_NAME = #{academicDegreeName,jdbcType=VARCHAR},
      ACADEMIC_DEGREE_FILE = #{academicDegreeFile,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where EDUCATION_FLOW = #{educationFlow,jdbcType=VARCHAR}
  </update>
</mapper>