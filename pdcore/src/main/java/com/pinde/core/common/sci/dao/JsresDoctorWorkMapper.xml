<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.core.common.sci.dao.JsresDoctorWorkMapper">
  <resultMap id="BaseResultMap" type="com.pinde.core.model.JsresDoctorWork">
    <id column="RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow" />
    <result column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ORG_FLOW" jdbcType="VARCHAR" property="orgFlow" />
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="SESSION_NUMBER" jdbcType="VARCHAR" property="sessionNumber" />
    <result column="TRAINING_SPE_ID" jdbcType="VARCHAR" property="trainingSpeId" />
    <result column="TRAINING_SPE_NAME" jdbcType="VARCHAR" property="trainingSpeName" />
    <result column="REQ_NUM" jdbcType="VARCHAR" property="reqNum" />
    <result column="COMPLETE_NUM" jdbcType="VARCHAR" property="completeNum" />
    <result column="AUDIT_NUM" jdbcType="VARCHAR" property="auditNum" />
    <result column="ROTATION_NUM" jdbcType="VARCHAR" property="rotationNum" />
    <result column="YLZ_NUM" jdbcType="VARCHAR" property="ylzNum" />
    <result column="SCH_NUM" jdbcType="VARCHAR" property="schNum" />
    <result column="AFTER_NUM" jdbcType="VARCHAR" property="afterNum" />
    <result column="COMPLETE_BI" jdbcType="VARCHAR" property="completeBi" />
    <result column="AUDIT_BI" jdbcType="VARCHAR" property="auditBi" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
    <result column="RECRUIT_FLOW" jdbcType="VARCHAR" property="recruitFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RECORD_FLOW, DOCTOR_FLOW, USER_NAME, ORG_FLOW, ORG_NAME, SESSION_NUMBER, TRAINING_SPE_ID, 
    TRAINING_SPE_NAME, REQ_NUM, COMPLETE_NUM, AUDIT_NUM, ROTATION_NUM, YLZ_NUM, SCH_NUM, 
    AFTER_NUM, COMPLETE_BI, AUDIT_BI, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
    MODIFY_USER_FLOW, RECRUIT_FLOW
  </sql>
  <select id="selectByExample" parameterType="com.pinde.core.model.JsresDoctorWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
      from JSRES_DOCTOR_WORK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
      from JSRES_DOCTOR_WORK
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete
      from JSRES_DOCTOR_WORK
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.core.model.JsresDoctorWorkExample">
      delete from JSRES_DOCTOR_WORK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.core.model.JsresDoctorWork">
      insert into JSRES_DOCTOR_WORK (RECORD_FLOW, DOCTOR_FLOW, USER_NAME,
      ORG_FLOW, ORG_NAME, SESSION_NUMBER, 
      TRAINING_SPE_ID, TRAINING_SPE_NAME, REQ_NUM, 
      COMPLETE_NUM, AUDIT_NUM, ROTATION_NUM, 
      YLZ_NUM, SCH_NUM, AFTER_NUM, 
      COMPLETE_BI, AUDIT_BI, RECORD_STATUS, 
      CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
      MODIFY_USER_FLOW, RECRUIT_FLOW)
    values (#{recordFlow,jdbcType=VARCHAR}, #{doctorFlow,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{sessionNumber,jdbcType=VARCHAR}, 
      #{trainingSpeId,jdbcType=VARCHAR}, #{trainingSpeName,jdbcType=VARCHAR}, #{reqNum,jdbcType=VARCHAR}, 
      #{completeNum,jdbcType=VARCHAR}, #{auditNum,jdbcType=VARCHAR}, #{rotationNum,jdbcType=VARCHAR}, 
      #{ylzNum,jdbcType=VARCHAR}, #{schNum,jdbcType=VARCHAR}, #{afterNum,jdbcType=VARCHAR}, 
      #{completeBi,jdbcType=VARCHAR}, #{auditBi,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUserFlow,jdbcType=VARCHAR}, #{recruitFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.core.model.JsresDoctorWork">
      insert into JSRES_DOCTOR_WORK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        RECORD_FLOW,
      </if>
      <if test="doctorFlow != null">
        DOCTOR_FLOW,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="orgFlow != null">
        ORG_FLOW,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER,
      </if>
      <if test="trainingSpeId != null">
        TRAINING_SPE_ID,
      </if>
      <if test="trainingSpeName != null">
        TRAINING_SPE_NAME,
      </if>
      <if test="reqNum != null">
        REQ_NUM,
      </if>
      <if test="completeNum != null">
        COMPLETE_NUM,
      </if>
      <if test="auditNum != null">
        AUDIT_NUM,
      </if>
      <if test="rotationNum != null">
        ROTATION_NUM,
      </if>
      <if test="ylzNum != null">
        YLZ_NUM,
      </if>
      <if test="schNum != null">
        SCH_NUM,
      </if>
      <if test="afterNum != null">
        AFTER_NUM,
      </if>
      <if test="completeBi != null">
        COMPLETE_BI,
      </if>
      <if test="auditBi != null">
        AUDIT_BI,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
      <if test="recruitFlow != null">
        RECRUIT_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null">
        #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeId != null">
        #{trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeName != null">
        #{trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="reqNum != null">
        #{reqNum,jdbcType=VARCHAR},
      </if>
      <if test="completeNum != null">
        #{completeNum,jdbcType=VARCHAR},
      </if>
      <if test="auditNum != null">
        #{auditNum,jdbcType=VARCHAR},
      </if>
      <if test="rotationNum != null">
        #{rotationNum,jdbcType=VARCHAR},
      </if>
      <if test="ylzNum != null">
        #{ylzNum,jdbcType=VARCHAR},
      </if>
      <if test="schNum != null">
        #{schNum,jdbcType=VARCHAR},
      </if>
      <if test="afterNum != null">
        #{afterNum,jdbcType=VARCHAR},
      </if>
      <if test="completeBi != null">
        #{completeBi,jdbcType=VARCHAR},
      </if>
      <if test="auditBi != null">
        #{auditBi,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="recruitFlow != null">
        #{recruitFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.core.model.JsresDoctorWorkExample" resultType="java.lang.Integer">
      select count(*) from JSRES_DOCTOR_WORK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
      update JSRES_DOCTOR_WORK
    <set>
      <if test="record.recordFlow != null">
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorFlow != null">
        DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null">
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionNumber != null">
        SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingSpeId != null">
        TRAINING_SPE_ID = #{record.trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingSpeName != null">
        TRAINING_SPE_NAME = #{record.trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="record.reqNum != null">
        REQ_NUM = #{record.reqNum,jdbcType=VARCHAR},
      </if>
      <if test="record.completeNum != null">
        COMPLETE_NUM = #{record.completeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.auditNum != null">
        AUDIT_NUM = #{record.auditNum,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationNum != null">
        ROTATION_NUM = #{record.rotationNum,jdbcType=VARCHAR},
      </if>
      <if test="record.ylzNum != null">
        YLZ_NUM = #{record.ylzNum,jdbcType=VARCHAR},
      </if>
      <if test="record.schNum != null">
        SCH_NUM = #{record.schNum,jdbcType=VARCHAR},
      </if>
      <if test="record.afterNum != null">
        AFTER_NUM = #{record.afterNum,jdbcType=VARCHAR},
      </if>
      <if test="record.completeBi != null">
        COMPLETE_BI = #{record.completeBi,jdbcType=VARCHAR},
      </if>
      <if test="record.auditBi != null">
        AUDIT_BI = #{record.auditBi,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitFlow != null">
        RECRUIT_FLOW = #{record.recruitFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
      update JSRES_DOCTOR_WORK
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{record.trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{record.trainingSpeName,jdbcType=VARCHAR},
      REQ_NUM = #{record.reqNum,jdbcType=VARCHAR},
      COMPLETE_NUM = #{record.completeNum,jdbcType=VARCHAR},
      AUDIT_NUM = #{record.auditNum,jdbcType=VARCHAR},
      ROTATION_NUM = #{record.rotationNum,jdbcType=VARCHAR},
      YLZ_NUM = #{record.ylzNum,jdbcType=VARCHAR},
      SCH_NUM = #{record.schNum,jdbcType=VARCHAR},
      AFTER_NUM = #{record.afterNum,jdbcType=VARCHAR},
      COMPLETE_BI = #{record.completeBi,jdbcType=VARCHAR},
      AUDIT_BI = #{record.auditBi,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{record.recruitFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.JsresDoctorWork">
      update JSRES_DOCTOR_WORK
    <set>
      <if test="doctorFlow != null">
        DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeId != null">
        TRAINING_SPE_ID = #{trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeName != null">
        TRAINING_SPE_NAME = #{trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="reqNum != null">
        REQ_NUM = #{reqNum,jdbcType=VARCHAR},
      </if>
      <if test="completeNum != null">
        COMPLETE_NUM = #{completeNum,jdbcType=VARCHAR},
      </if>
      <if test="auditNum != null">
        AUDIT_NUM = #{auditNum,jdbcType=VARCHAR},
      </if>
      <if test="rotationNum != null">
        ROTATION_NUM = #{rotationNum,jdbcType=VARCHAR},
      </if>
      <if test="ylzNum != null">
        YLZ_NUM = #{ylzNum,jdbcType=VARCHAR},
      </if>
      <if test="schNum != null">
        SCH_NUM = #{schNum,jdbcType=VARCHAR},
      </if>
      <if test="afterNum != null">
        AFTER_NUM = #{afterNum,jdbcType=VARCHAR},
      </if>
      <if test="completeBi != null">
        COMPLETE_BI = #{completeBi,jdbcType=VARCHAR},
      </if>
      <if test="auditBi != null">
        AUDIT_BI = #{auditBi,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="recruitFlow != null">
        RECRUIT_FLOW = #{recruitFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.JsresDoctorWork">
      update JSRES_DOCTOR_WORK
    set DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{trainingSpeName,jdbcType=VARCHAR},
      REQ_NUM = #{reqNum,jdbcType=VARCHAR},
      COMPLETE_NUM = #{completeNum,jdbcType=VARCHAR},
      AUDIT_NUM = #{auditNum,jdbcType=VARCHAR},
      ROTATION_NUM = #{rotationNum,jdbcType=VARCHAR},
      YLZ_NUM = #{ylzNum,jdbcType=VARCHAR},
      SCH_NUM = #{schNum,jdbcType=VARCHAR},
      AFTER_NUM = #{afterNum,jdbcType=VARCHAR},
      COMPLETE_BI = #{completeBi,jdbcType=VARCHAR},
      AUDIT_BI = #{auditBi,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{recruitFlow,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>