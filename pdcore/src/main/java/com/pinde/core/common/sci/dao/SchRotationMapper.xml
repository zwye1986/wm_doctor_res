<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.core.common.sci.dao.SchRotationMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.core.model.SchRotation" >
    <id column="ROTATION_FLOW" property="rotationFlow" jdbcType="VARCHAR" />
    <result column="ROTATION_NAME" property="rotationName" jdbcType="VARCHAR" />
    <result column="PUBLISH_FLAG" property="publishFlag" jdbcType="VARCHAR" />
    <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
    <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
    <result column="ROTATION_YEAR" property="rotationYear" jdbcType="VARCHAR" />
    <result column="DOCTOR_CATEGORY_ID" property="doctorCategoryId" jdbcType="VARCHAR" />
    <result column="DOCTOR_CATEGORY_NAME" property="doctorCategoryName" jdbcType="VARCHAR" />
    <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="IS_CRISSCROSS_FLAG" property="isCrisscrossFlag" jdbcType="VARCHAR" />
    <result column="IS_STAGE" property="isStage" jdbcType="VARCHAR" />
    <result column="ROTATION_TYPE_ID" property="rotationTypeId" jdbcType="VARCHAR" />
    <result column="ROTATION_TYPE_NAME" property="rotationTypeName" jdbcType="VARCHAR" />
    <result column="ROTATION_VERSION" property="rotationVersion" jdbcType="VARCHAR" />
    <result column="IS_ORG_VIEW" property="isOrgView" jdbcType="VARCHAR" />
    <result column="WORK_ORG_ID" property="workOrgId" jdbcType="VARCHAR" />
    <result column="WORK_ORG_NAME" property="workOrgName" jdbcType="VARCHAR" />
    <result column="IS_DOUBLE" property="isDouble" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pinde.core.model.SchRotation" extends="BaseResultMap" >
    <result column="ROTATION_NOTE" property="rotationNote" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROTATION_FLOW, ROTATION_NAME, PUBLISH_FLAG, SPE_ID, SPE_NAME, ROTATION_YEAR, DOCTOR_CATEGORY_ID, 
    DOCTOR_CATEGORY_NAME, ORDINAL, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
    MODIFY_USER_FLOW, IS_CRISSCROSS_FLAG, IS_STAGE, ROTATION_TYPE_ID, ROTATION_TYPE_NAME, 
    ROTATION_VERSION, IS_ORG_VIEW, WORK_ORG_ID, WORK_ORG_NAME, IS_DOUBLE
  </sql>
  <sql id="Blob_Column_List" >
    ROTATION_NOTE
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pinde.core.model.SchRotationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from SCH_ROTATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.SchRotationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
      from SCH_ROTATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from SCH_ROTATION
    where ROTATION_FLOW = #{rotationFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
      delete from SCH_ROTATION
    where ROTATION_FLOW = #{rotationFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.core.model.SchRotationExample" >
      delete from SCH_ROTATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.core.model.SchRotation" >
      insert into SCH_ROTATION (ROTATION_FLOW, ROTATION_NAME, PUBLISH_FLAG,
      SPE_ID, SPE_NAME, ROTATION_YEAR, 
      DOCTOR_CATEGORY_ID, DOCTOR_CATEGORY_NAME, ORDINAL, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW, IS_CRISSCROSS_FLAG, 
      IS_STAGE, ROTATION_TYPE_ID, ROTATION_TYPE_NAME, 
      ROTATION_VERSION, IS_ORG_VIEW, WORK_ORG_ID, 
      WORK_ORG_NAME, IS_DOUBLE, ROTATION_NOTE
      )
    values (#{rotationFlow,jdbcType=VARCHAR}, #{rotationName,jdbcType=VARCHAR}, #{publishFlag,jdbcType=VARCHAR}, 
      #{speId,jdbcType=VARCHAR}, #{speName,jdbcType=VARCHAR}, #{rotationYear,jdbcType=VARCHAR}, 
      #{doctorCategoryId,jdbcType=VARCHAR}, #{doctorCategoryName,jdbcType=VARCHAR}, #{ordinal,jdbcType=DECIMAL}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, #{isCrisscrossFlag,jdbcType=VARCHAR}, 
      #{isStage,jdbcType=VARCHAR}, #{rotationTypeId,jdbcType=VARCHAR}, #{rotationTypeName,jdbcType=VARCHAR}, 
      #{rotationVersion,jdbcType=VARCHAR}, #{isOrgView,jdbcType=VARCHAR}, #{workOrgId,jdbcType=VARCHAR}, 
      #{workOrgName,jdbcType=VARCHAR}, #{isDouble,jdbcType=VARCHAR}, #{rotationNote,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.core.model.SchRotation" >
      insert into SCH_ROTATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rotationFlow != null" >
        ROTATION_FLOW,
      </if>
      <if test="rotationName != null" >
        ROTATION_NAME,
      </if>
      <if test="publishFlag != null" >
        PUBLISH_FLAG,
      </if>
      <if test="speId != null" >
        SPE_ID,
      </if>
      <if test="speName != null" >
        SPE_NAME,
      </if>
      <if test="rotationYear != null" >
        ROTATION_YEAR,
      </if>
      <if test="doctorCategoryId != null" >
        DOCTOR_CATEGORY_ID,
      </if>
      <if test="doctorCategoryName != null" >
        DOCTOR_CATEGORY_NAME,
      </if>
      <if test="ordinal != null" >
        ORDINAL,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="isCrisscrossFlag != null" >
        IS_CRISSCROSS_FLAG,
      </if>
      <if test="isStage != null" >
        IS_STAGE,
      </if>
      <if test="rotationTypeId != null" >
        ROTATION_TYPE_ID,
      </if>
      <if test="rotationTypeName != null" >
        ROTATION_TYPE_NAME,
      </if>
      <if test="rotationVersion != null" >
        ROTATION_VERSION,
      </if>
      <if test="isOrgView != null" >
        IS_ORG_VIEW,
      </if>
      <if test="workOrgId != null" >
        WORK_ORG_ID,
      </if>
      <if test="workOrgName != null" >
        WORK_ORG_NAME,
      </if>
      <if test="isDouble != null" >
        IS_DOUBLE,
      </if>
      <if test="rotationNote != null" >
        ROTATION_NOTE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rotationFlow != null" >
        #{rotationFlow,jdbcType=VARCHAR},
      </if>
      <if test="rotationName != null" >
        #{rotationName,jdbcType=VARCHAR},
      </if>
      <if test="publishFlag != null" >
        #{publishFlag,jdbcType=VARCHAR},
      </if>
      <if test="speId != null" >
        #{speId,jdbcType=VARCHAR},
      </if>
      <if test="speName != null" >
        #{speName,jdbcType=VARCHAR},
      </if>
      <if test="rotationYear != null" >
        #{rotationYear,jdbcType=VARCHAR},
      </if>
      <if test="doctorCategoryId != null" >
        #{doctorCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="doctorCategoryName != null" >
        #{doctorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isCrisscrossFlag != null" >
        #{isCrisscrossFlag,jdbcType=VARCHAR},
      </if>
      <if test="isStage != null" >
        #{isStage,jdbcType=VARCHAR},
      </if>
      <if test="rotationTypeId != null" >
        #{rotationTypeId,jdbcType=VARCHAR},
      </if>
      <if test="rotationTypeName != null" >
        #{rotationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="rotationVersion != null" >
        #{rotationVersion,jdbcType=VARCHAR},
      </if>
      <if test="isOrgView != null" >
        #{isOrgView,jdbcType=VARCHAR},
      </if>
      <if test="workOrgId != null" >
        #{workOrgId,jdbcType=VARCHAR},
      </if>
      <if test="workOrgName != null" >
        #{workOrgName,jdbcType=VARCHAR},
      </if>
      <if test="isDouble != null" >
        #{isDouble,jdbcType=VARCHAR},
      </if>
      <if test="rotationNote != null" >
        #{rotationNote,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.core.model.SchRotationExample" resultType="java.lang.Integer" >
      select count(*) from SCH_ROTATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
      update SCH_ROTATION
    <set >
      <if test="record.rotationFlow != null" >
        ROTATION_FLOW = #{record.rotationFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationName != null" >
        ROTATION_NAME = #{record.rotationName,jdbcType=VARCHAR},
      </if>
      <if test="record.publishFlag != null" >
        PUBLISH_FLAG = #{record.publishFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.speId != null" >
        SPE_ID = #{record.speId,jdbcType=VARCHAR},
      </if>
      <if test="record.speName != null" >
        SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationYear != null" >
        ROTATION_YEAR = #{record.rotationYear,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorCategoryId != null" >
        DOCTOR_CATEGORY_ID = #{record.doctorCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorCategoryName != null" >
        DOCTOR_CATEGORY_NAME = #{record.doctorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordinal != null" >
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.isCrisscrossFlag != null" >
        IS_CRISSCROSS_FLAG = #{record.isCrisscrossFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.isStage != null" >
        IS_STAGE = #{record.isStage,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationTypeId != null" >
        ROTATION_TYPE_ID = #{record.rotationTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationTypeName != null" >
        ROTATION_TYPE_NAME = #{record.rotationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationVersion != null" >
        ROTATION_VERSION = #{record.rotationVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.isOrgView != null" >
        IS_ORG_VIEW = #{record.isOrgView,jdbcType=VARCHAR},
      </if>
      <if test="record.workOrgId != null" >
        WORK_ORG_ID = #{record.workOrgId,jdbcType=VARCHAR},
      </if>
      <if test="record.workOrgName != null" >
        WORK_ORG_NAME = #{record.workOrgName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDouble != null" >
        IS_DOUBLE = #{record.isDouble,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationNote != null" >
        ROTATION_NOTE = #{record.rotationNote,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
      update SCH_ROTATION
    set ROTATION_FLOW = #{record.rotationFlow,jdbcType=VARCHAR},
      ROTATION_NAME = #{record.rotationName,jdbcType=VARCHAR},
      PUBLISH_FLAG = #{record.publishFlag,jdbcType=VARCHAR},
      SPE_ID = #{record.speId,jdbcType=VARCHAR},
      SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      ROTATION_YEAR = #{record.rotationYear,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_ID = #{record.doctorCategoryId,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_NAME = #{record.doctorCategoryName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      IS_CRISSCROSS_FLAG = #{record.isCrisscrossFlag,jdbcType=VARCHAR},
      IS_STAGE = #{record.isStage,jdbcType=VARCHAR},
      ROTATION_TYPE_ID = #{record.rotationTypeId,jdbcType=VARCHAR},
      ROTATION_TYPE_NAME = #{record.rotationTypeName,jdbcType=VARCHAR},
      ROTATION_VERSION = #{record.rotationVersion,jdbcType=VARCHAR},
      IS_ORG_VIEW = #{record.isOrgView,jdbcType=VARCHAR},
      WORK_ORG_ID = #{record.workOrgId,jdbcType=VARCHAR},
      WORK_ORG_NAME = #{record.workOrgName,jdbcType=VARCHAR},
      IS_DOUBLE = #{record.isDouble,jdbcType=VARCHAR},
      ROTATION_NOTE = #{record.rotationNote,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
      update SCH_ROTATION
    set ROTATION_FLOW = #{record.rotationFlow,jdbcType=VARCHAR},
      ROTATION_NAME = #{record.rotationName,jdbcType=VARCHAR},
      PUBLISH_FLAG = #{record.publishFlag,jdbcType=VARCHAR},
      SPE_ID = #{record.speId,jdbcType=VARCHAR},
      SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      ROTATION_YEAR = #{record.rotationYear,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_ID = #{record.doctorCategoryId,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_NAME = #{record.doctorCategoryName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      IS_CRISSCROSS_FLAG = #{record.isCrisscrossFlag,jdbcType=VARCHAR},
      IS_STAGE = #{record.isStage,jdbcType=VARCHAR},
      ROTATION_TYPE_ID = #{record.rotationTypeId,jdbcType=VARCHAR},
      ROTATION_TYPE_NAME = #{record.rotationTypeName,jdbcType=VARCHAR},
      ROTATION_VERSION = #{record.rotationVersion,jdbcType=VARCHAR},
      IS_ORG_VIEW = #{record.isOrgView,jdbcType=VARCHAR},
      WORK_ORG_ID = #{record.workOrgId,jdbcType=VARCHAR},
      WORK_ORG_NAME = #{record.workOrgName,jdbcType=VARCHAR},
      IS_DOUBLE = #{record.isDouble,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.SchRotation" >
      update SCH_ROTATION
    <set >
      <if test="rotationName != null" >
        ROTATION_NAME = #{rotationName,jdbcType=VARCHAR},
      </if>
      <if test="publishFlag != null" >
        PUBLISH_FLAG = #{publishFlag,jdbcType=VARCHAR},
      </if>
      <if test="speId != null" >
        SPE_ID = #{speId,jdbcType=VARCHAR},
      </if>
      <if test="speName != null" >
        SPE_NAME = #{speName,jdbcType=VARCHAR},
      </if>
      <if test="rotationYear != null" >
        ROTATION_YEAR = #{rotationYear,jdbcType=VARCHAR},
      </if>
      <if test="doctorCategoryId != null" >
        DOCTOR_CATEGORY_ID = #{doctorCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="doctorCategoryName != null" >
        DOCTOR_CATEGORY_NAME = #{doctorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isCrisscrossFlag != null" >
        IS_CRISSCROSS_FLAG = #{isCrisscrossFlag,jdbcType=VARCHAR},
      </if>
      <if test="isStage != null" >
        IS_STAGE = #{isStage,jdbcType=VARCHAR},
      </if>
      <if test="rotationTypeId != null" >
        ROTATION_TYPE_ID = #{rotationTypeId,jdbcType=VARCHAR},
      </if>
      <if test="rotationTypeName != null" >
        ROTATION_TYPE_NAME = #{rotationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="rotationVersion != null" >
        ROTATION_VERSION = #{rotationVersion,jdbcType=VARCHAR},
      </if>
      <if test="isOrgView != null" >
        IS_ORG_VIEW = #{isOrgView,jdbcType=VARCHAR},
      </if>
      <if test="workOrgId != null" >
        WORK_ORG_ID = #{workOrgId,jdbcType=VARCHAR},
      </if>
      <if test="workOrgName != null" >
        WORK_ORG_NAME = #{workOrgName,jdbcType=VARCHAR},
      </if>
      <if test="isDouble != null" >
        IS_DOUBLE = #{isDouble,jdbcType=VARCHAR},
      </if>
      <if test="rotationNote != null" >
        ROTATION_NOTE = #{rotationNote,jdbcType=CLOB},
      </if>
    </set>
    where ROTATION_FLOW = #{rotationFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.core.model.SchRotation" >
      update SCH_ROTATION
    set ROTATION_NAME = #{rotationName,jdbcType=VARCHAR},
      PUBLISH_FLAG = #{publishFlag,jdbcType=VARCHAR},
      SPE_ID = #{speId,jdbcType=VARCHAR},
      SPE_NAME = #{speName,jdbcType=VARCHAR},
      ROTATION_YEAR = #{rotationYear,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_ID = #{doctorCategoryId,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_NAME = #{doctorCategoryName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      IS_CRISSCROSS_FLAG = #{isCrisscrossFlag,jdbcType=VARCHAR},
      IS_STAGE = #{isStage,jdbcType=VARCHAR},
      ROTATION_TYPE_ID = #{rotationTypeId,jdbcType=VARCHAR},
      ROTATION_TYPE_NAME = #{rotationTypeName,jdbcType=VARCHAR},
      ROTATION_VERSION = #{rotationVersion,jdbcType=VARCHAR},
      IS_ORG_VIEW = #{isOrgView,jdbcType=VARCHAR},
      WORK_ORG_ID = #{workOrgId,jdbcType=VARCHAR},
      WORK_ORG_NAME = #{workOrgName,jdbcType=VARCHAR},
      IS_DOUBLE = #{isDouble,jdbcType=VARCHAR},
      ROTATION_NOTE = #{rotationNote,jdbcType=CLOB}
    where ROTATION_FLOW = #{rotationFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.SchRotation" >
      update SCH_ROTATION
    set ROTATION_NAME = #{rotationName,jdbcType=VARCHAR},
      PUBLISH_FLAG = #{publishFlag,jdbcType=VARCHAR},
      SPE_ID = #{speId,jdbcType=VARCHAR},
      SPE_NAME = #{speName,jdbcType=VARCHAR},
      ROTATION_YEAR = #{rotationYear,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_ID = #{doctorCategoryId,jdbcType=VARCHAR},
      DOCTOR_CATEGORY_NAME = #{doctorCategoryName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      IS_CRISSCROSS_FLAG = #{isCrisscrossFlag,jdbcType=VARCHAR},
      IS_STAGE = #{isStage,jdbcType=VARCHAR},
      ROTATION_TYPE_ID = #{rotationTypeId,jdbcType=VARCHAR},
      ROTATION_TYPE_NAME = #{rotationTypeName,jdbcType=VARCHAR},
      ROTATION_VERSION = #{rotationVersion,jdbcType=VARCHAR},
      IS_ORG_VIEW = #{isOrgView,jdbcType=VARCHAR},
      WORK_ORG_ID = #{workOrgId,jdbcType=VARCHAR},
      WORK_ORG_NAME = #{workOrgName,jdbcType=VARCHAR},
      IS_DOUBLE = #{isDouble,jdbcType=VARCHAR}
    where ROTATION_FLOW = #{rotationFlow,jdbcType=VARCHAR}
  </update>
</mapper>