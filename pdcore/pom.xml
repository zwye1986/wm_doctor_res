<!-- project 根描述符 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 指定maven版本，一般为4.0.0 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 基本配置 -->
    <!-- 继承功能，可以指定父POM -->
    <parent>
        <groupId>com.pinde</groupId>
        <artifactId>pdsci-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <!-- 一般jar包为: groupId:artifactId:version -->
    <!-- 团体、组织标书符，项目的命名空间 -->
    <groupId>com.pinde</groupId>
    <!-- 项目唯一标识符，不能含有点号(.) -->
    <artifactId>pdcore</artifactId>
    <!-- 版本号，可以实用特殊字符串 SNAPSHOT、LATEST、RELEASE -->
    <!-- SNAPSHOT: 用于开发过程中，表示不稳定版本 -->
    <!-- LATEST: 表示特定构建的最新发布版本 -->
    <!-- RELEASE: 最有一个稳定的发布版本 -->
    <version>1.0-SNAPSHOT</version>
    <!-- 项目打包类型，默认jar，常见类型：pom, jar, maven-plugin, ejb, war, ear, rar, par -->
    <!-- 打war和jar包时修改 -->
    <!--    <packaging>jar</packaging>-->

    <!-- 声明变量，如果后面用到可使用${变量名}来替代 -->
    <properties>
        <lib.dir>${basedir}/src/main/lib</lib.dir>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.oreilly</groupId>
            <artifactId>cos</artifactId>
            <version>12.2008</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/cos-26Dec2008.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>jacob</groupId>
            <artifactId>jacob</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/jacob.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>java_memcached-release_2.6.6</groupId>
            <artifactId>java_memcached-release_2.6.6</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/java_memcached-release_2.6.6.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>json_simple-1.1</groupId>
            <artifactId>json_simple-1.1</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/json_simple-1.1.jar</systemPath>
        </dependency>


        <dependency>
            <groupId>jtidy-r938</groupId>
            <artifactId>jtidy-r938</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/jtidy-r938.jar</systemPath>
        </dependency>


        <dependency>
            <groupId>optaplanner-core-7.7.0.Final</groupId>
            <artifactId>optaplanner-core-7.7.0.Final</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/optaplanner-core-7.7.0.Final.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>pinyin4j-2.5.0</groupId>
            <artifactId>pinyin4j-2.5.0</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/pinyin4j-2.5.0.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>simplecaptcha-1.2.1</groupId>
            <artifactId>simplecaptcha-1.2.1</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/simplecaptcha-1.2.1.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>sigar-1.6.4</groupId>
            <artifactId>sigar-1.6.4</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${lib.dir}/sigar-1.6.4.jar</systemPath>
        </dependency>
    </dependencies>
    <!-- 多项目（子父项目）中方便依赖管理，保证版本一致，父项目中使用，声明依赖，但不引用，子项目中可以不加版本，使用父项目中配置 -->
    <dependencyManagement>
    </dependencyManagement>

    <build>
        <!-- 执行目标 -->
        <defaultGoal>package</defaultGoal>
        <!-- 构建目标目录 -->
        <directory>${basedir}/target</directory>
        <!-- 各种默认路径及默认值 -->
        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
        <!--        <scriptSourceDirectory>${basedir}/src/main/scripts</scriptSourceDirectory>-->
        <outputDirectory>${basedir}/target/classes</outputDirectory>
        <!--        <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>-->
        <!--        <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>-->
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <!--<include>**/*.yml</include>
                    <include>**/*.properties</include>-->
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>

        <finalName>pdcore-SNAPSHOT</finalName>
    </build>
</project>
