<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.res.dao.njmu.ext.DeptListMapper">
	<resultMap id="deptMap" type="hashmap">
        <result column="deptFlow"  property="deptFlow" javaType="java.lang.String"/>
        <result column="deptOrder"  property="deptOrder" javaType="java.lang.String"/>
        <result column="deptName"  property="deptName" javaType="java.lang.String"/>
        <result column="startDate"  property="startDate" javaType="java.lang.String"/>
        <result column="endDate"  property="endDate" javaType="java.lang.String"/>
        <result column="teacherName"  property="teacherName" javaType="java.lang.String"/>
        <result column="deptHeadName"  property="deptHeadName" javaType="java.lang.String"/>
        <result column="statusId"  property="statusId" javaType="java.lang.String"/>
        <result column="statusDesc"  property="statusDesc" javaType="java.lang.String"/>
        <result column="score"  property="score" javaType="java.lang.String"/>
        <result column="progress"  property="progress" javaType="java.lang.String"/>
   	</resultMap>
	<select id="search" parameterType="string" resultMap="deptMap">
	SELECT
		  *
		FROM
		  (
		    SELECT
		      ROW_NUMBER() OVER (order by T.deptOrder )AS Row,
		      T.*
		    FROM
		      (
		        SELECT 
		          UserCycleSec.UCSID AS deptFlow,
		          row_number() over(order by UserCycleSec.StartTime) AS deptOrder,
		          HosSection.HosSecName                              AS deptName,
		          isnull(CONVERT(VARCHAR(10),RStartTime,120),CONVERT(VARCHAR(10),
		          starttime,120)) AS startDate,
		          isnull(CONVERT(VARCHAR(10),REndTime,120),CONVERT(VARCHAR(10),endtime,120)) AS endDate,
		          teacherName,deptHeadName,
		          CASE
		            WHEN CheckStatus = 1
		            THEN 'Exited'
		            WHEN rstarttime IS NULL
		            THEN 'NotEntered'
		            WHEN rstarttime IS NOT NULL
		            THEN 'Entered'
		          END AS statusId,
		          CASE
		            WHEN CheckStatus = 1
		            THEN '已出科'
		            WHEN rstarttime IS NULL
		            THEN '未入科'
		            WHEN rstarttime IS NOT NULL
		            THEN '已入科'
		          END                  AS statusDesc,
		          isnull(TotalScore,0) AS score,
		          (
		            SELECT
		              COUNT(*)
		            FROM
		              UserCycleSec
		            WHERE
		              userid = ${userFlow}
		          ) AS countNum,
		          UserCycleSec.userID,
		          UserCycleSec.cySecID,
		          mustNum,
		          num,
		          case mustNum when 0 then 100
				  else ROUND(CAST(isnull(num,0) AS FLOAT)/CAST(mustNum AS FLOAT)* 100,2)  end
		          AS progress
		        FROM
		          UserCycleSec
		        LEFT JOIN UserInfo
		        ON
		          UserInfo.UserID = UserCycleSec.UserID
		        LEFT JOIN HosCycleSection
		        ON
		          HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
		        LEFT JOIN HosSection
		        ON
		          HosSection.HosSecID = HosCycleSection.HosSecID
		        LEFT JOIN UserRealCycleSec
		        ON
		          UserRealCycleSec.RUCSID = UserCycleSec.UCSID
		        LEFT JOIN OutSecBrief
		        ON
		          OutSecBrief.ucsid = UserCycleSec.ucsid
		        LEFT JOIN NYDOutCycleSectionRecord_New
		        ON
		          NYDOutCycleSectionRecord_New.ucsid = UserCycleSec.ucsid
				  LEFT JOIN (
						SELECT truename as teacherName,UserRealTec.UCSID from UserInfo  
						left join UserRealTec ON UserRealTec.UserTecID = UserInfo.UserID
						where UserRealTec.UserDipID = ${userFlow}) as TecUserInfo on TecUserInfo.UCSID = UserCycleSec.UCSID
			LEFT JOIN (
						SELECT truename as deptHeadName,UserSectionManager.UCSID from UserInfo  
						left join UserSectionManager ON UserSectionManager.SectionManagerID = UserInfo.UserID
						where UserSectionManager.StudentID = ${userFlow}) as ManagerUserInfo on ManagerUserInfo.UCSID = UserCycleSec.UCSID
		        LEFT JOIN
		          (
		            SELECT
		              CySecID,
		              SUM(num) AS MustNum
		            FROM
		              (
		                SELECT
		                  SUM(RequireNumber) AS num,
		                  CySecID
		                FROM
		                  BigHistoryCase
		                GROUP BY
		                  CySecID
		                UNION  ALL
		                SELECT
		                  SUM(CaRequireNumber) AS num,
		                  CySecID
		                FROM
		                  CaseClass
		                GROUP BY
		                  CySecID
		                UNION  ALL
		                SELECT
		                  SUM(OpRequireNumber) AS num,
		                  CySecID
		                FROM
		                  OperateSkill
		                GROUP BY
		                  CySecID
		                UNION  ALL
		                SELECT
		                  SUM(OPSRequireNumber) AS num,
		                  CySecID
		                FROM
		                  OPSSkill
		                GROUP BY
		                  CySecID
		              ) AS Temp
		            GROUP BY
		              CySecID
		          ) AS MustNum
		        ON
		          MustNum.CySecID = UserCycleSec.CySecID
		        LEFT JOIN
		          (
		            SELECT
		              userid,
		              CySecID,
		              SUM(num) AS num
		            FROM
		              (
		                SELECT
		                  COUNT(*) AS num,
		                  cysecid,
		                  userid
		                FROM
		                  Rec_BigHistory
		                LEFT JOIN BigHistoryCase
		                ON
		                  BigHistoryCase.bhid = Rec_BigHistory.fromid
		                GROUP BY
		                  userid,
		                  cysecid
		                UNION  ALL
		                SELECT
		                  COUNT(*) AS num,
		                  cysecid,
		                  userid
		                FROM
		                  Rec_CaseClass
		                LEFT JOIN CaseClass
		                ON
		                  CaseClass.CaID = Rec_CaseClass.fromid
		                GROUP BY
		                  userid,
		                  cysecid
		                UNION  ALL
		                SELECT
		                  COUNT(*) AS num,
		                  cysecid,
		                  userid
		                FROM
		                  Rec_OperateSkill
		                LEFT JOIN OperateSkill
		                ON
		                  OperateSkill.OpID = Rec_OperateSkill.fromid
		                GROUP BY
		                  userid,
		                  cysecid
		                UNION  ALL
		                SELECT
		                  COUNT(*) AS num,
		                  cysecid,
		                  userid
		                FROM
		                  Rec_POSSkill
		                LEFT JOIN OPSSkill
		                ON
		                  OPSSkill.OPSID = Rec_POSSkill.fromid
		                GROUP BY
		                  userid,
		                  cysecid
		              ) AS Temp
		            GROUP BY
		              userid,
		              cysecid
		          ) AS Num ON Num.UserID = UserCycleSec.UserID
		        AND Num.CySecID          = UserCycleSec.CySecID
		        WHERE
		          UserCycleSec.userid = ${userFlow}
		      ) AS T
		  )
		  TT
		WHERE
		  TT.Row BETWEEN ${startRow} and ${endRow}
		ORDER BY
		  startDate
	</select>
</mapper>