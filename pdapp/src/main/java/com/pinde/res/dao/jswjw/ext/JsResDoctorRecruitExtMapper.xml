<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.res.dao.jswjw.ext.JsResDoctorRecruitExtMapper">
	
	<resultMap id="DoctorRecruit" type="com.pinde.res.model.jswjw.mo.JsResDoctorRecruitExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
		<result column="ADMIT_NOTICE" jdbcType="VARCHAR" property="admitNotice"/>
		<result column="GLOBAL_NOTICE" jdbcType="VARCHAR" property="globalNotice"/>
		<result column="ORG_CITY_ID" jdbcType="VARCHAR" property="orgCityId"/>
		<result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName"/>
		<result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason"/>
		<result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason"/>
		<result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason"/>
		<result column="RANK_NUM" jdbcType="VARCHAR" property="rankNum"/>
		<result column="IS_RETRAIN" jdbcType="VARCHAR" property="isRetrain"/>
        <association property="sysUser" column="user_flow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" >
		</association>
	</resultMap>
	<select id="searchJsDoctorRecruitExtList3New"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.totle_result, NULL, '0', dr.totle_result)) DESC) RANK_NUM
        from RES_DOCTOR_RECRUIT dr
        left join SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y'
		and u.RECORD_STATUS= 'Y'
		and dr.Exam_STATUS_ID ='Passed' and dr.audition_STATUS_ID ='Passed' and dr.oper_STATUS_ID='Passed'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				<if test="resDoctorRecruit.recruitFlag == 'F'.toString()">
					and dr.recruit_flag is null
				</if>
				<if test="resDoctorRecruit.recruitFlag != 'F'.toString()">
					and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
				</if>
			</if>
		</if>
	</select>
</mapper>
