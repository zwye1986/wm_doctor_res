<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.res.dao.jswjw.ext.ResAttendanceExtMapper">

    <resultMap id="attendanceMap" type="com.pinde.sci.form.JsResAttendanceExt">
        <id column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <association property="jsresAttendance" column="ATTENDANCE_FLOW" javaType="com.pinde.core.model.JsresAttendance">
            <id column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
            <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
            <result column="TEACHER_FLOW" property="teacherFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS" property="attendStatus" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS_NAME" property="attendStatusName" jdbcType="VARCHAR" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
            <result column="AUDIT_TIME" property="auditTime" jdbcType="VARCHAR" />
            <result column="AUDIT_USER_FLOW" property="auditUserFlow" jdbcType="VARCHAR" />
            <result column="AUDIT_USER_NAME" property="auditUserName" jdbcType="VARCHAR" />
            <result column="AUDIT_STATUS_ID" property="auditStatusId" jdbcType="VARCHAR" />
            <result column="AUDIT_STATUS_NAME" property="auditStatusName" jdbcType="VARCHAR" />
        </association>
        <association property="sysDept" column="deptFlow" javaType="com.pinde.core.model.SysDept">
            <id column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
            <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
            <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
        </association>
    </resultMap>
    <resultMap id="BaseResultMap" type="com.pinde.core.model.JsresAttendanceDetail" >
        <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
        <result column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
        <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
        <result column="ATTEND_TIME" property="attendTime" jdbcType="VARCHAR" />
        <result column="ATTEND_LOCAL" property="attendLocal" jdbcType="VARCHAR" />
        <result column="SELF_REMARKS" property="selfRemarks" jdbcType="VARCHAR" />
        <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
        <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
        <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
        <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
        <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        RECORD_FLOW, ATTENDANCE_FLOW, DOCTOR_FLOW, DOCTOR_NAME, ATTEND_DATE, ATTEND_TIME,
        ATTEND_LOCAL, SELF_REMARKS, TEACHER_REMARKS, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW,
        MODIFY_TIME, MODIFY_USER_FLOW
    </sql>
    <select id="searchAttendanceList" parameterType="java.util.Map" resultMap="attendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_time ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        rd.org_flow,
        rd.org_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        b.dept_flow DEPT_FLOW,
        b.dept_name DEPT_NAME,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        (
            select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
            from dual
            connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A
        JOIN (
        select DISTINCT p.user_flow user_flow,
        P.ORG_FLOW          ORG_FLOW,
        P.ORG_NAME          ORG_NAME,
        P.DEPT_FLOW DEPT_FLOW,
        P.DEPT_NAME DEPT_NAME,
        P.SCH_DEPT_FLOW SCH_DEPT_FLOW,
        P.SCH_DEPT_NAME SCH_DEPT_NAME,
        P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
        P.TEACHER_USER_NAME TEACHER_USER_NAME,
        P.SCH_START_DATE SCH_START_DATE,
        P.SCH_END_DATE SCH_END_DATE,
        RD.DOCTOR_TYPE_ID DOCTOR_TYPE_ID,
        nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
        nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
        from res_doctor_sch_process p
        left join res_doctor rd
        on p.user_flow = rd.doctor_flow
        left join sys_user su
        on su.user_flow = rd.doctor_flow
        left join sys_user tu
        on tu.user_flow = p.teacher_user_flow
        left join jsres_power_cfg cfg2
        on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
        where p.record_status = 'Y'
        and rd.record_status = 'Y'
        and su.record_status = 'Y'
        and tu.record_status = 'Y'
        ) B on   b.sch_start_date <![CDATA[<]]>= a.date_time and b.sch_end_date >=a.date_time
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join JSRES_ATTENDANCE ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_time
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and b.sch_dept_flow =#{deptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        and  b.APP_MENU_FLAG='Y'
        AND	( ( b.SCH_START_DATE  <![CDATA[ <= ]]> b.power_start_time AND b.SCH_END_DATE >= b.power_END_time)
        or (b.SCH_START_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_START_DATE <![CDATA[ <= ]]>b.power_END_time)
        or (b.SCH_END_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_END_DATE <![CDATA[ <= ]]>b.power_END_time))
        ORDER BY a.date_time DESC,b.dept_Flow,su.user_name
    </select>

    <resultMap id="searchResAttendanceList2Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
        <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
        <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
        <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
        <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
        <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
        <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
        <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
        <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="searchResAttendanceList3Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
        <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
        <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
        <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
        <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
        <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
        <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
        <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
        <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="signinMap" type="map">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="SIGNIN_DATE" property="signinDate" jdbcType="VARCHAR" />
        <result column="SCH_DEPT_NAME" property="schDeptName" jdbcType="VARCHAR" />
        <result column="RESULT_FLOW" property="resultFlow" jdbcType="VARCHAR" />
        <result column="SCH_START_DATE" property="schStartDate" jdbcType="VARCHAR" />
        <result column="SCH_END_DATE" property="schEndDate" jdbcType="VARCHAR" />
        <result column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
        <result column="PROCESS_FLOW" property="processFlow" jdbcType="VARCHAR" />
        <result column="TEACHER_USER_NAME" property="teacherUserName" jdbcType="VARCHAR" />
        <result column="IS_CURRENT_FLAG" property="isCurrentFlag" jdbcType="VARCHAR" />
        <result column="SCH_FLAG" property="schFlag" jdbcType="VARCHAR" />
    </resultMap>

    <!--/****************************高******校******管******理******员******角******色************************************************/-->



    <resultMap id="attendanceList2Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
            <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
            <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
            <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
            <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
            <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
            <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
            <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
            <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
            <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
            <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="attendanceList3"  resultMap="attendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        p.dept_name,rd.doctor_type_name,
        count(a.date_day) all_num,
        sum(case when nvl(t.attend_status,0)='1' then 1 else 0 end) AS cq_num,
        sum(case when nvl(t.attend_status,0)='0' then 1 else 0 end) AS qq_num,
        sum(case when nvl(t.attend_status,0)='-1' then 1 else 0 end) AS lx_num
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        left join Sys_Date_info A
        on a.record_status=su.record_status
        and a.date_day <![CDATA[ >= ]]> #{schStartDate}
        and a.date_day <![CDATA[ <= ]]> #{schEndDate}
        left join JSRES_ATTENDANCE t
        on t.doctor_flow=rd.doctor_flow
        and t.attend_date=a.date_day
        and t.record_status='Y'
        LEFT JOIN (SELECT p.user_flow, to_char(WM_CONCAT(DISTINCT p.dept_name)) AS dept_name
        FROM res_doctor_sch_process p
        WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_flow in
            <foreach collection="deptFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='teacherFlow != null and teacherFlow!=""' >
            AND p.teacher_user_flow = #{teacherFlow}
        </if>
        AND (p.SCH_START_DATE <![CDATA[ <= ]]>
        nvl((SELECT cfg2.power_start_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code =
        ('jsres_doctor_data_time_' || p.user_flow)),
        '0000-00-00') AND
        p.SCH_END_DATE >= nvl((SELECT cfg2.power_end_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
        p.user_flow)),
        '9999-99-99') OR
        p.SCH_START_DATE >=
        nvl((SELECT cfg2.power_start_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code =
        ('jsres_doctor_data_time_' || p.user_flow)),
        '0000-00-00') AND
        p.SCH_START_DATE <![CDATA[ <= ]]>
        nvl((SELECT cfg2.power_end_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code =
        ('jsres_doctor_data_time_' || p.user_flow)),
        '9999-99-99') OR
        p.SCH_END_DATE >= nvl((SELECT cfg2.power_start_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
        p.user_flow)),
        '0000-00-00') AND
        p.SCH_END_DATE <![CDATA[ <= ]]> nvl((SELECT cfg2.power_end_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
        p.user_flow)),
        '9999-99-99'))
        AND nvl((SELECT check_status_id
        FROM jsres_power_cfg cfg
        WHERE cfg.record_status = 'Y'
        AND cfg.cfg_code =
        ('jsres_doctor_attendance_' || p.user_flow)),
        'N') = 'Passed'
        AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
        or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
        or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
        group by user_flow) P
        ON P.USER_FLOW=SU.USER_FLOW
        where su.record_status='Y'
        and rd.record_status='Y'
        AND rd.OSCA_STUDENT_SUBMIT is null
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <!--<if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>-->

        <choose >
            <when test='orgFlowList!=null and (baseFlag == null or baseFlag == "")'>
                and rd.org_flow in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test='orgFlowList!=null and baseFlag != null and baseFlag != ""'>
                and rd.SECOND_ORG_FLOW in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>



        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_name is not null
        </if>
        group by su.user_flow,su.user_name,rd.session_number,rd.doctor_type_name,rd.training_type_name,rd.training_spe_name,p.dept_name
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name

    </select>
    <select id="attendanceList2"  resultMap="attendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        p.dept_name,rd.doctor_type_name,
        count(a.date_day) all_num,
        sum(case when nvl(t.attend_status,1)='1' then 1 else 0 end) AS cq_num,
        sum(case when nvl(t.attend_status,1)='0' then 1 else 0 end) AS qq_num,
        sum(case when nvl(t.attend_status,1)='-1' then 1 else 0 end) AS lx_num
    from sys_user su
    left join res_doctor rd on su.user_flow=rd.doctor_flow
    left join Sys_Date_info A
        on a.record_status=su.record_status
        and a.date_day <![CDATA[ >= ]]> #{schStartDate}
        and a.date_day <![CDATA[ <= ]]> #{schEndDate}
        left join JSRES_ATTENDANCE t
        on t.doctor_flow=rd.doctor_flow
        and t.attend_date=a.date_day
        and t.record_status='Y'
        LEFT JOIN (SELECT p.user_flow, to_char(WM_CONCAT(DISTINCT p.dept_name)) AS dept_name
          FROM res_doctor_sch_process p
         WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
           AND (p.SCH_START_DATE <![CDATA[ <= ]]>
               nvl((SELECT cfg2.power_start_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '0000-00-00') AND
               p.SCH_END_DATE >= nvl((SELECT cfg2.power_end_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '9999-99-99') OR
               p.SCH_START_DATE >=
               nvl((SELECT cfg2.power_start_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '0000-00-00') AND
               p.SCH_START_DATE <![CDATA[ <= ]]>
               nvl((SELECT cfg2.power_end_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '9999-99-99') OR
               p.SCH_END_DATE >= nvl((SELECT cfg2.power_start_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '0000-00-00') AND
               p.SCH_END_DATE <![CDATA[ <= ]]> nvl((SELECT cfg2.power_end_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '9999-99-99'))
           AND nvl((SELECT check_status_id
                     FROM jsres_power_cfg cfg
                    WHERE cfg.record_status = 'Y'
                      AND cfg.cfg_code =
                          ('jsres_doctor_attendance_' || p.user_flow)),
                   'N') = 'Passed'
                AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
                or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
                or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
           group by user_flow) P
           ON P.USER_FLOW=SU.USER_FLOW
    where su.record_status='Y'
    and rd.record_status='Y'
    AND rd.OSCA_STUDENT_SUBMIT is null
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <!--<if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>-->

        <choose >
            <when test='orgFlowList!=null and (baseFlag == null or baseFlag == "")'>
                and rd.org_flow in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test='orgFlowList!=null and baseFlag != null and baseFlag != ""'>
                and rd.SECOND_ORG_FLOW in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>



        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        group by su.user_flow,su.user_name,rd.session_number,rd.doctor_type_name,rd.training_type_name,rd.training_spe_name,p.dept_name
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name

    </select>
</mapper>