<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.res.dao.nydyjs.ext.NydyjsAppMapper">
    <resultMap id="userMap" type="hashmap">
        <result column="userFlow" property="userFlow" javaType="java.lang.String"/>
        <result column="userSex" property="userSex" javaType="java.lang.String"/>
        <result column="userName" property="userName" javaType="java.lang.String"/>
        <result column="userType" property="userType" javaType="java.lang.String"/>
        <result column="roleFlow" property="roleFlow" javaType="java.lang.String"/>
        <result column="roleId" property="roleId" javaType="java.lang.String"/>
        <result column="roleName" property="roleName" javaType="java.lang.String"/>
        <result column="password" property="password" javaType="java.lang.String"/>
    </resultMap>
    <select id="readUser" parameterType="string" resultMap="userMap">
      SELECT top 1 UserInfo.UserID as userFlow,
      	UserInfo.Password as password,
      	CASE when Sex = 0 then '女'
			  when Sex = 1 then '男'
	  	END as userSex,
      	TrueName as userName,
      	UserType as userType,
      	roleId as roleFlow,
      	CASE when roleId = 14 then 'Header'
			 when roleId = 6 then 'Teacher'
			 when roleId = 1 then 'Trainee'
			 when roleId = 2 then 'Trainee'
			 when roleId = 30 then 'SysAdmin'
			 when roleId = 33 then 'HospitalAdmin'
	  	END as roleId,
      	CASE when roleId = 14 then '科主任'
			 when roleId = 6 then '带教老师'
			 when roleId = 1 then '研究生'
			 when roleId = 2 then '住院医师'
			 when roleId = 30 then '系统管理员'
			 when roleId = 33 then '医院管理员'
	  	END as roleName
      FROM UserInfo  
      LEFT JOIN UserRole on UserRole.UserID = UserInfo.UserID 
      WHERE UserInfo.UserID = #{userFlow}
  </select>
    <select id="getDiseaseRegistryNum" parameterType="string" resultType="int">
        SELECT
        CaRequireNumber
        FROM Explan
        inner join CaseClass on CaseClass.CySecID = Explan.CySecID and CaID = Explan.ExplanObjID
        WHERE ExplanID=#{explanId}
    </select>
    <select id="getOperateSkillNum" parameterType="string" resultType="int">
        SELECT
        OpRequireNumber
        FROM Explan
        inner join OperateSkill on OperateSkill.CySecID = Explan.CySecID and OpID = Explan.ExplanObjID
        WHERE ExplanID=#{explanId}
    </select>
    <select id="getPossSkillNum" parameterType="string" resultType="int">
        SELECT
        OPSRequireNumber
        FROM Explan
        inner join OPSSkill on OPSSkill.CySecID = Explan.CySecID and OPSID = Explan.ExplanObjID
        WHERE ExplanID=#{explanId}
    </select>
    <select id="getCaRequireNum" parameterType="string" resultType="int">
        select isnull(sum(CaRequireNumber),0) from
        (select CaRequireNumber from CaseClass
        left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID
        left join HosCycleSection on HosCycleSection.CySecID = CaseClass.CySecID
        where HosCySecID = #{hosCySecId}
        GROUP BY CaID,TableID,CaseClass.CySecID,CaName,CaRequireNumber,CaHoldDegree) as Temp
    </select>
    <select id="getDisRequireNum" parameterType="string" resultType="int">
        select isnull(sum(RequireNumber),0) as RequireNumber from
        (select RequireNumber from BigHistoryCase
        left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID
        left join HosCycleSection on HosCycleSection.CySecID = BigHistoryCase.CySecID
        where HosCySecID = #{hosCySecId}
        GROUP BY BHID,TableID,BigHistoryCase.CySecID,RequireNumber) as Temp
    </select>
    <select id="getOpRequireNum" parameterType="string" resultType="int">
        select isnull(sum(OpRequireNumber),0) as OpRequireNumber from
        (select OpRequireNumber from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID
        left join HosCycleSection on HosCycleSection.CySecID = OperateSkill.CySecID
        where HosCySecID = #{hosCySecId}
        GROUP BY OpID,TableID,OperateSkill.CySecID,OpClass,OpRequireNumber,OpHoldDegree) as Temp
    </select>
    <select id="getOpsRequireNum" parameterType="string" resultType="int">
        select isnull(sum(OpsRequireNumber),0) as OpsRequireNumber from
        (select OpsRequireNumber from OPSSkill
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID
        left join HosCycleSection on HosCycleSection.CySecID = OPSSkill.CySecID
        where HosCySecID =  #{hosCySecId}
        GROUP BY OpsID,TableID,OPSSkill.CySecID,OpsName,OpsRequireNumber,OpsHoldDegree,OPSHoldRole) as Temp
    </select>
    <select id="getCaRequireFinishNum" parameterType="map" resultType="int">
        select isnull(sum(Finish),0) as Finish from
        (select count(CaID) AS Finish from CaseClass
        left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID
        left join HosCycleSection on HosCycleSection.CySecID = CaseClass.CySecID
        where HosCySecID = #{hosCySecId}  AND userid = #{docFlow}
        <if test='explanObjId!=null and explanObjId!=""'>
            and CaID = #{explanObjId}
        </if>
        GROUP BY CaID,TableID,CaseClass.CySecID,CaName,CaRequireNumber,CaHoldDegree) as Temp
    </select>
    <select id="havaAppealNum" parameterType="map" resultType="int">
        select isnull(sum(Num),0) as  ExplanNum from Explan
        where UserID = #{docFlow} and ExplanObjID = #{explanObjId} and Explan.ExplanSort =#{type}
    </select>
    <select id="getDisRequireFinishNum" parameterType="map" resultType="int">
        select isnull(sum(Finish),0) as Finish from
        (select count(BHID) AS Finish from BigHistoryCase
        left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID
        left join HosCycleSection on HosCycleSection.CySecID = BigHistoryCase.CySecID
        where HosCySecID = #{hosCySecId}  AND userid = #{docFlow}
        GROUP BY BHID,TableID,BigHistoryCase.CySecID,RequireNumber) as Temp
    </select>
    <select id="getOpRequireFinishNum" parameterType="map" resultType="int">
        select isnull(sum(Finish),0) as Finish from
        (select count(OpID) AS Finish from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID
        left join HosCycleSection on HosCycleSection.CySecID = OperateSkill.CySecID
        where HosCySecID = #{hosCySecId}  AND userid = #{docFlow}
        <if test='explanObjId!=null and explanObjId!=""'>
            and OpID = #{explanObjId}
        </if>
        GROUP BY OpID,TableID,OperateSkill.CySecID,OpClass,OpRequireNumber,OpHoldDegree) as Temp
    </select>
    <select id="getOpsRequireFinishNum" parameterType="map" resultType="int">
        select isnull(sum(Finish),0) as Finish from
        (select count(OpsID) AS Finish from OPSSkill
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID
        left join HosCycleSection on HosCycleSection.CySecID = OPSSkill.CySecID
        where HosCySecID = #{hosCySecId}  AND userid = #{docFlow}
        <if test='explanObjId!=null and explanObjId!=""'>
            and OpsID = #{explanObjId}
        </if>
        GROUP BY OpsID,TableID,OPSSkill.CySecID,OpsName,OpsRequireNumber,OpsHoldDegree,OPSHoldRole) as Temp
    </select>
    <select id="getDayLogCount" parameterType="map" resultType="java.util.HashMap">
      select count(work) as WorkNum from (
       select count(work_time) as work from WorkLog
      where Work_UserID = #{docFlow} and work_time between #{rstarttime} and #{rendtime}
         group by work_time) temp
    </select>
    <select id="getDayTimeList" parameterType="map" resultType="java.util.HashMap">
      select rstarttime,rendtime
      from UserRealCycleSec where RHosCySecID =  #{hosCySecId} and RUserID = #{docFlow}
    </select>
    <select id="getCycDayCount" parameterType="map" resultType="java.util.HashMap">
      select sum(num) countday from (select datediff(day,rstarttime,rendtime)+1 as num
        from UserRealCycleSec
        where RHosCySecID = #{hosCySecId} and RUserID = #{docFlow})temp
    </select>
    <select id="getMonths" parameterType="map" resultType="int">
      select sum(CySecTime) from HosCycleSection Where HosCySecID = #{hosCySecId}
    </select>
    <select id="getActivityNum" parameterType="map" resultType="int">
         select isnull(count(CaDisID),0)
        from CaseDiscuss as A inner join HosCycleSection as B
        on B.CySecID = A.CySecID where A.UserID =  #{docFlow}
        and B.HosCySecID = #{hosCySecId}
    </select>
    <select id="getCheckStatus" parameterType="map" resultType="int">
        select isnull(count(*),0) from NYDOutCycleSectionRecord_New WHERE [UserID] = #{docFlow} And [HosCySecID] = #{hosCySecId}
    </select>
    <select id="getNotAuditNum" parameterType="string" resultType="int">
		select isnull(sum(countNum),0)
		from (select count(*) as countNum from Rec_BigHistory 
		inner join UserRealTec on UserRealTec.HosSecID = Rec_BigHistory.HosSecID 
		and UserRealTec.UserDipID = Rec_BigHistory.UserID                   
		where CheckStatus = 0   and UserTecID  =  #{userFlow}
		union all
		select count(*) as countNum from Rec_CaseClass 
		inner join UserRealTec on UserRealTec.HosSecID = Rec_CaseClass.HosSecID 
		and UserRealTec.UserDipID = Rec_CaseClass.UserID                   
		where CheckStatus = 0   and UserTecID  =  #{userFlow}
		union  all
		select count(*) as countNum from Rec_OperateSkill 
		inner join UserRealTec on UserRealTec.HosSecID = Rec_OperateSkill.HosSecID 
		and UserRealTec.UserDipID = Rec_OperateSkill.UserID                   
		where CheckStatus = 0   and UserTecID  =  #{userFlow}
		union all
		select count(*) as countNum from Rec_POSSkill 
		inner join UserRealTec on UserRealTec.HosSecID = Rec_POSSkill.HosSecID 
		and UserRealTec.UserDipID = Rec_POSSkill.UserID                   
		where CheckStatus = 0   and UserTecID  =  #{userFlow}
		union all
		select count(*) as countNum from CaseDiscuss 
		inner join UserRealTec on UserRealTec.HosSecID = CaseDiscuss.HosSecID 
		and UserRealTec.UserDipID = CaseDiscuss.UserID                   
		where CheckStatus = 0   and UserTecID  =  #{userFlow}) as TempTable
	</select>
    <select id="getAppealNotAuditNum" parameterType="string" resultType="int">
		select COUNT(*) from Explan as A
		left join UserInfo on UserInfo.UserID = A.UserID 
		left join CycleSection on CycleSection.CySecID = A.CySecID 
		left join Section on Section.SecID = CycleSection.SectionID   
		WHERE 1=1  and a.UserID IN   
		(SELECT distinct UserRealTec.UserDipID FROM UserRealTec WHERE UserRealTec.UserTecID=#{userFlow} 
		UNION 
		SELECT UserDipID FROM UserTec WHERE UserTecID=#{userFlow})  
		and a.CySecID IN   
		( SELECT distinct UserCycleSec.CySecID   FROM UserCycleSec 
		INNER JOIN UserRealTec  ON UserRealTec.UCSID = UserCycleSec.UCSID 
		WHERE UserRealTec.UserTecID=#{userFlow} 
		UNION   
		SELECT HosCycleSection.CySecID   
		FROM HosCycleSection
		 INNER JOIN HosSection hs ON hs.HosSecID = HosCycleSection.HosSecID   
		 WHERE hs.HosSecID IN (SELECT distinct UserTec.SecID FROM UserTec WHERE UserTecID=#{userFlow}))
		 and ExplanState =0

	</select>
    <select id="getAfterSummNotAuditNum" parameterType="string" resultType="int">
		select count(*) from OutSecBrief
		inner join UserRealTec on UserRealTec.UCSID = OutSecBrief.UCSID
		and UserRealTec.UserDipID = OutSecBrief.UserID
		where CheckStatus = 0  and TecUserID is null     and UserTecID  = #{userFlow}
	</select>
    <select id="getAfterEvaNotAuditNum" parameterType="string" resultType="int">
		select isnull(sum(num),0) as OutCount from dbo.View_UserWFWorkByTecUserID
		where 1 = 1  and WFWORK_AWAITER = #{userFlow}
		and WFWORK_TableName = 'CycleOutSectionRecordItemDetail'
		and WFWORK_ROLEID = 6
	</select>
    <select id="getIsCurrentNum" parameterType="string" resultType="int">
        select COUNT(*) as OutNum from UserRealTec 
        left  join OutSecBrief on OutSecBrief.UCSID = UserRealTec.UCSID
        where UserTecID =  #{userFlow} and (CheckStatus =0 or CheckStatus is null)
	</select>
    <select id="getIsSchNum" parameterType="string" resultType="int">
        select COUNT(*) as OutNum from UserRealTec
        inner join OutSecBrief on OutSecBrief.UCSID = UserRealTec.UCSID
        where UserTecID =  #{userFlow} and CheckStatus = 1
	</select>
    <resultMap id="studentMap" type="hashmap">
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="REndTime" property="endTime" javaType="java.lang.String"/>
        <result column="RStartTime" property="startTime" javaType="java.lang.String"/>
        <result column="HosSecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="CheckStatus" property="schStatus" javaType="java.lang.String"/>
        <result column="TotalScore" property="schScore" javaType="java.lang.String"/>
        <result column="CySecID" property="cySecId" javaType="java.lang.String"/>
        <result column="HosCySecID" property="hosCySecId" javaType="java.lang.String"/>
        <result column="HosSecID" property="hosSecId" javaType="java.lang.String"/>
        <result column="BriefID" property="afterId" javaType="java.lang.String"/>
        <result column="UCSID" property="afterEvaId" javaType="java.lang.String"/>
        <result column="StartYear" property="sessionNumber" javaType="java.lang.String"/>
        <result column="SpName" property="spName" javaType="java.lang.String"/>
        <result column="WFWORK_ID" property="workId" javaType="java.lang.String"/>
        <result column="SectionManagerID" property="headId" javaType="java.lang.String"/>
    </resultMap>
    <select id="getStudentList" parameterType="map" resultMap="studentMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.rownum )AS Row,
        T.*
        FROM
        (
        select UserInfo.UserID,UserInfo.TrueName,convert(varchar(100),RStartTime,23) as RStartTime,convert(varchar(100),REndTime,23) as REndTime,
        row_number() over(order by RStartTime) AS rownum,
        HosSecName,CheckStatus,isnull(TotalScore,0) as TotalScore,UserCycleSec.CySecID,
        UserCycleSec.UCSID,BriefID,WFWORK_ID,UserSectionManager.SectionManagerID,UserCycleSec.HosCySecID,HosCycleSection.HosSecID,UserInfo.StartYear,SpName
        from UserRealTec
        inner  join UserCycleSec on UserCycleSec.UCSID = UserRealTec.UCSID
        inner join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        inner join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        inner join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join OutSecBrief on OutSecBrief.UCSID = UserCycleSec.UCSID
        Left join WFWORK on WFWORK.WFWORK_DataID = OutSecBrief.BriefID and WFWORK.WFWORK_TableName = 'CycleOutSectionRecordItemDetail'
        and WFWORK_AWAITER= #{teacherUserFlow}
        inner join UserInfo on UserInfo.UserID = UserRealTec.UserDipID
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        INNER JOIN UserSectionManager ON UserSectionManager.UCSID = UserCycleSec.UCSID
        left join (select UserRealTec.UCSID,TotalScore from NYDOutCycleSectionRecord_New
        inner join UserRealTec on UserRealTec.UCSID = NYDOutCycleSectionRecord_New.UCSID where UserTecID =  #{teacherUserFlow}
        union
        select UserRealTec.UCSID,TotalScore from NYDOutCycleSectionRecord
        inner join UserRealTec on UserRealTec.UCSID = NYDOutCycleSectionRecord.UCSID where UserTecID =  #{teacherUserFlow})
        as Temp on Temp.UCSID = UserRealTec.UCSID
        where 	UserTecID = #{teacherUserFlow}
            <if test='userName!=null and userName!=""'>
                <bind name="userName" value="'%'+userName+'%'"/>
                and UserInfo.TrueName like #{userName}
            </if>
            <if test='sessionNumber!=null and sessionNumber!=""'>
                and UserInfo.StartYear = #{sessionNumber}
            </if>
        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RStartTime
    </select>

    <insert id="insertWFWORK" parameterType="map">
        INSERT INTO WFWORK(WFWORK_DataID,WFWORK_TableName,WFWORK_TITLE,WFWORK_AWAITER,
        WFWORK_CreateUserID,WFWORK_CREATER,WFWORK_HANDLER,WFWORK_PBEGIN,WFWORK_ABEGIN,
        WFWORK_STATE,WFWORK_URL,WFWORK_ROLEID)
        values(#{id},#{tableName},#{title},#{headId},
        #{docFlow},#{docName},'',#{pbegin},#{abegin},
        '0',#{url},'6')
    </insert>
    <insert id="insertIntoReviewInfo" parameterType="map">
        insert into dbo.ReviewInfo (FromID,ClassID,RowIndex,UserID,ReviewUserID,ReviewIndex,ReviewStatus,ReviewData,ReviewDate)
        values(#{fromId},#{classId},#{recId},#{docFlow},#{userFlow},#{reviewIndex},#{checkStatus},#{content},#{auditTime})
    </insert>
    <insert id="insertAfterEva" parameterType="map">
       INSERT INTO [NYDOutCycleSectionRecord_New]
        ([UserID],[HosCySecID],[UCSID],[LJXY],[GZZRX],[YLCCSG],[YHGTNL],[JBLL]
        ,[JBJN],[JBCZ],[TGJC],[ZYLL],[CLCJBR],[CLWZBR],[SYJC],[LCSW]
        ,[RZQQ],[GLBZ],[GLBL],[CZSS],[CCHD],[LLKS],[JNKS],
        [YDJF],[RZJF],[BZJF],[BLJF],[CZJF],AddTotal,
        [TotalScore]
        ,[TecID],[TecCheckDate],[SectionManagerID],[SMCheckDate])
        VALUES
        (#{docFlow},#{hosCySecId},#{afterEvaId},#{LJXY},#{GZZRX},#{YLCCSG},#{YHGTNL},#{JBLL},
        #{JBJN},#{JBCZ},#{TGJC},#{ZYLL},#{CLCJBR},#{CLWZBR},#{SYJC},#{LCSW},#{RZQQ},
        #{GLBZ},#{GLBL},#{CZSS},#{CCHD},#{LLKS},#{JNKS},#{YDJF},#{RZJF},#{BZJF},#{BLJF},#{CZJF},#{AddTotal},
        #{TotalScore},#{tecId},#{TecCheckDate},#{SectionManagerID},#{SMCheckDate})
    </insert>
    <insert id="insertCaseDiscussCheck" parameterType="map">
        insert into dbo.CaseDiscussCheck (CaDisID,CheckUserID,CheckContent,CheckDate,CheckStatus)
        values(#{recId},#{userFlow},#{content},#{auditTime},#{checkStatus})
    </insert>

    <insert id="insertIntoReviewInfoItem" parameterType="map">
        INSERT INTO dbo.ReviewInfoItem
        (RowIndexId,ReviewDate,Remark1,Remark2
        ,Remark3,Remark4,Remark5,Remark6
        ,Remark7,Remark8,Remark9,Remark10)
        VALUES
        <if test='classId == "1" '>
            (#{recId},#{auditTime},'好','好','好','及时正确','及时准确','0','','','','')
        </if>
        <if test='classId == "2" '>
            (#{recId},#{auditTime},'合格','','','','','','','','','')
        </if>
        <if test='classId == "3" '>
            (#{recId},#{auditTime},'','','','','','','','','','')
        </if>
        <if test='classId == "4" '>
            (#{recId},#{auditTime},'','','','','','','','','','')
        </if>
    </insert>
    <update id="updateRecBigHistory" parameterType="map">
        update Rec_BigHistory set CheckStatus = #{checkStatus} where RecID = #{recId}
    </update>
    <update id="updateRecCaseClass" parameterType="map">
        update Rec_CaseClass set CheckStatus = #{checkStatus} where RecID = #{recId}
    </update>
    <update id="updateRecOperateSkill" parameterType="map">
        update Rec_OperateSkill set CheckStatus = #{checkStatus} where RecID = #{recId}
    </update>
    <update id="updateRecPOSSkill" parameterType="map">
        update Rec_POSSkill set CheckStatus = #{checkStatus} where RecID = #{recId}
    </update>
    <update id="updateOutSecBrief" parameterType="map">
       UPDATE dbo.OutSecBrief
        SET CheckStatus= #{checkStatus},SecAppraise= #{content},
        TecCheckDate=#{auditTime},TecUserID=#{userFlow}
        where BriefID=#{recId}
    </update>
    <update id="deleteWFWORK" parameterType="map">
       DELETE dbo.WFWORK
       WHERE WFWORK_DataID=#{recId} AND WFWORK_TableName='OutSecBrief'
    </update>
    <update id="deleteWfwork" parameterType="string">
       DELETE dbo.WFWORK
        where WFWORK_ID = #{workId}
    </update>
    <update id="updateExplan" parameterType="map">
        UPDATE dbo.Explan SET
         EResultUserID = #{userFlow},
         ExplanResult = #{checkResult},Num =#{appealNum},ExplanState = #{checkStatus}
        WHERE ExplanID=#{recId}
    </update>
    <update id="updateAfterEva" parameterType="map">
        UPDATE [NYDOutCycleSectionRecord_New]
        SET [UserID] = #{docFlow}
        ,[HosCySecID] = #{hosCySecId}
        ,[LJXY] = #{LJXY}
        ,[GZZRX] = #{GZZRX}
        ,[YLCCSG] = #{YLCCSG}
        ,[YHGTNL] = #{YHGTNL}
        ,[JBLL] = #{JBLL}
        ,[JBJN] = #{JBJN}
        ,[JBCZ] = #{JBCZ}
        ,[TGJC] = #{TGJC}
        ,[ZYLL] = #{ZYLL}
        ,[CLCJBR] = #{CLCJBR}
        ,[CLWZBR] = #{CLWZBR}
        ,[SYJC] = #{SYJC}
        ,[LCSW] = #{LCSW}
        ,[RZQQ] = #{RZQQ}
        ,[GLBZ] = #{GLBZ}
        ,[GLBL] = #{GLBL}
        ,[CZSS] = #{CZSS}
        ,[CCHD] = #{CCHD}
        ,[LLKS] = #{LLKS}
        ,[JNKS] = #{JNKS}
        ,[YDJF] = #{YDJF}
        ,[RZJF] = #{RZJF}
        ,[BZJF] = #{BZJF}
        ,[BLJF] = #{BLJF}
        ,[CZJF] = #{CZJF}
        ,AddTotal=#{AddTotal}
        ,[TotalScore] = #{TotalScore}
        ,[TecID] = #{tecId}
        ,[TecCheckDate] = #{TecCheckDate}
        ,[SectionManagerID] = #{SectionManagerID}
        ,[SMCheckDate] = #{SMCheckDate}
        WHERE [UserID] = #{docFlow} AND [HosCySecID] =  #{hosCySecId}
    </update>
    <update id="updateCaseDiscuss" parameterType="map">
        update CaseDiscuss  set CheckStatus = #{checkStatus} where CaDisID  = #{recId}
    </update>

    <resultMap id="dataStudentMap" type="hashmap">
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="REndTime" property="endTime" javaType="java.lang.String"/>
        <result column="RStartTime" property="startTime" javaType="java.lang.String"/>
        <result column="HosSecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="CheckStatus" property="schStatus" javaType="java.lang.String"/>
        <result column="TotalScore" property="schScore" javaType="java.lang.String"/>
        <result column="CySecID" property="cySecId" javaType="java.lang.String"/>
    </resultMap>
    <select id="getDataStudentList" parameterType="map" resultMap="dataStudentMap">
		SELECT
		  *
		FROM
		  (
		    SELECT
		      ROW_NUMBER() OVER (order by T.rownum )AS Row,
		      T.*
		    FROM
		      (
            select
                UserInfo.UserID,UserInfo.TrueName,convert(varchar(100),RStartTime,23) as
                RStartTime,convert(varchar(100),REndTime,23) as REndTime,
                row_number() over(order by RStartTime) AS rownum,isnull(TotalScore,0) as TotalScore,
                HosSecName,CheckStatus,UserRealCycleSec.RCySecID as CySecID,OutSecBrief.UCSID,BriefID
                from UserInfo
                inner join UserRealCycleSec on UserRealCycleSec.RUserID = UserInfo.UserID
                inner join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
                inner join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
                left join OutSecBrief on OutSecBrief.UCSID = UserRealCycleSec.RUCSID
                left join NYDOutCycleSectionRecord_New on NYDOutCycleSectionRecord_New.UCSID = OutSecBrief.UCSID
                inner join (
                select UserID,Rec_BigHistory.HosSecID from Rec_BigHistory
                inner join UserRealTec on UserRealTec.HosSecID = Rec_BigHistory.HosSecID
                and UserRealTec.UserDipID = Rec_BigHistory.UserID
                where CheckStatus = 0   and UserTecID  = #{teacherUserFlow}
                group by UserID,Rec_BigHistory.HosSecID
                union
                select UserID,Rec_CaseClass.HosSecID from Rec_CaseClass
                inner join UserRealTec on UserRealTec.HosSecID = Rec_CaseClass.HosSecID
                and UserRealTec.UserDipID = Rec_CaseClass.UserID
                where CheckStatus = 0   and UserTecID  = #{teacherUserFlow}
                group by UserID,Rec_CaseClass.HosSecID
                union
                select UserID,Rec_OperateSkill.HosSecID from Rec_OperateSkill
                inner join UserRealTec on UserRealTec.HosSecID = Rec_OperateSkill.HosSecID
                and UserRealTec.UserDipID = Rec_OperateSkill.UserID
                where CheckStatus = 0   and UserTecID  = #{teacherUserFlow}
                group by UserID,Rec_OperateSkill.HosSecID
                union
                select UserID,Rec_POSSkill.HosSecID from Rec_POSSkill
                inner join UserRealTec on UserRealTec.HosSecID = Rec_POSSkill.HosSecID
                and UserRealTec.UserDipID = Rec_POSSkill.UserID
                where CheckStatus = 0   and UserTecID  = #{teacherUserFlow}
                group by UserID,Rec_POSSkill.HosSecID
                union
                select UserID,CaseDiscuss.HosSecID from CaseDiscuss
                inner join UserRealTec on UserRealTec.HosSecID = CaseDiscuss.HosSecID
                and UserRealTec.UserDipID = CaseDiscuss.UserID
                where CheckStatus = 0   and UserTecID  = #{teacherUserFlow}
                group by UserID,CaseDiscuss.HosSecID) as Temp
                on Temp.UserID = UserInfo.UserID and HosSection.HosSecID = Temp.HosSecID
		) AS T
		)
		TT
		WHERE
		TT.Row BETWEEN ${startRow} and ${endRow}
		ORDER BY
		RStartTime
	</select>
    <resultMap id="CaseRegistryProcessMap" type="hashmap">
        <result column="BHID" property="bhId" javaType="java.lang.String"/>
        <result column="TableID" property="tableId" javaType="java.lang.String"/>
        <result column="CySecID" property="cySecId" javaType="java.lang.String"/>
        <result column="RequireNumber" property="reqNum" javaType="java.lang.String"/>
        <result column="Finish" property="finishNum" javaType="java.lang.String"/>
        <result column="CheckCount" property="checkCount" javaType="java.lang.String"/>
        <result column="Balance" property="balance" javaType="java.lang.String"/>
    </resultMap>
    <select id="getCaseRegistryProcess" parameterType="map" resultMap="CaseRegistryProcessMap">
		WITH
		DynamicData AS(select BHID,TableID,CySecID,RequireNumber from BigHistoryCase 
		left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID
		where cysecid =  #{cySecId}
		GROUP BY BHID,TableID,CySecID,RequireNumber),
		NoCheckDynamicData as(select BHID,count(BHID) AS Finish from BigHistoryCase 
		left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID
		where cysecid =  #{cySecId} AND userid = #{docFlow}
		GROUP BY BHID,TableID,CySecID,RequireNumber),
		CheckDynamicData as(select BHID,count(BHID) AS CheckCount from BigHistoryCase 
		left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID
		where cysecid =  #{cySecId} AND userid = #{docFlow} and CheckStatus > 0
		GROUP BY BHID,TableID,CySecID,RequireNumber)
		SELECT DynamicData.BHID,TableID,CySecID,RequireNumber,isnull(Finish,0) as Finish,isnull(CheckCount,0) as CheckCount,
		isnull((Finish-CheckCount),0) AS Balance FROM DynamicData
		left join NoCheckDynamicData on NoCheckDynamicData.BHID = DynamicData.BHID
		left join CheckDynamicData on CheckDynamicData.BHID = DynamicData.BHID

	</select>
    <resultMap id="DiseaseProcessMap" type="hashmap">
        <result column="CaRequireNumber" property="reqNum" javaType="java.lang.String"/>
        <result column="Finish" property="finishNum" javaType="java.lang.String"/>
    </resultMap>
    <select id="getDiseaseProcess" parameterType="map" resultMap="DiseaseProcessMap">
		WITH
		DynamicData AS(select CaID,TableID,CySecID,CaName,CaRequireNumber,CaHoldDegree from CaseClass
		left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID
		where cysecid =  #{cySecId}
		GROUP BY CaID,TableID,CySecID,CaName,CaRequireNumber,CaHoldDegree),
		NoCheckDynamicData as(select CaID,count(CaID) AS Finish from CaseClass
		left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID
		where cysecid =  #{cySecId} AND userid = #{docFlow}
		GROUP BY CaID,TableID,CySecID,CaName,CaRequireNumber,CaHoldDegree),
		CheckDynamicData as(select CaID,count(CaID) AS CheckCount from CaseClass
		left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID
		where cysecid =  #{cySecId} AND userid = #{docFlow} and CheckStatus > 0
		GROUP BY CaID,TableID,CySecID,CaName,CaRequireNumber,CaHoldDegree),
		SSDynamicDataFinish as(select ExplanObjID,sum(Num) AS SSFinishCount from Explan
		left join CaseClass on CaseClass.CaID = Explan.ExplanObjID
		where Explan.cysecid =  #{cySecId} AND Explan.userid = #{docFlow} and ExplanState = 1  AND ExplanSort=1
		group by ExplanObjID),
		SSDynamicData as(select ExplanObjID,sum(Num) AS SSCount from Explan
		left join CaseClass on CaseClass.CaID = Explan.ExplanObjID
		where Explan.cysecid =  #{cySecId} AND Explan.userid = #{docFlow} AND ExplanSort=1
		group by ExplanObjID)
		SELECT sum(CaRequireNumber) as CaRequireNumber,
		sum(isnull(Finish,0)) as Finish
		FROM DynamicData
		left join NoCheckDynamicData on NoCheckDynamicData.CaID = DynamicData.CaID
		left join CheckDynamicData on CheckDynamicData.CaID = DynamicData.CaID
		left join SSDynamicDataFinish on SSDynamicDataFinish.ExplanObjID = DynamicData.CaID
		left join SSDynamicData on SSDynamicData.ExplanObjID = DynamicData.CaID
	</select>
    <resultMap id="SkillProcessMap" type="hashmap">
        <result column="OpRequireNumber" property="reqNum" javaType="java.lang.String"/>
        <result column="Finish" property="finishNum" javaType="java.lang.String"/>
    </resultMap>
    <select id="getSkillProcess" parameterType="map" resultMap="SkillProcessMap">
		WITH
        DynamicData AS(select OpID,TableID,CySecID,OpClass,OpRequireNumber,OpHoldDegree from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID
        where cysecid = #{cySecId}
        GROUP BY OpID,TableID,CySecID,OpClass,OpRequireNumber,OpHoldDegree),
        NoCheckDynamicData as(select OpID,count(OpID) AS Finish from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID
        where cysecid = #{cySecId} AND userid = #{docFlow}
        GROUP BY OpID,TableID,CySecID,OpClass,OpRequireNumber,OpHoldDegree),
        CheckDynamicData as(select OpID,count(OpID) AS CheckCount from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID
        where cysecid = #{cySecId} AND userid = #{docFlow} and CheckStatus > 0
        GROUP BY OpID,TableID,CySecID,OpClass,OpRequireNumber,OpHoldDegree),
        SSDynamicDataFinish as(select ExplanObjID,sum(Num) AS SSFinishCount from Explan
        left join OperateSkill on OperateSkill.OpID = Explan.ExplanObjID
        where Explan.cysecid = #{cySecId} AND Explan.userid = #{docFlow} and ExplanState = 1  AND ExplanSort = 2
        group by ExplanObjID),
        SSDynamicData as(select ExplanObjID,sum(Num) AS SSCount from Explan
        left join OperateSkill on OperateSkill.OpID = Explan.ExplanObjID
        where Explan.cysecid = #{cySecId} AND Explan.userid = #{docFlow} AND ExplanSort = 2
        group by ExplanObjID)
        SELECT Sum(OpRequireNumber) as  OpRequireNumber,
        Sum(isnull(Finish,0)) as Finish
        FROM DynamicData
        left join NoCheckDynamicData on NoCheckDynamicData.OpID = DynamicData.OpID
        left join CheckDynamicData on CheckDynamicData.OpID = DynamicData.OpID
        left join SSDynamicDataFinish on SSDynamicDataFinish.ExplanObjID = DynamicData.OpID
        left join SSDynamicData on SSDynamicData.ExplanObjID = DynamicData.OpID
	</select>
    <resultMap id="PossSkillProcessMap" type="hashmap">
        <result column="OpsRequireNumber" property="reqNum" javaType="java.lang.String"/>
        <result column="Finish" property="finishNum" javaType="java.lang.String"/>
    </resultMap>
    <select id="getPossSkillProcess" parameterType="map" resultMap="PossSkillProcessMap">
		WITH
        DynamicData AS(select OpsID,TableID,CySecID,OpsName,OpsRequireNumber,OpsHoldDegree,OPSHoldRole from OPSSkill 
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID
        where cysecid =  #{cySecId}
        GROUP BY OpsID,TableID,CySecID,OpsName,OpsRequireNumber,OpsHoldDegree,OPSHoldRole),
        NoCheckDynamicData as(select OpsID,count(OpsID) AS Finish from OPSSkill 
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID
        where cysecid =  #{cySecId} AND userid =  #{docFlow} 
        GROUP BY OpsID,TableID,CySecID,OpsName,OpsRequireNumber,OpsHoldDegree),
        CheckDynamicData as(select OpsID,count(OpsID) AS CheckCount from OPSSkill 
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID
        where cysecid =  #{cySecId} AND userid =  #{docFlow} and CheckStatus > 0
        GROUP BY OpsID,TableID,CySecID,OpsName,OpsRequireNumber,OpsHoldDegree),
        SSDynamicDataFinish as(select ExplanObjID,sum(Num) AS SSFinishCount from Explan
        left join OPSSkill on OPSSkill.OpsID = Explan.ExplanObjID
        where Explan.cysecid =  #{cySecId} AND Explan.userid =  #{docFlow} and ExplanState = 1  AND ExplanSort = 3
        group by ExplanObjID),
        SSDynamicData as(select ExplanObjID,sum(Num) AS SSCount from Explan
        left join OPSSkill on OPSSkill.OpsID = Explan.ExplanObjID
        where Explan.cysecid =  #{cySecId} AND Explan.userid =  #{docFlow}  AND ExplanSort = 3
        group by ExplanObjID)
        SELECT Sum(OpsRequireNumber) as OpsRequireNumber,
        Sum(isnull(Finish,0)) as Finish
        FROM DynamicData
        left join NoCheckDynamicData on NoCheckDynamicData.OpsID = DynamicData.OpsID
        left join CheckDynamicData on CheckDynamicData.OpsID = DynamicData.OpsID
        left join SSDynamicDataFinish on SSDynamicDataFinish.ExplanObjID = DynamicData.OpsID
        left join SSDynamicData on SSDynamicData.ExplanObjID = DynamicData.OpsID
	</select>


    <resultMap id="CaseRegistryListMap" type="hashmap">
        <result column="OnlyRowIndex" property="recId" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="FromID" property="fromId" javaType="java.lang.String"/>
        <result column="RecDate" property="operTime" javaType="java.lang.String"/>
        <result column="RecData1" property="brName" javaType="java.lang.String"/>
        <result column="RecData2" property="brNo" javaType="java.lang.String"/>
        <result column="RecData5" property="type" javaType="java.lang.String"/>
        <result column="ReviewData" property="content" javaType="java.lang.String"/>
        <result column="ReviewIndex" property="pyId" javaType="java.lang.String"/>
        <result column="revieName" property="pyContent" javaType="java.lang.String"/>
    </resultMap>
    <select id="getCaseRegistryList" parameterType="map" resultMap="CaseRegistryListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.RecDate )AS Row,
        T.*
        FROM
        (
        SELECT RecID as OnlyRowIndex , CheckStatus,
        Rec_BigHistory.FromID, convert(varchar(100),RecDate,23) RecDate,RecData1,RecData2,RecData5,ReviewData,ReviewIndex,
        case ReviewIndex
        when '9' then '同意'
        when '10' then '基本同意'
        when '11' then '合格'
        when '12' then '基本合格'
        when '13' then '通过'
        when '14' then '不合格'
        else '' end as revieName
        FROM Rec_BigHistory
        LEFT JOIN BigHistoryCase ON BigHistoryCase.BHID = Rec_BigHistory.FromID
        LEFT join ReviewInfo on ReviewInfo.FromID = Rec_BigHistory.FromID
        and Rec_BigHistory.RecID = ReviewInfo.RowIndex
        and classId=1
        WHERE (Rec_BigHistory.UserID = #{docFlow})
        <if test='biaoJi!=null and biaoJi!=""'>
            AND CheckStatus = 0
        </if>
        AND (CySecID = #{cySecId})

        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RecDate
    </select>
    <resultMap id="DiseaseRegistryListMap" type="hashmap">
        <result column="FromID" property="fromId" javaType="java.lang.String"/>
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="OnlyRowIndex" property="recId" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="RecDate" property="operTime" javaType="java.lang.String"/>
        <result column="RecData1" property="brName" javaType="java.lang.String"/>
        <result column="RecData2" property="brNo" javaType="java.lang.String"/>
        <result column="RecData3" property="bzName" javaType="java.lang.String"/>
        <result column="RecData11" property="type" javaType="java.lang.String"/>
        <result column="RecData6" property="isCharge" javaType="java.lang.String"/>
        <result column="RecData7" property="isRescue" javaType="java.lang.String"/>
        <result column="RecData5" property="type2" javaType="java.lang.String"/>
        <result column="RecData4" property="zlcs" javaType="java.lang.String"/>
        <result column="RecData8" property="rysj" javaType="java.lang.String"/>
        <result column="RecData9" property="bz" javaType="java.lang.String"/>
        <result column="auditName" property="auditName" javaType="java.lang.String"/>
        <result column="ReviewData" property="content" javaType="java.lang.String"/>
        <result column="ReviewIndex" property="pyId" javaType="java.lang.String"/>
        <result column="revieName" property="pyContent" javaType="java.lang.String"/>
        <result column="auditDept" property="auditDept" javaType="java.lang.String"/>
        <result column="otherCaseClass" property="otherBzName" javaType="java.lang.String"/>
    </resultMap>
    <select id="getDiseaseRegistryList" parameterType="map" resultMap="DiseaseRegistryListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.RecDate desc)AS Row,
        T.*
        FROM
        (
        SELECT UserInfo.UserID,UserInfo.TrueName,RecID AS OnlyRowIndex,Rec_CaseClass.FromID, convert(varchar(100),
        RecDate,23) as RecDate,RecData1,RecData2,RecData3,
        RecData11,RecData6,RecData7,CheckStatus, RecData5, RecData4,otherCaseClass,
        convert(varchar(100),
        RecData8,23) as RecData8, RecData9,ui.trueName as auditName,ReviewData,ReviewIndex,
        case ReviewIndex
        when '9' then '同意'
        when '10' then '基本同意'
        when '11' then '合格'
        when '12' then '基本合格'
        when '13' then '通过'
        when '14' then '不合格'
        else '' end as revieName,uhos.hossecname auditDept
        FROM Rec_CaseClass
        inner join UserRealTec on UserRealTec.HosSecID = Rec_CaseClass.HosSecID
        and UserRealTec.UserDipID = Rec_CaseClass.UserID
        inner join UserInfo ON UserInfo.UserID = Rec_CaseClass.UserID
        inner join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        inner join HospitalInfo on HospitalInfo.HosID = UserInfo.HosID
        Inner join HosSection on HosSection.HosSecID = UserRealTec.HosSecID
        left JOIN UserCycleSec on UserCycleSec.UCSID = UserRealTec.UCSID
        left join ReviewInfo on ReviewInfo.FromID = Rec_CaseClass.FromID
        and classId=2 and Rec_CaseClass.RecID = ReviewInfo.RowIndex
        left join userinfo ui on ui.userId=ReviewUserID
        left join HosSection uhos on uhos.HosSecID = ui.SZKS
        WHERE 1=1
        <if test='biaoJi!=null and biaoJi!=""'>
            AND CheckStatus = 0
        </if>
        AND UserTecID =#{userFlow}
        AND Rec_CaseClass.UserID = #{docFlow}
        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RecDate
    </select>
    <resultMap id="OperateSkillListMap" type="hashmap">
        <result column="FromID" property="fromId" javaType="java.lang.String"/>
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="OnlyRowIndex" property="recId" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="RecDate" property="operTime" javaType="java.lang.String"/>
        <result column="RecData3" property="brName" javaType="java.lang.String"/>
        <result column="RecData4" property="brNo" javaType="java.lang.String"/>
        <result column="RecData1" property="skillName" javaType="java.lang.String"/>
        <result column="RecData2" property="czrq" javaType="java.lang.String"/>
        <result column="RecData5" property="czsj" javaType="java.lang.String"/>
        <result column="RecData6" property="md" javaType="java.lang.String"/>
        <result column="RecData7" property="zxz" javaType="java.lang.String"/>
        <result column="RecData8" property="zs" javaType="java.lang.String"/>
        <result column="RecData9" property="isSuccess" javaType="java.lang.String"/>
        <result column="RecData10" property="failReason" javaType="java.lang.String"/>
        <result column="RecData17" property="czlx" javaType="java.lang.String"/>
        <result column="RecData19" property="zdlx" javaType="java.lang.String"/>
        <result column="RecData11" property="bz" javaType="java.lang.String"/>
        <result column="auditName" property="auditName" javaType="java.lang.String"/>
        <result column="ReviewData" property="content" javaType="java.lang.String"/>
        <result column="ReviewIndex" property="pyId" javaType="java.lang.String"/>
        <result column="revieName" property="pyContent" javaType="java.lang.String"/>
        <result column="auditDept" property="auditDept" javaType="java.lang.String"/>
    </resultMap>
    <select id="getOperateSkillList" parameterType="map" resultMap="OperateSkillListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.RecDate)AS Row,
        T.*
        FROM
        (
            SELECT UserInfo.UserID,UserInfo.TrueName,Rec_OperateSkill.FromID,RecID AS OnlyRowIndex, convert(varchar(100),
            RecDate,23) as RecDate,RecData3,RecData4,RecData1,RecData2,RecData5,RecData6,RecData7,RecData8,
            CheckStatus,RecData9,RecData10,RecData17,RecData19,RecData11,ReviewData,ReviewIndex,
            case ReviewIndex
            when '9' then '同意'
            when '10' then '基本同意'
            when '11' then '合格'
            when '12' then '基本合格'
            when '13' then '通过'
            when '14' then '不合格'
            else '' end as revieName
            ,ui.trueName as auditName,uhos.hossecname auditDept
            FROM    Rec_OperateSkill
            inner join UserRealTec on UserRealTec.HosSecID = Rec_OperateSkill.HosSecID
            and UserRealTec.UserDipID = Rec_OperateSkill.UserID
            inner join UserInfo ON UserInfo.UserID = Rec_OperateSkill.UserID
            inner join Specialty on Specialty.SpID = UserInfo.SpecialtyID
            inner join HospitalInfo on HospitalInfo.HosID = UserInfo.HosID
            Inner join HosSection on HosSection.HosSecID = UserRealTec.HosSecID
            left JOIN UserCycleSec on UserCycleSec.UCSID = UserRealTec.UCSID
            left join ReviewInfo on ReviewInfo.FromID = Rec_OperateSkill.FromID
            and classId=3 and Rec_OperateSkill.RecID = ReviewInfo.RowIndex
            left join userinfo ui on ui.userId=ReviewUserID
            left join HosSection uhos on uhos.HosSecID = ui.SZKS
            WHERE  1=1
            <if test='biaoJi!=null and biaoJi!=""'>
              AND CheckStatus = 0
            </if>
             AND UserTecID =#{userFlow}
            AND Rec_OperateSkill.UserID = #{docFlow}

        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RecDate
    </select>
    <resultMap id="PossSkillListMap" type="hashmap">
        <result column="FromID" property="fromId" javaType="java.lang.String"/>
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="HosSecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="OnlyRowIndex" property="recId" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="RecData1" property="skillName" javaType="java.lang.String"/>
        <result column="RecData2" property="czTime" javaType="java.lang.String"/>
        <result column="RecData3" property="brName" javaType="java.lang.String"/>
        <result column="RecData4" property="brNo" javaType="java.lang.String"/>
        <result column="RecData5" property="czsj" javaType="java.lang.String"/>
        <result column="RecData6" property="md" javaType="java.lang.String"/>
        <result column="RecData7" property="demo" javaType="java.lang.String"/>
        <result column="RecData8" property="sqsh" javaType="java.lang.String"/>
        <result column="RecData9" property="ssgc" javaType="java.lang.String"/>
        <result column="RecData10" property="zwqk" javaType="java.lang.String"/>
        <result column="RecData11" property="mzff" javaType="java.lang.String"/>
        <result column="RecData12" property="szcz" javaType="java.lang.String"/>
        <result column="RecData13" property="tsqk" javaType="java.lang.String"/>
        <result column="RecData14" property="szzw" javaType="java.lang.String"/>
        <result column="RecData15" property="zdlx" javaType="java.lang.String"/>
        <result column="RecData18" property="operTime" javaType="java.lang.String"/>
        <result column="auditName" property="auditName" javaType="java.lang.String"/>
        <result column="ReviewData" property="content" javaType="java.lang.String"/>
        <result column="ReviewIndex" property="pyId" javaType="java.lang.String"/>
        <result column="revieName" property="pyContent" javaType="java.lang.String"/>
        <result column="auditDept" property="auditDept" javaType="java.lang.String"/>
    </resultMap>
    <select id="getPossSkillList" parameterType="map" resultMap="PossSkillListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.RecDate)AS Row,
        T.*
        FROM
        (
            SELECT UserInfo.UserID,UserInfo.TrueName,HosSection.HosSecName,RecID AS OnlyRowIndex,CheckStatus,Rec_POSSkill.FromID,
        RecData1, RecData2,RecData3,RecData4,RecData5,RecData6,RecData7,RecData8,RecData9,RecData10,RecData11,RecData12,RecData13,RecData14,RecData15,RecDate,
            CONVERT(varchar(100),Rec_POSSkill.RecDate, 23) as RecData18,
            ReviewData,ReviewIndex,
            case ReviewIndex
            when '9' then '同意'
            when '10' then '基本同意'
            when '11' then '合格'
            when '12' then '基本合格'
            when '13' then '通过'
            when '14' then '不合格'
            else '' end as revieName
            ,ui.trueName as auditName,uhos.hossecname auditDept
            FROM    Rec_POSSkill
            inner join UserRealTec on UserRealTec.HosSecID = Rec_POSSkill.HosSecID
            and UserRealTec.UserDipID = Rec_POSSkill.UserID
            inner join UserInfo ON UserInfo.UserID = Rec_POSSkill.UserID
            inner join Specialty on Specialty.SpID = UserInfo.SpecialtyID
            inner join HospitalInfo on HospitalInfo.HosID = UserInfo.HosID
            Inner join HosSection on HosSection.HosSecID = UserRealTec.HosSecID
            left JOIN UserCycleSec on UserCycleSec.UCSID = UserRealTec.UCSID
            left join ReviewInfo on ReviewInfo.FromID = Rec_POSSkill.FromID
            and classId=4 and Rec_POSSkill.RecID = ReviewInfo.RowIndex
            left join userinfo ui on ui.userId=ReviewUserID
            left join HosSection uhos on uhos.HosSecID = ui.SZKS
            WHERE 1=1
            <if test='biaoJi!=null and biaoJi!=""'>
              AND CheckStatus = 0
            </if>
             AND UserTecID =#{userFlow}
            AND Rec_POSSkill.UserID = #{docFlow}

        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RecDate
    </select>
    <resultMap id="ActivityListMap" type="hashmap">
        <result column="CaDisID" property="recId" javaType="java.lang.String"/>
        <result column="HosSecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="CaDisPlayClass" property="typeName" javaType="java.lang.String"/>
        <result column="CaDisMainSpeaker" property="speakerName" javaType="java.lang.String"/>
        <result column="CySecID" property="cySecId" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="CaDisTime" property="activityTime" javaType="java.lang.String"/>
        <result column="CaDisContent" property="content" javaType="java.lang.String"/>
        <result column="CaDisPeriod" property="timeLength" javaType="java.lang.String"/>
        <result column="CheckContent" property="shContent" javaType="java.lang.String"/>
        <result column="auditName" property="auditName" javaType="java.lang.String"/>
        <result column="auditDept" property="auditDept" javaType="java.lang.String"/>
        <result column="CaDisDes" property="demo" javaType="java.lang.String"/>
    </resultMap>
    <select id="getActivityList" parameterType="map" resultMap="ActivityListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.CaDisTime )AS Row,
        T.*
        FROM
        (
            select CaseDiscuss.CaDisID,HosSection.HosSecName,UserInfo.UserID,
            CaDisPlayClass,CaDisMainSpeaker,CaseDiscuss.CySecID,convert(varchar(100),
        CaDisTime,23) as CaDisTime,CaseDiscuss.CheckStatus,CaDisContent,CaDisPeriod,CheckContent,ui.trueName as auditName,uhos.hossecname auditDept,CaDisDes
        from CaseDiscuss
            inner join UserRealTec on UserRealTec.HosSecID = CaseDiscuss.HosSecID
            and UserRealTec.UserDipID = CaseDiscuss.UserID
            inner join UserInfo ON UserInfo.UserID = CaseDiscuss.UserID
            inner join Specialty on Specialty.SpID = UserInfo.SpecialtyID
            inner join HospitalInfo on HospitalInfo.HosID = UserInfo.HosID
            Inner join HosSection on HosSection.HosSecID = UserRealTec.HosSecID
            left JOIN UserCycleSec on UserCycleSec.UCSID = UserRealTec.UCSID
            left join CaseDiscussCheck on CaseDiscussCheck.cadisid=CaseDiscuss.CaDisID
            left join userInfo ui on ui.userId=CheckUserID
            left join HosSection uhos on uhos.HosSecID = ui.SZKS
            WHERE 1=1
                <if test='biaoJi!=null and biaoJi!=""'>
                  AND CaseDiscuss.CheckStatus = 0
                </if>
                 AND UserTecID =#{userFlow}
                AND CaseDiscuss.UserID = #{docFlow}

        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        CaDisTime
    </select>

    <!-- UserID 学员流水号-->
    <!--TrueName 学员姓名-->
    <!-- RStartTime 开始时间-->
    <!-- REndTime 结束时间-->
    <!-- CheckStatus 轮转状态-->
    <!-- UserTecID 带教流水号-->
    <!-- HosSecName 轮转科室名称-->
    <select id="appealStudentList" parameterType="map" resultMap="studentMap">
		SELECT
		*
		FROM
		(
		SELECT
		ROW_NUMBER() OVER (order by T.rownum )AS Row,
		T.*
		FROM
		(
		select B.*,
		row_number() over(order by RStartTime) AS rownum FROM (
                select distinct UserInfo.UserID ,TrueName ,
                convert(varchar(100),RStartTime,23) as RStartTime,
                convert(varchar(100),REndTime,23) as REndTime
                ,HosSecName,CheckStatus,UserRealCycleSec.RCySecID as CySecID,
                HosCycleSection.HosCySecID
                from UserInfo
                inner join UserRealCycleSec on UserRealCycleSec.RUserID = UserInfo.UserID
                inner join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
                inner join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
                left join OutSecBrief on OutSecBrief.UCSID = UserRealCycleSec.RUCSID
                inner join
                (select UserInfo.UserID,A.HosID from Explan as A
                left join UserInfo on UserInfo.UserID = A.UserID
                left join CycleSection on CycleSection.CySecID = A.CySecID
                left join Section on Section.SecID = CycleSection.SectionID
                WHERE 1=1  and a.UserID IN
                (SELECT distinct UserRealTec.UserDipID FROM UserRealTec WHERE UserRealTec.UserTecID=#{teacherUserFlow}
                UNION
                SELECT UserDipID FROM UserTec WHERE UserTecID=#{teacherUserFlow})
                and a.CySecID IN
                ( SELECT distinct UserCycleSec.CySecID   FROM UserCycleSec
                INNER JOIN UserRealTec  ON UserRealTec.UCSID = UserCycleSec.UCSID
                WHERE UserRealTec.UserTecID=#{teacherUserFlow}
                UNION
                SELECT HosCycleSection.CySecID
                FROM HosCycleSection
                 INNER JOIN HosSection hs ON hs.HosSecID = HosCycleSection.HosSecID
                 WHERE hs.HosSecID IN (SELECT distinct UserTec.SecID FROM UserTec WHERE UserTecID=#{teacherUserFlow}))
                 and ExplanState =0
                 group by UserInfo.UserID,A.HosID
                 ) as Temp on Temp.UserID = UserInfo.UserID and Temp.HosID =HosSection.HosSecID

		) B
		) AS T
		)
		TT
		WHERE
		TT.Row BETWEEN ${startRow} and ${endRow}
		ORDER BY
		RStartTime
	</select>

    <resultMap id="appealDataListMap" type="hashmap">
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="SecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="ExplanID" property="explanId" javaType="java.lang.String"/>
        <result column="ExplanSort" property="type" javaType="java.lang.String"/>
        <result column="ExplanSortName" property="typeName" javaType="java.lang.String"/>
        <result column="ExplanObjID" property="appealObjId" javaType="java.lang.String"/>
        <result column="ExplanObjName" property="appealObjName" javaType="java.lang.String"/>
        <result column="Num" property="appealNum" javaType="java.lang.String"/>
        <result column="ExplanState" property="checkStatus" javaType="java.lang.String"/>
        <result column="ExplanStateStr" property="checkStatusName" javaType="java.lang.String"/>
        <result column="ExplanReason" property="appealReason" javaType="java.lang.String"/>
        <result column="ExplanResult" property="appealResult" javaType="java.lang.String"/>
        <result column="ExplanWHSJ" property="appealTime" javaType="java.lang.String"/>
    </resultMap>
    <!-- TrueName 学员名称-->
    <!-- SecName 轮转科室名称-->
    <!-- ExplanID 申诉信息ID-->
    <!-- ExplanSort 申诉种类（病种、操作、手术）-->
    <!-- ExplanObjID 申诉种类ID-->
    <!-- UserID 学员流水号-->
    <!-- ExplanObjName 申诉名称-->
    <!-- Num 申诉数量-->
    <!-- ExplanStateStr  状态-->
    <select id="appealDataList" parameterType="map" resultMap="appealDataListMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.Num )AS Row,
        T.*
        FROM
        (
            select UserInfo.TrueName,Section.SecName,A.ExplanID,A.ExplanSort,
            CASE ExplanSort WHEN 1 THEN '病种'
            WHEN 2 THEN '操作'
            WHEN 3 THEN '手术' END AS ExplanSortName,
            A.ExplanObjID,A.UserID,
            A.ExplanObjName,A.Num,convert(varchar(100),A.ExplanWHSJ,20) as ExplanWHSJ,
            CASE ExplanState WHEN 0 THEN '待审核'
            WHEN 1 THEN '通过'
            WHEN 2 THEN '不通过'
            WHEN 3 THEN '退回' END AS ExplanStateStr,ExplanState,ExplanReason,ExplanResult
        from Explan as A left join UserInfo on UserInfo.UserID = A.UserID
            left join CycleSection on CycleSection.CySecID = A.CySecID
            left join Section on Section.SecID = CycleSection.SectionID
            WHERE a.UserID IN
            (SELECT distinct UserRealTec.UserDipID FROM UserRealTec WHERE UserRealTec.UserTecID=#{userFlow}
            UNION
            SELECT UserDipID FROM UserTec WHERE UserTecID=#{userFlow})
            and a.CySecID IN
            ( SELECT distinct UserCycleSec.CySecID   FROM UserCycleSec
            INNER JOIN UserRealTec  ON UserRealTec.UCSID = UserCycleSec.UCSID
            WHERE UserRealTec.UserTecID=#{userFlow}
            UNION   SELECT HosCycleSection.CySecID   FROM HosCycleSection
            INNER JOIN HosSection hs ON hs.HosSecID = HosCycleSection.HosSecID
            WHERE hs.HosSecID IN (SELECT distinct UserTec.SecID FROM UserTec WHERE UserTecID=#{userFlow}))
            AND A.UserID = #{docFlow}
            <if test='biaoJi!=null and biaoJi!=""'>
                AND ExplanState = 0
            </if>
        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        Num
    </select>


    <select id="afterSummeryStudentList" parameterType="map" resultMap="studentMap">
        SELECT
        *
        FROM
        (
        SELECT
        ROW_NUMBER() OVER (order by T.rownum )AS Row,
        T.*
        FROM
        (
            SELECT OutSecBrief.BriefID ,
            UserInfo.TrueName ,
            HosSection.HosSecName ,
            CONVERT(VARCHAR(100), UserRealCycleSec.RStartTime, 23) as RStartTime,
            CONVERT(VARCHAR(100), UserRealCycleSec.REndTime, 23) AS REndTime,
            row_number() over(order by BriefID) AS rownum,
            CheckStatus,UserCycleSec.CySecID,UserInfo.UserID,HosCycleSection.HosSecID,UserCycleSec.HosCySecID,UserSectionManager.SectionManagerID
            FROM dbo.OutSecBrief
            INNER JOIN UserRealTec ON UserRealTec.UCSID = OutSecBrief.UCSID
            LEFT JOIN dbo.UserInfo ON dbo.OutSecBrief.UserID = dbo.UserInfo.UserID
            LEFT JOIN UserCycleSec ON dbo.OutSecBrief.UCSID = dbo.UserCycleSec.UCSID
            LEFT JOIN UserRealCycleSec ON UserRealCycleSec.RUCSID = OutSecBrief.UCSID
            LEFT JOIN HosCycleSection ON HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
            LEFT JOIN HosSection ON HosSection.HosSecID = HosCycleSection.HosSecID
            LEFT JOIN Specialty ON Specialty.SpID = UserInfo.SpecialtyID
			INNER JOIN UserSectionManager ON UserSectionManager.UCSID = UserCycleSec.UCSID
            WHERE TecUserID is null AND UserRealTec.UserTecID = #{teacherUserFlow}
            and checkstatus = 0
        ) AS T
        )
        TT
        WHERE
        TT.Row BETWEEN ${startRow} and ${endRow}
        ORDER BY
        RStartTime
    </select>

    <!--获取出科小结内容-->
    <!-- BriefID 小结流水号-->
    <!-- HosSecName 轮转科室名称-->
    <!-- BriefRequrie 学员个人小结-->
    <!-- SecAppraise 带教评价-->
    <resultMap id="afterMap" type="hashmap">
        <result column="BriefID" property="recId" javaType="java.lang.String"/>
        <result column="HosSecName" property="schDeptName" javaType="java.lang.String"/>
        <result column="BriefRequrie" property="stuContent" javaType="java.lang.String"/>
        <result column="SecAppraise" property="teaContent" javaType="java.lang.String"/>
        <result column="CheckStatus" property="checkStatus" javaType="java.lang.String"/>
        <result column="CheckStatusName" property="checkStatusName" javaType="java.lang.String"/>
        <result column="REndTime" property="endTime" javaType="java.lang.String"/>
        <result column="RStartTime" property="startTime" javaType="java.lang.String"/>
        <result column="UserID" property="docFlow" javaType="java.lang.String"/>
        <result column="TrueName" property="docName" javaType="java.lang.String"/>
        <result column="StartYear" property="sessionNumber" javaType="java.lang.String"/>
        <result column="HosSecID" property="hosSecId" javaType="java.lang.String"/>
    </resultMap>
    <select id="getAfterSummDetail" parameterType="map" resultMap="afterMap">
        SELECT BriefID,HosSection.HosSecName,BriefRequrie,
        SecAppraise,CheckStatus,
            CONVERT(VARCHAR(100), UserRealCycleSec.RStartTime, 23) as RStartTime,
            CONVERT(VARCHAR(100), UserRealCycleSec.REndTime, 23) AS REndTime,
            UserInfo.TrueName,UserInfo.UserID,UserInfo.StartYear,
            CASE CheckStatus WHEN 0 THEN '待审核'
            WHEN 1 THEN '通过'
            WHEN 2 THEN '不通过'
            WHEN 3 THEN '退回'  END AS CheckStatusName,HosSection.HosSecID
        FROM   dbo.OutSecBrief
        LEFT JOIN HosCycleSection ON dbo.OutSecBrief.CySecID = dbo.HosCycleSection.HosCySecID
        LEFT JOIN HosSection ON dbo.HosCycleSection.HosSecID = dbo.HosSection.HosSecID
        LEFT JOIN UserRealCycleSec ON UserRealCycleSec.RUCSID = OutSecBrief.UCSID
		left join UserInfo on UserInfo.UserID = OutSecBrief.UserID
        WHERE BriefID=#{afterId}

    </select>
    <!--nyd.[ID]：主键,nyd.[UserID]：用户ID,nyd.[HosCySecID]:轮转id,nyd.[LJXY]:廉洁行医,nyd.[GZZRX]:工作态度及责任心-->
    <!--,nyd.[YLCCSG]:医疗差错，事故 ,nyd.[YHGTNL]:医患沟通能力-->
    <!--,nyd.[JBLL]:基本理论 ,nyd.[JBJN]:基本技能 ,nyd.[JBCZ]:基本操作 ,nyd.[TGJC]:体格检查 ,nyd.[ZYLL]:专业理论-->
    <!--,nyd.[CLCJBR]:处理常见病人的能力 ,nyd.[CLWZBR]:处理危重疑难病人的能力,nyd.[SYJC]:实验检查-->
    <!--,nyd.[LCSW]:临床思维和表达能力 ,nyd.[RZQQ]:日志填写情况,nyd.[GLBZ]:管理病种-->
    <!--,nyd.[GLBL]:管理病例,nyd.[CZSS]:操作,nyd.[CCHD]:参加各形,nyd.[LLKS]:理论考试-->
    <!--,nyd.[JNKS]:技能考核,nyd.[TotalScore]:综合成绩-->
    <!--,nyd.[TecID]:带教老师ID,nyd.[TecCheckDate]:老师审核信息-->
    <!--,nyd.[SectionManagerID]：科主任审核,nyd.[SMCheckDate]：审核日期-->
    <select id="getScoreMap" parameterType="map" resultType="java.util.HashMap">
        select  nyd.[ID],nyd.[UserID],nyd.[HosCySecID],nyd.[LJXY],nyd.[GZZRX],nyd.[YLCCSG],nyd.[YHGTNL]
        ,nyd.[JBLL],nyd.[JBJN],nyd.[JBCZ],nyd.[TGJC],nyd.[ZYLL]
        ,nyd.[CLCJBR],nyd.[CLWZBR],nyd.[SYJC],nyd.[LCSW],nyd.[RZQQ],nyd.[GLBZ]
        ,nyd.[GLBL],nyd.[CZSS],nyd.[CCHD],nyd.[LLKS],nyd.[JNKS],nyd.[TotalScore],nyd.YDJF,nyd.RZJF,nyd.BZJF,nyd.BLJF,nyd.CZJF
        ,nyd.[TecID],nyd.[TecCheckDate],nyd.[SectionManagerID],nyd.[SMCheckDate],userinfo.truename headName
        from NYDOutCycleSectionRecord_New as nyd
        left join userinfo on userinfo.userid = nyd.sectionmanagerid
        WHERE nyd.[UserID] = #{docFlow} And nyd.[HosCySecID] = #{hosCySecId}
    </select>
    <select id="getTheroyScore" parameterType="string" resultType="java.util.HashMap">
        select case TestResult when '-1' then 0 else  TestResult end TestResult
        ,case MakeupResult when '-1' then 0 else  MakeupResult end MakeupResult
        from T_DepartmentalExaminationResult where UCSID = #{afterEvaId}
    </select>

    <select id="afterEvaStudentList" parameterType="map" resultMap="studentMap">
		SELECT
		  *
		FROM
		  (
		    SELECT
		      ROW_NUMBER() OVER (order by T.RStartTime )AS Row,
		      T.*
		    FROM
		      (
						select isnull(NYDOutCycleSectionRecord.Id,0) as ID,OutSecBrief.UCSID,UserInfo.truename,UserInfo.UserID,UserInfo.StartYear,
						HosSection.hossecname,
						isnull(totalscore,0) as TotalScore,
                        CONVERT(VARCHAR(100), UserRealCycleSec.RStartTime, 23) as RStartTime,
                        CONVERT(VARCHAR(100), UserRealCycleSec.REndTime, 23) AS REndTime,UserCycleSec.CySecID,OutSecBrief.BriefID,SpName,WFWORK_ID,
                        UserCycleSec.HosCySecID,UserSectionManager.SectionManagerID,HosCycleSection.HosSecID,CheckStatus
						from OutSecBrief
						left join UserCycleSec on UserCycleSec.UCSID = OutSecBrief.UCSID
						left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
						left join NYDOutCycleSectionRecord on NYDOutCycleSectionRecord.hoscysecid = UserCycleSec.hoscysecid
						left join hoscyclesection on hoscyclesection.hoscysecid = UserCycleSec.hoscysecid
						left join HosSection on HosSection.HosSecID = hoscyclesection.HosSecID
						left join UserInfo on UserInfo.UserID = OutSecBrief.UserID
						left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
						INNER JOIN UserSectionManager ON UserSectionManager.UCSID = UserCycleSec.UCSID
						inner join WFWORK on WFWORK.WFWORK_DATAID = OutSecBrief.BriefID and  WFWORK_ROLEID = 6 and WFWORK.WFWORK_Tablename = 'CycleOutSectionRecordItemDetail'
						and WFWORK_AWAITER= #{teacherUserFlow}
                        where OutSecBrief.userid in (
						select UserDipID from UserTec where  UserTecID =  #{teacherUserFlow}
						union all
						select UserDipID from UserRealTec where  UserTecID =  #{teacherUserFlow})
						and HosSection.HosSecID IN(
						select SecID from UserTec where UserTecID =  #{teacherUserFlow}
						UNION
						select HosSecID from UserRealTec where UserTecID =  #{teacherUserFlow})
						GROUP BY NYDOutCycleSectionRecord.id,OutSecBrief.UCSID,UserInfo.truename,UserInfo.UserID,UserInfo.StartYear,HosSection.hossecname,totalscore,RStartTime,REndTime,UserCycleSec.CySecID,OutSecBrief.BriefID,SpName
						,WFWORK_ID,UserCycleSec.HosCySecID,UserSectionManager.SectionManagerID,HosCycleSection.HosSecID,CheckStatus
						union
						select isnull(NYDOutCycleSectionRecord_New.Id,0) as ID,OutSecBrief.UCSID,UserInfo.truename,UserInfo.UserID,UserInfo.StartYear,
						HosSection.hossecname,
						isnull(totalscore,0) as  totalscore,
                        CONVERT(VARCHAR(100), UserRealCycleSec.RStartTime, 23) as RStartTime,
                        CONVERT(VARCHAR(100), UserRealCycleSec.REndTime, 23) AS REndTime,UserCycleSec.CySecID,OutSecBrief.BriefID,SpName,WFWORK_ID,
                        UserCycleSec.HosCySecID,UserSectionManager.SectionManagerID,HosCycleSection.HosSecID,CheckStatus
						from OutSecBrief
						left join UserCycleSec on UserCycleSec.UCSID = OutSecBrief.UCSID
						left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
						left join NYDOutCycleSectionRecord_New on NYDOutCycleSectionRecord_New.hoscysecid = UserCycleSec.hoscysecid and UserCycleSec.ucsid = NYDOutCycleSectionRecord_New.ucsid
						left join hoscyclesection on hoscyclesection.hoscysecid = UserCycleSec.hoscysecid
						left join HosSection on HosSection.HosSecID = hoscyclesection.HosSecID
						left join UserInfo on UserInfo.UserID = OutSecBrief.UserID
						left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
						INNER JOIN UserSectionManager ON UserSectionManager.UCSID = UserCycleSec.UCSID
						inner join WFWORK on WFWORK.WFWORK_DATAID = OutSecBrief.BriefID and  WFWORK_ROLEID = 6 and WFWORK.WFWORK_Tablename = 'CycleOutSectionRecordItemDetail'
						where StartYear > 2014 AND NYDOutCycleSectionRecord_New.Id IS NOT NULL and OutSecBrief.userid in (
						select UserDipID from UserTec where  UserTecID =  #{teacherUserFlow}
						union all
						select UserDipID from UserRealTec where  UserTecID =  #{teacherUserFlow})
						and HosSection.HosSecID IN(
						select SecID from UserTec where UserTecID =  #{teacherUserFlow}
						UNION
						select HosSecID from UserRealTec where UserTecID =  #{teacherUserFlow})
						GROUP BY NYDOutCycleSectionRecord_New.id,OutSecBrief.UCSID,UserInfo.truename,UserInfo.UserID,UserInfo.StartYear,HosSection.hossecname,totalscore,RStartTime,REndTime,UserCycleSec.CySecID,OutSecBrief.BriefID,SpName
						,WFWORK_ID,UserCycleSec.HosCySecID,UserSectionManager.SectionManagerID,HosCycleSection.HosSecID,CheckStatus

		) AS T
		)
		TT
		WHERE
		TT.Row BETWEEN ${startRow} and ${endRow}
		ORDER BY
		RStartTime
	</select>
</mapper>