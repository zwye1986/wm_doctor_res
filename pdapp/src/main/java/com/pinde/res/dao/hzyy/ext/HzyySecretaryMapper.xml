<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.res.dao.hzyy.ext.HzyySecretaryMapper">
    <update id="updateDayEvalType">
        UPDATE ExamInfo SET ExamInfoDF=#{examInfoDF},CanImprove=0,TecAppraise=#{TecAppraise},VerifyState=2 WHERE ExamInfoID=#{examInfoId}
    </update>
    <update id="updateDayEvalItem">
        UPDATE Mark SET MarkDF=#{value} WHERE ReqItemID=#{reqItemId} AND ExamInfoID=#{examInfoID}
    </update>
    <update id="updateAfterSummary1">
        Update OutSecBrief set  SecAppraise = #{TecComment} ,
        SecretaryContent = #{SecComment},SecretaryID = #{SecretaryID},
        SecretaryCheckDate = getdate(), VerifyState=2, CheckStatus = 1
        where UCSID = #{UCSID}
    </update>
    <update id="updateSecAppraise">
        UPDATE OutSecBrief SET SecretaryContent=#{SecretaryContent} WHERE UCSID = #{UCSID}
    </update>
    <update id="updateTeachPlan">
        update CaseDiscuss set CaDisPlayClass=#{CaDisPlayClass},CaDisMainSpeaker=#{CaDisMainSpeaker},CaAddress=#{CaAddress},
        CaPeople=#{CaPeople},TecID=#{TecID}, CaDisTime=#{CaDisTime},CaEndDisTime=#{CaEndDisTime} ,
        CaDisMainSpeakerType=#{CaDisMainSpeakerType}
        where CaDisID = #{CaDisID}
    </update>
    <update id="updateAfterEvaluation1">
        UPDATE  CycleOutSectionRecord_NF
        SET   ExamineMark=#{ExamineMark} ,AssessmentMark=#{AssessmentMark} ,CaseMark='' ,
                AttendanceDay='' ,SickLeaveDay=#{SickLeaveDay} ,AbsenteeismDay=#{AbsenteeismDay} ,
                SkillsAssessContent='' ,SecretaryID=#{SecretaryID}, SecDate=#{SecDate},
                TecComment=#{TecComment},SecComment=#{SecComment},
                VerifyState=2,ProfesserID = #{ProfesserID},ProfesserDate = #{ProfesserDate}
        WHERE   ID =#{ID}
    </update>
    <delete id="delTeachPlan">
        delete CaseDiscuss where CaDisID = #{caDisID}
    </delete>
    <insert id="addTeachPlan">
        INSERT  INTO CaseDiscuss(CySecID ,HosSecID ,CaDisTime ,CaEndDisTime ,CaDisContent ,CaDisPlayClass ,
        CaDisPeriod ,CaDisMainSpeaker ,CaDisMainSpeakerType ,CheckStatus ,CaDisDes ,UserID ,CaName ,
        CaAddress ,CaPeople ,DocGRPID ,DocCount ,UserType ,TecID ,OpinionManager , OpinionDepart)
        VALUES  ('0' ,#{HosSecID} ,#{CaDisTime} ,#{CaEndDisTime} ,'' ,#{CaDisPlayClass} ,
        '0' ,#{CaDisMainSpeaker} ,#{CaDisMainSpeakerType} ,'0' ,'' ,#{SecretaryID} ,'',
        #{CaAddress} ,#{CaPeople} ,'0' ,'0' ,'36' ,#{TecID} ,'','')
    </insert>
    <insert id="insertInProcess">
        INSERT  INTO UserRealCycleSec(RUserID ,RStartTime ,REndTime ,RCySecID ,RHosCySecID ,RUCSID ,
            CreateID ,[Master] ,CreateDate,VerifyState)
            VALUES  ( #{RUserID},#{RStartTime},#{REndTime},#{RCySecID},#{RHosCySecID},#{UCSID},
            #{userFlow},'',#{CreateDate},'1')
    </insert>

    <update id="saveActivityEval">
        Update CaseDiscuss set UmpireScore=#{UmpireScore},Umpire=#{Umpire} where CaDisID=#{CaDisID}
    </update>
    <update id="updateInProcess">
        update UserRealCycleSec set RStartTime=#{RStartTime} , REndTime=#{REndTime} ,
        Master='',CreateDate=#{CreateDate},VerifyState=1
        where RUCSID=#{UCSID}
    </update>
    <insert id="insertInProcessFile">
        insert into S_UserReadSecDocument(URSD_ID,RSD_ID,TecName,DateTime,UserID,UCSID)
        values (newid(),'0','',#{CreateDate},#{RUserID},#{UCSID})
    </insert>
    <insert id="addTeaRecord">
        insert into UserRealTecList values(newid(),#{UCSID},#{RUserID},#{UserTecID},#{StartTime},#{EndTime})
    </insert>
    <insert id="addTeaInfo">
        Insert into UserRealTec Values(#{RUserID},#{UserTecID},#{HosSecID},#{UCSID})
    </insert>
    <insert id="addHeadInfo">
        insert into UserSectionManager(StudentID, SectionManagerID, HosSecID,UCSID)
        VALUES (#{RUserID}, #{SectionManagerID}, #{HosSecID},#{UCSID})
    </insert>
    <insert id="addExamInfo">
        insert into T_DepartmentalExaminationResult(DERID,UCSID,Examination,IsTest,TestResult,PassScore,
        MakeupRequest,MakeupContent,MakeupCheck,MakeupCheckContent,MakeupResult,Remark)
        values (newid(),#{UCSID},0,0,-1,0,0,'',0,'',-1,'')

    </insert>
    <update id="updateTeaInfo">
        update UserRealTec set UserTecID=#{UserTecID}
        where  UCSID = #{UCSID}
    </update>
    <update id="updateHeadInfo">
        update UserSectionManager set SectionManagerID=#{SectionManagerID}
        where  UCSID = #{UCSID}
    </update>
    <update id="updateOutSecBriefInfo">
        Update OutSecBrief set SecretaryContent = '同意出科',SecretaryID = #{userFlow},
        SecretaryCheckDate = getdate(), VerifyState=2, CheckStatus = 1 where UCSID = #{doctorFlow}
    </update>
    <select id="hasHead" resultType="integer">
        select count(*) from UserSectionManager
        where UCSID=#{ucsid}
    </select>
    <select id="hasExam" resultType="integer">
        select count(*) from T_DepartmentalExaminationResult
        where UCSID=#{ucsid}
    </select>
    <select id="InProcessCount" resultType="hashmap">
        select COUNT(*) as AllNum,(select COUNT(*)
        from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
        left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
        INNER JOIN [Role] on [Role].RoleID = UserInfo.UserType
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        where UserInfo.HosID = #{HosID}
        <if test='HosSecID!=null and HosSecID.size()>0'>
            AND HosSection.HosSecID IN
            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                #{tf}
            </foreach>
        </if>
        AND UserCycleSec.StartTime between #{StartTime} and #{EndTime} AND UserRealCycleSec.RStartTime is not null
        AND UserInfo.IsUser = 0 and UserInfo.IsComplete=0 ) as InNum,
        (select COUNT(*)
        from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
        left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
        INNER JOIN [Role] on [Role].RoleID = UserInfo.UserType
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        where UserInfo.HosID = #{HosID}
        <if test='HosSecID!=null and HosSecID.size()>0'>
            AND HosSection.HosSecID IN
            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                #{tf}
            </foreach>
        </if>
        AND UserCycleSec.StartTime between #{StartTime} and #{EndTime} AND UserRealCycleSec.RStartTime is null
        AND UserInfo.IsUser = 0 and UserInfo.IsComplete=0 ) as OutNum
        from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
        left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
        INNER JOIN [Role] on [Role].RoleID = UserInfo.UserType
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        where UserInfo.HosID = #{HosID}
        <if test='HosSecID!=null and HosSecID.size()>0'>
            AND HosSection.HosSecID IN
            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                #{tf}
            </foreach>
        </if>
        AND UserCycleSec.StartTime between #{StartTime} and #{EndTime}
        AND UserInfo.IsUser = 0 and UserInfo.IsComplete=0
    </select>
    <select id="docHosSecID" resultType="hashmap">
        select HosSecID
        from UserRealCycleSec
        left join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
        where GETDATE() between RStartTime and REndTime
        and RUserID =#{tecID}
    </select>
    <select id="InProcessCount2" resultType="hashmap">
        with tab as (select UserCycleSec.UserID,UserInfo.StartYear,UserInfo.TrueName,
        SpName,Section.Secname,Section.SecID,
        str(HosCycleSection.CySecTime,6,2) as CySecTime,
        UserCycleSec.StartTime,UserCycleSec.EndTime,cycleinfo.cyid,cycleinfo.spid,
        CONVERT(varchar(10),RStartTime,120) as RStartTime,
        CONVERT(varchar(10),REndTime,120) as REndTime,
        CASE isnull(OutSecBrief.CheckStatus, 0)
        WHEN 1 THEN '已出科' WHEN isnull(RStartTime, 0) THEN '未入科' ELSE '未出科' END AS CheckStatus,
        HosSection.HosSecID,HosSection.HosSecName,
        HosCycleSection.HosCySecID,CycleSection.CySecID,
        HospitalInfo.hosQC as HosQC,HospitalInfo.HosID as HosID,UserRealTec.UserTecID,
        Tec.TrueName AS TecTrueName,A.SectionManagerID,
        B.TrueName as SectionManagerName,UserCycleSec.UCSID,
        case UserInfo.SFZC
        when '0' then '否'
        when '1' then '是'
        else '否' end SFZC,UserInfo.UserType,RoleName
        from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join Section on Section.SecID = CycleSection.SectionID
        left join OutSecBrief on OutSecBrief.CySecID = HosCycleSection.HosCySecID
        and OutSecBrief.UserID = UserCycleSec.UserID
        left join UserRealCycleSec on UserRealCycleSec.RUserID = UserCycleSec.UserID
        and UserRealCycleSec.RHosCySecID = UserCycleSec.HosCySecID
        and UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
        left join UserRealTec on UserRealTec.HosSecID = HosSection.HosSecID
        AND UserCycleSec.UCSID = UserRealTec.UCSID
        left join UserSectionManager as A on A.StudentID = UserCycleSec.UserID and A.HosSecID = HosSection.HosSecID
        AND UserCycleSec.UCSID = A.UCSID
        left join UserInfo as B on B.UserID = A.SectionManagerID
        left join cycleinfo on cycleinfo.cyid = CycleSection.cyid
        left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
        left join UserInfo as Tec on Tec.UserID = UserRealTec.UserTecID
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        INNER JOIN [Role] on [Role].RoleID = UserInfo.UserType
        where UserInfo.HosID = #{HosID}
        <if test='HosSecID!=null and HosSecID.size()>0'>
            AND HosSection.HosSecID IN
            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                #{tf}
            </foreach>
        </if>
        AND UserCycleSec.StartTime between #{StartTime} and #{EndTime} AND
         UserRealCycleSec.RStartTime is null and UserInfo.IsUser = 0 and UserInfo.IsComplete=0)
        select UserType RoleId, count(UserType) as UserCount
        from tab
        group by UserType
    </select>
    <select id="getAuditData" resultType="hashmap">
        SELECT a.ID ,ExamInfoID ,TecComment ,b.TrueName AS TecName ,c.TrueName AS SecName ,
        d.TrueName AS ProfesserName ,CONVERT(VARCHAR(100), TecDate, 120) TecDate ,
        CONVERT(VARCHAR(100), SecDate, 120) SecDate,CONVERT(VARCHAR(100), ProfesserDate, 120)ProfesserDate, SecComment,ProfesserComent,
        ExamineMark ,ExamineMember , ExamineDateTime ,AssessmentMark ,AttendanceDay,SickLeaveDay,AbsenteeismDay,CaseMark,SkillsAssessContent,
        IsHadAccident,a.VerifyState,REndTime,SectionManager.TrueName as ManagerName,SectionManagerID,ProfesserID
        FROM
        CycleOutSectionRecord_NF a
        LEFT JOIN dbo.UserInfo b ON a.TeacherID = b.UserID
        LEFT JOIN dbo.UserInfo c ON a.SecretaryID = c.UserID
        LEFT JOIN dbo.UserInfo d ON a.ProfesserID = d.UserID
        INNER JOIN UserRealCycleSec ON UserRealCycleSec.RUCSID = a.UCSID
        INNER JOIN UserSectionManager ON UserSectionManager.UCSID = UserRealCycleSec.RUCSID
        INNER JOIN UserInfo as SectionManager ON SectionManager.UserID = UserSectionManager.SectionManagerID
        WHERE  a.UCSID=#{ucsid}
    </select>
    <select id="getCycleDetail" resultType="hashmap">
		select UserCycleSec.UserID,HospitalInfo.hosQC as HosQC,UserInfo.TrueName,SpName,UserInfo.StartYear,
		case UserInfo.SFZC
		when '0' then '否'
		when '1' then '是'
		else '否' end SFZC,
		str(HosCycleSection.CySecTime,6,2) as CySecTime,
		CONVERT(varchar(10),UserCycleSec.StartTime,20) as StartTime,
		CONVERT(varchar(10),UserCycleSec.EndTime,20) as EndTime,
		CONVERT(varchar(10),RStartTime,120) as RStartTime,
		CONVERT(varchar(10),REndTime,120) as REndTime,
		CASE isnull(OutSecBrief.CheckStatus, 0)
		  WHEN 1 THEN 1 WHEN isnull(RStartTime, 0) THEN 0 ELSE 0 END AS CheckStatus,
		CASE isnull(OutSecBrief.CheckStatus, 0)
		  WHEN 1 THEN '已出科' WHEN isnull(RStartTime, 0) THEN '未入科' ELSE '未出科' END AS CheckStatusName,
		HosSection.HosSecID,HosSection.HosSecName,
		HosCycleSection.HosCySecID,CycleSection.CySecID,
		HospitalInfo.HosID as HosID,UserRealTec.UserTecID,
		Tec.TrueName AS TecTrueName,A.SectionManagerID,
		B.TrueName as SectionManagerName,UserCycleSec.UCSID,
		UserInfo.UserType,UserRealCycleSec.RCySecID,UserRealCycleSec.RHosCySecID
		from UserCycleSec
		left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
		left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
		left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
		left join Section on Section.SecID = CycleSection.SectionID
		left join OutSecBrief on OutSecBrief.CySecID = HosCycleSection.HosCySecID
		and OutSecBrief.UserID = UserCycleSec.UserID
		left join UserRealCycleSec on UserRealCycleSec.RUserID = UserCycleSec.UserID
		and UserRealCycleSec.RHosCySecID = UserCycleSec.HosCySecID
		and UserRealCycleSec.RUCSID = UserCycleSec.UCSID
		left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
		left join UserRealTec on UserRealTec.HosSecID = HosSection.HosSecID
		AND UserCycleSec.UCSID = UserRealTec.UCSID
		left join UserSectionManager as A on A.StudentID = UserCycleSec.UserID and A.HosSecID = HosSection.HosSecID
		AND UserCycleSec.UCSID = A.UCSID
		left join UserInfo as B on B.UserID = A.SectionManagerID
		left join cycleinfo on cycleinfo.cyid = CycleSection.cyid
		left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
		left join UserInfo as Tec on Tec.UserID = UserRealTec.UserTecID
		left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
		where UserCycleSec.UCSID = #{ucsid}
	</select>
    <select id="getAfterSummData" resultType="hashmap">
		SELECT  o.HosSecName ,CONVERT(VARCHAR(10), f.OutDate, 20) OutDate ,u1.TrueName ,u1.StartYear ,i.HosQC AS HosName ,p.SpName ,
			CONVERT(VARCHAR(10), RStartTime, 120) + ' - '+ CONVERT(VARCHAR(10), REndTime, 120) AS CycleDate ,
			f.AttendInfo ,datediff(month,RStartTime,REndTime)+1 as RequireCycleMonth,f.CaseDiscussNum ,f.ProfessorWardRoundNum ,
			f.BigCaseNum , f.PatientsInChargeNum ,f.CreateDate ,f.SICK,f.LEAVE,f.BriefRequrie ,f.GainsDefect ,f.SecAppraise ,
		f.TecCheckDate ,f.SecretaryContent ,f.SecretaryCheckDate ,f.ChiefCheckContent,datediff(day,RStartTime,REndTime)+1 as Cytime,
		f.ChiefCheckDate , ISNULL(f.VerifyState, 0) AS VerifyState,ISNULL(f.CheckStatus, 0) AS CheckStatus,a.TrueName AS TeacherName,b.TrueName AS SecretaryName,u3.TrueName AS ChiefName
		FROM UserRealCycleSec u
		LEFT JOIN CycleSection c ON c.CySecID = u.RCySecID
		LEFT JOIN HosCycleSection h ON h.HosCySecID = u.RHosCySecID
		LEFT JOIN HosSection o ON o.HosSecID = h.HosSecID
		LEFT JOIN Section s ON s.SecID = c.SectionID
		LEFT JOIN HospitalInfo i ON i.HosID = o.HosID
		LEFT JOIN cycleinfo c1 ON c1.cyid = c.cyid
		LEFT JOIN UserInfo u1 ON u1.UserID = u.RUserID
		JOIN Specialty p ON u1.SpecialtyID = p.SpID
		LEFT JOIN dbo.OutSecBrief f ON u.RUCSID = f.UCSID
		LEFT JOIN dbo.UserInfo a ON f.TecUserID = a.UserID
		LEFT JOIN dbo.UserInfo b ON f.SecretaryID = b.UserID
		LEFT JOIN dbo.UserInfo u3 ON f.ChiefUserID = u3.UserID
		WHERE RUCSID= #{ucsid}
	</select>
    <select id="cycleData" resultType="hashmap">
        select (select  sum(RequireNumber) from BigHistoryCase where cysecid = #{cySecID}) as BRequireNumber,
        (select isnull(sum(CaRequireNumber),0) from CaseClass where cysecid =#{cySecID}) as CRequireNumber,
        (select isnull(sum(OpRequireNumber),0) from OperateSkill where cysecid = #{cySecID}) as ORequireNumber,
        (select isnull(sum(OpsRequireNumber),0) from OPSSkill where cysecid=#{cySecID}) as SRequireNumber,
        (select count(BHID) from BigHistoryCase
        left join Rec_BigHistory on Rec_BigHistory.FromID = BigHistoryCase.BHID where cysecid = #{cySecID} AND userid = #{userID}  and  CheckStatus != 2) as BFinish,
        (select count(CaID)  from CaseClass
        left join Rec_CaseClass on Rec_CaseClass.FromID = CaseClass.CaID where cysecid =#{cySecID} AND userid = #{userID}) as CFinish,
        (select count(OpID)  from OperateSkill
        left join Rec_OperateSkill on Rec_OperateSkill.FromID = OperateSkill.OpID where cysecid =#{cySecID} AND userid =#{userID}) as OFinish,
        (select count(OpsID)  from OPSSkill
        left join Rec_POSSkill on Rec_POSSkill.FromID = OPSSkill.OpsID where cysecid =#{cySecID} AND userid =#{userID}) as SFinish
    </select>
    <select id="getHosSecId" resultType="java.lang.String">
		select  b.HosSecID from DirectorSection as a
        left join HosSection as b on a.SecID = b.HosSecID
        where a.UserID =#{userFlow}
        union
        select HosSecID from HosSection
        left join UserInfo on UserInfo.SZKS = HosSection.HosSecID
        WHERE UserInfo.UserID = #{userFlow}
	</select>
    <select id="OutProcessCount" resultType="hashmap">
		select Role.RoleId,count(Role.RoleId) as UserNum
		from OutSecBrief
		inner join UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
		inner join UserInfo on UserInfo.UserID  = OutSecBrief.UserID
		left join UserRole on UserRole.UserID = UserInfo.UserID
		left join Role on Role.RoleID = UserRole.RoleID
		left join UserCycleSec on UserCycleSec.UCSID = OutSecBrief.UCSID
		left join HosCycleSection on  HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
		left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
		left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
		inner join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserCycleSec.UCSID
		inner join UserRealTec on UserRealTec.UCSID = UserCycleSec.UCSID
		inner join UserInfo as TecInfo on TecInfo.UserID = UserRealTec.UserTecID
		where HosSection.HosSecID in (select  b.HosSecID from DirectorSection as a
				left join HosSection as b on a.SecID = b.HosSecID
				where a.UserID = #{userFlow}
				union
				select HosSecID from HosSection
				left join UserInfo on UserInfo.SZKS = HosSection.HosSecID
				WHERE UserInfo.UserID = #{userFlow})
				and UserInfo.IsUser = 0
				and UserInfo.IsComplete=0
				and OutSecBrief.VerifyState = 1
		group by Role.RoleId

	</select>
    <select id="activitsDate" resultType="hashmap">
		select d.DicItem ,count(1) as num from casediscuss a
        left join DicItem d on a.CaDisPlayClass=d.DicItemID
        where a.UCSID=#{ucsid} and CheckStatus=6
        and isnumeric(a.CaDisPlayClass)=1
		group by d.DicItem

	</select>
    <select id="getDayEvalItems" resultType="hashmap">
		select ReqItemID,ExamItem.ExamItemID,ReqItemName from ExamItem
        left join RequestItem on RequestItem.ExamItemID = ExamItem.ExamItemID
        where ExamItemType = 7
        order by ReqItemID
	</select>
    <select id="getDopsStuRoles" resultType="hashmap">
		SELECT RoleID, RoleName FROM dbo.Role WHERE RoleLevel=0
        ORDER BY RoleName Desc
	</select>
    <select id="getDayEvalResults" resultType="hashmap">
		select ExamInfo.ExamInfoID,ReqItemID,MarkDF from ExamInfo
        left join Mark on Mark.ExamInfoID = ExamInfo.ExamInfoID
        where ExamInfoType = #{type} and UCSID = #{ucsid}
        order by ReqItemID
	</select>
    <select id="getDopsData" resultType="hashmap">
		select  top 1 DOPS_ID,DOPS_UCSID,DOPS_TecType,CONVERT(VARCHAR(100), DOPS_Time, 120) DOPS_Time ,DOPS_Address,DOPS_Name,DOPS_Age,DOPS_Sex,
        DOPS_PType,DOPS_PDiagnosis,DOPS_Operate,DOPS_Num,DOPS_Level,DOPS_ReviewTime,DOPS_Feedback,
        DOPS_TecScore,DOPS_TecMessage,DOPS_StuScore,DOPS_UserID,DOPS_State,DOPS_TecID,DOPS_PTypeState,
        DOPS_Template ,UserInfo.TrueName as StuName,TecInfo.TrueName as TecName
        from Out_DOPS
        left join UserInfo on UserInfo.UserID =  Out_DOPS.DOPS_UserID
        left join UserInfo as TecInfo on TecInfo.UserID =  Out_DOPS.DOPS_TecID
        where DOPS_UCSID=#{ucsid}
	</select>
    <select id="getMiniData" resultType="hashmap">
		select Mini_ID, Mini_PTypeState, Mini_PDiagnosis, Mini_Operate, Mini_Num, Mini_ReviewTime, Mini_Feedback,
        Mini_TecScore, Mini_TecMessage, Mini_StuScore, Mini_TecID, Mini_UCSID, Mini_UserID, Mini_State,
        Mini_TecType, CONVERT(VARCHAR(100), Mini_Time, 120) Mini_Time , Mini_Address, Mini_Name, Mini_Age, Mini_Sex, Mini_PType,Mini_Template
        ,UserInfo.TrueName as StuName,TecInfo.TrueName as TecName
        from Out_Mini_CEX
        left join UserInfo on UserInfo.UserID =  Out_Mini_CEX.Mini_UserID
        left join UserInfo as TecInfo on TecInfo.UserID =  Out_Mini_CEX.Mini_TecID
        where Mini_UCSID=#{ucsid}
	</select>
    <select id="getStuInitData" resultType="hashmap">
		select UserCycleSec.userid,userinfo.truename,UserCycleSec.cysecid,UserCycleSec.hoscysecid,
        hossection.hossecid,hossecname,isnull(rstarttime,starttime) as starttime,
        isnull(rendtime,endtime) as endtime,SpName,userinfo.StartYear,userinfo.UserType,IsAssess,
        DATEDIFF(MONTH,starttime,endtime) as CycleMonth,TecInfo.TrueName as TecName
        from UserCycleSec
        left join userinfo on userinfo.userid = UserCycleSec.userid
        left join hoscyclesection on hoscyclesection.hoscysecid = UserCycleSec.hoscysecid
        left join hossection on hossection.hossecid = hoscyclesection.hossecid
        left join UserRealCycleSec on UserRealCycleSec.rucsid = UserCycleSec.ucsid
        left join Specialty on Specialty.SpID = userinfo.SpecialtyID
        left join UserRealTec on UserRealTec.UCSID = UserCycleSec.UCSID
        left join userinfo as TecInfo on TecInfo.UserID = UserRealTec.UserTecID
        where UserCycleSec.ucsid =  #{ucsid}
	</select>
    <select id="getMbevalResults" resultType="hashmap">
		select ExamInfo.ExamInfoID,ReqItemID,MarkDF from ExamInfo
        left join Mark on Mark.ExamInfoID = ExamInfo.ExamInfoID
        where ExamInfoType = #{type} and UCSID = #{ucsid}
        order by ReqItemID
	</select>
    <select id="getInProcessStuList" resultType="hashmap">
        with tab as (select UserCycleSec.UserID,UserInfo.StartYear,UserInfo.TrueName,
        SpName,Section.Secname,Section.SecID,
        str(HosCycleSection.CySecTime,6,2) as CySecTime,
        CONVERT(varchar(10), UserCycleSec.StartTime, 23) as StartTime,
        CONVERT(varchar(10), UserCycleSec.EndTime, 23) as EndTime, cycleinfo.cyid,cycleinfo.spid,
        CONVERT(varchar(10),RStartTime,23) as RStartTime,
        CONVERT(varchar(10),REndTime,23) as REndTime,
        CASE isnull(OutSecBrief.CheckStatus, 0)
        WHEN 1 THEN '已出科' WHEN isnull(RStartTime, 0) THEN '未入科' ELSE '未出科' END AS CheckStatus,
        HosSection.HosSecID,HosSection.HosSecName,
        HosCycleSection.HosCySecID,CycleSection.CySecID,
        HospitalInfo.hosQC as HosQC,HospitalInfo.HosID as HosID,UserRealTec.UserTecID,
        Tec.TrueName AS TecTrueName,A.SectionManagerID,
        B.TrueName as SectionManagerName,UserCycleSec.UCSID,
        case UserInfo.SFZC
        when '0' then '否'
        when '1' then '是'
        else '否' end SFZC,
        UserInfo.UserType,
        CASE when UserInfo.UserType = 4 then '实习生'
        when UserInfo.UserType = 6 then '带教老师'
        when UserInfo.UserType = 1 then '研究生'
        when UserInfo.UserType = 2 then '住院医师'
        when UserInfo.UserType = 5 then '八年制'
        when UserInfo.UserType = 36 then '教学秘书'
        END as UserTypeName
        from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join Section on Section.SecID = CycleSection.SectionID
        left join OutSecBrief on OutSecBrief.CySecID = HosCycleSection.HosCySecID
        and OutSecBrief.UserID = UserCycleSec.UserID
        left join UserRealCycleSec on UserRealCycleSec.RUserID = UserCycleSec.UserID
        and UserRealCycleSec.RHosCySecID = UserCycleSec.HosCySecID
        and UserRealCycleSec.RUCSID = UserCycleSec.UCSID
        left join HospitalInfo on HospitalInfo.HosID=HosSection.HosID
        left join UserRealTec on UserRealTec.HosSecID = HosSection.HosSecID
        AND UserCycleSec.UCSID = UserRealTec.UCSID
        left join UserSectionManager as A on A.StudentID = UserCycleSec.UserID and A.HosSecID = HosSection.HosSecID
        AND UserCycleSec.UCSID = A.UCSID
        left join UserInfo as B on B.UserID = A.SectionManagerID
        left join cycleinfo on cycleinfo.cyid = CycleSection.cyid
        left join UserInfo on UserInfo.UserID = UserCycleSec.UserID
        left join UserInfo as Tec on Tec.UserID = UserRealTec.UserTecID
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        INNER JOIN [Role] on [Role].RoleID = UserInfo.UserType
        where UserInfo.HosID = #{HosID}
        <if test='HosSecID!=null and HosSecID.size()>0'>
            AND HosSection.HosSecID IN
            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                #{tf}
            </foreach>
        </if>
        AND UserCycleSec.StartTime between #{StartTime} and #{EndTime}
        <if test="inProcessType!=null and inProcessType!='' and inProcessType=='Processing'.toString()">
            AND UserRealCycleSec.RStartTime is not null
        </if>
        <if test="inProcessType!=null and inProcessType!='' and inProcessType=='NotProcess'.toString()">
            AND UserRealCycleSec.RStartTime is null
        </if>
        and UserInfo.IsUser = 0 and UserInfo.IsComplete=0)
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (order by T.StartTime desc,UCSID desc)AS Row, T.*
                from (
                    select StartYear,SpName,StartTime,EndTime,RStartTime,REndTime,CheckStatus,TrueName,
                    HosSecName,UserTecID,TecTrueName,SectionManagerID,SectionManagerName,UCSID,SFZC,UserType,UserTypeName
                    from tab
                    where 1=1
                    <if test="searhStr!=''and searhStr!=null">
                        and( TrueName like '%${searhStr}%')
                    </if>
                )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="zhuPeiInfoList" resultType="hashmap">

        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (order by T.SpName,t.CIFlow)AS Row, T.*
                from (
                     select CIFlow, CIRemark,CIAttachPath,CIAttachFileName,CIAttachName,SpName,Role.RoleName
                    from CycleInformation
                    inner join Role on Role.RoleID = CycleInformation.CIUserType
                    left join Specialty on Specialty.SpID = CycleInformation.CISpID
                    where  CIUserType = #{userType}
                )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="internshipList" resultType="hashmap">

        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (order by Name,DateTime DESC)AS Row, T.*
                from (SELECT  ID, NO, Rec_Trainee.Name,
                        Study, Master, Patient, Diagnosis, TecName, CONVERT(varchar(10), isnull(InDateTime,DateTime), 23)  as InDateTime,
                         CONVERT(varchar(10), DateTime, 23) DateTime, UserID, UCSID, DataType,DicCount
                        FROM  Rec_Trainee
                        left join (select COUNT(Name) AS DicCount,Name
                        FROM Rec_Trainee
                        WHERE (UCSID = #{ucsid}) AND (DataType = #{dataType})
                        group by Name) as Temp on Temp.Name  =  Rec_Trainee.Name
                        WHERE (UCSID = #{ucsid}) AND (DataType = #{dataType})

                )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="activityStuList" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (ORDER BY Score DESC,CaDisTime DESC)AS Row, T.*
                from (
                SELECT UserInfo.UserID,FCaDisID,checkStatus,TrueName,CONVERT(varchar(100),CaDisTime,120) CaDisTime,RoleName,
                        Isnull(Score,0) as Score,ISXGH,ISJXDW,ISGFSL,ISMDMQ,CaEndDisTime,CaDisMainSpeakerType,
                        (select UmpireScore from CaseDiscuss
                        where CaDisID = #{caDisID}) as UmpireScore
                        FROM CaseDiscuss
                        LEFT JOIN UserInfo ON UserInfo.UserID = CaseDiscuss.UserID
                        LEFT JOIN UserRole ON UserRole.UserID = UserInfo.UserID
                        LEFT JOIN Role ON Role.RoleID = UserRole.RoleID
                        WHERE FCaDisID = #{caDisID}
                        <if test="searhStr!=''and searhStr!=null">
                            and( TrueName like '%${searhStr}%')
                        </if>
                )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getActivityList" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (ORDER BY CaDisTime DESC)AS Row, T.*
                from (
                        select CaseDiscuss.CaDisID,CaseDiscuss.CaDisMainSpeaker,
                        case CaseDiscuss.CaDisMainSpeakerType
                        WHEN 0 THEN '带教老师'
                        WHEN 1 THEN '轮转学员'
                        WHEN 2 THEN '其他人员'
                        ELSE ''
                        END AS CaDisMainSpeakerType,CaseDiscuss.CaName,DicItem,
                        CONVERT(varchar(100), CaseDiscuss.CaDisTime, 120) CaDisTime ,CONVERT(varchar(100),  CaseDiscuss.CaEndDisTime, 120) CaEndDisTime
                        ,CaseDiscuss.CaAddress,
                        CheckUser.TrueName,CaseDiscuss.UmpireScore
                        from CaseDiscuss
                        left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
                        left join UserInfo as CheckUser  on CheckUser.UserID = CaseDiscuss.Umpire
                        inner join UserInfo on UserInfo.UserID = CaseDiscuss.UserID  WHERE
                        CaEndDisTime between  #{StartTime} and #{EndTime}
                         AND CaseDiscuss.UserID = #{userFlow} AND CaDisMainSpeakerType = 1
                        <if test="searhStr!=''and searhStr!=null">
                            and(
                            CaDisMainSpeaker like '%${searhStr}%'
                            or DicItem   like '%${searhStr}%'
                            or CaseDiscuss.CaName    like '%${searhStr}%'
                            )
                        </if>
        )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getThisTeachers" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (  ORDER BY userName,userFlow)AS Row, T.*
                from (
                    SELECT UserInfo.UserID userFlow,TrueName userName
                    FROM UserInfo
                    left join UserRole on UserRole.UserID = UserInfo.UserID
                    left join [role] on [role].RoleID = UserRole.RoleID
                    left join HosSection on HosSection.HosSecID = UserInfo.SZKS
                    WHERE [role].RoleID = 6
                    and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow})
                    AND HosSection.HosSecId is  NOT NULL
                    AND IsUser = 0
                    <if test="tecID !=null and tecID!=''">
                        and UserInfo.UserID=#{tecID}
                    </if>
                    union
                    SELECT UserInfo.UserID userFlow,TrueName userName
                    FROM UserInfo
                    left join UserRole on UserRole.UserID = UserInfo.UserID
                    left join [role] on [role].RoleID = UserRole.RoleID
                    left join DirectorSection on DirectorSection.UserID = UserInfo.UserID
                    left join HosSection on HosSection.HosSecID = DirectorSection.SecID
                    WHERE [role].RoleID = 6
                    and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow})
                    AND HosSection.HosSecId is  NOT NULL
                    AND IsUser = 0
                    <if test="tecID !=null and tecID!=''">
                        and UserInfo.UserID=#{tecID}
                    </if>
              )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getNotThisTeachers" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (  ORDER BY userName,userFlow)AS Row, T.*
                from (
                    select UserInfo.userid userFlow,TrueName userName
                    from UserInfo
                    left join UserRole on UserRole.UserID = UserInfo.UserID
                    where RoleID = 6
                    <if test="tecID !=null and tecID!=''">
                        and UserInfo.UserID=#{tecID}
                    </if>
              )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getDoctors" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (  order by RStartTime desc,userFlow)AS Row, T.*
                from (
                    select UserInfo.UserID userFlow,TrueName userName,RStartTime
                    from UserRealCycleSec
                    left join UserInfo on UserInfo.UserID = UserRealCycleSec.RUserID
                    left join UserRole on UserRole.UserID = UserInfo.UserID
                    left join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
                    left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
                    left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
                    where  IsUser = 0 and IsComplete = 0 and CONVERT(varchar(12), getdate(), 112) between RStartTime and REndTime
                    and HosSection.HosSecID in (select  b.HosSecID from DirectorSection as a
                    left join HosSection as b on a.SecID = b.HosSecID
                    where a.UserID = #{userFlow}
                    union
                    select HosSecID from HosSection
                    left join UserInfo on UserInfo.SZKS = HosSection.HosSecID
                    WHERE UserInfo.UserID = #{userFlow})

              )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getActivtyDicts" resultType="hashmap">
        select DicItemID,DicItem from DicItem where DicID = 10
    </select>
    <select id="getAppraisalData" resultType="hashmap">
        select  OutSecBrief.UserID,BriefID,BriefRequrie,SecAppraise,SecretaryContent,
        RStartTime,REndTime,HosSecName,OutSecBrief.VerifyState ,TecAppraise,ExamInfoDf
        from  OutSecBrief
        left join  UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
        left join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join ExamInfo on ExamInfo.UCSID = OutSecBrief.UCSID and ExamInfoType = 9
        where OutSecBrief.UCSID = #{ucsid}

    </select>
    <select id="getDayEvalData" resultType="hashmap">
        select  ExamInfoDf
        from  OutSecBrief
        left join  UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
        left join ExamInfo on ExamInfo.UCSID = OutSecBrief.UCSID and ExamInfoType =7
        where OutSecBrief.UCSID = #{ucsid}
    </select>
    <select id="getTeachPlanDetail" resultType="hashmap">
        SELECT CaDisMainSpeakerType CaDisMainSpeakerTypeId,
            CASE CaDisMainSpeakerType
                WHEN 0 THEN '带教老师'
                WHEN 1 THEN '轮转学员'
                WHEN 2 THEN '其他人员'
            ELSE ''
            END AS CaDisMainSpeakerType, CaDisMainSpeaker,HosSection.HosSecName,DicItem,CaName ,
            CONVERT(varchar(100), CaDisTime, 120) CaDisTime ,CONVERT(varchar(100), CaEndDisTime, 120) CaEndDisTime,CaAddress,CaDisContent, CaPeople,
            ISNULL(Temp.CaCount,0) CaCount,CheckStatus,
            CASE CheckStatus
                WHEN 0 THEN '新申请'
                WHEN 1 THEN '已安排'
                WHEN 2 THEN '教学秘书审核通过，等待院系审核'
                WHEN 3 THEN '等待院系审核'
                WHEN 4 THEN '院系审核通过'
                WHEN 5 THEN '审核不通过'
            ELSE '未审核'
            END AS CheckStatusName ,
            SpName,TrueName, StartYear,CaDisID ,CaseDiscuss.CySecID,CaDisPlayClass ,
            CaDisPeriod ,CaDisDes ,CaseDiscuss.UserID,Attach.AttachID,AttachName,
            AttachPath,AttachFileName,AttachGroupID,TecID
            FROM  CaseDiscuss
            LEFT JOIN HosSection on HosSection.HosSecID = CaseDiscuss.HosSecID
            left join UserInfo on UserInfo.UserID = CaseDiscuss.UserID
            left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
            left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
            left join Attach on Attach.AttachGroupID = CaseDiscuss.AttachID
            left join (select COUNT(FCaDisID) as CaCount,FCaDisID from CaseDiscuss
                group by  FCaDisID) as Temp on Temp.FCaDisID = CaseDiscuss.CaDisID
            where CaDisID=#{caDisID}
    </select>
    <select id="getFillInfos" resultType="hashmap">
        select 1, '评价科室' as DataName,
        case COUNT(UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from ExamInfo where UCSID = #{ucsid} and ExamInfoType = 6
        union
        select 2,'评价老师' as  DataName,
        case COUNT(UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from ExamInfo where UCSID = #{ucsid} and ExamInfoType = 0
        union
        select 3,'dops带教评价' as  DataName,
        case COUNT(DOPS_UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from Out_DOPS where Out_DOPS.DOPS_UCSID = #{ucsid} and DOPS_TecID != 0
        union
        select 4,'dops学员评价' as  DataName,
        case COUNT(DOPS_UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from Out_DOPS where Out_DOPS.DOPS_UCSID = #{ucsid} and DOPS_UserID != 0
        union
        select 5,'mini-cex带教评价' as  DataName,
        case COUNT(Mini_UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from Out_Mini_CEX where Out_Mini_CEX.Mini_UCSID = #{ucsid} and Mini_TecID != 0
        union
        select  6,'mini-cex学员评价' as  DataName,
        case COUNT(Mini_UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from Out_Mini_CEX where Out_Mini_CEX.Mini_UCSID = #{ucsid} and Mini_UserID != 0
        union
        select  9,'出科小结申请' as  DataName,
        case COUNT(UCSID)
        when 0 then '未提交' else '已提交' end as DataCount
        from OutSecBrief where UCSID = #{ucsid}

    </select>
    <select id="getLeaveList" resultType="hashmap">
        SELECT * FROM (
              SELECT ROW_NUMBER() OVER (order by SickLeaveTime desc)AS Row, T.*
                from (
                    select TrueName,DicItem,CheckDays,LeaveCause,SickLeaveTime,LEAVEDAYS,CONVERT(varchar(100), LeaveStartTime, 23) LeaveStartTime,
                    CONVERT(varchar(100), LeaveEndTime, 23) LeaveEndTime
                    from leave
                    inner join UserInfo on UserInfo.UserID = leave.UserId
                    inner join Role on Role.RoleID = UserInfo.UserType
                    inner join DicItem on DicItem.DicItemID = leave.LeaveType
                    where 1=1
                    <if test="searhStr!=''and searhStr!=null">
                        and( UserInfo.TrueName like '%${searhStr}%')
                    </if>
                )as T
          ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>

    <select id="readUserInfo" resultType="hashmap">
        SELECT top 1 UserInfo.UserID as userFlow,
        UserInfo.Password as password,
        CASE when Sex = 0 then '女'
        when Sex = 1 then '男'
        END as userSex,
        TrueName as userName,
        UserType as userType,
        UserInfo.HosID as hosID,
        HosQC  as hosQC ,
      	Role.roleId as roleFlow,
      	CASE when Role.roleId = 4 then 'Trainee'
			 when Role.roleId = 6 then 'Teacher'
			 when Role.roleId = 14 then 'Header'
			 when Role.roleId = 1 then 'Trainee'
			 when Role.roleId = 2 then 'Trainee'
			 when Role.roleId = 5 then 'Trainee'
			 when Role.roleId = 36 then 'Secretary'
			 when Role.roleId = 10 then 'Tutor'
	  	END as roleId,
      	CASE when Role.roleId = 4 then '实习生'
			 when Role.roleId = 6 then '带教老师'
			 when Role.roleId = 14 then '科主任'
			 when Role.roleId = 1 then '研究生'
			 when Role.roleId = 2 then '住院医师'
			 when Role.roleId = 5 then '八年制'
			 when Role.roleId = 36 then '教学秘书'
			 when Role.roleId = 10 then '导师'
	  	END as roleName
        FROM UserInfo
        LEFT JOIN UserRole on UserRole.UserID = UserInfo.UserID
        left join Role on Role.RoleID = UserRole.RoleID
        left join HospitalInfo on HospitalInfo.HosID = UserInfo.HosID
        WHERE UserInfo.UserID = #{userFlow}
        order by UserRole.roleId desc
    </select>
    <select id="inProcessFileDetail" resultType="hashmap">
        select *  from S_ReadSecDocument where  ReadSecDocumentId = #{readSecDocumentId}
    </select>
    <select id="getOutInManageDetail" resultType="hashmap">
        Select RoleName,OutSecBrief.UserID,UserInfo.TrueName,TecInfo.TrueName as TecName,SpName,HosSecName,
        CONVERT(varchar(100), RStartTime, 23) as RStartTime,CONVERT(varchar(100), REndTime, 23)  as REndTime,UserCycleSec.CySecID,
        case S_UserReadSecDocument.[STATE]
        when '0' then '否'
        when '1' then '是' end as UserNowState,
        case S_UserReadSecDocument.Eval
        when '' then '未提交'
        when ISNULL(Eval,'') then '已完成'
        else '未提交' end as Eval,
        case OutSecBrief.VerifyState
        when 0 then '待审核'
        when 1 then '已审核'
        when 2 then '已审核'
        else '未提交' end as OutBriefTecState,
        case OutSecBrief.VerifyState
        when 1 then '待审核'
        when 2 then '已审核'
        else '-' end as OutBriefState
        from OutSecBrief
        inner join UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
        inner join UserInfo on UserInfo.UserID  = OutSecBrief.UserID
        left join UserRole on UserRole.UserID = UserInfo.UserID
        left join Role on Role.RoleID = UserRole.RoleID
        left join UserCycleSec on UserCycleSec.UCSID = OutSecBrief.UCSID
        left join HosCycleSection on  HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
        left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
        left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
        inner join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserCycleSec.UCSID
        inner join UserRealTec on UserRealTec.UCSID = UserCycleSec.UCSID
        inner join UserInfo as TecInfo on TecInfo.UserID = UserRealTec.UserTecID
        where OutSecBrief.UCSID = #{ucsid}
    </select>
    <select id="zhuPeiFileDetail" resultType="hashmap">
       select  CIFlow,CIRemark,CIAttachPath,CIAttachFileName,CIAttachName from CycleInformation where  CIFlow =  #{cIFlow}
    </select>
    <select id="deptOrgCost" resultType="hashmap">
       select BEID,BEYear,BECycleHosFlow,BELastYearJSF,BELastYearBT,BELastYearPX,BEYearMoney,BELastYearMoney,
        BEOneJSF,BEOneBT,BEOnePX,BETwoJSF,BETwoBT,BETwoPX,BEThreeJSF,BEThreeBT,BEThreePX,BEFourJSF,BEFourBT,
        BEFourPX,BENowYearMoney,BESYJSF,BESYBT,BESYPX,BETotal,CONVERT(varchar(100), BETime, 120) BETime,CHSName,
        BELastYearJSF+BELastYearBT+BELastYearPX as LastYear,
        BEOneJSF+BEOneBT+BEOnePX as BEOne,
        BETwoJSF+BETwoBT+BETwoPX as BETwo,
        BEThreeJSF+BEThreeBT+BEThreePX as BEThree,
        BEFourJSF+BEFourBT+BEFourPX as BEFour,
        BESYJSF+BESYBT+BESYPX as SyMoney
        FROM BaseExpenses
        inner join CycleHosSection on CycleHosSection.CHSFlow = BaseExpenses.BECycleHosFlow
        where  CycleHosSection.CHSSecretary=#{userFlow}
        and BEYear = #{year}
        order by BEYear desc,CHSName
    </select>
    <select id="getOutProcessStuList" resultType="hashmap">
        SELECT * FROM (
            SELECT ROW_NUMBER() OVER (order by RStartTime DESC,StartTime desc,SpName)AS Row, T.*
            from (
                Select OutSecBrief.UserID,SpName,UserInfo.StartYear,UserInfo.TrueName,HosSecName,OutSecBrief.UCSID ,Role.RoleID
                UserType ,RoleName UserTypeName,TecInfo.UserID UserTecID, TecInfo.TrueName as TecTrueName,
        CONVERT(varchar(100), RStartTime, 23) as RStartTime,CONVERT(varchar(100), REndTime, 23)  as REndTime,
        CONVERT(varchar(100), StartTime, 23) as StartTime,CONVERT(varchar(100), EndTime, 23)  as EndTime,UserCycleSec.CySecID,
                    case S_UserReadSecDocument.[STATE]
                    when '0' then '否'
                    when '1' then '是' end as UserNowState
                from OutSecBrief
                inner join UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
                inner join UserInfo on UserInfo.UserID = OutSecBrief.UserID
                left join UserRole on UserRole.UserID = UserInfo.UserID
                left join Role on Role.RoleID = UserRole.RoleID
                left join UserCycleSec on UserCycleSec.UCSID = OutSecBrief.UCSID
                left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
                left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
                left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
                inner join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserCycleSec.UCSID
                inner join UserRealTec on UserRealTec.UCSID = UserCycleSec.UCSID
                inner join UserInfo as TecInfo on TecInfo.UserID = UserRealTec.UserTecID
                where HosSection.HosSecID in (select b.HosSecID from DirectorSection as a
                    left join HosSection as b on a.SecID = b.HosSecID
                    where a.UserID = #{userFlow}
                    union
                    select HosSecID from HosSection
                    left join UserInfo on UserInfo.SZKS = HosSection.HosSecID
                    WHERE UserInfo.UserID = #{userFlow}
                )
                and UserInfo.IsUser = 0
                and UserInfo.IsComplete=0
                and OutSecBrief.VerifyState = 1
                <if test="searhStr!=''and searhStr!=null">
                    and( UserInfo.TrueName like '%${searhStr}%'
                    or SpName like '%${searhStr}%'
                    or UserInfo.StartYear like '%${searhStr}%'
                    )
                </if>
            )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getTeachPlanList" resultType="hashmap">
        SELECT * FROM (
        SELECT ROW_NUMBER() OVER (order by  CaDisTime desc,CaDisPlayClass,HosSecName)AS Row, T.*
        from (
                SELECT  CASE CaDisMainSpeakerType
                    WHEN 0 THEN '带教老师'
                    WHEN 1 THEN '轮转学员'
                    WHEN 2 THEN '其他人员'
                    ELSE ''
                    END AS CaDisMainSpeakerType,CaDisMainSpeaker,HosSection.HosSecName,DicItem,CaName ,
                CONVERT(varchar(100), CaDisTime, 120) CaDisTime ,
                CONVERT(varchar(100), CaEndDisTime, 120)  CaEndDisTime,CaAddress,CheckStatus,
                CASE CheckStatus
                WHEN 0 THEN '新申请'
                WHEN 1 THEN '已安排'
                WHEN 2 THEN '教学秘书审核通过，等待院系审核'
                WHEN 3 THEN '等待院系审核'
                WHEN 4 THEN '院系审核通过'
                WHEN 5 THEN '审核不通过'
                ELSE '未审核'
                END AS CheckStatusName ,
                CaDisID ,CaseDiscuss.CySecID,CaDisPlayClass ,
                CaDisPeriod ,CaDisDes ,CaseDiscuss.UserID,UmpireScore
                FROM  CaseDiscuss
                LEFT JOIN HosSection on HosSection.HosSecID = CaseDiscuss.HosSecID
                left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
                where 1=1  AND (  CaseDiscuss.HosSecID = 0
                        <if test='HosSecID!=null and HosSecID.size()>0'>
                            or HosSection.HosSecID IN
                            <foreach collection="HosSecID" close=")" item="tf" open="(" separator=",">
                                #{tf}
                            </foreach>
                        </if> or  CaseDiscuss.UserID = #{userFlow})
                AND CaseDiscuss.UserID =#{userFlow}

                <if test="searhStr!=''and searhStr!=null">
                    and(
                        CaDisMainSpeaker like '%${searhStr}%'
                        or DicItem   like '%${searhStr}%'
                        or CaName    like '%${searhStr}%'
                    )
                </if>
            )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getInProcessFileList" resultType="hashmap">
        SELECT * FROM (
        SELECT ROW_NUMBER() OVER (order by  ReadSecDocumentId)AS Row, T.*
        from (
                SELECT DISTINCT  S_ReadSecDocument.ReadSecDocumentId , S_ReadSecDocument.Title,HosSection.HosSecName,RoleName
                FROM    S_ReadSecDocument
                JOIN HosSection ON S_ReadSecDocument.HosSecID = HosSection.HosSecID
                JOIN HospitalInfo ON S_ReadSecDocument.HosId=HospitalInfo.HosID
                left join Role on Role.RoleID = S_ReadSecDocument.UserType
                WHERE HospitalInfo.HosID=#{HosID}
                <if test='HosSecID!=null and HosSecID!=""'>
                    and S_ReadSecDocument.HosSecId  =#{HosSecID}
                </if>
                <if test="searhStr!=''and searhStr!=null">
                    and( S_ReadSecDocument.Title like '%${searhStr}%'
                      or roleName    like '%${searhStr}%'
                      or HosSection.HosSecName    like '%${searhStr}%'
                    )
                </if>
           )as T
        ) TT
        WHERE TT.Row between #{start} and #{end}
    </select>
    <select id="getTeacherList" resultType="hashmap">
		SELECT UserInfo.UserID,TrueName 
		FROM UserInfo 
		left join UserRole on UserRole.UserID = UserInfo.UserID
		left join [role] on [role].RoleID = UserRole.RoleID
		left join HosSection on HosSection.HosSecID = UserInfo.SZKS
		WHERE [role].RoleID = 6 
		and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow} )
		and UserInfo.HosID = #{HosID}
		AND HosSection.HosSecId is  NOT NULL 
		AND IsUser = 0 
		AND ControlTypes like ('%${userType}%')
		union 
		SELECT UserInfo.UserID,TrueName
		FROM UserInfo 
		left join UserRole on UserRole.UserID = UserInfo.UserID
		left join [role] on [role].RoleID = UserRole.RoleID
		left join DirectorSection on DirectorSection.UserID = UserInfo.UserID
		left join HosSection on HosSection.HosSecID = DirectorSection.SecID
		WHERE [role].RoleID = 6  
		and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow} )
		and UserInfo.HosID = #{HosID}
		AND HosSection.HosSecId is  NOT NULL 
		AND IsUser = 0 
		AND ControlTypes like ('%${userType}%')
		ORDER BY TrueName

	</select>
    <select id="getHeadList" resultType="hashmap">
		SELECT UserInfo.UserID,TrueName
		FROM UserInfo
		left join UserRole on UserRole.UserID = UserInfo.UserID
		left join [role] on [role].RoleID = UserRole.RoleID
		left join HosSection on HosSection.HosSecID = UserInfo.SZKS
		WHERE [role].RoleID = 14
		and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow} )
		and UserInfo.HosID = #{HosID}
		AND HosSection.HosSecId is  NOT NULL
		AND IsUser = 0
		union
		SELECT UserInfo.UserID,TrueName
		FROM UserInfo
		left join UserRole on UserRole.UserID = UserInfo.UserID
		left join [role] on [role].RoleID = UserRole.RoleID
		left join DirectorSection on DirectorSection.UserID = UserInfo.UserID
		left join HosSection on HosSection.HosSecID = DirectorSection.SecID
		WHERE [role].RoleID = 14
		and HosSecID in (select SZKS from UserInfo where UserID=#{userFlow} union select SecID from DirectorSection where UserID = #{userFlow} )
		and UserInfo.HosID = #{HosID}
		AND HosSection.HosSecId is  NOT NULL
		AND IsUser = 0
		ORDER BY TrueName

	</select>
    <select id="getSecName" resultType="java.lang.String">
        select SecName from UserCycleSec
        left join CycleSection on CycleSection.CySecID = UserCycleSec.CySecID
        left join Section on Section.SecID = CycleSection.SectionID
        where UCSID = #{ucsid}
    </select>
    <select id="getmbs" resultType="java.util.Map">
    select ExamItemID,ExamItemName,ExamItemMark,ExamItemType
    from ExamItem where  ExamItemType in (#{type})
    </select>
    <select id="getZhEval" resultType="java.util.Map">
        SELECT TrueName AS TecName,isnull(ExamInfoDF,0) ExamInfoDF
        FROM ExamInfo
        JOIN UserInfo ON ExamInfo.KHRID = UserInfo.UserID
        WHERE  UCSID=#{ucsid} And ExamInfoType=#{type}
    </select>
    <select id="getmbEvals" resultType="hashmap">
       select ReqItemID,ExamItem.ExamItemID,ReqItemName from ExamItem
    left join RequestItem on RequestItem.ExamItemID = ExamItem.ExamItemID
    where ExamItemType = #{type}
    <if test="examItemID!=null and examItemID!=''">
        and ExamItem.ExamItemID = #{examItemID}
    </if>
    order by ReqItemID
    </select>
    <select id="getIsAssess" resultType="java.lang.String">
        select IsAssess
        from UserCycleSec
        left join hoscyclesection on hoscyclesection.hoscysecid = UserCycleSec.hoscysecid
        left join hossection on hossection.hossecid = hoscyclesection.hossecid
        left join UserRealCycleSec on UserRealCycleSec.rucsid = UserCycleSec.ucsid
        where UserCycleSec.ucsid = #{ucsid}
    </select>
    <select id="getDopsScore" resultType="java.lang.String">
        select  DOPS_TecScore
        from Out_DOPS
        where DOPS_UCSID= #{ucsid}
    </select>
    <select id="getMiniScore" resultType="java.lang.String">
        select Mini_TecScore
        from Out_Mini_CEX
        where Mini_UCSID= #{ucsid}
    </select>
    <select id="getCycleNum" resultType="java.lang.Integer">
        select count(*) as CycleNum from UserRealCycleSec
        where RUCSID = #{ucsid}
    </select>
    <select id="getInProcessFileNum" resultType="java.lang.Integer">
        select count(1) from S_UserReadSecDocument where UCSID=#{ucsid}
    </select>
    <select id="hasTea" resultType="java.lang.Integer">
        select count(*) from UserRealTec
where UserDipID = #{rUserID} and HosSecID = #{rHosCySecID} and UCSID = #{ucsid}

    </select>
    <select id="getSpeDeptInfo" resultType="hashmap">
        select SpID,SectionID from cyclesection
        left join cycleinfo on cycleinfo.cyid = cyclesection.cyid
        where CySecID = #{rCySecID}
    </select>
    <select id="getActivitydetail" resultType="hashmap">
        select CaseDiscuss.CaDisID,CaseDiscuss.CaDisMainSpeaker,
        case CaseDiscuss.CaDisMainSpeakerType
        WHEN 0 THEN '带教老师'
        WHEN 1 THEN '轮转学员'
        WHEN 2 THEN '其他人员'
        ELSE ''
        END AS CaDisMainSpeakerType,CaseDiscuss.CaName,DicItem,
        CaseDiscuss.CaDisTime , CaseDiscuss.CaEndDisTime,CaseDiscuss.CaAddress,
        CheckUser.TrueName,CaseDiscuss.UmpireScore
        from CaseDiscuss
        left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
        left join UserInfo as CheckUser  on CheckUser.UserID = CaseDiscuss.Umpire
        inner join UserInfo on UserInfo.UserID = CaseDiscuss.UserID
        where CaDisID = #{caDisID}
    </select>
    <select id="getExamTestInfo" resultType="hashmap">
        select DEID,SpecialtyID,SectionID,Examination,ExamName,IsUse,ExamType
        FROM T_DepartmentalExamination
        where  SpecialtyID = #{SpID} and SectionID = #{SectionID} and IsUse = 1
    </select>
</mapper>