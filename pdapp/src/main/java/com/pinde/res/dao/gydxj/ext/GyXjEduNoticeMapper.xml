<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.res.dao.gydxj.ext.GyXjEduNoticeExtMapper">

    <select id="searchByRoles" parameterType="java.lang.String" resultMap="com.pinde.sci.dao.base.EduTeachingnoticeMapper.ResultMapWithBLOBs">
        select et.*
        from edu_teachingnotice et
        where et.record_status = 'Y'
        <if test='infoTypeId!=null and infoTypeId!=""'>
            and et.info_type_id = #{infoTypeId}
        </if>
        <if test='userFlow!=null and userFlow!=""'>
            and (et.INFO_TARGET_FLOW  is null
              or exists(
                select null from sys_user_role sur
                where sur.record_status = 'Y'
                and sur.ROLE_FLOW   = et.INFO_TARGET_FLOW
                and sur.record_status = 'Y'
                and sur.user_flow= #{userFlow} )
            )
        </if>
        order by et.CREATE_TIME DESC
    </select>

    <select id="searchEduUser" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT peu.sid,psu.user_flow,psu.user_name,peu.train_type_name,peu.major_id,peu.major_name,peu.period
          FROM PDSCI.EDU_USER PEU
          INNER JOIN PDSCI.SYS_USER PSU ON PEU.USER_FLOW = PSU.USER_FLOW
          INNER JOIN PDSCI.RES_DOCTOR PDU ON PEU.USER_FLOW = PDU.DOCTOR_FLOW
          WHERE PEU.RECORD_STATUS = 'Y'
            AND pdu.record_status = 'Y'
          <if test='searchStr!=null and searchStr!=""'>
            and (psu.user_name like '%${searchStr}%' or  peu.sid like '%${searchStr}%' or  peu.period like '%${searchStr}%')
          </if>
          <if test='confirmFlag=="Y" and partId=="sz"'>
              and exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id ='DispatchInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
              and exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id ='EmployInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
          </if>
          <if test='confirmFlag=="N" and partId=="sz"'>
              and not exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id ='DispatchInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
              and not exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id ='EmployInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
          </if>
          <if test='confirmFlag=="Y" and partId=="da"'>
              and exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id='DossierInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
          </if>
          <if test='confirmFlag=="N" and partId=="da"'>
              and not exists(select null from Edu_User_Info_Status a where a.record_status='Y' and a.part_id='DossierInfo' and a.part_status='Y' and a.user_flow=peu.user_flow)
          </if>
          <if test='userFlow!=null and userFlow!=""'>
              and peu.user_flow=#{userFlow}
          </if>
          <if test='teacherFlow!=null and teacherFlow!=""'>
              and peu.first_teacher_flow=#{teacherFlow}
          </if>
          ORDER BY peu.period DESC NULLS LAST, peu.sid ASC, peu.create_time ASC
    </select>

    <update id="backConfirm" parameterType="java.lang.String">
        update Edu_User_Info_Status set part_status='N' where record_status='Y' and user_flow=#{userFlow} and part_id=#{partId}
    </update>

    <select id="searchApplyList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT RECORD_FLOW, USER_FLOW, APPLY_TYPE_ID, APPLY_TYPE_NAME, APPLY_TIME ,STATUS_ID, STATUS_NAME,
            xmltype(CONTENT).extract('//auditPerson/text()').getstringval() audit_Person,
            xmltype(CONTENT).extract('//auditDate/text()').getstringval() audit_Date
        FROM PDSCI.EDU_USER_CHANGE_APPLY
        WHERE RECORD_STATUS = 'Y'
        <if test='searchStr!=null and searchStr!=""'>
            and (APPLY_TYPE_ID like '%${searchStr}%' or  apply_type_name like '%${searchStr}%')
        </if>
        <if test='userFlow!=null and userFlow!=""'>
            and USER_FLOW = #{userFlow}
        </if>
        <if test='applyTypeId!=null and applyTypeId!=""'>
            and APPLY_TYPE_ID = #{applyTypeId}
        </if>
        <if test='statusId!=null and statusId!=""'>
            and STATUS_ID = #{statusId}
        </if>
        <if test="typeList!=null and typeList.size>0">
            AND APPLY_TYPE_ID in
            <foreach collection="typeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        ORDER BY APPLY_TIME DESC, CREATE_TIME DESC
    </select>

    <select id="classScheduleList" parameterType="java.lang.String" resultType="java.util.Map">
        select a.record_flow,
            a.course_flow,
            a.class_course_name,
            b.course_credit,
            a.class_period,
            c.class_teacher_name,
            a.classroom_name,
            a.class_order
        from edu_schedule_class a
        left join edu_course b on b.course_flow = a.course_flow
        left join edu_schedule_teacher c on a.record_flow = c.schedule_class_flow and rownum = 1
        where 1=1
        <if test='classTime!=null and classTime!=""'>
            and a.class_time = #{classTime}
        </if>
        <if test='termFlow!=null and termFlow!=""'>
            and a.term_flow = #{termFlow}
        </if>
        <if test='userFlow!=null and userFlow!=""'>
            and exists (select null
              from edu_student_course d
              where d.record_status = 'Y'
                and a.course_flow = d.course_flow
                and d.user_flow = #{userFlow})
        </if>
    </select>

    <select id="getGradeAuditStus" parameterType="java.util.Map" resultType="java.util.Map">
        select a.record_flow,
        b.user_flow,
        b.user_name,
        c.sid,
        a.course_name,
        a.course_type_id,
        a.course_type_name,
        a.course_period,
        a.course_credit,
        a.study_way_id,
        a.study_way_name,
        a.assess_type_id,
        a.assess_type_name,
        a.pacific_grade,
        a.team_end_grade,
        a.course_grade,
        a.grade_term_id,
        a.grade_term_name,
        a.student_Period,
        a.audit_status_id,
        a.audit_status_name,
        d.assume_org_flow,
        d.assume_org_name,
        d.course_code,
        d.course_flow,
        c.train_category_id,
        c.train_category_name,
        a.degree_course_flag,
        a.submit_flag
        from edu_student_course a
        left join sys_user b on a.user_flow = b.user_flow
        left join edu_user c on b.user_flow = c.user_flow
        left join edu_course d on a.course_flow=d.course_flow
        where a.record_status = 'Y'
            and b.record_status = 'Y'
            and c.record_status = 'Y'
            and d.record_status = 'Y'
        <if test='roleId=="Teacher" and submitFlag!="Y"'>
            and (a.role_flag != 'admin' or a.role_flag is null)
            and (a.audit_status_id != 'Passed' or a.audit_status_id is null)
        </if>
        <if test='roleId=="Admin"'>
            <if test='auditFlag=="Y"'>
                and a.audit_status_id is not null
            </if>
            <if test='auditFlag=="N"'>
                and a.submit_flag = 'Y'
                and a.role_flag = 'teachingGroup'
                and a.audit_status_id is null
            </if>
        </if>
        <if test="searchStr!=null and searchStr!=''">
            and (a.course_code like '%${searchStr}%' or a.course_name like '%${searchStr}%' or b.user_Name like '%${searchStr}%')
        </if>
        <if test="recordFlow!=null and recordFlow!=''">
            and a.record_flow=#{recordFlow}
        </if>
        <if test="courseCode!=null and courseCode!=''">
            and a.course_code = #{courseCode}
        </if>
        <if test="courseFlow!=null and courseFlow!=''">
            and a.course_Flow = #{courseFlow}
        </if>
        <if test='submitFlag!=null and submitFlag=="Y"'>
            and a.SUBMIT_FLAG = #{submitFlag}
        </if>
        <if test='submitFlag!=null and submitFlag=="N"'>
            and (a.SUBMIT_FLAG = #{submitFlag} or a.SUBMIT_FLAG is null)
        </if>
    </select>

    <update id="auditGrade" parameterType="java.lang.String">
        update edu_student_course set audit_status_id=#{auditStatusId}
            <if test='auditStatusId=="Passed"'>
                ,audit_status_name='通过'
            </if>
            <if test='auditStatusId=="UnPassed"'>
                ,audit_status_name='不通过'
            </if>
         where record_flow=#{recordFlow}
    </update>

    <select id="searchCourseList" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.EduCourseMapper.BaseResultMap">
        select * from edu_course where record_status='Y'
        <if test='searchStr!=null and searchStr!=""'>
            and (course_code like '%${searchStr}%' or course_name like '%${searchStr}%')
        </if>
        <if test='year!=null and year!=""'>
            and course_session = #{year}
        </if>
        <if test='gradationId!=null and gradationId!=""'>
            and gradation_id = #{gradationId}
        </if>
        <if test='courseCode!=null and courseCode!=""'>
            and course_code = #{courseCode}
        </if>
        ORDER BY course_session, course_code
    </select>

    <select id="searchTermList" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.EduTermMapper.BaseResultMap">
        select * from edu_term where record_status='Y'
        <if test='searchStr!=null and searchStr!=""'>
            and class_name like '%${searchStr}%'
        </if>
        <if test='year!=null and year!=""'>
            and session_number = #{year}
        </if>
        ORDER BY class_id
    </select>

    <select id="searchTutorList" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.NydsOfficialDoctorMapper.BaseResultMap">
        select * from Nyds_Official_Doctor where record_status='Y' and apply_Flag='Y'
        <if test='searchStr!=null and searchStr!=""'>
            and doctor_name like '%${searchStr}%'
        </if>
        ORDER BY APPLY_FLAG DESC,CREATE_TIME DESC
    </select>

    <select id="searchEduCourse" parameterType="java.util.Map" resultType="java.util.Map">
        select distinct * from (
        select a.COURSE_FLOW,a.COURSE_CODE,a.COURSE_NAME,a.COURSE_CREDIT,a.COURSE_PERIOD,a.COURSE_USER_COUNT,(select distinct count(b.user_flow) over(partition by b.course_flow)
            from edu_student_course b where b.record_status = 'Y' and a.course_flow = b.course_flow) selectCount
        from edu_course a
          left join edu_course_major c on a.course_flow=c.course_flow
        where a.record_status='Y'
          and c.record_status='Y'
        <if test='searchStr!=null and searchStr!=""'>
            and (a.course_code like '%${searchStr}%' or a.course_name like '%${searchStr}%')
        </if>
        <if test='role!=null and role=="student"'>
            <if test='studentPeriod!=null and studentPeriod!=""'>
                and c.plan_year = #{studentPeriod}
            </if>
            <if test='allFlag!=null and allFlag!="Y"'>
                <if test='courseTypeId!=null and courseTypeId!=""'>
                    and c.course_type_id = #{courseTypeId}
                </if>
                <if test='majorId!=null and majorId!=""'>
                    and c.major_id = #{majorId}
                </if>
            </if>
        </if>
        <if test='role!=null and role=="teacher"'>
            <if test='allFlag!=null and allFlag!="Y"'>
                <if test='majorId!=null and majorId!=""'>
                    and c.major_id = #{majorId}
                </if>
            </if>
        </if>
        ORDER BY a.course_session desc, a.course_code desc)
    </select>

    <select id="searchChooseCourse" parameterType="java.util.Map" resultType="java.util.Map">
        select distinct course_flow from edu_student_course where record_status='Y'
        <if test='userFlow!=null and userFlow!=""'>
            and user_flow = #{userFlow}
        </if>
    </select>

    <select id="searchStuCourse" parameterType="java.util.Map" resultType="java.util.Map">
        select a.*,(select distinct count(b.user_flow) over(partition by b.course_flow)
            from edu_student_course b where b.record_status = 'Y' and a.course_flow = b.course_flow) selectCount
        from edu_course a
          where a.record_status='Y'
            and exists(select null from edu_student_course b
                where  b.record_status='Y'
                  and a.course_flow=b.course_flow
                <if test='userFlow!=null and userFlow!=""'>
                    and b.user_flow = #{userFlow}
                </if>)
        <if test='studentPeriod!=null and studentPeriod!=""'>
            and a.course_session = #{studentPeriod}
        </if>
    </select>

    <select id="searchStuCourseListByFlow" parameterType="java.lang.String" resultMap="com.pinde.sci.dao.base.EduStudentCourseMapper.BaseResultMap">
       select * from edu_student_course where record_status='Y' and user_flow=#{userFlow}
    </select>

    <select id="searchCourse" resultType="java.util.Map">
        select b.*
        from edu_course_teachingGroup a
        left join edu_course b on a.course_flow = b.course_flow
        where a.record_status = 'Y'
          and b.course_flow is not null
        <if test='userFlow!=null and userFlow!=""'>
            and a.user_flow = #{userFlow}
        </if>
    </select>

    <select id="qryCourseList" resultMap="com.pinde.sci.dao.base.EduCourseMapper.BaseResultMap">
        select a.*
        from edu_course a
        where a.record_status = 'Y'
        <if test='courseCode!=null and courseCode!=""'>
            and a.course_code = #{courseCode}
        </if>
        order by course_session desc
    </select>

    <select id="scheduleCourseList" resultMap="com.pinde.sci.dao.base.EduScheduleClassMapper.BaseResultMap">
        select a.*
        from edu_schedule_class a
        where a.record_status = 'Y'
        <if test='courseFlow!=null and courseFlow!=""'>
            and a.course_flow = #{courseFlow}
        </if>
        order by session_number,class_id,class_time,create_time
    </select>

    <select id="searchStuCourseList" resultMap="com.pinde.sci.dao.base.EduCourseMapper.BaseResultMap">
        select * from edu_course
          where record_status ='Y' and course_flow in
            (select distinct(course_flow) from edu_student_course
              where record_status ='Y'
            <if test='userFlow!=null and userFlow!=""'>
                and user_flow= #{userFlow}
            </if>)
    </select>

    <select id="getApplyUserList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT a.RECORD_FLOW, a.USER_FLOW,c.user_name,b.sid, a.APPLY_TYPE_ID, a.APPLY_TYPE_NAME, a.APPLY_TIME , a.STATUS_ID, a.STATUS_NAME,
        xmltype(a.CONTENT).extract('//auditDate/text()').getstringval() audit_Date
        FROM PDSCI.EDU_USER_CHANGE_APPLY A
        left join edu_user b on a.user_flow=b.user_flow
        left join sys_user c on a.user_flow=c.user_flow
        WHERE a.RECORD_STATUS = 'Y'
          and b.record_status='Y'
          and c.record_status='Y'
        <if test='userFlow!=null and userFlow!=""'>
            and b.first_Teacher_Flow = #{userFlow}
        </if>
        <if test='auditFlag=="Y"'>
            and a.STATUS_ID in('Approve','NotApprove')
        </if>
        <if test='auditFlag=="N"'>
            and a.STATUS_ID='Submit'
        </if>
        <if test="typeList!=null and typeList.size>0">
            AND a.APPLY_TYPE_ID in
            <foreach collection="typeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        ORDER BY a.APPLY_TIME DESC, a.CREATE_TIME DESC
    </select>

    <select id="queryExitCourseFlow" parameterType="java.util.Map" resultType="java.lang.String">
        select distinct a.course_flow
          from edu_student_course a
        where a.record_status='Y'
        <if test='userFlow!=null and userFlow!=""'>
            and a.user_flow = #{userFlow}
        </if>
        <if test="flowList!=null and flowList.size>0">
            and a.course_flow in
            <foreach collection="flowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
    </select>

    <select id="searEduUser" parameterType="java.lang.String" resultMap="com.pinde.sci.dao.base.EduUserMapper.BaseResultMap">
        select * from edu_user where record_status='Y' and bar_code=#{barCode}
    </select>

    <delete id="delStuCourse" parameterType="java.util.Map">
       delete edu_student_course
        where record_status='Y'
        <if test='userFlow!=null and userFlow!=""'>
            and user_flow = #{userFlow}
        </if>
        <if test="flowList!=null and flowList.size>0">
            and course_flow in
            <foreach collection="flowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
    </delete>

    <select id="scheduleCourseList2" resultType="java.util.Map">
        select a.*,
          nvl((select distinct count(1) over(partition by b.course_flow) from edu_student_course b
              where b.record_status = 'Y' and b.course_flow = a.course_flow),0) totle_num,
          nvl((select distinct count(1) over(partition by c.class_flow) from xjgl_sign_class c
             where c.record_status = 'Y' and c.class_flow = a.record_flow),0) join_num
        from edu_schedule_class a
        where a.record_status = 'Y'
        <if test='courseFlow!=null and courseFlow!=""'>
            and a.course_flow = #{courseFlow}
        </if>
        <if test='recordFlow!=null and recordFlow!=""'>
            and a.record_flow = #{recordFlow}
        </if>
        order by session_number,class_id,class_time,create_time
    </select>

    <select id="qryCourseList2" parameterType="java.util.Map" resultType="java.util.Map">
        select a.*,
        nvl((select distinct count(1) from edu_schedule_class b
            where b.record_status = 'Y'
            <if test='classTime!=null and classTime!=""'>
                and b.class_time <![CDATA[ <= ]]> #{classTime}
            </if>
              and b.course_flow = a.course_flow),0) end_num,
        nvl((select distinct count(1) from edu_schedule_class c
            where c.record_status = 'Y'
              and c.course_flow = a.course_flow),0) totle_num
        from edu_course a
        where a.record_status = 'Y'
        <if test='courseCode!=null and courseCode!=""'>
            and a.course_code = #{courseCode}
        </if>
        order by course_session desc
    </select>

    <select id="searchSignUserList" parameterType="java.util.Map" resultType="java.util.Map">
        select distinct b.user_flow,b.user_name,c.sid,c.train_type_name from sys_user b
        left join xjgl_sign_class a on a.user_flow=b.user_flow
        left join edu_user c on c.user_flow=b.user_flow
        where b.record_status='Y'
          and c.record_status='Y'
        <if test='signFlag=="Y"'>
            and a.record_status='Y'
            and a.class_flow=#{recordFlow}
        </if>
        <if test='signFlag=="N"'>
            and exists(
              select null from edu_student_course d where d.record_status='Y' and d.user_flow=b.user_flow and d.course_flow=(select course_flow from edu_schedule_class where record_flow=#{recordFlow})
            )
            and not exists(select null from xjgl_sign_class e where b.user_flow=e.user_flow and e.class_flow=#{recordFlow})
        </if>
        order by c.sid desc
    </select>

    <select id="courseByYear" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from edu_course where record_status='Y' and course_session=#{courseSession}
    </select>

    <select id="termByYear" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from edu_term where record_status='Y' and session_number=#{sessionNumber}
    </select>

</mapper>