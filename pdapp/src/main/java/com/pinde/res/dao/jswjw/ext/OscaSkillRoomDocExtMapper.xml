<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.res.dao.jswjw.ext.OscaSkillRoomDocExtMapper">
	<select id="getOscaSkillRoomDocByDoc" parameterType="string" resultMap="com.pinde.sci.dao.base.OscaSkillRoomDocMapper.BaseResultMap">
		SELECT *
	   FROM OSCA_SKILL_ROOM_DOC OSRD
	  WHERE OSRD.RECORD_STATUS = 'Y'
		AND OSRD.DOCTOR_FLOW = #{userFlow}
		AND OSRD.CLINICAL_FLOW = #{clinicalFlow}
		AND OSRD.STATION_FLOW = #{stationFlow}
	</select>
	<select id="getDocStationAllScore" parameterType="map" resultType="java.util.HashMap">
        SELECT B.DOCTOR_FLOW,
               B.CLINICAL_FLOW,
               B.STATION_FLOW,
               TO_CHAR(CASE
                         WHEN COUNT(B.PARTNER_FLOW) = 0 THEN
                          0
                         ELSE
                          ROUND(SUM(STATION_ALL_SCORE) / COUNT(B.PARTNER_FLOW), 2)
                       END) AS STATION_AVG_SCORE
          FROM (SELECT A.DOCTOR_FLOW,
                       A.CLINICAL_FLOW,
                       A.STATION_FLOW,
                       A.PARTNER_FLOW,
                       TO_CHAR(CASE
                                 WHEN COUNT(A.FROM_FLOW) = 0 THEN
                                  0
                                 ELSE
                                  round(SUM(A.FROM_EXAM_SCORE) / COUNT(A.FROM_FLOW), 2)
                               END) AS STATION_ALL_SCORE
                   FROM (SELECT T.DOCTOR_FLOW,
                                T.CLINICAL_FLOW,
                                T.STATION_FLOW,
                                T.PARTNER_FLOW,
                                T.EXAM_SCORE,
                                T.IS_HAVE_FROM,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   'NOFROMFLOW'
                                  ELSE
                                   T.FROM_FLOW
                                END FROM_FLOW,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   100
                                  ELSE
                                   to_number(T.FROM_SCORE)
                                END FROM_SCORE,
                                S.STATION_SCORE,
                               NVL(
                                       (CASE WHEN T.FROM_FLOW IS NULL THEN T.EXAM_SCORE ELSE to_char((T.EXAM_SCORE / T.FROM_SCORE) * STATION_SCORE) END), 0
                                ) FROM_EXAM_SCORE
                           FROM OSCA_SKILL_DOC_SCORE T
                           LEFT JOIN OSCA_SUBJECT_STATION S
                             ON T.STATION_FLOW = S.STATION_FLOW
                          WHERE T.DOCTOR_FLOW = #{doctorFlow}
							   AND T.CLINICAL_FLOW = #{clinicalFlow}
							   AND T.STATION_FLOW = #{stationFlow}
							   AND T.RECORD_STATUS = 'Y'
							   AND T.STATUS_ID = 'Submit') A
                  GROUP BY A.DOCTOR_FLOW,
                           A.CLINICAL_FLOW,
                           A.STATION_FLOW,
                           A.PARTNER_FLOW) B
          GROUP BY B.DOCTOR_FLOW, B.CLINICAL_FLOW, B.STATION_FLOW
	</select>
	<select id="getDocStationAllSaveScore" parameterType="map" resultType="java.util.HashMap">
        SELECT B.DOCTOR_FLOW,
               B.CLINICAL_FLOW,
               B.STATION_FLOW,
               TO_CHAR(CASE
                         WHEN COUNT(B.PARTNER_FLOW) = 0 THEN
                          0
                         ELSE
                          ROUND(SUM(STATION_ALL_SCORE) / COUNT(B.PARTNER_FLOW), 2)
                       END) AS STATION_AVG_SCORE
          FROM (SELECT A.DOCTOR_FLOW,
                       A.CLINICAL_FLOW,
                       A.STATION_FLOW,
                       A.PARTNER_FLOW,
                       TO_CHAR(CASE
                                 WHEN COUNT(A.FROM_FLOW) = 0 THEN
                                  0
                                 ELSE
                                  round(SUM(A.FROM_EXAM_SCORE) / COUNT(A.FROM_FLOW), 2)
                               END) AS STATION_ALL_SCORE
                   FROM (SELECT T.DOCTOR_FLOW,
                                T.CLINICAL_FLOW,
                                T.STATION_FLOW,
                                T.PARTNER_FLOW,
                                T.EXAM_SCORE,
                                T.IS_HAVE_FROM,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   'NOFROMFLOW'
                                  ELSE
                                   T.FROM_FLOW
                                END FROM_FLOW,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   100
                                  ELSE
                                   to_number(T.FROM_SCORE)
                                END FROM_SCORE,
                                S.STATION_SCORE,
                                NVL((T.EXAM_SCORE / CASE
                                      WHEN T.FROM_FLOW IS NULL THEN
                                       100
                                      ELSE
                                       to_number(T.FROM_SCORE)
                                    END) * STATION_SCORE,
                                    0) FROM_EXAM_SCORE
                           FROM OSCA_SKILL_DOC_SCORE T
                           LEFT JOIN OSCA_SUBJECT_STATION S
                             ON T.STATION_FLOW = S.STATION_FLOW
                          WHERE T.DOCTOR_FLOW = #{doctorFlow}
							   AND T.CLINICAL_FLOW = #{clinicalFlow}
							   AND T.STATION_FLOW = #{stationFlow}
							   AND T.RECORD_STATUS = 'Y'
							   AND T.STATUS_ID in('Submit','Save')) A
                  GROUP BY A.DOCTOR_FLOW,
                           A.CLINICAL_FLOW,
                           A.STATION_FLOW,
                           A.PARTNER_FLOW) B
          GROUP BY B.DOCTOR_FLOW, B.CLINICAL_FLOW, B.STATION_FLOW
	</select>
	<select id="getDocStationAllSaveScoreByParenterFlow" parameterType="map" resultType="java.util.HashMap">
        SELECT A.DOCTOR_FLOW,
                       A.CLINICAL_FLOW,
                       A.STATION_FLOW,
                       A.PARTNER_FLOW,
                       TO_CHAR(CASE
                                 WHEN COUNT(A.FROM_FLOW) = 0 THEN
                                  0
                                 ELSE
                                  round(SUM(A.FROM_EXAM_SCORE) / COUNT(A.FROM_FLOW), 2)
                               END) AS STATION_AVG_SCORE
                   FROM (SELECT T.DOCTOR_FLOW,
                                T.CLINICAL_FLOW,
                                T.STATION_FLOW,
                                T.PARTNER_FLOW,
                                T.EXAM_SCORE,
                                T.IS_HAVE_FROM,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   'NOFROMFLOW'
                                  ELSE
                                   T.FROM_FLOW
                                END FROM_FLOW,
                                CASE
                                  WHEN T.FROM_FLOW IS NULL THEN
                                   100
                                  ELSE
                                   to_number(T.FROM_SCORE)
                                END FROM_SCORE,
                                S.STATION_SCORE,
                                NVL((T.EXAM_SCORE / CASE
                                      WHEN T.FROM_FLOW IS NULL THEN
                                       100
                                      ELSE
                                       to_number(T.FROM_SCORE)
                                    END) * STATION_SCORE,
                                    0) FROM_EXAM_SCORE
                           FROM OSCA_SKILL_DOC_SCORE T
                           LEFT JOIN OSCA_SUBJECT_STATION S
                             ON T.STATION_FLOW = S.STATION_FLOW
                          WHERE T.DOCTOR_FLOW = #{doctorFlow}
							   AND T.CLINICAL_FLOW = #{clinicalFlow}
							   AND T.STATION_FLOW = #{stationFlow}
							   AND T.PARTNER_FLOW = #{userFlow}
							   AND T.RECORD_STATUS = 'Y'
							   AND T.STATUS_ID in('Submit','Save')) A
                  GROUP BY A.DOCTOR_FLOW,
                           A.CLINICAL_FLOW,
                           A.STATION_FLOW,
                           A.PARTNER_FLOW
	</select>

    <select id="getOscaNotSubmitInfo"  resultMap="com.pinde.sci.dao.base.OscaTeaScanDocMapper.BaseResultMap">
        SELECT *
        FROM OSCA_TEA_SCAN_DOC OSRD
        WHERE
        OSRD.RECORD_STATUS='Y'
        and status_id in ('StayAssessment','NotSubmit')
        and exists (
        select 1 from osca_skill_doc_score osds
        where osds.doctor_flow=osrd.doctor_flow
        and osds.partner_flow=osrd.partner_flow
        and status_id='Save'
        and osds.record_status='Y'
        )
        and exists (
        select 1 from osca_doctor_assessment oda
        where oda.record_status='Y'
        and oda.clinical_flow=osrd.clinical_flow
        and oda.doctor_flow=osrd.doctor_flow
        and audit_status_id='Passed'
        and to_char(to_date(oda.EXAM_END_TIME, 'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd')
          <![CDATA[<]]> to_char(sysdate,'yyyy-mm-dd')
        )
        and create_time >='20180000000000'
        and partner_flow !='09111756695e44edb1406b01a4af4238'
        order by doctor_flow,partner_flow
    </select>
</mapper>