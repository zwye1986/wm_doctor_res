<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.res.dao.bengyify.ext.BengyifyTeacherMapper">
  	<resultMap id="doctorMap" type="hashmap">
        <result column="UCSID"  property="UCSID" javaType="java.lang.String"/>
        <result column="TrueName"  property="TrueName" javaType="java.lang.String"/>
        <result column="RStartTime"  property="RStartTime" javaType="java.lang.String"/>
        <result column="REndTime"  property="REndTime" javaType="java.lang.String"/>
        <result column="schStatusId"  property="schStatusId" javaType="java.lang.String"/>
        <result column="schStatusDesc"  property="schStatusDesc" javaType="java.lang.String"/>
   	</resultMap>

	<select id="getDoctorListEntering" resultMap="doctorMap">
      SELECT * FROM (
          SELECT ROW_NUMBER() OVER (order by T.RStartTime)AS Row, T.*
          from (
          	select UserInfo.TrueName,CONVERT(varchar(100), RStartTime, 23) as RStartTime,CONVERT(varchar(100), REndTime, 23) as REndTime,UserRealCycleSec.RUCSID as UCSID,'Entering' as schStatusId,'轮转中' as schStatusDesc
			from UserRealTec
			left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserRealTec.UCSID
			left join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserRealCycleSec.RUCSID
			left join UserInfo on UserInfo.UserID = UserRealTec.UserDipID
			left join OutSecBrief on OutSecBrief.UCSID = UserRealCycleSec.RUCSID
			where UserTecID = #{userFlow} and S_UserReadSecDocument.State = 1 and (CheckStatus is null or CheckStatus=0)
			and (UserInfo.UserType = 1 or UserInfo.UserType = 2 or UserInfo.UserType = 4 or UserInfo.UserType = 5)
			<if test='doctorName!=null and doctorName!=""'>
              and UserInfo.TrueName like '%${doctorName}%'
          	</if>
			)as T
          ) TT
      WHERE TT.Row between #{start} and #{end}
      ORDER BY RStartTime
  </select>

  <select id="getDoctorListNotEntered" resultMap="doctorMap">
      SELECT * FROM (
          SELECT ROW_NUMBER() OVER (order by T.RStartTime)AS Row, T.*
          from (
          	select UserInfo.TrueName,CONVERT(varchar(100), RStartTime, 23) as RStartTime,CONVERT(varchar(100), REndTime, 23) as REndTime,UserRealCycleSec.RUCSID as UCSID,'NotEntered' as schStatusId,'待入科' as schStatusDesc
			from UserRealTec
			left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserRealTec.UCSID
			left join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserRealCycleSec.RUCSID
			left join UserInfo on UserInfo.UserID = UserRealTec.UserDipID
			where UserTecID = #{userFlow} and S_UserReadSecDocument.State = 0
	  and (UserInfo.UserType = 1 or UserInfo.UserType = 2 or UserInfo.UserType = 4 or UserInfo.UserType = 5)
			<if test='doctorName!=null and doctorName!=""'>
              and UserInfo.TrueName like '%${doctorName}%'
          	</if>
			)as T
          ) TT
      WHERE TT.Row between #{start} and #{end}
      ORDER BY RStartTime
  </select>

  <select id="getDoctorListExited" resultMap="doctorMap">
      SELECT * FROM (
          SELECT ROW_NUMBER() OVER (order by T.RStartTime)AS Row, T.*
          from (
          	select UserInfo.TrueName,CONVERT(varchar(100), RStartTime, 23) as RStartTime,CONVERT(varchar(100), REndTime, 23) as REndTime,UserRealCycleSec.RUCSID as UCSID,'Exited' as schStatusId,'已出科' as schStatusDesc
			from UserRealTec
			left join UserRealCycleSec on UserRealCycleSec.RUCSID = UserRealTec.UCSID
			left join S_UserReadSecDocument on S_UserReadSecDocument.UCSID = UserRealCycleSec.RUCSID
			left join UserInfo on UserInfo.UserID = UserRealTec.UserDipID
			left join OutSecBrief on OutSecBrief.UCSID = UserRealCycleSec.RUCSID
			where UserTecID = #{userFlow} and S_UserReadSecDocument.State = 1 and CheckStatus = 1
	  and (UserInfo.UserType = 1 or UserInfo.UserType = 2 or UserInfo.UserType = 4 or UserInfo.UserType = 5)
			<if test='doctorName!=null and doctorName!=""'>
              and UserInfo.TrueName like '%${doctorName}%'
          	</if>
			)as T
          ) TT
      WHERE TT.Row between #{start} and #{end}
      ORDER BY RStartTime
  </select>

  <resultMap id="deptStatusMap" type="hashmap">
        <result column="DeptStatusId"  property="DeptStatusId" javaType="java.lang.String"/>
        <result column="DeptStatusDesc"  property="DeptStatusDesc" javaType="java.lang.String"/>
  </resultMap>

  <select id="readDoctorDeptStatus" resultMap="deptStatusMap">
      select State as DeptStatusId,
      	CASE when State = 0 then '未确认'
			  when State = 1 then '已确认'
	  	end as DeptStatusDesc
      from S_UserReadSecDocument
	  where URSD_ID = (select URSD_ID from S_UserReadSecDocument where UCSID = #{doctorFlow})
  </select>

  <resultMap id="doctorInfoMap" type="hashmap">
        <result column="TrueName"  property="TrueName" javaType="java.lang.String"/>
        <result column="SpName"  property="SpName" javaType="java.lang.String"/>
        <result column="HosSecName"  property="HosSecName" javaType="java.lang.String"/>
        <result column="StartTime"  property="StartTime" javaType="java.lang.String"/>
        <result column="EndTime"  property="EndTime" javaType="java.lang.String"/>
  </resultMap>

  <select id="readDoctorInfo" resultMap="doctorInfoMap">
      	select  TrueName,SpName, HosSecName,
		CONVERT(varchar(100), StartTime, 23) as StartTime,
		CONVERT(varchar(100), EndTime, 23) as EndTime
		from UserCycleSec
		left join userinfo on userinfo.userid = UserCycleSec.UserID
		left join HosCycleSection on HosCycleSection.HosCySecID = UserCycleSec.HosCySecID
		left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
		left join Specialty on Specialty.SpID = UserInfo.SpecialtyID
		where UCSID = #{doctorFlow}
  </select>

  <update id="enterDeptConfirm">
      	update S_UserReadSecDocument set State = 1 where URSD_ID =  (select URSD_ID from S_UserReadSecDocument where UCSID = #{doctorFlow})
  </update>

  <resultMap id="evalInfoMap" type="hashmap">
        <result column="Eval"  property="Eval" javaType="java.lang.String"/>
  </resultMap>

  <select id="readEvalInfo" resultMap="evalInfoMap">
      	select Eval from S_UserReadSecDocument  where UCSID = #{doctorFlow}
  </select>

  <update id="saveEvalInfo">
      	Update S_UserReadSecDocument set Eval = #{eval} where UCSID = #{doctorFlow}
  </update>

  <resultMap id="activeMap" type="hashmap">
        <result column="CaDisID"  property="CaDisID" javaType="java.lang.String"/>
        <result column="CaDisTime"  property="CaDisTime" javaType="java.lang.String"/>
        <result column="CaEndDisTime"  property="CaEndDisTime" javaType="java.lang.String"/>
        <result column="CaName"  property="CaName" javaType="java.lang.String"/>
        <result column="SCaDisID"  property="SCaDisID" javaType="java.lang.String"/>
        <result column="CaDisContent"  property="CaDisContent" javaType="java.lang.String"/>
        <result column="Score"  property="Score" javaType="java.lang.String"/>
        <result column="CaDisMainSpeaker"  property="CaDisMainSpeaker" javaType="java.lang.String"/>
        <result column="CaAddress"  property="CaAddress" javaType="java.lang.String"/>
        <result column="DicItem"  property="DicItem" javaType="java.lang.String"/>
        <result column="Ismdmq"  property="Ismdmq" javaType="java.lang.String"/>
        <result column="Isgfsl"  property="Isgfsl" javaType="java.lang.String"/>
        <result column="Isjxdw"  property="Isjxdw" javaType="java.lang.String"/>
        <result column="Isxgh"  property="Isxgh" javaType="java.lang.String"/>
  </resultMap>

  <select id="getActives" resultMap="activeMap">
      	SELECT * FROM (
			SELECT ROW_NUMBER() OVER (order by T.CaDisTime)AS Row, T.*
			from (
				select CaseDiscuss.CaDisID,CaseDiscuss.CaDisTime,CaseDiscuss.CaEndDisTime,
				CaseDiscuss.CaName,
				case isnull(SCaseDiscuss.CaDisID,0)
				when 0  THEN '未参加' else '参加' end SCaDisID,isnull(SCaseDiscuss.Score,0) as Score,
				CaseDiscuss.CaDisMainSpeaker
				from  CaseDiscuss
				left join CaseDiscussTec on CaseDiscussTec.CaDisID = CaseDiscuss.CaDisID
				left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
				left join CaseDiscuss as SCaseDiscuss on SCaseDiscuss.FCaDisID = CaseDiscuss.CaDisID
				and SCaseDiscuss.UserID = (select UserID from UserCycleSec where UCSID = #{doctorFlow})
				left join Attach on Attach.AttachGroupID = CaseDiscuss.AttachID
				where CaseDiscuss.FCaDisID is null
				AND CaseDiscuss.CheckStatus = 4
				AND SCaseDiscuss.UCSID = #{doctorFlow}
				AND SCaseDiscuss.score > 0
			) as  T
		) TT
	    WHERE TT.Row between #{start} and #{end}
	    ORDER BY CaDisTime
  </select>

  <select id="readActivity" resultMap="activeMap">
      	SELECT CaseDiscuss.CaDisID, CaseDiscuss.CaDisMainSpeaker, DicItem,
      		CaseDiscuss.CaDisContent, CaseDiscuss.CaDisTime, CaseDiscuss.CaEndDisTime,
      		CaseDiscuss.CaAddress, CaseDiscuss.CaName,
			CASE CaseDiscuss.CaDisMainSpeakerType WHEN 0 THEN '带教老师' WHEN 1 THEN '轮转学员' WHEN 2 THEN '其他人员' ELSE NULL END AS CaDisMainSpeakerType,
			CASE isnull(SCaseDiscuss.CaDisID, 0) WHEN 0 THEN '未参加' ELSE '参加' END AS SCaDisID
			, SCaseDiscuss.Score, SCaseDiscuss.Ismdmq,
			SCaseDiscuss.Isgfsl, SCaseDiscuss.Isjxdw,
			SCaseDiscuss.Isxgh
		FROM CaseDiscuss
			LEFT JOIN CaseDiscussTec ON CaseDiscussTec.CaDisID = CaseDiscuss.CaDisID
			LEFT JOIN DicItem ON DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
			LEFT JOIN CaseDiscuss SCaseDiscuss ON SCaseDiscuss.FCaDisID = CaseDiscuss.CaDisID
				AND SCaseDiscuss.UserID = (select UserID from UserCycleSec where UCSID = #{doctorFlow})
			LEFT JOIN Attach ON Attach.AttachGroupID = CaseDiscuss.AttachID
		WHERE CaseDiscuss.CaDisID = #{dataFlow}
  </select>

  <resultMap id="outSecBriefMap" type="hashmap">
        <result column="UserID"  property="UserID" javaType="java.lang.String"/>
        <result column="BriefID"  property="BriefID" javaType="java.lang.String"/>
        <result column="BriefRequrie"  property="BriefRequrie" javaType="java.lang.String"/>
        <result column="GainsDefect"  property="GainsDefect" javaType="java.lang.String"/>
        <result column="SecAppraise"  property="SecAppraise" javaType="java.lang.String"/>
        <result column="SecretaryContent"  property="SecretaryContent" javaType="java.lang.String"/>
        <result column="HosSecName"  property="HosSecName" javaType="java.lang.String"/>
        <result column="VerifyState"  property="VerifyState" javaType="java.lang.String"/>
        <result column="CheckStatus"  property="CheckStatus" javaType="java.lang.String"/>
  </resultMap>

  <select id="readOutSecBrief" resultMap="outSecBriefMap">
  	select  UserID,BriefID,BriefRequrie,GainsDefect,SecAppraise,SecretaryContent,HosSecName,OutSecBrief.VerifyState,CheckStatus
		from  OutSecBrief
		left join  UserRealCycleSec on UserRealCycleSec.RUCSID = OutSecBrief.UCSID
		left join HosCycleSection on HosCycleSection.HosCySecID = UserRealCycleSec.RHosCySecID
		left join HosSection on HosSection.HosSecID = HosCycleSection.HosSecID
	where UCSID = #{doctorFlow}
  </select>

  <update id="saveOutSecBrief">
   	Update OutSecBrief set
    	BriefRequrie = #{BriefRequrie} ,
    	GainsDefect = #{GainsDefect} ,
    	SecAppraise = #{SecAppraise} ,
    	TecUserID = #{userFlow} ,
    	TecCheckDate = getdate() ,
    	VerifyState = 1
   	where UCSID = #{doctorFlow}
  </update>

  <resultMap id="cycleOutSectionRecordMap" type="hashmap">
        <result column="UserID"  property="UserID" javaType="java.lang.String"/>
        <result column="UCSID"  property="UCSID" javaType="java.lang.String"/>
        <result column="TeacherID"  property="TeacherID" javaType="java.lang.String"/>
        <result column="TecComment"  property="TecComment" javaType="java.lang.String"/>
        <result column="TecDate"  property="TecDate" javaType="java.lang.String"/>
        <result column="ExamineMark"  property="ExamineMark" javaType="java.lang.String"/>
        <result column="AssessmentMark"  property="AssessmentMark" javaType="java.lang.String"/>
        <result column="AttendanceDay"  property="AttendanceDay" javaType="java.lang.String"/>
        <result column="SickLeaveDay"  property="SickLeaveDay" javaType="java.lang.String"/>
        <result column="AbsenteeismDay"  property="AbsenteeismDay" javaType="java.lang.String"/>
        <result column="VerifyState"  property="VerifyState" javaType="java.lang.String"/>
  </resultMap>

  <select id="readCycleOutSectionRecord" resultMap="cycleOutSectionRecordMap">
  	select  UserID ,UCSID ,TeacherID ,TecComment ,TecDate ,ExamineMark ,AssessmentMark ,
		AttendanceDay,SickLeaveDay,AbsenteeismDay,VerifyState
	from CycleOutSectionRecord_NF
	where UCSID = #{doctorFlow}
  </select>

  <insert id="addCycleOutSectionRecord" parameterType="map">
   	INSERT INTO CycleOutSectionRecord_NF
	(
		UserID ,
		UCSID ,
		ExamInfoID,
		TeacherID ,
		TecComment ,
		TecDate ,
		ExamineMark ,
		AssessmentMark ,
		AttendanceDay,
		SickLeaveDay,
		AbsenteeismDay,
		VerifyState
	)
	VALUES
	(
		(select UserID from UserCycleSec where UCSID = #{doctorFlow} ),
		#{doctorFlow}  ,
		#{ExamInfoID}  ,
		#{userFlow} ,
		#{SecAppraise} ,
		getdate() ,
		0 ,
		#{AssessmentMark} ,
		0,
		#{SickLeaveDay},
		#{AbsenteeismDay},
		1
	)
  </insert>

  <update id="modCycleOutSectionRecord" parameterType="map">
   	UPDATE  CycleOutSectionRecord_NF SET
		AssessmentMark=#{AssessmentMark}  ,
		SickLeaveDay=#{SickLeaveDay}  ,
		AbsenteeismDay=#{AbsenteeismDay} ,
		TeacherID=#{userFlow} ,
		TecDate=getdate(),
		TecComment=#{SecAppraise}
	WHERE UCSID = #{doctorFlow}
  </update>

  <resultMap id="examInfoMap" type="hashmap">
        <result column="ExamInfoDF"  property="ExamInfoDF" javaType="java.lang.Integer"/>
  </resultMap>

  <select id="readExamInfo" resultMap="examInfoMap">
  	select top 1 ExamInfoDF from ExamInfo
	where ExamInfoType = #{examInfoType} and UCSID = #{doctorFlow}
  </select>

  <resultMap id="marksMap" type="hashmap">
        <result column="ExamInfoID"  property="ExamInfoID" javaType="java.lang.String"/>
        <result column="ReqItemID"  property="ReqItemID" javaType="java.lang.String"/>
        <result column="MarkDF"  property="MarkDF" javaType="java.lang.String"/>
  </resultMap>

  <select id="getMarks" resultMap="marksMap">
  	select ExamInfo.ExamInfoID,ReqItemID,MarkDF from ExamInfo
		left join Mark on Mark.ExamInfoID = ExamInfo.ExamInfoID
	where ExamInfoType = #{examInfoType} and UCSID = #{doctorFlow}
  </select>

  <insert id="addExamInfo" parameterType="map" useGeneratedKeys="true" keyProperty="ExamInfoID">
  	INSERT INTO ExamInfo
	(
		ExamInfoType,
		UserID,
		ExamInfoKHSJ,
		ExamInfoDF,
		KHRID,
		UCSID)
	VALUES
	(
		#{examInfoType},
		(select UserID from UserCycleSec where UCSID = #{doctorFlow} ),
		getdate(),
		#{total_score},
		#{userFlow} ,
		#{doctorFlow}
	)
  </insert>

  <insert id="addMark" parameterType="map">
  	INSERT INTO Mark
  	(
  		ExamInfoID,
  		ReqItemID,
  		MarkDF
  	)
	VALUES
	(
		#{ExamInfoID},
		#{ReqItemID},
		#{MarkDF}
	)
  </insert>

  <update id="modExamInfo" parameterType="map">
  	UPDATE ExamInfo SET ExamInfoDF=#{total_score}
	WHERE ExamInfoID=(select ExamInfoID from ExamInfo where ExamInfoType = #{examInfoType} and UCSID = #{doctorFlow} )
  </update>

  <update id="modMark" parameterType="map">
  	UPDATE Mark SET MarkDF=#{MarkDF} WHERE ReqItemID=#{ReqItemID}
	AND ExamInfoID=(select ExamInfoID from ExamInfo where ExamInfoType = #{examInfoType} and UCSID = #{doctorFlow} )
  </update>

  <resultMap id="outDopsMap" type="hashmap">
  	<result column="DOPS_ID"  property="DOPS_ID" javaType="java.lang.String"/>
	<result column="DOPS_UCSID"  property="DOPS_UCSID" javaType="java.lang.String"/>
	<result column="DOPS_TecType"  property="DOPS_TecType" javaType="java.lang.String"/>
	<result column="DOPS_Time"  property="DOPS_Time" javaType="java.lang.String"/>
	<result column="DOPS_Address"  property="DOPS_Address" javaType="java.lang.String"/>
	<result column="DOPS_Name"  property="DOPS_Name" javaType="java.lang.String"/>
	<result column="DOPS_Age"  property="DOPS_Age" javaType="java.lang.String"/>
	<result column="DOPS_Sex"  property="DOPS_Sex" javaType="java.lang.String"/>
	<result column="DOPS_PType"  property="DOPS_PType" javaType="java.lang.String"/>
	<result column="DOPS_PDiagnosis"  property="DOPS_PDiagnosis" javaType="java.lang.String"/>
	<result column="DOPS_Operate"  property="DOPS_Operate" javaType="java.lang.String"/>
	<result column="DOPS_Num"  property="DOPS_Num" javaType="java.lang.String"/>
	<result column="DOPS_Level"  property="DOPS_Level" javaType="java.lang.String"/>
	<result column="DOPS_ReviewTime"  property="DOPS_ReviewTime" javaType="java.lang.String"/>
	<result column="DOPS_Feedback"  property="DOPS_Feedback" javaType="java.lang.String"/>
	<result column="DOPS_TecScore"  property="DOPS_TecScore" javaType="java.lang.String"/>
	<result column="DOPS_TecMessage"  property="DOPS_TecMessage" javaType="java.lang.String"/>
	<result column="DOPS_StuScore"  property="DOPS_StuScore" javaType="java.lang.String"/>
	<result column="DOPS_UserID"  property="DOPS_UserID" javaType="java.lang.String"/>
	<result column="DOPS_State"  property="DOPS_State" javaType="java.lang.Integer"/>
	<result column="DOPS_TecID"  property="DOPS_TecID" javaType="java.lang.String"/>
	<result column="DOPS_PTypeState"  property="DOPS_PTypeState" javaType="java.lang.String"/>
  </resultMap>

  <select id="readOutDops" resultMap="outDopsMap">
	 select top 1
		DOPS_ID,DOPS_UCSID,DOPS_TecType,DOPS_Time,DOPS_Address,DOPS_Name,DOPS_Age,DOPS_Sex,DOPS_PType,DOPS_PDiagnosis,DOPS_Operate,DOPS_Num,DOPS_Level,DOPS_ReviewTime,DOPS_Feedback,DOPS_TecScore,DOPS_TecMessage,DOPS_StuScore,DOPS_UserID,DOPS_State,DOPS_TecID,DOPS_PTypeState
	 from Out_DOPS
	 where DOPS_UCSID = #{doctorFlow}
  </select>

  <insert id="addOutDops" parameterType="map">
  	insert into Out_DOPS(
		DOPS_ID,
		DOPS_UCSID,
		DOPS_TecType,
		DOPS_Time,
		DOPS_Address,
		DOPS_Name,
		DOPS_Age,
		DOPS_Sex,
		DOPS_PType,
		DOPS_PDiagnosis,
		DOPS_Operate,
		DOPS_Num,
		DOPS_Level,
		DOPS_ReviewTime,
		DOPS_Feedback,
		DOPS_TecScore,
		DOPS_TecMessage,
		DOPS_StuScore,
		DOPS_UserID,
		DOPS_State,
		DOPS_TecID,
		DOPS_PTypeState,
		DOPS_Template
	)
	values
	(
		#{DOPS_ID},
		#{doctorFlow},
		#{DOPS_TecType},
		#{DOPS_Time},
		#{DOPS_Address},
		#{DOPS_Name},
		#{DOPS_Age},
		#{DOPS_Sex},
		#{DOPS_PType},
		#{DOPS_PDiagnosis},
		#{DOPS_Operate},
		#{DOPS_Num},
		#{DOPS_Level},
		#{DOPS_ReviewTime},
		#{DOPS_Feedback},
		#{DOPS_TecScore},
		#{DOPS_TecMessage},
		#{DOPS_StuScore},
		0,
		0,
		(select UserTecID from UserRealTec where UCSID = #{doctorFlow}),
		#{DOPS_PTypeState},
		#{DOPS_Template}
	)
  </insert>

  <update id="modOutDops" parameterType="map">
  	update Out_DOPS set
		DOPS_TecType=#{DOPS_TecType},
		DOPS_Time=#{DOPS_Time},
		DOPS_Address=#{DOPS_Address},
		DOPS_Name=#{DOPS_Name},
		DOPS_Age=#{DOPS_Age},
		DOPS_Sex=#{DOPS_Sex},
		DOPS_PType=#{DOPS_PType},
		DOPS_PDiagnosis=#{DOPS_PDiagnosis},
		DOPS_Operate=#{DOPS_Operate},
		DOPS_Num=#{DOPS_Num},
		DOPS_Level=#{DOPS_Level},
		DOPS_ReviewTime=#{DOPS_ReviewTime},
		DOPS_Feedback=#{DOPS_Feedback},
		DOPS_TecScore=#{DOPS_TecScore},
		DOPS_TecMessage=#{DOPS_TecMessage},
		DOPS_StuScore=#{DOPS_StuScore},
        DOPS_TecID=(select UserTecID from UserRealTec where UCSID = #{doctorFlow}),
        DOPS_PTypeState=#{DOPS_PTypeState}
	where DOPS_UCSID=#{doctorFlow}
  </update>

  <resultMap id="miniCexMap" type="hashmap">
    <result column="Mini_ID"  property="Mini_ID" javaType="java.lang.String"/>
	<result column="Mini_PTypeState"  property="Mini_PTypeState" javaType="java.lang.String"/>
	<result column="Mini_PDiagnosis"  property="Mini_PDiagnosis" javaType="java.lang.String"/>
	<result column="Mini_Operate"  property="Mini_Operate" javaType="java.lang.String"/>
	<result column="Mini_Num"  property="Mini_Num" javaType="java.lang.String"/>
	<result column="Mini_ReviewTime"  property="Mini_ReviewTime" javaType="java.lang.String"/>
	<result column="Mini_Feedback"  property="Mini_Feedback" javaType="java.lang.String"/>
	<result column="Mini_TecScore"  property="Mini_TecScore" javaType="java.lang.String"/>
	<result column="Mini_TecMessage"  property="Mini_TecMessage" javaType="java.lang.String"/>
	<result column="Mini_StuScore"  property="Mini_StuScore" javaType="java.lang.String"/>
	<result column="Mini_TecID"  property="Mini_TecID" javaType="java.lang.String"/>
	<result column="Mini_UCSID"  property="Mini_UCSID" javaType="java.lang.String"/>
	<result column="Mini_UserID"  property="Mini_UserID" javaType="java.lang.String"/>
	<result column="Mini_State"  property="Mini_State" javaType="java.lang.Integer"/>
	<result column="Mini_TecType"  property="Mini_TecType" javaType="java.lang.String"/>
	<result column="Mini_Time"  property="Mini_Time" javaType="java.lang.String"/>
	<result column="Mini_Address"  property="Mini_Address" javaType="java.lang.String"/>
	<result column="Mini_Name"  property="Mini_Name" javaType="java.lang.String"/>
	<result column="Mini_Age"  property="Mini_Age" javaType="java.lang.String"/>
	<result column="Mini_Sex"  property="Mini_Sex" javaType="java.lang.String"/>
	<result column="Mini_PType"  property="Mini_PType" javaType="java.lang.String"/>
  </resultMap>

  <select id="readOutMiniCex" resultMap="miniCexMap">
  	select top 1
  	  Mini_ID,Mini_PTypeState,Mini_PDiagnosis,Mini_Operate,Mini_Num,Mini_ReviewTime,Mini_Feedback,Mini_TecScore,Mini_TecMessage,Mini_StuScore,Mini_TecID,Mini_UCSID,Mini_UserID,Mini_State,Mini_TecType,Mini_Time,Mini_Address,Mini_Name,Mini_Age,Mini_Sex,Mini_PType
  	from  Out_Mini_CEX
	where Mini_UCSID = #{doctorFlow}
  </select>

  <insert id="addOutMiniCex" parameterType="map">
  	insert into Out_Mini_CEX(
		Mini_ID,
		Mini_PTypeState,
		Mini_PDiagnosis,
		Mini_Operate,
		Mini_Num,
		Mini_ReviewTime,
		Mini_Feedback,
		Mini_TecScore,
		Mini_TecMessage,
		Mini_StuScore,
		Mini_TecID,
		Mini_UCSID,
		Mini_UserID,
		Mini_State,
		Mini_TecType,
		Mini_Time,
		Mini_Address,
		Mini_Name,
		Mini_Age,
		Mini_Sex,
		Mini_PType
	)
	values
	(
		#{Mini_ID},
		#{Mini_PTypeState},
		#{Mini_PDiagnosis},
		#{Mini_Operate},
		#{Mini_Num},
		#{Mini_ReviewTime},
		#{Mini_Feedback},
		#{Mini_TecScore},
		#{Mini_TecMessage},
		#{Mini_StuScore},
		(select UserTecID from UserRealTec where UCSID = #{doctorFlow}),
		#{doctorFlow},
		0,
		0,
		#{Mini_TecType},
		#{Mini_Time},
		#{Mini_Address},
		#{Mini_Name},
		#{Mini_Age},
		#{Mini_Sex},
		#{Mini_PType}
	)
  </insert>

  <update id="modOutMiniCex" parameterType="map">
  	update Out_Mini_CEX set
      Mini_PTypeState = #{Mini_PTypeState },
      Mini_PDiagnosis = #{Mini_PDiagnosis },
      Mini_Operate = #{Mini_Operate },
      Mini_Num = #{Mini_Num },
      Mini_ReviewTime = #{Mini_ReviewTime },
      Mini_Feedback = #{Mini_Feedback },
      Mini_TecScore = #{Mini_TecScore },
      Mini_TecMessage = #{Mini_TecMessage },
      Mini_StuScore = #{Mini_StuScore },
      Mini_TecID = (select UserTecID from UserRealTec where UCSID = #{doctorFlow}),
      Mini_TecType = #{Mini_TecType },
      Mini_Time = #{Mini_Time },
      Mini_Address = #{Mini_Address },
      Mini_Name = #{Mini_Name },
      Mini_Age = #{Mini_Age },
      Mini_Sex = #{Mini_Sex },
      Mini_PType = #{Mini_PType }
    where Mini_UCSID = #{doctorFlow}
  </update>

  <resultMap id="evalOutSecBriefMap" type="hashmap">
    <result column="UCSID"  property="UCSID" javaType="java.lang.String"/>
	<result column="TrueName"  property="TrueName" javaType="java.lang.String"/>
  </resultMap>

  <select id="getWaitEvalOutSecBriefList" resultMap="evalOutSecBriefMap">
	select UserRealTec.UCSID,TrueName
		from UserRealTec
		inner join UserInfo on UserInfo.UserID = UserRealTec.UserDipID
		left join HosSection on HosSection.HosSecID = UserRealTec.HosSecID
		left join OutSecBrief on OutSecBrief.UCSID = UserRealTec.UCSID
	where UserTecID = #{doctorFlow} and VerifyState = 0  and CheckStatus = 0
  </select>

  <resultMap id="arrangeActivityMap" type="hashmap">
    <result column="arrangeCount"  property="arrangeCount" javaType="java.lang.Integer"/>
  </resultMap>

  <select id="getWaitArrangeActivityCount" resultMap="arrangeActivityMap">
	select COUNT(*) as arrangeCount
		from CaseDiscuss
		left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
		left join (select COUNT(FCaDisID) as CaCount,FCaDisID from CaseDiscuss
		group by  FCaDisID) as Temp on Temp.FCaDisID = CaseDiscuss.CaDisID
	where  UserType = 36 AND TecID = #{doctorFlow}
		AND CaseDiscuss.FCaDisID IS NULL
		AND CheckStatus = 0
  </select>

  <resultMap id="confirmActivityMap" type="hashmap">
	<result column="CaDisID"  property="CaDisID" javaType="java.lang.String"/>
	<result column="CaCount"  property="CaCount" javaType="java.lang.String"/>
	<result column="FCaDisIDCount"  property="FCaDisIDCount" javaType="java.lang.String"/>
	<result column="CaName"  property="CaName" javaType="java.lang.String"/>
  </resultMap>

  <select id="getNeedConfirmActives" resultMap="confirmActivityMap">
	select CaDisID,isNull(CaCount,0) as CaCount,isNull(FCaDisIDCount,0) as FCaDisIDCount,CaName
	from CaseDiscuss
	left join (select COUNT(FCaDisID) as CaCount,FCaDisID from CaseDiscuss
	group by  FCaDisID) as temp on Temp.FCaDisID = CaseDiscuss.CaDisID
	left join (select Score,FCaDisID,COUNT(FCaDisID) as FCaDisIDCount
	from CaseDiscuss
	where FCaDisID is not null and CheckStatus != 6
	group by Score,FCaDisID
	having score > 0) as TempCount on TempCount.FCaDisID = CaseDiscuss.CaDisID
	where  UserType = 36
	AND TecID = #{userFlow} AND CaseDiscuss.FCaDisID IS NULL
	and CheckStatus = 4
	and FCaDisIDCount > 0
  </select>

  <resultMap id="confirmActivityUserMap" type="hashmap">
	<result column="CaDisID"  property="CaDisID" javaType="java.lang.String"/>
	<result column="UserID"  property="UserID" javaType="java.lang.String"/>
	<result column="FCaDisID"  property="FCaDisID" javaType="java.lang.String"/>
	<result column="TrueName"  property="TrueName" javaType="java.lang.String"/>
	<result column="CheckStatus"  property="CheckStatus" javaType="java.lang.String"/>
  </resultMap>

  <select id="getNeedConfirmActiveUsers" resultMap="confirmActivityUserMap">
	SELECT CaDisID,UserInfo.UserID,FCaDisID,CheckStatus,TrueName
	,Isnull(Score,0) as Score
	FROM CaseDiscuss
	LEFT JOIN UserInfo ON UserInfo.UserID = CaseDiscuss.UserID
	LEFT JOIN UserRole ON UserRole.UserID = UserInfo.UserID
	LEFT JOIN Role ON Role.RoleID = UserRole.RoleID
	WHERE FCaDisID = #{dataFlow} ORDER BY CaDisTime DESC
  </select>

  <update id="confirmActiveUsers" parameterType="map">
  	update CaseDiscuss set checkStatus=6 where CaDisID = #{CaDisID}
  </update>

  <select id="readTheoryScore" parameterType="string" resultType="java.lang.Float">
      select TestResult from T_DepartmentalExaminationResult where UCSID = #{doctorFlow} and IsTest=1
  </select>

    <select id="getActivityList" resultType="hashmap">

      	SELECT * FROM (
			SELECT ROW_NUMBER() OVER (order by T.CaDisTime)AS Row, T.*
			from (
                    select ISNULL(Temp.CaCount,0) as  CaCount,ISNULL(CheckTemp.CaCount,0) as  CheckCaCount,
                    CaseDiscuss.CaDisID ,CaDisTime , CaseDiscuss.CaEndDisTime,CaDisContent ,CaDisPlayClass ,
                    CaDisPeriod ,CaDisMainSpeaker ,CaDisDes ,CaName,
                    CaseDiscuss.UserID ,CaAddress,DicItem , CaseDiscuss.CaDisMainSpeakerType,
                    case CaseDiscuss.CaDisMainSpeakerType
                    WHEN 0 THEN '带教老师'
                    WHEN 1 THEN '轮转学员'
                    WHEN 2 THEN '其他人员'
                    ELSE ''
                    END AS CaDisMainSpeakerTypeName,
                    case CheckStatus
                    when 0 then '新申请'
                    when 1 then '已安排'
                    when 2 then '教学秘书审核通过'
                    when 3 then '等待院系审核'
                    when 4 then '院系审核通过'
                    when 5 then '审核不通过'
                    else  '审核不通过' end as CheckStatusName,
                    ISNULL(CheckStatus,5) AS CheckStatus
                    from CaseDiscuss
                    left join CaseDiscussTec on CaseDiscussTec.CaDisID = CaseDiscuss.CaDisID  AND CaseDiscussTec.TecUserID = CaseDiscuss.TecID
                    left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
                    left join (select COUNT(FCaDisID) as CaCount,FCaDisID from CaseDiscuss
                    group by  FCaDisID) as Temp on Temp.FCaDisID = CaseDiscuss.CaDisID
                    left join (select COUNT(FCaDisID) as CaCount,FCaDisID from CaseDiscuss
                    where score != 0
                    group by  FCaDisID) as CheckTemp on CheckTemp.FCaDisID = CaseDiscuss.CaDisID
                    where  UserType = 36
                    AND TecID = #{userFlow}
                    AND CaseDiscuss.FCaDisID IS NULL
                    <if test="status=='Y'.toString()">
                        AND CheckStatus = 0
                    </if>
                    <if test="status!='Y'.toString()">
                        AND CheckStatus != 0
                    </if>
			) as  T
		) TT
	    WHERE TT.Row between #{start} and #{end}
	    ORDER BY CaDisTime
    </select>
    <select id="getDirMap" resultType="hashmap">
	SELECT   Value as dirUrl
	FROM      S_Parameter
	WHERE   (Name = 'APP图片上传地址')
    </select>
    <select id="activityDetail" resultType="hashmap">
        select CaseDiscuss.CaDisID ,CaseDiscuss.CaDisMainSpeakerType,
                    case CaseDiscuss.CaDisMainSpeakerType
                    WHEN 0 THEN '带教老师'
                    WHEN 1 THEN '轮转学员'
                    WHEN 2 THEN '其他人员'
                    ELSE ''
                    END AS CaDisMainSpeakerTypeName,
                    CaDisMainSpeaker,DicItem ,CaAddress,
        CaDisTime ,CaEndDisTime,CaName,CaDisContent ,
        CaDisPlayClass ,CaDisPeriod ,CaDisDes ,
        CaseDiscuss.UserID ,
        case CheckStatus
        when 0 then '新申请'
        when 1 then '已安排'
        when 2 then '教学秘书审核通过'
        when 3 then '等待院系审核'
        when 4 then '院系审核通过'
        when 5 then '审核不通过'
        else  '审核不通过' end as CheckStatusName,
        CheckStatus,AttachName,AttachPath,AttachFileName
        from CaseDiscuss
        left join CaseDiscussTec on CaseDiscussTec.CaDisID = CaseDiscuss.CaDisID
            AND CaseDiscussTec.TecUserID = CaseDiscuss.TecID
        left join DicItem on DicItem.DicItemID = CaseDiscuss.CaDisPlayClass
        left join [Attach] on [Attach].AttachID = CaseDiscuss.AttachID
        where  CaseDiscuss.CaDisID = #{caDisID}
    </select>
    <select id="getAttachIdMap" resultType="hashmap">
        select max(AttachGroupID)+1 as AttachId from  Attach
    </select>
	<insert id="uploadFile" >
		INSERT INTO [dbo].[Attach]
		([AttachGroupID],[AttachName],[AttachFileName],[AttachPath],[AttachDateTime],[AttachUserID])
		VALUES
		(#{AttachId},#{AttachName},#{AttachFileName},#{AttachPath},#{AttachDateTime},#{AttachUserID})
	</insert>
	<insert id="updateActivity" >

		UPDATE  CaseDiscuss
		SET
		CaDisTime =#{CaDisTime} ,
		CaDisContent = #{CaDisContent} ,
		CaName = #{CaName} ,
		CheckStatus = 1 ,
		CaEndDisTime = #{CaEndDisTime}
		 <if test="AttachID !=null and AttachID!=''">
			 ,
			 AttachID = #{AttachID}
		 </if>
		WHERE   CaDisID = #{CaDisID}
	</insert>
</mapper>