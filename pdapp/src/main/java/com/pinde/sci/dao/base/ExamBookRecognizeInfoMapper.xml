<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ExamBookRecognizeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ExamBookRecognizeInfo" >
    <id column="RECOGNIZE_FLOW" property="recognizeFlow" jdbcType="VARCHAR" />
    <result column="BOOK_FLOW" property="bookFlow" jdbcType="VARCHAR" />
    <result column="RECOGNIZE_USER_FLOW" property="recognizeUserFlow" jdbcType="VARCHAR" />
    <result column="RECOGNIZE_USER_NAME" property="recognizeUserName" jdbcType="VARCHAR" />
    <result column="RECOGNIZE_TIME" property="recognizeTime" jdbcType="VARCHAR" />
    <result column="SIGN_USER_FLOW" property="signUserFlow" jdbcType="VARCHAR" />
    <result column="SIGN_USER_NAME" property="signUserName" jdbcType="VARCHAR" />
    <result column="PROBLEM" property="problem" jdbcType="VARCHAR" />
    <result column="SOLUTION" property="solution" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECOGNIZE_FLOW, BOOK_FLOW, RECOGNIZE_USER_FLOW, RECOGNIZE_USER_NAME, RECOGNIZE_TIME, 
    SIGN_USER_FLOW, SIGN_USER_NAME, PROBLEM, SOLUTION, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    where RECOGNIZE_FLOW = #{recognizeFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    where RECOGNIZE_FLOW = #{recognizeFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfoExample" >
    delete from PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfo" >
    insert into PDSCI.EXAM_BOOK_RECOGNIZE_INFO (RECOGNIZE_FLOW, BOOK_FLOW, RECOGNIZE_USER_FLOW, 
      RECOGNIZE_USER_NAME, RECOGNIZE_TIME, SIGN_USER_FLOW, 
      SIGN_USER_NAME, PROBLEM, SOLUTION, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW)
    values (#{recognizeFlow,jdbcType=VARCHAR}, #{bookFlow,jdbcType=VARCHAR}, #{recognizeUserFlow,jdbcType=VARCHAR}, 
      #{recognizeUserName,jdbcType=VARCHAR}, #{recognizeTime,jdbcType=VARCHAR}, #{signUserFlow,jdbcType=VARCHAR}, 
      #{signUserName,jdbcType=VARCHAR}, #{problem,jdbcType=VARCHAR}, #{solution,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfo" >
    insert into PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recognizeFlow != null" >
        RECOGNIZE_FLOW,
      </if>
      <if test="bookFlow != null" >
        BOOK_FLOW,
      </if>
      <if test="recognizeUserFlow != null" >
        RECOGNIZE_USER_FLOW,
      </if>
      <if test="recognizeUserName != null" >
        RECOGNIZE_USER_NAME,
      </if>
      <if test="recognizeTime != null" >
        RECOGNIZE_TIME,
      </if>
      <if test="signUserFlow != null" >
        SIGN_USER_FLOW,
      </if>
      <if test="signUserName != null" >
        SIGN_USER_NAME,
      </if>
      <if test="problem != null" >
        PROBLEM,
      </if>
      <if test="solution != null" >
        SOLUTION,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recognizeFlow != null" >
        #{recognizeFlow,jdbcType=VARCHAR},
      </if>
      <if test="bookFlow != null" >
        #{bookFlow,jdbcType=VARCHAR},
      </if>
      <if test="recognizeUserFlow != null" >
        #{recognizeUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="recognizeUserName != null" >
        #{recognizeUserName,jdbcType=VARCHAR},
      </if>
      <if test="recognizeTime != null" >
        #{recognizeTime,jdbcType=VARCHAR},
      </if>
      <if test="signUserFlow != null" >
        #{signUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="signUserName != null" >
        #{signUserName,jdbcType=VARCHAR},
      </if>
      <if test="problem != null" >
        #{problem,jdbcType=VARCHAR},
      </if>
      <if test="solution != null" >
        #{solution,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfoExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <set >
      <if test="record.recognizeFlow != null" >
        RECOGNIZE_FLOW = #{record.recognizeFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.bookFlow != null" >
        BOOK_FLOW = #{record.bookFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeUserFlow != null" >
        RECOGNIZE_USER_FLOW = #{record.recognizeUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeUserName != null" >
        RECOGNIZE_USER_NAME = #{record.recognizeUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeTime != null" >
        RECOGNIZE_TIME = #{record.recognizeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.signUserFlow != null" >
        SIGN_USER_FLOW = #{record.signUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.signUserName != null" >
        SIGN_USER_NAME = #{record.signUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.problem != null" >
        PROBLEM = #{record.problem,jdbcType=VARCHAR},
      </if>
      <if test="record.solution != null" >
        SOLUTION = #{record.solution,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    set RECOGNIZE_FLOW = #{record.recognizeFlow,jdbcType=VARCHAR},
      BOOK_FLOW = #{record.bookFlow,jdbcType=VARCHAR},
      RECOGNIZE_USER_FLOW = #{record.recognizeUserFlow,jdbcType=VARCHAR},
      RECOGNIZE_USER_NAME = #{record.recognizeUserName,jdbcType=VARCHAR},
      RECOGNIZE_TIME = #{record.recognizeTime,jdbcType=VARCHAR},
      SIGN_USER_FLOW = #{record.signUserFlow,jdbcType=VARCHAR},
      SIGN_USER_NAME = #{record.signUserName,jdbcType=VARCHAR},
      PROBLEM = #{record.problem,jdbcType=VARCHAR},
      SOLUTION = #{record.solution,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfo" >
    update PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    <set >
      <if test="bookFlow != null" >
        BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR},
      </if>
      <if test="recognizeUserFlow != null" >
        RECOGNIZE_USER_FLOW = #{recognizeUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="recognizeUserName != null" >
        RECOGNIZE_USER_NAME = #{recognizeUserName,jdbcType=VARCHAR},
      </if>
      <if test="recognizeTime != null" >
        RECOGNIZE_TIME = #{recognizeTime,jdbcType=VARCHAR},
      </if>
      <if test="signUserFlow != null" >
        SIGN_USER_FLOW = #{signUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="signUserName != null" >
        SIGN_USER_NAME = #{signUserName,jdbcType=VARCHAR},
      </if>
      <if test="problem != null" >
        PROBLEM = #{problem,jdbcType=VARCHAR},
      </if>
      <if test="solution != null" >
        SOLUTION = #{solution,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RECOGNIZE_FLOW = #{recognizeFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ExamBookRecognizeInfo" >
    update PDSCI.EXAM_BOOK_RECOGNIZE_INFO
    set BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR},
      RECOGNIZE_USER_FLOW = #{recognizeUserFlow,jdbcType=VARCHAR},
      RECOGNIZE_USER_NAME = #{recognizeUserName,jdbcType=VARCHAR},
      RECOGNIZE_TIME = #{recognizeTime,jdbcType=VARCHAR},
      SIGN_USER_FLOW = #{signUserFlow,jdbcType=VARCHAR},
      SIGN_USER_NAME = #{signUserName,jdbcType=VARCHAR},
      PROBLEM = #{problem,jdbcType=VARCHAR},
      SOLUTION = #{solution,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RECOGNIZE_FLOW = #{recognizeFlow,jdbcType=VARCHAR}
  </update>
</mapper>