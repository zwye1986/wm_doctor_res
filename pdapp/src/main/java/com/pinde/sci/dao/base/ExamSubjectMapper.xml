<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ExamSubjectMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ExamSubject" >
    <id column="SUBJECT_FLOW" property="subjectFlow" jdbcType="VARCHAR" />
    <result column="SUBJECT_CODE" property="subjectCode" jdbcType="VARCHAR" />
    <result column="SUBJECT_NAME" property="subjectName" jdbcType="VARCHAR" />
    <result column="SUBJECT_PARENT_FLOW" property="subjectParentFlow" jdbcType="VARCHAR" />
    <result column="SUBJECT_TYPE_ID" property="subjectTypeId" jdbcType="VARCHAR" />
    <result column="SUBJECT_TYPE_NAME" property="subjectTypeName" jdbcType="VARCHAR" />
    <result column="BANK_TYPE_ID" property="bankTypeId" jdbcType="VARCHAR" />
    <result column="BANK_TYPE_NAME" property="bankTypeName" jdbcType="VARCHAR" />
    <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
    <result column="DEPTH" property="depth" jdbcType="VARCHAR" />
    <result column="LEAF_FLAG" property="leafFlag" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="SOURCE_SUBJECT_FLOW" property="sourceSubjectFlow" jdbcType="VARCHAR" />
    <result column="SUBJECT_ISENABLED" property="subjectIsenabled" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SUBJECT_FLOW, SUBJECT_CODE, SUBJECT_NAME, SUBJECT_PARENT_FLOW, SUBJECT_TYPE_ID, SUBJECT_TYPE_NAME, 
    BANK_TYPE_ID, BANK_TYPE_NAME, ORDINAL, DEPTH, LEAF_FLAG, MEMO, RECORD_STATUS, CREATE_TIME, 
    CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, SOURCE_SUBJECT_FLOW, SUBJECT_ISENABLED
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.ExamSubjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_SUBJECT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_SUBJECT
    where SUBJECT_FLOW = #{subjectFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EXAM_SUBJECT
    where SUBJECT_FLOW = #{subjectFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ExamSubjectExample" >
    delete from PDSCI.EXAM_SUBJECT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ExamSubject" >
    insert into PDSCI.EXAM_SUBJECT (SUBJECT_FLOW, SUBJECT_CODE, SUBJECT_NAME, 
      SUBJECT_PARENT_FLOW, SUBJECT_TYPE_ID, SUBJECT_TYPE_NAME, 
      BANK_TYPE_ID, BANK_TYPE_NAME, ORDINAL, 
      DEPTH, LEAF_FLAG, MEMO, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW, SOURCE_SUBJECT_FLOW, 
      SUBJECT_ISENABLED)
    values (#{subjectFlow,jdbcType=VARCHAR}, #{subjectCode,jdbcType=VARCHAR}, #{subjectName,jdbcType=VARCHAR}, 
      #{subjectParentFlow,jdbcType=VARCHAR}, #{subjectTypeId,jdbcType=VARCHAR}, #{subjectTypeName,jdbcType=VARCHAR}, 
      #{bankTypeId,jdbcType=VARCHAR}, #{bankTypeName,jdbcType=VARCHAR}, #{ordinal,jdbcType=DECIMAL}, 
      #{depth,jdbcType=VARCHAR}, #{leafFlag,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, #{sourceSubjectFlow,jdbcType=VARCHAR}, 
      #{subjectIsenabled,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ExamSubject" >
    insert into PDSCI.EXAM_SUBJECT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subjectFlow != null" >
        SUBJECT_FLOW,
      </if>
      <if test="subjectCode != null" >
        SUBJECT_CODE,
      </if>
      <if test="subjectName != null" >
        SUBJECT_NAME,
      </if>
      <if test="subjectParentFlow != null" >
        SUBJECT_PARENT_FLOW,
      </if>
      <if test="subjectTypeId != null" >
        SUBJECT_TYPE_ID,
      </if>
      <if test="subjectTypeName != null" >
        SUBJECT_TYPE_NAME,
      </if>
      <if test="bankTypeId != null" >
        BANK_TYPE_ID,
      </if>
      <if test="bankTypeName != null" >
        BANK_TYPE_NAME,
      </if>
      <if test="ordinal != null" >
        ORDINAL,
      </if>
      <if test="depth != null" >
        DEPTH,
      </if>
      <if test="leafFlag != null" >
        LEAF_FLAG,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="sourceSubjectFlow != null" >
        SOURCE_SUBJECT_FLOW,
      </if>
      <if test="subjectIsenabled != null" >
        SUBJECT_ISENABLED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subjectFlow != null" >
        #{subjectFlow,jdbcType=VARCHAR},
      </if>
      <if test="subjectCode != null" >
        #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectName != null" >
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectParentFlow != null" >
        #{subjectParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="subjectTypeId != null" >
        #{subjectTypeId,jdbcType=VARCHAR},
      </if>
      <if test="subjectTypeName != null" >
        #{subjectTypeName,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeId != null" >
        #{bankTypeId,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeName != null" >
        #{bankTypeName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="depth != null" >
        #{depth,jdbcType=VARCHAR},
      </if>
      <if test="leafFlag != null" >
        #{leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="sourceSubjectFlow != null" >
        #{sourceSubjectFlow,jdbcType=VARCHAR},
      </if>
      <if test="subjectIsenabled != null" >
        #{subjectIsenabled,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ExamSubjectExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EXAM_SUBJECT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EXAM_SUBJECT
    <set >
      <if test="record.subjectFlow != null" >
        SUBJECT_FLOW = #{record.subjectFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectCode != null" >
        SUBJECT_CODE = #{record.subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectName != null" >
        SUBJECT_NAME = #{record.subjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectParentFlow != null" >
        SUBJECT_PARENT_FLOW = #{record.subjectParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectTypeId != null" >
        SUBJECT_TYPE_ID = #{record.subjectTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectTypeName != null" >
        SUBJECT_TYPE_NAME = #{record.subjectTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankTypeId != null" >
        BANK_TYPE_ID = #{record.bankTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankTypeName != null" >
        BANK_TYPE_NAME = #{record.bankTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordinal != null" >
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.depth != null" >
        DEPTH = #{record.depth,jdbcType=VARCHAR},
      </if>
      <if test="record.leafFlag != null" >
        LEAF_FLAG = #{record.leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceSubjectFlow != null" >
        SOURCE_SUBJECT_FLOW = #{record.sourceSubjectFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectIsenabled != null" >
        SUBJECT_ISENABLED = #{record.subjectIsenabled,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EXAM_SUBJECT
    set SUBJECT_FLOW = #{record.subjectFlow,jdbcType=VARCHAR},
      SUBJECT_CODE = #{record.subjectCode,jdbcType=VARCHAR},
      SUBJECT_NAME = #{record.subjectName,jdbcType=VARCHAR},
      SUBJECT_PARENT_FLOW = #{record.subjectParentFlow,jdbcType=VARCHAR},
      SUBJECT_TYPE_ID = #{record.subjectTypeId,jdbcType=VARCHAR},
      SUBJECT_TYPE_NAME = #{record.subjectTypeName,jdbcType=VARCHAR},
      BANK_TYPE_ID = #{record.bankTypeId,jdbcType=VARCHAR},
      BANK_TYPE_NAME = #{record.bankTypeName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      DEPTH = #{record.depth,jdbcType=VARCHAR},
      LEAF_FLAG = #{record.leafFlag,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      SOURCE_SUBJECT_FLOW = #{record.sourceSubjectFlow,jdbcType=VARCHAR},
      SUBJECT_ISENABLED = #{record.subjectIsenabled,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ExamSubject" >
    update PDSCI.EXAM_SUBJECT
    <set >
      <if test="subjectCode != null" >
        SUBJECT_CODE = #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectName != null" >
        SUBJECT_NAME = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectParentFlow != null" >
        SUBJECT_PARENT_FLOW = #{subjectParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="subjectTypeId != null" >
        SUBJECT_TYPE_ID = #{subjectTypeId,jdbcType=VARCHAR},
      </if>
      <if test="subjectTypeName != null" >
        SUBJECT_TYPE_NAME = #{subjectTypeName,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeId != null" >
        BANK_TYPE_ID = #{bankTypeId,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeName != null" >
        BANK_TYPE_NAME = #{bankTypeName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="depth != null" >
        DEPTH = #{depth,jdbcType=VARCHAR},
      </if>
      <if test="leafFlag != null" >
        LEAF_FLAG = #{leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="sourceSubjectFlow != null" >
        SOURCE_SUBJECT_FLOW = #{sourceSubjectFlow,jdbcType=VARCHAR},
      </if>
      <if test="subjectIsenabled != null" >
        SUBJECT_ISENABLED = #{subjectIsenabled,jdbcType=CHAR},
      </if>
    </set>
    where SUBJECT_FLOW = #{subjectFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ExamSubject" >
    update PDSCI.EXAM_SUBJECT
    set SUBJECT_CODE = #{subjectCode,jdbcType=VARCHAR},
      SUBJECT_NAME = #{subjectName,jdbcType=VARCHAR},
      SUBJECT_PARENT_FLOW = #{subjectParentFlow,jdbcType=VARCHAR},
      SUBJECT_TYPE_ID = #{subjectTypeId,jdbcType=VARCHAR},
      SUBJECT_TYPE_NAME = #{subjectTypeName,jdbcType=VARCHAR},
      BANK_TYPE_ID = #{bankTypeId,jdbcType=VARCHAR},
      BANK_TYPE_NAME = #{bankTypeName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      DEPTH = #{depth,jdbcType=VARCHAR},
      LEAF_FLAG = #{leafFlag,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      SOURCE_SUBJECT_FLOW = #{sourceSubjectFlow,jdbcType=VARCHAR},
      SUBJECT_ISENABLED = #{subjectIsenabled,jdbcType=CHAR}
    where SUBJECT_FLOW = #{subjectFlow,jdbcType=VARCHAR}
  </update>
</mapper>