<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ResTrainingOpinionMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.core.model.ResTrainingOpinion" >
    <id column="TRAINING_OPINION_FLOW" property="trainingOpinionFlow" jdbcType="VARCHAR" />
    <result column="OPINION_USER_FLOW" property="opinionUserFlow" jdbcType="VARCHAR" />
    <result column="OPINION_USER_NAME" property="opinionUserName" jdbcType="VARCHAR" />
    <result column="OPINION_USER_CONTENT" property="opinionUserContent" jdbcType="VARCHAR" />
    <result column="EVA_TIME" property="evaTime" jdbcType="VARCHAR" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="OPINION_REPLY_USER_FLOW" property="opinionReplyUserFlow" jdbcType="VARCHAR" />
    <result column="OPINION_REPLY_NAME" property="opinionReplyName" jdbcType="VARCHAR" />
    <result column="OPINION_REPLY_CONTENT" property="opinionReplyContent" jdbcType="VARCHAR" />
    <result column="REPLY_TIME" property="replyTime" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TRAINING_OPINION_FLOW, OPINION_USER_FLOW, OPINION_USER_NAME, OPINION_USER_CONTENT, 
    EVA_TIME, ORG_FLOW, ORG_NAME, OPINION_REPLY_USER_FLOW, OPINION_REPLY_NAME, OPINION_REPLY_CONTENT, 
    REPLY_TIME, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.ResTrainingOpinionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.RES_TRAINING_OPINION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.RES_TRAINING_OPINION
    where TRAINING_OPINION_FLOW = #{trainingOpinionFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.RES_TRAINING_OPINION
    where TRAINING_OPINION_FLOW = #{trainingOpinionFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.core.model.ResTrainingOpinionExample" >
    delete from PDSCI.RES_TRAINING_OPINION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.core.model.ResTrainingOpinion" >
    insert into PDSCI.RES_TRAINING_OPINION (TRAINING_OPINION_FLOW, OPINION_USER_FLOW, 
      OPINION_USER_NAME, OPINION_USER_CONTENT, EVA_TIME, 
      ORG_FLOW, ORG_NAME, OPINION_REPLY_USER_FLOW, 
      OPINION_REPLY_NAME, OPINION_REPLY_CONTENT, 
      REPLY_TIME, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
      )
    values (#{trainingOpinionFlow,jdbcType=VARCHAR}, #{opinionUserFlow,jdbcType=VARCHAR}, 
      #{opinionUserName,jdbcType=VARCHAR}, #{opinionUserContent,jdbcType=VARCHAR}, #{evaTime,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{opinionReplyUserFlow,jdbcType=VARCHAR}, 
      #{opinionReplyName,jdbcType=VARCHAR}, #{opinionReplyContent,jdbcType=VARCHAR}, 
      #{replyTime,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.core.model.ResTrainingOpinion" >
    insert into PDSCI.RES_TRAINING_OPINION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="trainingOpinionFlow != null" >
        TRAINING_OPINION_FLOW,
      </if>
      <if test="opinionUserFlow != null" >
        OPINION_USER_FLOW,
      </if>
      <if test="opinionUserName != null" >
        OPINION_USER_NAME,
      </if>
      <if test="opinionUserContent != null" >
        OPINION_USER_CONTENT,
      </if>
      <if test="evaTime != null" >
        EVA_TIME,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="opinionReplyUserFlow != null" >
        OPINION_REPLY_USER_FLOW,
      </if>
      <if test="opinionReplyName != null" >
        OPINION_REPLY_NAME,
      </if>
      <if test="opinionReplyContent != null" >
        OPINION_REPLY_CONTENT,
      </if>
      <if test="replyTime != null" >
        REPLY_TIME,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="trainingOpinionFlow != null" >
        #{trainingOpinionFlow,jdbcType=VARCHAR},
      </if>
      <if test="opinionUserFlow != null" >
        #{opinionUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="opinionUserName != null" >
        #{opinionUserName,jdbcType=VARCHAR},
      </if>
      <if test="opinionUserContent != null" >
        #{opinionUserContent,jdbcType=VARCHAR},
      </if>
      <if test="evaTime != null" >
        #{evaTime,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyUserFlow != null" >
        #{opinionReplyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyName != null" >
        #{opinionReplyName,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyContent != null" >
        #{opinionReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.core.model.ResTrainingOpinionExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.RES_TRAINING_OPINION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.RES_TRAINING_OPINION
    <set >
      <if test="record.trainingOpinionFlow != null" >
        TRAINING_OPINION_FLOW = #{record.trainingOpinionFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionUserFlow != null" >
        OPINION_USER_FLOW = #{record.opinionUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionUserName != null" >
        OPINION_USER_NAME = #{record.opinionUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionUserContent != null" >
        OPINION_USER_CONTENT = #{record.opinionUserContent,jdbcType=VARCHAR},
      </if>
      <if test="record.evaTime != null" >
        EVA_TIME = #{record.evaTime,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionReplyUserFlow != null" >
        OPINION_REPLY_USER_FLOW = #{record.opinionReplyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionReplyName != null" >
        OPINION_REPLY_NAME = #{record.opinionReplyName,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionReplyContent != null" >
        OPINION_REPLY_CONTENT = #{record.opinionReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null" >
        REPLY_TIME = #{record.replyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.RES_TRAINING_OPINION
    set TRAINING_OPINION_FLOW = #{record.trainingOpinionFlow,jdbcType=VARCHAR},
      OPINION_USER_FLOW = #{record.opinionUserFlow,jdbcType=VARCHAR},
      OPINION_USER_NAME = #{record.opinionUserName,jdbcType=VARCHAR},
      OPINION_USER_CONTENT = #{record.opinionUserContent,jdbcType=VARCHAR},
      EVA_TIME = #{record.evaTime,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      OPINION_REPLY_USER_FLOW = #{record.opinionReplyUserFlow,jdbcType=VARCHAR},
      OPINION_REPLY_NAME = #{record.opinionReplyName,jdbcType=VARCHAR},
      OPINION_REPLY_CONTENT = #{record.opinionReplyContent,jdbcType=VARCHAR},
      REPLY_TIME = #{record.replyTime,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.ResTrainingOpinion" >
    update PDSCI.RES_TRAINING_OPINION
    <set >
      <if test="opinionUserFlow != null" >
        OPINION_USER_FLOW = #{opinionUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="opinionUserName != null" >
        OPINION_USER_NAME = #{opinionUserName,jdbcType=VARCHAR},
      </if>
      <if test="opinionUserContent != null" >
        OPINION_USER_CONTENT = #{opinionUserContent,jdbcType=VARCHAR},
      </if>
      <if test="evaTime != null" >
        EVA_TIME = #{evaTime,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyUserFlow != null" >
        OPINION_REPLY_USER_FLOW = #{opinionReplyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyName != null" >
        OPINION_REPLY_NAME = #{opinionReplyName,jdbcType=VARCHAR},
      </if>
      <if test="opinionReplyContent != null" >
        OPINION_REPLY_CONTENT = #{opinionReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        REPLY_TIME = #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where TRAINING_OPINION_FLOW = #{trainingOpinionFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.ResTrainingOpinion" >
    update PDSCI.RES_TRAINING_OPINION
    set OPINION_USER_FLOW = #{opinionUserFlow,jdbcType=VARCHAR},
      OPINION_USER_NAME = #{opinionUserName,jdbcType=VARCHAR},
      OPINION_USER_CONTENT = #{opinionUserContent,jdbcType=VARCHAR},
      EVA_TIME = #{evaTime,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      OPINION_REPLY_USER_FLOW = #{opinionReplyUserFlow,jdbcType=VARCHAR},
      OPINION_REPLY_NAME = #{opinionReplyName,jdbcType=VARCHAR},
      OPINION_REPLY_CONTENT = #{opinionReplyContent,jdbcType=VARCHAR},
      REPLY_TIME = #{replyTime,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where TRAINING_OPINION_FLOW = #{trainingOpinionFlow,jdbcType=VARCHAR}
  </update>
</mapper>