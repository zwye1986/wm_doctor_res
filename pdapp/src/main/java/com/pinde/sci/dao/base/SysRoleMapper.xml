<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.SysRole" >
    <id column="ROLE_FLOW" property="roleFlow" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="WS_ID" property="wsId" jdbcType="VARCHAR" />
    <result column="WS_NAME" property="wsName" jdbcType="VARCHAR" />
    <result column="ROLE_LEVEL_ID" property="roleLevelId" jdbcType="VARCHAR" />
    <result column="ROLE_LEVEL_NAME" property="roleLevelName" jdbcType="VARCHAR" />
    <result column="PARENT_ROLE_FLOW" property="parentRoleFlow" jdbcType="VARCHAR" />
    <result column="PARENT_ROLE_NAME" property="parentRoleName" jdbcType="VARCHAR" />
    <result column="ALLOW_REG_FLAG" property="allowRegFlag" jdbcType="VARCHAR" />
    <result column="REG_PAGE_ID" property="regPageId" jdbcType="VARCHAR" />
    <result column="REG_PAGE_NAME" property="regPageName" jdbcType="VARCHAR" />
    <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROLE_FLOW, ROLE_NAME, WS_ID, WS_NAME, ROLE_LEVEL_ID, ROLE_LEVEL_NAME, PARENT_ROLE_FLOW, 
    PARENT_ROLE_NAME, ALLOW_REG_FLAG, REG_PAGE_ID, REG_PAGE_NAME, ORDINAL, REMARK, RECORD_STATUS, 
    CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.SysRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.SYS_ROLE
    where ROLE_FLOW = #{roleFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.SYS_ROLE
    where ROLE_FLOW = #{roleFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.SysRoleExample" >
    delete from PDSCI.SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.SysRole" >
    insert into PDSCI.SYS_ROLE (ROLE_FLOW, ROLE_NAME, WS_ID, 
      WS_NAME, ROLE_LEVEL_ID, ROLE_LEVEL_NAME, 
      PARENT_ROLE_FLOW, PARENT_ROLE_NAME, ALLOW_REG_FLAG, 
      REG_PAGE_ID, REG_PAGE_NAME, ORDINAL, 
      REMARK, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
      )
    values (#{roleFlow,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{wsId,jdbcType=VARCHAR}, 
      #{wsName,jdbcType=VARCHAR}, #{roleLevelId,jdbcType=VARCHAR}, #{roleLevelName,jdbcType=VARCHAR}, 
      #{parentRoleFlow,jdbcType=VARCHAR}, #{parentRoleName,jdbcType=VARCHAR}, #{allowRegFlag,jdbcType=VARCHAR}, 
      #{regPageId,jdbcType=VARCHAR}, #{regPageName,jdbcType=VARCHAR}, #{ordinal,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.SysRole" >
    insert into PDSCI.SYS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleFlow != null" >
        ROLE_FLOW,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="wsId != null" >
        WS_ID,
      </if>
      <if test="wsName != null" >
        WS_NAME,
      </if>
      <if test="roleLevelId != null" >
        ROLE_LEVEL_ID,
      </if>
      <if test="roleLevelName != null" >
        ROLE_LEVEL_NAME,
      </if>
      <if test="parentRoleFlow != null" >
        PARENT_ROLE_FLOW,
      </if>
      <if test="parentRoleName != null" >
        PARENT_ROLE_NAME,
      </if>
      <if test="allowRegFlag != null" >
        ALLOW_REG_FLAG,
      </if>
      <if test="regPageId != null" >
        REG_PAGE_ID,
      </if>
      <if test="regPageName != null" >
        REG_PAGE_NAME,
      </if>
      <if test="ordinal != null" >
        ORDINAL,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleFlow != null" >
        #{roleFlow,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="wsId != null" >
        #{wsId,jdbcType=VARCHAR},
      </if>
      <if test="wsName != null" >
        #{wsName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelId != null" >
        #{roleLevelId,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelName != null" >
        #{roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleFlow != null" >
        #{parentRoleFlow,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleName != null" >
        #{parentRoleName,jdbcType=VARCHAR},
      </if>
      <if test="allowRegFlag != null" >
        #{allowRegFlag,jdbcType=VARCHAR},
      </if>
      <if test="regPageId != null" >
        #{regPageId,jdbcType=VARCHAR},
      </if>
      <if test="regPageName != null" >
        #{regPageName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.SysRoleExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.SYS_ROLE
    <set >
      <if test="record.roleFlow != null" >
        ROLE_FLOW = #{record.roleFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.wsId != null" >
        WS_ID = #{record.wsId,jdbcType=VARCHAR},
      </if>
      <if test="record.wsName != null" >
        WS_NAME = #{record.wsName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevelId != null" >
        ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevelName != null" >
        ROLE_LEVEL_NAME = #{record.roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentRoleFlow != null" >
        PARENT_ROLE_FLOW = #{record.parentRoleFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.parentRoleName != null" >
        PARENT_ROLE_NAME = #{record.parentRoleName,jdbcType=VARCHAR},
      </if>
      <if test="record.allowRegFlag != null" >
        ALLOW_REG_FLAG = #{record.allowRegFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.regPageId != null" >
        REG_PAGE_ID = #{record.regPageId,jdbcType=VARCHAR},
      </if>
      <if test="record.regPageName != null" >
        REG_PAGE_NAME = #{record.regPageName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordinal != null" >
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.SYS_ROLE
    set ROLE_FLOW = #{record.roleFlow,jdbcType=VARCHAR},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      WS_ID = #{record.wsId,jdbcType=VARCHAR},
      WS_NAME = #{record.wsName,jdbcType=VARCHAR},
      ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=VARCHAR},
      ROLE_LEVEL_NAME = #{record.roleLevelName,jdbcType=VARCHAR},
      PARENT_ROLE_FLOW = #{record.parentRoleFlow,jdbcType=VARCHAR},
      PARENT_ROLE_NAME = #{record.parentRoleName,jdbcType=VARCHAR},
      ALLOW_REG_FLAG = #{record.allowRegFlag,jdbcType=VARCHAR},
      REG_PAGE_ID = #{record.regPageId,jdbcType=VARCHAR},
      REG_PAGE_NAME = #{record.regPageName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.SysRole" >
    update PDSCI.SYS_ROLE
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="wsId != null" >
        WS_ID = #{wsId,jdbcType=VARCHAR},
      </if>
      <if test="wsName != null" >
        WS_NAME = #{wsName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelId != null" >
        ROLE_LEVEL_ID = #{roleLevelId,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelName != null" >
        ROLE_LEVEL_NAME = #{roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleFlow != null" >
        PARENT_ROLE_FLOW = #{parentRoleFlow,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleName != null" >
        PARENT_ROLE_NAME = #{parentRoleName,jdbcType=VARCHAR},
      </if>
      <if test="allowRegFlag != null" >
        ALLOW_REG_FLAG = #{allowRegFlag,jdbcType=VARCHAR},
      </if>
      <if test="regPageId != null" >
        REG_PAGE_ID = #{regPageId,jdbcType=VARCHAR},
      </if>
      <if test="regPageName != null" >
        REG_PAGE_NAME = #{regPageName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLE_FLOW = #{roleFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.SysRole" >
    update PDSCI.SYS_ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      WS_ID = #{wsId,jdbcType=VARCHAR},
      WS_NAME = #{wsName,jdbcType=VARCHAR},
      ROLE_LEVEL_ID = #{roleLevelId,jdbcType=VARCHAR},
      ROLE_LEVEL_NAME = #{roleLevelName,jdbcType=VARCHAR},
      PARENT_ROLE_FLOW = #{parentRoleFlow,jdbcType=VARCHAR},
      PARENT_ROLE_NAME = #{parentRoleName,jdbcType=VARCHAR},
      ALLOW_REG_FLAG = #{allowRegFlag,jdbcType=VARCHAR},
      REG_PAGE_ID = #{regPageId,jdbcType=VARCHAR},
      REG_PAGE_NAME = #{regPageName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where ROLE_FLOW = #{roleFlow,jdbcType=VARCHAR}
  </update>
</mapper>