<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.RecruitTargetMainMapper">
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.RecruitTargetMain">
    <id column="RARGET_FLOW" jdbcType="VARCHAR" property="rargetFlow" />
    <result column="RECRUIT_YEAR" jdbcType="VARCHAR" property="recruitYear" />
    <result column="ACADEMIC_NUM" jdbcType="VARCHAR" property="academicNum" />
    <result column="SPECIALIZED_NUM" jdbcType="VARCHAR" property="specializedNum" />
    <result column="ALL_NUM" jdbcType="VARCHAR" property="allNum" />
    <result column="IS_REPORT" jdbcType="VARCHAR" property="isReport" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RARGET_FLOW, RECRUIT_YEAR, ACADEMIC_NUM, SPECIALIZED_NUM, ALL_NUM, IS_REPORT, RECORD_STATUS, 
    CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" parameterType="com.pinde.sci.model.mo.RecruitTargetMainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.RECRUIT_TARGET_MAIN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PDSCI.RECRUIT_TARGET_MAIN
    where RARGET_FLOW = #{rargetFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PDSCI.RECRUIT_TARGET_MAIN
    where RARGET_FLOW = #{rargetFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.RecruitTargetMainExample">
    delete from PDSCI.RECRUIT_TARGET_MAIN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.RecruitTargetMain">
    insert into PDSCI.RECRUIT_TARGET_MAIN (RARGET_FLOW, RECRUIT_YEAR, ACADEMIC_NUM, 
      SPECIALIZED_NUM, ALL_NUM, IS_REPORT, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW)
    values (#{rargetFlow,jdbcType=VARCHAR}, #{recruitYear,jdbcType=VARCHAR}, #{academicNum,jdbcType=VARCHAR}, 
      #{specializedNum,jdbcType=VARCHAR}, #{allNum,jdbcType=VARCHAR}, #{isReport,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.RecruitTargetMain">
    insert into PDSCI.RECRUIT_TARGET_MAIN
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rargetFlow != null">
        RARGET_FLOW,
      </if>
      <if test="recruitYear != null">
        RECRUIT_YEAR,
      </if>
      <if test="academicNum != null">
        ACADEMIC_NUM,
      </if>
      <if test="specializedNum != null">
        SPECIALIZED_NUM,
      </if>
      <if test="allNum != null">
        ALL_NUM,
      </if>
      <if test="isReport != null">
        IS_REPORT,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rargetFlow != null">
        #{rargetFlow,jdbcType=VARCHAR},
      </if>
      <if test="recruitYear != null">
        #{recruitYear,jdbcType=VARCHAR},
      </if>
      <if test="academicNum != null">
        #{academicNum,jdbcType=VARCHAR},
      </if>
      <if test="specializedNum != null">
        #{specializedNum,jdbcType=VARCHAR},
      </if>
      <if test="allNum != null">
        #{allNum,jdbcType=VARCHAR},
      </if>
      <if test="isReport != null">
        #{isReport,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.RecruitTargetMainExample" resultType="java.lang.Integer">
    select count(*) from PDSCI.RECRUIT_TARGET_MAIN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PDSCI.RECRUIT_TARGET_MAIN
    <set>
      <if test="record.rargetFlow != null">
        RARGET_FLOW = #{record.rargetFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitYear != null">
        RECRUIT_YEAR = #{record.recruitYear,jdbcType=VARCHAR},
      </if>
      <if test="record.academicNum != null">
        ACADEMIC_NUM = #{record.academicNum,jdbcType=VARCHAR},
      </if>
      <if test="record.specializedNum != null">
        SPECIALIZED_NUM = #{record.specializedNum,jdbcType=VARCHAR},
      </if>
      <if test="record.allNum != null">
        ALL_NUM = #{record.allNum,jdbcType=VARCHAR},
      </if>
      <if test="record.isReport != null">
        IS_REPORT = #{record.isReport,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PDSCI.RECRUIT_TARGET_MAIN
    set RARGET_FLOW = #{record.rargetFlow,jdbcType=VARCHAR},
      RECRUIT_YEAR = #{record.recruitYear,jdbcType=VARCHAR},
      ACADEMIC_NUM = #{record.academicNum,jdbcType=VARCHAR},
      SPECIALIZED_NUM = #{record.specializedNum,jdbcType=VARCHAR},
      ALL_NUM = #{record.allNum,jdbcType=VARCHAR},
      IS_REPORT = #{record.isReport,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.RecruitTargetMain">
    update PDSCI.RECRUIT_TARGET_MAIN
    <set>
      <if test="recruitYear != null">
        RECRUIT_YEAR = #{recruitYear,jdbcType=VARCHAR},
      </if>
      <if test="academicNum != null">
        ACADEMIC_NUM = #{academicNum,jdbcType=VARCHAR},
      </if>
      <if test="specializedNum != null">
        SPECIALIZED_NUM = #{specializedNum,jdbcType=VARCHAR},
      </if>
      <if test="allNum != null">
        ALL_NUM = #{allNum,jdbcType=VARCHAR},
      </if>
      <if test="isReport != null">
        IS_REPORT = #{isReport,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RARGET_FLOW = #{rargetFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.RecruitTargetMain">
    update PDSCI.RECRUIT_TARGET_MAIN
    set RECRUIT_YEAR = #{recruitYear,jdbcType=VARCHAR},
      ACADEMIC_NUM = #{academicNum,jdbcType=VARCHAR},
      SPECIALIZED_NUM = #{specializedNum,jdbcType=VARCHAR},
      ALL_NUM = #{allNum,jdbcType=VARCHAR},
      IS_REPORT = #{isReport,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RARGET_FLOW = #{rargetFlow,jdbcType=VARCHAR}
  </update>
</mapper>