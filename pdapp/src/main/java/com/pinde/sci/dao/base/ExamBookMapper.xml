<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ExamBookMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ExamBook" >
    <id column="BOOK_FLOW" property="bookFlow" jdbcType="VARCHAR" />
    <result column="BOOK_NAME" property="bookName" jdbcType="VARCHAR" />
    <result column="BOOK_PARENT_FLOW" property="bookParentFlow" jdbcType="VARCHAR" />
    <result column="BOOK_TYPE_ID" property="bookTypeId" jdbcType="VARCHAR" />
    <result column="BOOK_TYPE_NAME" property="bookTypeName" jdbcType="VARCHAR" />
    <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
    <result column="BOOK_NUM" property="bookNum" jdbcType="VARCHAR" />
    <result column="PUBLISH_YEAR" property="publishYear" jdbcType="VARCHAR" />
    <result column="BOOK_PRESS" property="bookPress" jdbcType="VARCHAR" />
    <result column="DEPTH" property="depth" jdbcType="VARCHAR" />
    <result column="LEAF_FLAG" property="leafFlag" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="BOOK_PAGE_NUM" property="bookPageNum" jdbcType="DECIMAL" />
    <result column="BOOK_SOURCE" property="bookSource" jdbcType="VARCHAR" />
    <result column="REGIST_STATUS_ID" property="registStatusId" jdbcType="VARCHAR" />
    <result column="REGIST_STATUS_NAME" property="registStatusName" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BOOK_FLOW, BOOK_NAME, BOOK_PARENT_FLOW, BOOK_TYPE_ID, BOOK_TYPE_NAME, ORDINAL, BOOK_NUM, 
    PUBLISH_YEAR, BOOK_PRESS, DEPTH, LEAF_FLAG, MEMO, BOOK_PAGE_NUM, BOOK_SOURCE, REGIST_STATUS_ID, 
    REGIST_STATUS_NAME, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.ExamBookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_BOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EXAM_BOOK
    where BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EXAM_BOOK
    where BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ExamBookExample" >
    delete from PDSCI.EXAM_BOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ExamBook" >
    insert into PDSCI.EXAM_BOOK (BOOK_FLOW, BOOK_NAME, BOOK_PARENT_FLOW, 
      BOOK_TYPE_ID, BOOK_TYPE_NAME, ORDINAL, 
      BOOK_NUM, PUBLISH_YEAR, BOOK_PRESS, 
      DEPTH, LEAF_FLAG, MEMO, 
      BOOK_PAGE_NUM, BOOK_SOURCE, REGIST_STATUS_ID, 
      REGIST_STATUS_NAME, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
      )
    values (#{bookFlow,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{bookParentFlow,jdbcType=VARCHAR}, 
      #{bookTypeId,jdbcType=VARCHAR}, #{bookTypeName,jdbcType=VARCHAR}, #{ordinal,jdbcType=DECIMAL}, 
      #{bookNum,jdbcType=VARCHAR}, #{publishYear,jdbcType=VARCHAR}, #{bookPress,jdbcType=VARCHAR}, 
      #{depth,jdbcType=VARCHAR}, #{leafFlag,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{bookPageNum,jdbcType=DECIMAL}, #{bookSource,jdbcType=VARCHAR}, #{registStatusId,jdbcType=VARCHAR}, 
      #{registStatusName,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ExamBook" >
    insert into PDSCI.EXAM_BOOK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookFlow != null" >
        BOOK_FLOW,
      </if>
      <if test="bookName != null" >
        BOOK_NAME,
      </if>
      <if test="bookParentFlow != null" >
        BOOK_PARENT_FLOW,
      </if>
      <if test="bookTypeId != null" >
        BOOK_TYPE_ID,
      </if>
      <if test="bookTypeName != null" >
        BOOK_TYPE_NAME,
      </if>
      <if test="ordinal != null" >
        ORDINAL,
      </if>
      <if test="bookNum != null" >
        BOOK_NUM,
      </if>
      <if test="publishYear != null" >
        PUBLISH_YEAR,
      </if>
      <if test="bookPress != null" >
        BOOK_PRESS,
      </if>
      <if test="depth != null" >
        DEPTH,
      </if>
      <if test="leafFlag != null" >
        LEAF_FLAG,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="bookPageNum != null" >
        BOOK_PAGE_NUM,
      </if>
      <if test="bookSource != null" >
        BOOK_SOURCE,
      </if>
      <if test="registStatusId != null" >
        REGIST_STATUS_ID,
      </if>
      <if test="registStatusName != null" >
        REGIST_STATUS_NAME,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookFlow != null" >
        #{bookFlow,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookParentFlow != null" >
        #{bookParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeId != null" >
        #{bookTypeId,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeName != null" >
        #{bookTypeName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="bookNum != null" >
        #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null" >
        #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null" >
        #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="depth != null" >
        #{depth,jdbcType=VARCHAR},
      </if>
      <if test="leafFlag != null" >
        #{leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookPageNum != null" >
        #{bookPageNum,jdbcType=DECIMAL},
      </if>
      <if test="bookSource != null" >
        #{bookSource,jdbcType=VARCHAR},
      </if>
      <if test="registStatusId != null" >
        #{registStatusId,jdbcType=VARCHAR},
      </if>
      <if test="registStatusName != null" >
        #{registStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ExamBookExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EXAM_BOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EXAM_BOOK
    <set >
      <if test="record.bookFlow != null" >
        BOOK_FLOW = #{record.bookFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null" >
        BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookParentFlow != null" >
        BOOK_PARENT_FLOW = #{record.bookParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTypeId != null" >
        BOOK_TYPE_ID = #{record.bookTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTypeName != null" >
        BOOK_TYPE_NAME = #{record.bookTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordinal != null" >
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.bookNum != null" >
        BOOK_NUM = #{record.bookNum,jdbcType=VARCHAR},
      </if>
      <if test="record.publishYear != null" >
        PUBLISH_YEAR = #{record.publishYear,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPress != null" >
        BOOK_PRESS = #{record.bookPress,jdbcType=VARCHAR},
      </if>
      <if test="record.depth != null" >
        DEPTH = #{record.depth,jdbcType=VARCHAR},
      </if>
      <if test="record.leafFlag != null" >
        LEAF_FLAG = #{record.leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPageNum != null" >
        BOOK_PAGE_NUM = #{record.bookPageNum,jdbcType=DECIMAL},
      </if>
      <if test="record.bookSource != null" >
        BOOK_SOURCE = #{record.bookSource,jdbcType=VARCHAR},
      </if>
      <if test="record.registStatusId != null" >
        REGIST_STATUS_ID = #{record.registStatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.registStatusName != null" >
        REGIST_STATUS_NAME = #{record.registStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EXAM_BOOK
    set BOOK_FLOW = #{record.bookFlow,jdbcType=VARCHAR},
      BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      BOOK_PARENT_FLOW = #{record.bookParentFlow,jdbcType=VARCHAR},
      BOOK_TYPE_ID = #{record.bookTypeId,jdbcType=VARCHAR},
      BOOK_TYPE_NAME = #{record.bookTypeName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      BOOK_NUM = #{record.bookNum,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{record.publishYear,jdbcType=VARCHAR},
      BOOK_PRESS = #{record.bookPress,jdbcType=VARCHAR},
      DEPTH = #{record.depth,jdbcType=VARCHAR},
      LEAF_FLAG = #{record.leafFlag,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      BOOK_PAGE_NUM = #{record.bookPageNum,jdbcType=DECIMAL},
      BOOK_SOURCE = #{record.bookSource,jdbcType=VARCHAR},
      REGIST_STATUS_ID = #{record.registStatusId,jdbcType=VARCHAR},
      REGIST_STATUS_NAME = #{record.registStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ExamBook" >
    update PDSCI.EXAM_BOOK
    <set >
      <if test="bookName != null" >
        BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookParentFlow != null" >
        BOOK_PARENT_FLOW = #{bookParentFlow,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeId != null" >
        BOOK_TYPE_ID = #{bookTypeId,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeName != null" >
        BOOK_TYPE_NAME = #{bookTypeName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="bookNum != null" >
        BOOK_NUM = #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null" >
        PUBLISH_YEAR = #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null" >
        BOOK_PRESS = #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="depth != null" >
        DEPTH = #{depth,jdbcType=VARCHAR},
      </if>
      <if test="leafFlag != null" >
        LEAF_FLAG = #{leafFlag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookPageNum != null" >
        BOOK_PAGE_NUM = #{bookPageNum,jdbcType=DECIMAL},
      </if>
      <if test="bookSource != null" >
        BOOK_SOURCE = #{bookSource,jdbcType=VARCHAR},
      </if>
      <if test="registStatusId != null" >
        REGIST_STATUS_ID = #{registStatusId,jdbcType=VARCHAR},
      </if>
      <if test="registStatusName != null" >
        REGIST_STATUS_NAME = #{registStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ExamBook" >
    update PDSCI.EXAM_BOOK
    set BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      BOOK_PARENT_FLOW = #{bookParentFlow,jdbcType=VARCHAR},
      BOOK_TYPE_ID = #{bookTypeId,jdbcType=VARCHAR},
      BOOK_TYPE_NAME = #{bookTypeName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      BOOK_NUM = #{bookNum,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{publishYear,jdbcType=VARCHAR},
      BOOK_PRESS = #{bookPress,jdbcType=VARCHAR},
      DEPTH = #{depth,jdbcType=VARCHAR},
      LEAF_FLAG = #{leafFlag,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      BOOK_PAGE_NUM = #{bookPageNum,jdbcType=DECIMAL},
      BOOK_SOURCE = #{bookSource,jdbcType=VARCHAR},
      REGIST_STATUS_ID = #{registStatusId,jdbcType=VARCHAR},
      REGIST_STATUS_NAME = #{registStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where BOOK_FLOW = #{bookFlow,jdbcType=VARCHAR}
  </update>
</mapper>