<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ErpCrmContractPayPlanMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ErpCrmContractPayPlan" >
    <id column="PLAN_FLOW" property="planFlow" jdbcType="VARCHAR" />
    <result column="CONTRACT_FLOW" property="contractFlow" jdbcType="VARCHAR" />
    <result column="PLAN_DATE" property="planDate" jdbcType="VARCHAR" />
    <result column="PAY_FUND" property="payFund" jdbcType="DECIMAL" />
    <result column="PLAN_TYPE_ID" property="planTypeId" jdbcType="VARCHAR" />
    <result column="PLAN_TYPE_NAME" property="planTypeName" jdbcType="VARCHAR" />
    <result column="PLAN_STATUS_ID" property="planStatusId" jdbcType="VARCHAR" />
    <result column="PLAN_STATUS_NAME" property="planStatusName" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="BALANCE_FUND" property="balanceFund" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PLAN_FLOW, CONTRACT_FLOW, PLAN_DATE, PAY_FUND, PLAN_TYPE_ID, PLAN_TYPE_NAME, PLAN_STATUS_ID, 
    PLAN_STATUS_NAME, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
    BALANCE_FUND
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    where PLAN_FLOW = #{planFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    where PLAN_FLOW = #{planFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlanExample" >
    delete from PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlan" >
    insert into PDSCI.ERP_CRM_CONTRACT_PAY_PLAN (PLAN_FLOW, CONTRACT_FLOW, PLAN_DATE, 
      PAY_FUND, PLAN_TYPE_ID, PLAN_TYPE_NAME, 
      PLAN_STATUS_ID, PLAN_STATUS_NAME, RECORD_STATUS, 
      CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
      MODIFY_USER_FLOW, BALANCE_FUND)
    values (#{planFlow,jdbcType=VARCHAR}, #{contractFlow,jdbcType=VARCHAR}, #{planDate,jdbcType=VARCHAR}, 
      #{payFund,jdbcType=DECIMAL}, #{planTypeId,jdbcType=VARCHAR}, #{planTypeName,jdbcType=VARCHAR}, 
      #{planStatusId,jdbcType=VARCHAR}, #{planStatusName,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUserFlow,jdbcType=VARCHAR}, #{balanceFund,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlan" >
    insert into PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="planFlow != null" >
        PLAN_FLOW,
      </if>
      <if test="contractFlow != null" >
        CONTRACT_FLOW,
      </if>
      <if test="planDate != null" >
        PLAN_DATE,
      </if>
      <if test="payFund != null" >
        PAY_FUND,
      </if>
      <if test="planTypeId != null" >
        PLAN_TYPE_ID,
      </if>
      <if test="planTypeName != null" >
        PLAN_TYPE_NAME,
      </if>
      <if test="planStatusId != null" >
        PLAN_STATUS_ID,
      </if>
      <if test="planStatusName != null" >
        PLAN_STATUS_NAME,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="balanceFund != null" >
        BALANCE_FUND,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="planFlow != null" >
        #{planFlow,jdbcType=VARCHAR},
      </if>
      <if test="contractFlow != null" >
        #{contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="planDate != null" >
        #{planDate,jdbcType=VARCHAR},
      </if>
      <if test="payFund != null" >
        #{payFund,jdbcType=DECIMAL},
      </if>
      <if test="planTypeId != null" >
        #{planTypeId,jdbcType=VARCHAR},
      </if>
      <if test="planTypeName != null" >
        #{planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="planStatusId != null" >
        #{planStatusId,jdbcType=VARCHAR},
      </if>
      <if test="planStatusName != null" >
        #{planStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="balanceFund != null" >
        #{balanceFund,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlanExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <set >
      <if test="record.planFlow != null" >
        PLAN_FLOW = #{record.planFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.contractFlow != null" >
        CONTRACT_FLOW = #{record.contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.planDate != null" >
        PLAN_DATE = #{record.planDate,jdbcType=VARCHAR},
      </if>
      <if test="record.payFund != null" >
        PAY_FUND = #{record.payFund,jdbcType=DECIMAL},
      </if>
      <if test="record.planTypeId != null" >
        PLAN_TYPE_ID = #{record.planTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.planTypeName != null" >
        PLAN_TYPE_NAME = #{record.planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.planStatusId != null" >
        PLAN_STATUS_ID = #{record.planStatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.planStatusName != null" >
        PLAN_STATUS_NAME = #{record.planStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceFund != null" >
        BALANCE_FUND = #{record.balanceFund,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    set PLAN_FLOW = #{record.planFlow,jdbcType=VARCHAR},
      CONTRACT_FLOW = #{record.contractFlow,jdbcType=VARCHAR},
      PLAN_DATE = #{record.planDate,jdbcType=VARCHAR},
      PAY_FUND = #{record.payFund,jdbcType=DECIMAL},
      PLAN_TYPE_ID = #{record.planTypeId,jdbcType=VARCHAR},
      PLAN_TYPE_NAME = #{record.planTypeName,jdbcType=VARCHAR},
      PLAN_STATUS_ID = #{record.planStatusId,jdbcType=VARCHAR},
      PLAN_STATUS_NAME = #{record.planStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      BALANCE_FUND = #{record.balanceFund,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlan" >
    update PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    <set >
      <if test="contractFlow != null" >
        CONTRACT_FLOW = #{contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="planDate != null" >
        PLAN_DATE = #{planDate,jdbcType=VARCHAR},
      </if>
      <if test="payFund != null" >
        PAY_FUND = #{payFund,jdbcType=DECIMAL},
      </if>
      <if test="planTypeId != null" >
        PLAN_TYPE_ID = #{planTypeId,jdbcType=VARCHAR},
      </if>
      <if test="planTypeName != null" >
        PLAN_TYPE_NAME = #{planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="planStatusId != null" >
        PLAN_STATUS_ID = #{planStatusId,jdbcType=VARCHAR},
      </if>
      <if test="planStatusName != null" >
        PLAN_STATUS_NAME = #{planStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="balanceFund != null" >
        BALANCE_FUND = #{balanceFund,jdbcType=DECIMAL},
      </if>
    </set>
    where PLAN_FLOW = #{planFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ErpCrmContractPayPlan" >
    update PDSCI.ERP_CRM_CONTRACT_PAY_PLAN
    set CONTRACT_FLOW = #{contractFlow,jdbcType=VARCHAR},
      PLAN_DATE = #{planDate,jdbcType=VARCHAR},
      PAY_FUND = #{payFund,jdbcType=DECIMAL},
      PLAN_TYPE_ID = #{planTypeId,jdbcType=VARCHAR},
      PLAN_TYPE_NAME = #{planTypeName,jdbcType=VARCHAR},
      PLAN_STATUS_ID = #{planStatusId,jdbcType=VARCHAR},
      PLAN_STATUS_NAME = #{planStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      BALANCE_FUND = #{balanceFund,jdbcType=DECIMAL}
    where PLAN_FLOW = #{planFlow,jdbcType=VARCHAR}
  </update>
</mapper>