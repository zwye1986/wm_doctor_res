<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.EdcVisitDataEventMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.EdcVisitDataEvent" >
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="PROJ_FLOW" property="projFlow" jdbcType="VARCHAR" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="PATIENT_FLOW" property="patientFlow" jdbcType="VARCHAR" />
    <result column="PATIENT_CODE" property="patientCode" jdbcType="VARCHAR" />
    <result column="DATA_RECORD_FLOW" property="dataRecordFlow" jdbcType="VARCHAR" />
    <result column="VISIT_FLOW" property="visitFlow" jdbcType="VARCHAR" />
    <result column="VISIT_NAME" property="visitName" jdbcType="VARCHAR" />
    <result column="MODULE_CODE" property="moduleCode" jdbcType="VARCHAR" />
    <result column="MODULE_NAME" property="moduleName" jdbcType="VARCHAR" />
    <result column="ELEMENT_CODE" property="elementCode" jdbcType="VARCHAR" />
    <result column="ELEMENT_NAME" property="elementName" jdbcType="VARCHAR" />
    <result column="ELEMENT_SERIAL_SEQ" property="elementSerialSeq" jdbcType="VARCHAR" />
    <result column="ATTR_CODE" property="attrCode" jdbcType="VARCHAR" />
    <result column="ATTR_NAME" property="attrName" jdbcType="VARCHAR" />
    <result column="EVENT_SEQ" property="eventSeq" jdbcType="VARCHAR" />
    <result column="ATTR_VALUE" property="attrValue" jdbcType="VARCHAR" />
    <result column="ATTR_EVENT_VALUE" property="attrEventValue" jdbcType="VARCHAR" />
    <result column="EVENT_TIME" property="eventTime" jdbcType="VARCHAR" />
    <result column="EVENT_USER_FLOW" property="eventUserFlow" jdbcType="VARCHAR" />
    <result column="EVENT_USER_NAME" property="eventUserName" jdbcType="VARCHAR" />
    <result column="QUERY_FLOW" property="queryFlow" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, PROJ_FLOW, ORG_FLOW, PATIENT_FLOW, PATIENT_CODE, DATA_RECORD_FLOW, VISIT_FLOW, 
    VISIT_NAME, MODULE_CODE, MODULE_NAME, ELEMENT_CODE, ELEMENT_NAME, ELEMENT_SERIAL_SEQ, 
    ATTR_CODE, ATTR_NAME, EVENT_SEQ, ATTR_VALUE, ATTR_EVENT_VALUE, EVENT_TIME, EVENT_USER_FLOW, 
    EVENT_USER_NAME, QUERY_FLOW, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
    MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.EdcVisitDataEventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EDC_VISIT_DATA_EVENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EDC_VISIT_DATA_EVENT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EDC_VISIT_DATA_EVENT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.EdcVisitDataEventExample" >
    delete from PDSCI.EDC_VISIT_DATA_EVENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.EdcVisitDataEvent" >
    insert into PDSCI.EDC_VISIT_DATA_EVENT (RECORD_FLOW, PROJ_FLOW, ORG_FLOW, 
      PATIENT_FLOW, PATIENT_CODE, DATA_RECORD_FLOW, 
      VISIT_FLOW, VISIT_NAME, MODULE_CODE, 
      MODULE_NAME, ELEMENT_CODE, ELEMENT_NAME, 
      ELEMENT_SERIAL_SEQ, ATTR_CODE, ATTR_NAME, 
      EVENT_SEQ, ATTR_VALUE, ATTR_EVENT_VALUE, 
      EVENT_TIME, EVENT_USER_FLOW, EVENT_USER_NAME, 
      QUERY_FLOW, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
      )
    values (#{recordFlow,jdbcType=VARCHAR}, #{projFlow,jdbcType=VARCHAR}, #{orgFlow,jdbcType=VARCHAR}, 
      #{patientFlow,jdbcType=VARCHAR}, #{patientCode,jdbcType=VARCHAR}, #{dataRecordFlow,jdbcType=VARCHAR}, 
      #{visitFlow,jdbcType=VARCHAR}, #{visitName,jdbcType=VARCHAR}, #{moduleCode,jdbcType=VARCHAR}, 
      #{moduleName,jdbcType=VARCHAR}, #{elementCode,jdbcType=VARCHAR}, #{elementName,jdbcType=VARCHAR}, 
      #{elementSerialSeq,jdbcType=VARCHAR}, #{attrCode,jdbcType=VARCHAR}, #{attrName,jdbcType=VARCHAR}, 
      #{eventSeq,jdbcType=VARCHAR}, #{attrValue,jdbcType=VARCHAR}, #{attrEventValue,jdbcType=VARCHAR}, 
      #{eventTime,jdbcType=VARCHAR}, #{eventUserFlow,jdbcType=VARCHAR}, #{eventUserName,jdbcType=VARCHAR}, 
      #{queryFlow,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.EdcVisitDataEvent" >
    insert into PDSCI.EDC_VISIT_DATA_EVENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="projFlow != null" >
        PROJ_FLOW,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="patientFlow != null" >
        PATIENT_FLOW,
      </if>
      <if test="patientCode != null" >
        PATIENT_CODE,
      </if>
      <if test="dataRecordFlow != null" >
        DATA_RECORD_FLOW,
      </if>
      <if test="visitFlow != null" >
        VISIT_FLOW,
      </if>
      <if test="visitName != null" >
        VISIT_NAME,
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE,
      </if>
      <if test="moduleName != null" >
        MODULE_NAME,
      </if>
      <if test="elementCode != null" >
        ELEMENT_CODE,
      </if>
      <if test="elementName != null" >
        ELEMENT_NAME,
      </if>
      <if test="elementSerialSeq != null" >
        ELEMENT_SERIAL_SEQ,
      </if>
      <if test="attrCode != null" >
        ATTR_CODE,
      </if>
      <if test="attrName != null" >
        ATTR_NAME,
      </if>
      <if test="eventSeq != null" >
        EVENT_SEQ,
      </if>
      <if test="attrValue != null" >
        ATTR_VALUE,
      </if>
      <if test="attrEventValue != null" >
        ATTR_EVENT_VALUE,
      </if>
      <if test="eventTime != null" >
        EVENT_TIME,
      </if>
      <if test="eventUserFlow != null" >
        EVENT_USER_FLOW,
      </if>
      <if test="eventUserName != null" >
        EVENT_USER_NAME,
      </if>
      <if test="queryFlow != null" >
        QUERY_FLOW,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="projFlow != null" >
        #{projFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="patientFlow != null" >
        #{patientFlow,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null" >
        #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="dataRecordFlow != null" >
        #{dataRecordFlow,jdbcType=VARCHAR},
      </if>
      <if test="visitFlow != null" >
        #{visitFlow,jdbcType=VARCHAR},
      </if>
      <if test="visitName != null" >
        #{visitName,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null" >
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null" >
        #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="elementName != null" >
        #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementSerialSeq != null" >
        #{elementSerialSeq,jdbcType=VARCHAR},
      </if>
      <if test="attrCode != null" >
        #{attrCode,jdbcType=VARCHAR},
      </if>
      <if test="attrName != null" >
        #{attrName,jdbcType=VARCHAR},
      </if>
      <if test="eventSeq != null" >
        #{eventSeq,jdbcType=VARCHAR},
      </if>
      <if test="attrValue != null" >
        #{attrValue,jdbcType=VARCHAR},
      </if>
      <if test="attrEventValue != null" >
        #{attrEventValue,jdbcType=VARCHAR},
      </if>
      <if test="eventTime != null" >
        #{eventTime,jdbcType=VARCHAR},
      </if>
      <if test="eventUserFlow != null" >
        #{eventUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="eventUserName != null" >
        #{eventUserName,jdbcType=VARCHAR},
      </if>
      <if test="queryFlow != null" >
        #{queryFlow,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.EdcVisitDataEventExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EDC_VISIT_DATA_EVENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EDC_VISIT_DATA_EVENT
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.projFlow != null" >
        PROJ_FLOW = #{record.projFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.patientFlow != null" >
        PATIENT_FLOW = #{record.patientFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.patientCode != null" >
        PATIENT_CODE = #{record.patientCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dataRecordFlow != null" >
        DATA_RECORD_FLOW = #{record.dataRecordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.visitFlow != null" >
        VISIT_FLOW = #{record.visitFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.visitName != null" >
        VISIT_NAME = #{record.visitName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleCode != null" >
        MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleName != null" >
        MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementCode != null" >
        ELEMENT_CODE = #{record.elementCode,jdbcType=VARCHAR},
      </if>
      <if test="record.elementName != null" >
        ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementSerialSeq != null" >
        ELEMENT_SERIAL_SEQ = #{record.elementSerialSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.attrCode != null" >
        ATTR_CODE = #{record.attrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.attrName != null" >
        ATTR_NAME = #{record.attrName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventSeq != null" >
        EVENT_SEQ = #{record.eventSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.attrValue != null" >
        ATTR_VALUE = #{record.attrValue,jdbcType=VARCHAR},
      </if>
      <if test="record.attrEventValue != null" >
        ATTR_EVENT_VALUE = #{record.attrEventValue,jdbcType=VARCHAR},
      </if>
      <if test="record.eventTime != null" >
        EVENT_TIME = #{record.eventTime,jdbcType=VARCHAR},
      </if>
      <if test="record.eventUserFlow != null" >
        EVENT_USER_FLOW = #{record.eventUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.eventUserName != null" >
        EVENT_USER_NAME = #{record.eventUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.queryFlow != null" >
        QUERY_FLOW = #{record.queryFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EDC_VISIT_DATA_EVENT
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      PROJ_FLOW = #{record.projFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      PATIENT_FLOW = #{record.patientFlow,jdbcType=VARCHAR},
      PATIENT_CODE = #{record.patientCode,jdbcType=VARCHAR},
      DATA_RECORD_FLOW = #{record.dataRecordFlow,jdbcType=VARCHAR},
      VISIT_FLOW = #{record.visitFlow,jdbcType=VARCHAR},
      VISIT_NAME = #{record.visitName,jdbcType=VARCHAR},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      ELEMENT_CODE = #{record.elementCode,jdbcType=VARCHAR},
      ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      ELEMENT_SERIAL_SEQ = #{record.elementSerialSeq,jdbcType=VARCHAR},
      ATTR_CODE = #{record.attrCode,jdbcType=VARCHAR},
      ATTR_NAME = #{record.attrName,jdbcType=VARCHAR},
      EVENT_SEQ = #{record.eventSeq,jdbcType=VARCHAR},
      ATTR_VALUE = #{record.attrValue,jdbcType=VARCHAR},
      ATTR_EVENT_VALUE = #{record.attrEventValue,jdbcType=VARCHAR},
      EVENT_TIME = #{record.eventTime,jdbcType=VARCHAR},
      EVENT_USER_FLOW = #{record.eventUserFlow,jdbcType=VARCHAR},
      EVENT_USER_NAME = #{record.eventUserName,jdbcType=VARCHAR},
      QUERY_FLOW = #{record.queryFlow,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.EdcVisitDataEvent" >
    update PDSCI.EDC_VISIT_DATA_EVENT
    <set >
      <if test="projFlow != null" >
        PROJ_FLOW = #{projFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="patientFlow != null" >
        PATIENT_FLOW = #{patientFlow,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null" >
        PATIENT_CODE = #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="dataRecordFlow != null" >
        DATA_RECORD_FLOW = #{dataRecordFlow,jdbcType=VARCHAR},
      </if>
      <if test="visitFlow != null" >
        VISIT_FLOW = #{visitFlow,jdbcType=VARCHAR},
      </if>
      <if test="visitName != null" >
        VISIT_NAME = #{visitName,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null" >
        ELEMENT_CODE = #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="elementName != null" >
        ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementSerialSeq != null" >
        ELEMENT_SERIAL_SEQ = #{elementSerialSeq,jdbcType=VARCHAR},
      </if>
      <if test="attrCode != null" >
        ATTR_CODE = #{attrCode,jdbcType=VARCHAR},
      </if>
      <if test="attrName != null" >
        ATTR_NAME = #{attrName,jdbcType=VARCHAR},
      </if>
      <if test="eventSeq != null" >
        EVENT_SEQ = #{eventSeq,jdbcType=VARCHAR},
      </if>
      <if test="attrValue != null" >
        ATTR_VALUE = #{attrValue,jdbcType=VARCHAR},
      </if>
      <if test="attrEventValue != null" >
        ATTR_EVENT_VALUE = #{attrEventValue,jdbcType=VARCHAR},
      </if>
      <if test="eventTime != null" >
        EVENT_TIME = #{eventTime,jdbcType=VARCHAR},
      </if>
      <if test="eventUserFlow != null" >
        EVENT_USER_FLOW = #{eventUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="eventUserName != null" >
        EVENT_USER_NAME = #{eventUserName,jdbcType=VARCHAR},
      </if>
      <if test="queryFlow != null" >
        QUERY_FLOW = #{queryFlow,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.EdcVisitDataEvent" >
    update PDSCI.EDC_VISIT_DATA_EVENT
    set PROJ_FLOW = #{projFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      PATIENT_FLOW = #{patientFlow,jdbcType=VARCHAR},
      PATIENT_CODE = #{patientCode,jdbcType=VARCHAR},
      DATA_RECORD_FLOW = #{dataRecordFlow,jdbcType=VARCHAR},
      VISIT_FLOW = #{visitFlow,jdbcType=VARCHAR},
      VISIT_NAME = #{visitName,jdbcType=VARCHAR},
      MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      ELEMENT_CODE = #{elementCode,jdbcType=VARCHAR},
      ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      ELEMENT_SERIAL_SEQ = #{elementSerialSeq,jdbcType=VARCHAR},
      ATTR_CODE = #{attrCode,jdbcType=VARCHAR},
      ATTR_NAME = #{attrName,jdbcType=VARCHAR},
      EVENT_SEQ = #{eventSeq,jdbcType=VARCHAR},
      ATTR_VALUE = #{attrValue,jdbcType=VARCHAR},
      ATTR_EVENT_VALUE = #{attrEventValue,jdbcType=VARCHAR},
      EVENT_TIME = #{eventTime,jdbcType=VARCHAR},
      EVENT_USER_FLOW = #{eventUserFlow,jdbcType=VARCHAR},
      EVENT_USER_NAME = #{eventUserName,jdbcType=VARCHAR},
      QUERY_FLOW = #{queryFlow,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>