<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.NydbPaperTitleMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.NydbPaperTitle" >
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="DEFENCE_FLOW" property="defenceFlow" jdbcType="VARCHAR" />
    <result column="PAPER_TITLE" property="paperTitle" jdbcType="VARCHAR" />
    <result column="JOURNAL_NAME" property="journalName" jdbcType="VARCHAR" />
    <result column="PUBLISH_YEAR" property="publishYear" jdbcType="VARCHAR" />
    <result column="VOLUME" property="volume" jdbcType="VARCHAR" />
    <result column="PAGE_NUMBER" property="pageNumber" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="DEGREE_REQ_FLAG" property="degreeReqFlag" jdbcType="VARCHAR" />
    <result column="JOURNAL_TYPE" property="journalType" jdbcType="VARCHAR" />
    <result column="ARTICLE_STATUS" property="articleStatus" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pinde.sci.model.mo.NydbPaperTitle" extends="BaseResultMap" >
    <result column="PAPER_CONTENT" property="paperContent" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, DEFENCE_FLOW, PAPER_TITLE, JOURNAL_NAME, PUBLISH_YEAR, VOLUME, PAGE_NUMBER, 
    RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, DEGREE_REQ_FLAG, 
    JOURNAL_TYPE, ARTICLE_STATUS
  </sql>
  <sql id="Blob_Column_List" >
    PAPER_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pinde.sci.model.mo.NydbPaperTitleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.NYDB_PAPER_TITLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.NydbPaperTitleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.NYDB_PAPER_TITLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.NYDB_PAPER_TITLE
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.NYDB_PAPER_TITLE
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.NydbPaperTitleExample" >
    delete from PDSCI.NYDB_PAPER_TITLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.NydbPaperTitle" >
    insert into PDSCI.NYDB_PAPER_TITLE (RECORD_FLOW, DEFENCE_FLOW, PAPER_TITLE, 
      JOURNAL_NAME, PUBLISH_YEAR, VOLUME, 
      PAGE_NUMBER, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
      DEGREE_REQ_FLAG, JOURNAL_TYPE, ARTICLE_STATUS, 
      PAPER_CONTENT)
    values (#{recordFlow,jdbcType=VARCHAR}, #{defenceFlow,jdbcType=VARCHAR}, #{paperTitle,jdbcType=VARCHAR}, 
      #{journalName,jdbcType=VARCHAR}, #{publishYear,jdbcType=VARCHAR}, #{volume,jdbcType=VARCHAR}, 
      #{pageNumber,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, 
      #{degreeReqFlag,jdbcType=VARCHAR}, #{journalType,jdbcType=VARCHAR}, #{articleStatus,jdbcType=VARCHAR}, 
      #{paperContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.NydbPaperTitle" >
    insert into PDSCI.NYDB_PAPER_TITLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="defenceFlow != null" >
        DEFENCE_FLOW,
      </if>
      <if test="paperTitle != null" >
        PAPER_TITLE,
      </if>
      <if test="journalName != null" >
        JOURNAL_NAME,
      </if>
      <if test="publishYear != null" >
        PUBLISH_YEAR,
      </if>
      <if test="volume != null" >
        VOLUME,
      </if>
      <if test="pageNumber != null" >
        PAGE_NUMBER,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="degreeReqFlag != null" >
        DEGREE_REQ_FLAG,
      </if>
      <if test="journalType != null" >
        JOURNAL_TYPE,
      </if>
      <if test="articleStatus != null" >
        ARTICLE_STATUS,
      </if>
      <if test="paperContent != null" >
        PAPER_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="defenceFlow != null" >
        #{defenceFlow,jdbcType=VARCHAR},
      </if>
      <if test="paperTitle != null" >
        #{paperTitle,jdbcType=VARCHAR},
      </if>
      <if test="journalName != null" >
        #{journalName,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null" >
        #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=VARCHAR},
      </if>
      <if test="pageNumber != null" >
        #{pageNumber,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="degreeReqFlag != null" >
        #{degreeReqFlag,jdbcType=VARCHAR},
      </if>
      <if test="journalType != null" >
        #{journalType,jdbcType=VARCHAR},
      </if>
      <if test="articleStatus != null" >
        #{articleStatus,jdbcType=VARCHAR},
      </if>
      <if test="paperContent != null" >
        #{paperContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.NydbPaperTitleExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.NYDB_PAPER_TITLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.NYDB_PAPER_TITLE
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.defenceFlow != null" >
        DEFENCE_FLOW = #{record.defenceFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.paperTitle != null" >
        PAPER_TITLE = #{record.paperTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.journalName != null" >
        JOURNAL_NAME = #{record.journalName,jdbcType=VARCHAR},
      </if>
      <if test="record.publishYear != null" >
        PUBLISH_YEAR = #{record.publishYear,jdbcType=VARCHAR},
      </if>
      <if test="record.volume != null" >
        VOLUME = #{record.volume,jdbcType=VARCHAR},
      </if>
      <if test="record.pageNumber != null" >
        PAGE_NUMBER = #{record.pageNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeReqFlag != null" >
        DEGREE_REQ_FLAG = #{record.degreeReqFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.journalType != null" >
        JOURNAL_TYPE = #{record.journalType,jdbcType=VARCHAR},
      </if>
      <if test="record.articleStatus != null" >
        ARTICLE_STATUS = #{record.articleStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.paperContent != null" >
        PAPER_CONTENT = #{record.paperContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update PDSCI.NYDB_PAPER_TITLE
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      DEFENCE_FLOW = #{record.defenceFlow,jdbcType=VARCHAR},
      PAPER_TITLE = #{record.paperTitle,jdbcType=VARCHAR},
      JOURNAL_NAME = #{record.journalName,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{record.publishYear,jdbcType=VARCHAR},
      VOLUME = #{record.volume,jdbcType=VARCHAR},
      PAGE_NUMBER = #{record.pageNumber,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      DEGREE_REQ_FLAG = #{record.degreeReqFlag,jdbcType=VARCHAR},
      JOURNAL_TYPE = #{record.journalType,jdbcType=VARCHAR},
      ARTICLE_STATUS = #{record.articleStatus,jdbcType=VARCHAR},
      PAPER_CONTENT = #{record.paperContent,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.NYDB_PAPER_TITLE
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      DEFENCE_FLOW = #{record.defenceFlow,jdbcType=VARCHAR},
      PAPER_TITLE = #{record.paperTitle,jdbcType=VARCHAR},
      JOURNAL_NAME = #{record.journalName,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{record.publishYear,jdbcType=VARCHAR},
      VOLUME = #{record.volume,jdbcType=VARCHAR},
      PAGE_NUMBER = #{record.pageNumber,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      DEGREE_REQ_FLAG = #{record.degreeReqFlag,jdbcType=VARCHAR},
      JOURNAL_TYPE = #{record.journalType,jdbcType=VARCHAR},
      ARTICLE_STATUS = #{record.articleStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.NydbPaperTitle" >
    update PDSCI.NYDB_PAPER_TITLE
    <set >
      <if test="defenceFlow != null" >
        DEFENCE_FLOW = #{defenceFlow,jdbcType=VARCHAR},
      </if>
      <if test="paperTitle != null" >
        PAPER_TITLE = #{paperTitle,jdbcType=VARCHAR},
      </if>
      <if test="journalName != null" >
        JOURNAL_NAME = #{journalName,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null" >
        PUBLISH_YEAR = #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="volume != null" >
        VOLUME = #{volume,jdbcType=VARCHAR},
      </if>
      <if test="pageNumber != null" >
        PAGE_NUMBER = #{pageNumber,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="degreeReqFlag != null" >
        DEGREE_REQ_FLAG = #{degreeReqFlag,jdbcType=VARCHAR},
      </if>
      <if test="journalType != null" >
        JOURNAL_TYPE = #{journalType,jdbcType=VARCHAR},
      </if>
      <if test="articleStatus != null" >
        ARTICLE_STATUS = #{articleStatus,jdbcType=VARCHAR},
      </if>
      <if test="paperContent != null" >
        PAPER_CONTENT = #{paperContent,jdbcType=CLOB},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.sci.model.mo.NydbPaperTitle" >
    update PDSCI.NYDB_PAPER_TITLE
    set DEFENCE_FLOW = #{defenceFlow,jdbcType=VARCHAR},
      PAPER_TITLE = #{paperTitle,jdbcType=VARCHAR},
      JOURNAL_NAME = #{journalName,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{publishYear,jdbcType=VARCHAR},
      VOLUME = #{volume,jdbcType=VARCHAR},
      PAGE_NUMBER = #{pageNumber,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      DEGREE_REQ_FLAG = #{degreeReqFlag,jdbcType=VARCHAR},
      JOURNAL_TYPE = #{journalType,jdbcType=VARCHAR},
      ARTICLE_STATUS = #{articleStatus,jdbcType=VARCHAR},
      PAPER_CONTENT = #{paperContent,jdbcType=CLOB}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.NydbPaperTitle" >
    update PDSCI.NYDB_PAPER_TITLE
    set DEFENCE_FLOW = #{defenceFlow,jdbcType=VARCHAR},
      PAPER_TITLE = #{paperTitle,jdbcType=VARCHAR},
      JOURNAL_NAME = #{journalName,jdbcType=VARCHAR},
      PUBLISH_YEAR = #{publishYear,jdbcType=VARCHAR},
      VOLUME = #{volume,jdbcType=VARCHAR},
      PAGE_NUMBER = #{pageNumber,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      DEGREE_REQ_FLAG = #{degreeReqFlag,jdbcType=VARCHAR},
      JOURNAL_TYPE = #{journalType,jdbcType=VARCHAR},
      ARTICLE_STATUS = #{articleStatus,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>