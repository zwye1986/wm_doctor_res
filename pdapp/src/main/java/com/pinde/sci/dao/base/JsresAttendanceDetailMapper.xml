<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.JsresAttendanceDetailMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.core.model.JsresAttendanceDetail" >
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
    <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
    <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
    <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
    <result column="ATTEND_TIME" property="attendTime" jdbcType="VARCHAR" />
    <result column="ATTEND_LOCAL" property="attendLocal" jdbcType="VARCHAR" />
    <result column="SELF_REMARKS" property="selfRemarks" jdbcType="VARCHAR" />
    <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, ATTENDANCE_FLOW, DOCTOR_FLOW, DOCTOR_NAME, ATTEND_DATE, ATTEND_TIME, 
    ATTEND_LOCAL, SELF_REMARKS, TEACHER_REMARKS, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.JsresAttendanceDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.JSRES_ATTENDANCE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.JSRES_ATTENDANCE_DETAIL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.JSRES_ATTENDANCE_DETAIL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.core.model.JsresAttendanceDetailExample" >
    delete from PDSCI.JSRES_ATTENDANCE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.core.model.JsresAttendanceDetail" >
    insert into PDSCI.JSRES_ATTENDANCE_DETAIL (RECORD_FLOW, ATTENDANCE_FLOW, DOCTOR_FLOW, 
      DOCTOR_NAME, ATTEND_DATE, ATTEND_TIME, 
      ATTEND_LOCAL, SELF_REMARKS, TEACHER_REMARKS, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW)
    values (#{recordFlow,jdbcType=VARCHAR}, #{attendanceFlow,jdbcType=VARCHAR}, #{doctorFlow,jdbcType=VARCHAR}, 
      #{doctorName,jdbcType=VARCHAR}, #{attendDate,jdbcType=VARCHAR}, #{attendTime,jdbcType=VARCHAR}, 
      #{attendLocal,jdbcType=VARCHAR}, #{selfRemarks,jdbcType=VARCHAR}, #{teacherRemarks,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.core.model.JsresAttendanceDetail" >
    insert into PDSCI.JSRES_ATTENDANCE_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="attendanceFlow != null" >
        ATTENDANCE_FLOW,
      </if>
      <if test="doctorFlow != null" >
        DOCTOR_FLOW,
      </if>
      <if test="doctorName != null" >
        DOCTOR_NAME,
      </if>
      <if test="attendDate != null" >
        ATTEND_DATE,
      </if>
      <if test="attendTime != null" >
        ATTEND_TIME,
      </if>
      <if test="attendLocal != null" >
        ATTEND_LOCAL,
      </if>
      <if test="selfRemarks != null" >
        SELF_REMARKS,
      </if>
      <if test="teacherRemarks != null" >
        TEACHER_REMARKS,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="attendanceFlow != null" >
        #{attendanceFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null" >
        #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null" >
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null" >
        #{attendDate,jdbcType=VARCHAR},
      </if>
      <if test="attendTime != null" >
        #{attendTime,jdbcType=VARCHAR},
      </if>
      <if test="attendLocal != null" >
        #{attendLocal,jdbcType=VARCHAR},
      </if>
      <if test="selfRemarks != null" >
        #{selfRemarks,jdbcType=VARCHAR},
      </if>
      <if test="teacherRemarks != null" >
        #{teacherRemarks,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.core.model.JsresAttendanceDetailExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.JSRES_ATTENDANCE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.JSRES_ATTENDANCE_DETAIL
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.attendanceFlow != null" >
        ATTENDANCE_FLOW = #{record.attendanceFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorFlow != null" >
        DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorName != null" >
        DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.attendDate != null" >
        ATTEND_DATE = #{record.attendDate,jdbcType=VARCHAR},
      </if>
      <if test="record.attendTime != null" >
        ATTEND_TIME = #{record.attendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.attendLocal != null" >
        ATTEND_LOCAL = #{record.attendLocal,jdbcType=VARCHAR},
      </if>
      <if test="record.selfRemarks != null" >
        SELF_REMARKS = #{record.selfRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherRemarks != null" >
        TEACHER_REMARKS = #{record.teacherRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.JSRES_ATTENDANCE_DETAIL
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      ATTENDANCE_FLOW = #{record.attendanceFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      ATTEND_DATE = #{record.attendDate,jdbcType=VARCHAR},
      ATTEND_TIME = #{record.attendTime,jdbcType=VARCHAR},
      ATTEND_LOCAL = #{record.attendLocal,jdbcType=VARCHAR},
      SELF_REMARKS = #{record.selfRemarks,jdbcType=VARCHAR},
      TEACHER_REMARKS = #{record.teacherRemarks,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.JsresAttendanceDetail" >
    update PDSCI.JSRES_ATTENDANCE_DETAIL
    <set >
      <if test="attendanceFlow != null" >
        ATTENDANCE_FLOW = #{attendanceFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null" >
        DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null" >
        DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null" >
        ATTEND_DATE = #{attendDate,jdbcType=VARCHAR},
      </if>
      <if test="attendTime != null" >
        ATTEND_TIME = #{attendTime,jdbcType=VARCHAR},
      </if>
      <if test="attendLocal != null" >
        ATTEND_LOCAL = #{attendLocal,jdbcType=VARCHAR},
      </if>
      <if test="selfRemarks != null" >
        SELF_REMARKS = #{selfRemarks,jdbcType=VARCHAR},
      </if>
      <if test="teacherRemarks != null" >
        TEACHER_REMARKS = #{teacherRemarks,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.JsresAttendanceDetail" >
    update PDSCI.JSRES_ATTENDANCE_DETAIL
    set ATTENDANCE_FLOW = #{attendanceFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      ATTEND_DATE = #{attendDate,jdbcType=VARCHAR},
      ATTEND_TIME = #{attendTime,jdbcType=VARCHAR},
      ATTEND_LOCAL = #{attendLocal,jdbcType=VARCHAR},
      SELF_REMARKS = #{selfRemarks,jdbcType=VARCHAR},
      TEACHER_REMARKS = #{teacherRemarks,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>