<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.ResDoctorOrgHistoryMapper">
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    <id column="RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow" />
    <result column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
    <result column="DOCTOR_NAME" jdbcType="VARCHAR" property="doctorName" />
    <result column="ORG_FLOW" jdbcType="VARCHAR" property="orgFlow" />
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="HISTORY_ORG_FLOW" jdbcType="VARCHAR" property="historyOrgFlow" />
    <result column="HISTORY_ORG_NAME" jdbcType="VARCHAR" property="historyOrgName" />
    <result column="OUT_DATE" jdbcType="VARCHAR" property="outDate" />
    <result column="IN_DATE" jdbcType="VARCHAR" property="inDate" />
    <result column="CHANGE_STATUS_ID" jdbcType="VARCHAR" property="changeStatusId" />
    <result column="CHANGE_STATUS_NAME" jdbcType="VARCHAR" property="changeStatusName" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
    <result column="TRAINING_SPE_ID" jdbcType="VARCHAR" property="trainingSpeId" />
    <result column="TRAINING_SPE_NAME" jdbcType="VARCHAR" property="trainingSpeName" />
    <result column="HISTORY_TRAINING_SPE_ID" jdbcType="VARCHAR" property="historyTrainingSpeId" />
    <result column="HISTORY_TRAINING_SPE_NAME" jdbcType="VARCHAR" property="historyTrainingSpeName" />
    <result column="SPE_CHANGE_APPLY_FILE" jdbcType="VARCHAR" property="speChangeApplyFile" />
    <result column="CHANGE_TYPE_ID" jdbcType="VARCHAR" property="changeTypeId" />
    <result column="CHANGE_TYPE_NAME" jdbcType="VARCHAR" property="changeTypeName" />
    <result column="TRAINING_TYPE_ID" jdbcType="VARCHAR" property="trainingTypeId" />
    <result column="TRAINING_TYPE_NAME" jdbcType="VARCHAR" property="trainingTypeName" />
    <result column="HISTORY_TRAINING_TYPE_ID" jdbcType="VARCHAR" property="historyTrainingTypeId" />
    <result column="HISTORY_TRAINING_TYPE_NAME" jdbcType="VARCHAR" property="historyTrainingTypeName" />
    <result column="AUDIT_USER_FLOW" jdbcType="VARCHAR" property="auditUserFlow" />
    <result column="AUDIT_USER_NAME" jdbcType="VARCHAR" property="auditUserName" />
    <result column="SESSION_NUMBER" jdbcType="VARCHAR" property="sessionNumber" />
    <result column="HISTORY_SESSION_NUMBER" jdbcType="VARCHAR" property="historySessionNumber" />
    <result column="RECRUIT_FLOW" jdbcType="VARCHAR" property="recruitFlow" />
    <result column="OUT_CHECK_CHANGE_BASE_FILE" jdbcType="VARCHAR" property="outCheckChangeBaseFile" />
    <result column="IN_CHECK_CHANGE_BASE_FILE" jdbcType="VARCHAR" property="inCheckChangeBaseFile" />
    <result column="GLOBAL_CHECK_CHANGE_BASE_FILE" jdbcType="VARCHAR" property="globalCheckChangeBaseFile" />
    <result column="LOCAL_CHECK_CHANGE_SPE_FILE" jdbcType="VARCHAR" property="localCheckChangeSpeFile" />
    <result column="CHANGE_IN_GRADUATION_YEAR" jdbcType="VARCHAR" property="changeInGraduationYear" />
    <result column="IS_AGREE_OLD_TRAIN" jdbcType="VARCHAR" property="isAgreeOldTrain" />
    <result column="SECOND_SPE_ID" jdbcType="VARCHAR" property="secondSpeId" />
    <result column="SECOND_SPE_NAME" jdbcType="VARCHAR" property="secondSpeName" />
    <result column="HISTORY_SECOND_SPE_ID" jdbcType="VARCHAR" property="historySecondSpeId" />
    <result column="HISTORY_SECOND_SPE_NAME" jdbcType="VARCHAR" property="historySecondSpeName" />
    <result column="IS_ONLY_SECOND" jdbcType="VARCHAR" property="isOnlySecond" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    <result column="AUDIT_OPINION" jdbcType="CLOB" property="auditOpinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RECORD_FLOW, DOCTOR_FLOW, DOCTOR_NAME, ORG_FLOW, ORG_NAME, HISTORY_ORG_FLOW, HISTORY_ORG_NAME, 
    OUT_DATE, IN_DATE, CHANGE_STATUS_ID, CHANGE_STATUS_NAME, RECORD_STATUS, CREATE_TIME, 
    CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, TRAINING_SPE_ID, TRAINING_SPE_NAME, 
    HISTORY_TRAINING_SPE_ID, HISTORY_TRAINING_SPE_NAME, SPE_CHANGE_APPLY_FILE, CHANGE_TYPE_ID, 
    CHANGE_TYPE_NAME, TRAINING_TYPE_ID, TRAINING_TYPE_NAME, HISTORY_TRAINING_TYPE_ID, 
    HISTORY_TRAINING_TYPE_NAME, AUDIT_USER_FLOW, AUDIT_USER_NAME, SESSION_NUMBER, HISTORY_SESSION_NUMBER, 
    RECRUIT_FLOW, OUT_CHECK_CHANGE_BASE_FILE, IN_CHECK_CHANGE_BASE_FILE, GLOBAL_CHECK_CHANGE_BASE_FILE, 
    LOCAL_CHECK_CHANGE_SPE_FILE, CHANGE_IN_GRADUATION_YEAR, IS_AGREE_OLD_TRAIN, SECOND_SPE_ID, 
    SECOND_SPE_NAME, HISTORY_SECOND_SPE_ID, HISTORY_SECOND_SPE_NAME, IS_ONLY_SECOND
  </sql>
  <sql id="Blob_Column_List">
    AUDIT_OPINION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.RES_DOCTOR_ORG_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.RES_DOCTOR_ORG_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.RES_DOCTOR_ORG_HISTORY
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PDSCI.RES_DOCTOR_ORG_HISTORY
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistoryExample">
    delete from PDSCI.RES_DOCTOR_ORG_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    insert into PDSCI.RES_DOCTOR_ORG_HISTORY (RECORD_FLOW, DOCTOR_FLOW, DOCTOR_NAME, 
      ORG_FLOW, ORG_NAME, HISTORY_ORG_FLOW, 
      HISTORY_ORG_NAME, OUT_DATE, IN_DATE, 
      CHANGE_STATUS_ID, CHANGE_STATUS_NAME, RECORD_STATUS, 
      CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
      MODIFY_USER_FLOW, TRAINING_SPE_ID, TRAINING_SPE_NAME, 
      HISTORY_TRAINING_SPE_ID, HISTORY_TRAINING_SPE_NAME, 
      SPE_CHANGE_APPLY_FILE, CHANGE_TYPE_ID, CHANGE_TYPE_NAME, 
      TRAINING_TYPE_ID, TRAINING_TYPE_NAME, HISTORY_TRAINING_TYPE_ID, 
      HISTORY_TRAINING_TYPE_NAME, AUDIT_USER_FLOW, 
      AUDIT_USER_NAME, SESSION_NUMBER, HISTORY_SESSION_NUMBER, 
      RECRUIT_FLOW, OUT_CHECK_CHANGE_BASE_FILE, IN_CHECK_CHANGE_BASE_FILE, 
      GLOBAL_CHECK_CHANGE_BASE_FILE, LOCAL_CHECK_CHANGE_SPE_FILE, 
      CHANGE_IN_GRADUATION_YEAR, IS_AGREE_OLD_TRAIN, 
      SECOND_SPE_ID, SECOND_SPE_NAME, HISTORY_SECOND_SPE_ID, 
      HISTORY_SECOND_SPE_NAME, IS_ONLY_SECOND, AUDIT_OPINION
      )
    values (#{recordFlow,jdbcType=VARCHAR}, #{doctorFlow,jdbcType=VARCHAR}, #{doctorName,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{historyOrgFlow,jdbcType=VARCHAR}, 
      #{historyOrgName,jdbcType=VARCHAR}, #{outDate,jdbcType=VARCHAR}, #{inDate,jdbcType=VARCHAR}, 
      #{changeStatusId,jdbcType=VARCHAR}, #{changeStatusName,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUserFlow,jdbcType=VARCHAR}, #{trainingSpeId,jdbcType=VARCHAR}, #{trainingSpeName,jdbcType=VARCHAR}, 
      #{historyTrainingSpeId,jdbcType=VARCHAR}, #{historyTrainingSpeName,jdbcType=VARCHAR}, 
      #{speChangeApplyFile,jdbcType=VARCHAR}, #{changeTypeId,jdbcType=VARCHAR}, #{changeTypeName,jdbcType=VARCHAR}, 
      #{trainingTypeId,jdbcType=VARCHAR}, #{trainingTypeName,jdbcType=VARCHAR}, #{historyTrainingTypeId,jdbcType=VARCHAR}, 
      #{historyTrainingTypeName,jdbcType=VARCHAR}, #{auditUserFlow,jdbcType=VARCHAR}, 
      #{auditUserName,jdbcType=VARCHAR}, #{sessionNumber,jdbcType=VARCHAR}, #{historySessionNumber,jdbcType=VARCHAR}, 
      #{recruitFlow,jdbcType=VARCHAR}, #{outCheckChangeBaseFile,jdbcType=VARCHAR}, #{inCheckChangeBaseFile,jdbcType=VARCHAR}, 
      #{globalCheckChangeBaseFile,jdbcType=VARCHAR}, #{localCheckChangeSpeFile,jdbcType=VARCHAR}, 
      #{changeInGraduationYear,jdbcType=VARCHAR}, #{isAgreeOldTrain,jdbcType=VARCHAR}, 
      #{secondSpeId,jdbcType=VARCHAR}, #{secondSpeName,jdbcType=VARCHAR}, #{historySecondSpeId,jdbcType=VARCHAR}, 
      #{historySecondSpeName,jdbcType=VARCHAR}, #{isOnlySecond,jdbcType=VARCHAR}, #{auditOpinion,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    insert into PDSCI.RES_DOCTOR_ORG_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        RECORD_FLOW,
      </if>
      <if test="doctorFlow != null">
        DOCTOR_FLOW,
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME,
      </if>
      <if test="orgFlow != null">
        ORG_FLOW,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="historyOrgFlow != null">
        HISTORY_ORG_FLOW,
      </if>
      <if test="historyOrgName != null">
        HISTORY_ORG_NAME,
      </if>
      <if test="outDate != null">
        OUT_DATE,
      </if>
      <if test="inDate != null">
        IN_DATE,
      </if>
      <if test="changeStatusId != null">
        CHANGE_STATUS_ID,
      </if>
      <if test="changeStatusName != null">
        CHANGE_STATUS_NAME,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
      <if test="trainingSpeId != null">
        TRAINING_SPE_ID,
      </if>
      <if test="trainingSpeName != null">
        TRAINING_SPE_NAME,
      </if>
      <if test="historyTrainingSpeId != null">
        HISTORY_TRAINING_SPE_ID,
      </if>
      <if test="historyTrainingSpeName != null">
        HISTORY_TRAINING_SPE_NAME,
      </if>
      <if test="speChangeApplyFile != null">
        SPE_CHANGE_APPLY_FILE,
      </if>
      <if test="changeTypeId != null">
        CHANGE_TYPE_ID,
      </if>
      <if test="changeTypeName != null">
        CHANGE_TYPE_NAME,
      </if>
      <if test="trainingTypeId != null">
        TRAINING_TYPE_ID,
      </if>
      <if test="trainingTypeName != null">
        TRAINING_TYPE_NAME,
      </if>
      <if test="historyTrainingTypeId != null">
        HISTORY_TRAINING_TYPE_ID,
      </if>
      <if test="historyTrainingTypeName != null">
        HISTORY_TRAINING_TYPE_NAME,
      </if>
      <if test="auditUserFlow != null">
        AUDIT_USER_FLOW,
      </if>
      <if test="auditUserName != null">
        AUDIT_USER_NAME,
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER,
      </if>
      <if test="historySessionNumber != null">
        HISTORY_SESSION_NUMBER,
      </if>
      <if test="recruitFlow != null">
        RECRUIT_FLOW,
      </if>
      <if test="outCheckChangeBaseFile != null">
        OUT_CHECK_CHANGE_BASE_FILE,
      </if>
      <if test="inCheckChangeBaseFile != null">
        IN_CHECK_CHANGE_BASE_FILE,
      </if>
      <if test="globalCheckChangeBaseFile != null">
        GLOBAL_CHECK_CHANGE_BASE_FILE,
      </if>
      <if test="localCheckChangeSpeFile != null">
        LOCAL_CHECK_CHANGE_SPE_FILE,
      </if>
      <if test="changeInGraduationYear != null">
        CHANGE_IN_GRADUATION_YEAR,
      </if>
      <if test="isAgreeOldTrain != null">
        IS_AGREE_OLD_TRAIN,
      </if>
      <if test="secondSpeId != null">
        SECOND_SPE_ID,
      </if>
      <if test="secondSpeName != null">
        SECOND_SPE_NAME,
      </if>
      <if test="historySecondSpeId != null">
        HISTORY_SECOND_SPE_ID,
      </if>
      <if test="historySecondSpeName != null">
        HISTORY_SECOND_SPE_NAME,
      </if>
      <if test="isOnlySecond != null">
        IS_ONLY_SECOND,
      </if>
      <if test="auditOpinion != null">
        AUDIT_OPINION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null">
        #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="historyOrgFlow != null">
        #{historyOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="historyOrgName != null">
        #{historyOrgName,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        #{outDate,jdbcType=VARCHAR},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=VARCHAR},
      </if>
      <if test="changeStatusId != null">
        #{changeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="changeStatusName != null">
        #{changeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeId != null">
        #{trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeName != null">
        #{trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingSpeId != null">
        #{historyTrainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingSpeName != null">
        #{historyTrainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="speChangeApplyFile != null">
        #{speChangeApplyFile,jdbcType=VARCHAR},
      </if>
      <if test="changeTypeId != null">
        #{changeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="changeTypeName != null">
        #{changeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="trainingTypeId != null">
        #{trainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingTypeName != null">
        #{trainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingTypeId != null">
        #{historyTrainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingTypeName != null">
        #{historyTrainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="auditUserFlow != null">
        #{auditUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="auditUserName != null">
        #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="historySessionNumber != null">
        #{historySessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="recruitFlow != null">
        #{recruitFlow,jdbcType=VARCHAR},
      </if>
      <if test="outCheckChangeBaseFile != null">
        #{outCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="inCheckChangeBaseFile != null">
        #{inCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="globalCheckChangeBaseFile != null">
        #{globalCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="localCheckChangeSpeFile != null">
        #{localCheckChangeSpeFile,jdbcType=VARCHAR},
      </if>
      <if test="changeInGraduationYear != null">
        #{changeInGraduationYear,jdbcType=VARCHAR},
      </if>
      <if test="isAgreeOldTrain != null">
        #{isAgreeOldTrain,jdbcType=VARCHAR},
      </if>
      <if test="secondSpeId != null">
        #{secondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="secondSpeName != null">
        #{secondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="historySecondSpeId != null">
        #{historySecondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="historySecondSpeName != null">
        #{historySecondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="isOnlySecond != null">
        #{isOnlySecond,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null">
        #{auditOpinion,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistoryExample" resultType="java.lang.Integer">
    select count(*) from PDSCI.RES_DOCTOR_ORG_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    <set>
      <if test="record.recordFlow != null">
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorFlow != null">
        DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorName != null">
        DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null">
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.historyOrgFlow != null">
        HISTORY_ORG_FLOW = #{record.historyOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.historyOrgName != null">
        HISTORY_ORG_NAME = #{record.historyOrgName,jdbcType=VARCHAR},
      </if>
      <if test="record.outDate != null">
        OUT_DATE = #{record.outDate,jdbcType=VARCHAR},
      </if>
      <if test="record.inDate != null">
        IN_DATE = #{record.inDate,jdbcType=VARCHAR},
      </if>
      <if test="record.changeStatusId != null">
        CHANGE_STATUS_ID = #{record.changeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.changeStatusName != null">
        CHANGE_STATUS_NAME = #{record.changeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingSpeId != null">
        TRAINING_SPE_ID = #{record.trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingSpeName != null">
        TRAINING_SPE_NAME = #{record.trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="record.historyTrainingSpeId != null">
        HISTORY_TRAINING_SPE_ID = #{record.historyTrainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="record.historyTrainingSpeName != null">
        HISTORY_TRAINING_SPE_NAME = #{record.historyTrainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="record.speChangeApplyFile != null">
        SPE_CHANGE_APPLY_FILE = #{record.speChangeApplyFile,jdbcType=VARCHAR},
      </if>
      <if test="record.changeTypeId != null">
        CHANGE_TYPE_ID = #{record.changeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.changeTypeName != null">
        CHANGE_TYPE_NAME = #{record.changeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingTypeId != null">
        TRAINING_TYPE_ID = #{record.trainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingTypeName != null">
        TRAINING_TYPE_NAME = #{record.trainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.historyTrainingTypeId != null">
        HISTORY_TRAINING_TYPE_ID = #{record.historyTrainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.historyTrainingTypeName != null">
        HISTORY_TRAINING_TYPE_NAME = #{record.historyTrainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUserFlow != null">
        AUDIT_USER_FLOW = #{record.auditUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUserName != null">
        AUDIT_USER_NAME = #{record.auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionNumber != null">
        SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.historySessionNumber != null">
        HISTORY_SESSION_NUMBER = #{record.historySessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitFlow != null">
        RECRUIT_FLOW = #{record.recruitFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.outCheckChangeBaseFile != null">
        OUT_CHECK_CHANGE_BASE_FILE = #{record.outCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="record.inCheckChangeBaseFile != null">
        IN_CHECK_CHANGE_BASE_FILE = #{record.inCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="record.globalCheckChangeBaseFile != null">
        GLOBAL_CHECK_CHANGE_BASE_FILE = #{record.globalCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="record.localCheckChangeSpeFile != null">
        LOCAL_CHECK_CHANGE_SPE_FILE = #{record.localCheckChangeSpeFile,jdbcType=VARCHAR},
      </if>
      <if test="record.changeInGraduationYear != null">
        CHANGE_IN_GRADUATION_YEAR = #{record.changeInGraduationYear,jdbcType=VARCHAR},
      </if>
      <if test="record.isAgreeOldTrain != null">
        IS_AGREE_OLD_TRAIN = #{record.isAgreeOldTrain,jdbcType=VARCHAR},
      </if>
      <if test="record.secondSpeId != null">
        SECOND_SPE_ID = #{record.secondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="record.secondSpeName != null">
        SECOND_SPE_NAME = #{record.secondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="record.historySecondSpeId != null">
        HISTORY_SECOND_SPE_ID = #{record.historySecondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="record.historySecondSpeName != null">
        HISTORY_SECOND_SPE_NAME = #{record.historySecondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnlySecond != null">
        IS_ONLY_SECOND = #{record.isOnlySecond,jdbcType=VARCHAR},
      </if>
      <if test="record.auditOpinion != null">
        AUDIT_OPINION = #{record.auditOpinion,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      HISTORY_ORG_FLOW = #{record.historyOrgFlow,jdbcType=VARCHAR},
      HISTORY_ORG_NAME = #{record.historyOrgName,jdbcType=VARCHAR},
      OUT_DATE = #{record.outDate,jdbcType=VARCHAR},
      IN_DATE = #{record.inDate,jdbcType=VARCHAR},
      CHANGE_STATUS_ID = #{record.changeStatusId,jdbcType=VARCHAR},
      CHANGE_STATUS_NAME = #{record.changeStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{record.trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{record.trainingSpeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_ID = #{record.historyTrainingSpeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_NAME = #{record.historyTrainingSpeName,jdbcType=VARCHAR},
      SPE_CHANGE_APPLY_FILE = #{record.speChangeApplyFile,jdbcType=VARCHAR},
      CHANGE_TYPE_ID = #{record.changeTypeId,jdbcType=VARCHAR},
      CHANGE_TYPE_NAME = #{record.changeTypeName,jdbcType=VARCHAR},
      TRAINING_TYPE_ID = #{record.trainingTypeId,jdbcType=VARCHAR},
      TRAINING_TYPE_NAME = #{record.trainingTypeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_ID = #{record.historyTrainingTypeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_NAME = #{record.historyTrainingTypeName,jdbcType=VARCHAR},
      AUDIT_USER_FLOW = #{record.auditUserFlow,jdbcType=VARCHAR},
      AUDIT_USER_NAME = #{record.auditUserName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      HISTORY_SESSION_NUMBER = #{record.historySessionNumber,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{record.recruitFlow,jdbcType=VARCHAR},
      OUT_CHECK_CHANGE_BASE_FILE = #{record.outCheckChangeBaseFile,jdbcType=VARCHAR},
      IN_CHECK_CHANGE_BASE_FILE = #{record.inCheckChangeBaseFile,jdbcType=VARCHAR},
      GLOBAL_CHECK_CHANGE_BASE_FILE = #{record.globalCheckChangeBaseFile,jdbcType=VARCHAR},
      LOCAL_CHECK_CHANGE_SPE_FILE = #{record.localCheckChangeSpeFile,jdbcType=VARCHAR},
      CHANGE_IN_GRADUATION_YEAR = #{record.changeInGraduationYear,jdbcType=VARCHAR},
      IS_AGREE_OLD_TRAIN = #{record.isAgreeOldTrain,jdbcType=VARCHAR},
      SECOND_SPE_ID = #{record.secondSpeId,jdbcType=VARCHAR},
      SECOND_SPE_NAME = #{record.secondSpeName,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_ID = #{record.historySecondSpeId,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_NAME = #{record.historySecondSpeName,jdbcType=VARCHAR},
      IS_ONLY_SECOND = #{record.isOnlySecond,jdbcType=VARCHAR},
      AUDIT_OPINION = #{record.auditOpinion,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      HISTORY_ORG_FLOW = #{record.historyOrgFlow,jdbcType=VARCHAR},
      HISTORY_ORG_NAME = #{record.historyOrgName,jdbcType=VARCHAR},
      OUT_DATE = #{record.outDate,jdbcType=VARCHAR},
      IN_DATE = #{record.inDate,jdbcType=VARCHAR},
      CHANGE_STATUS_ID = #{record.changeStatusId,jdbcType=VARCHAR},
      CHANGE_STATUS_NAME = #{record.changeStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{record.trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{record.trainingSpeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_ID = #{record.historyTrainingSpeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_NAME = #{record.historyTrainingSpeName,jdbcType=VARCHAR},
      SPE_CHANGE_APPLY_FILE = #{record.speChangeApplyFile,jdbcType=VARCHAR},
      CHANGE_TYPE_ID = #{record.changeTypeId,jdbcType=VARCHAR},
      CHANGE_TYPE_NAME = #{record.changeTypeName,jdbcType=VARCHAR},
      TRAINING_TYPE_ID = #{record.trainingTypeId,jdbcType=VARCHAR},
      TRAINING_TYPE_NAME = #{record.trainingTypeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_ID = #{record.historyTrainingTypeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_NAME = #{record.historyTrainingTypeName,jdbcType=VARCHAR},
      AUDIT_USER_FLOW = #{record.auditUserFlow,jdbcType=VARCHAR},
      AUDIT_USER_NAME = #{record.auditUserName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      HISTORY_SESSION_NUMBER = #{record.historySessionNumber,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{record.recruitFlow,jdbcType=VARCHAR},
      OUT_CHECK_CHANGE_BASE_FILE = #{record.outCheckChangeBaseFile,jdbcType=VARCHAR},
      IN_CHECK_CHANGE_BASE_FILE = #{record.inCheckChangeBaseFile,jdbcType=VARCHAR},
      GLOBAL_CHECK_CHANGE_BASE_FILE = #{record.globalCheckChangeBaseFile,jdbcType=VARCHAR},
      LOCAL_CHECK_CHANGE_SPE_FILE = #{record.localCheckChangeSpeFile,jdbcType=VARCHAR},
      CHANGE_IN_GRADUATION_YEAR = #{record.changeInGraduationYear,jdbcType=VARCHAR},
      IS_AGREE_OLD_TRAIN = #{record.isAgreeOldTrain,jdbcType=VARCHAR},
      SECOND_SPE_ID = #{record.secondSpeId,jdbcType=VARCHAR},
      SECOND_SPE_NAME = #{record.secondSpeName,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_ID = #{record.historySecondSpeId,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_NAME = #{record.historySecondSpeName,jdbcType=VARCHAR},
      IS_ONLY_SECOND = #{record.isOnlySecond,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    <set>
      <if test="doctorFlow != null">
        DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="historyOrgFlow != null">
        HISTORY_ORG_FLOW = #{historyOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="historyOrgName != null">
        HISTORY_ORG_NAME = #{historyOrgName,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        OUT_DATE = #{outDate,jdbcType=VARCHAR},
      </if>
      <if test="inDate != null">
        IN_DATE = #{inDate,jdbcType=VARCHAR},
      </if>
      <if test="changeStatusId != null">
        CHANGE_STATUS_ID = #{changeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="changeStatusName != null">
        CHANGE_STATUS_NAME = #{changeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeId != null">
        TRAINING_SPE_ID = #{trainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingSpeName != null">
        TRAINING_SPE_NAME = #{trainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingSpeId != null">
        HISTORY_TRAINING_SPE_ID = #{historyTrainingSpeId,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingSpeName != null">
        HISTORY_TRAINING_SPE_NAME = #{historyTrainingSpeName,jdbcType=VARCHAR},
      </if>
      <if test="speChangeApplyFile != null">
        SPE_CHANGE_APPLY_FILE = #{speChangeApplyFile,jdbcType=VARCHAR},
      </if>
      <if test="changeTypeId != null">
        CHANGE_TYPE_ID = #{changeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="changeTypeName != null">
        CHANGE_TYPE_NAME = #{changeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="trainingTypeId != null">
        TRAINING_TYPE_ID = #{trainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="trainingTypeName != null">
        TRAINING_TYPE_NAME = #{trainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingTypeId != null">
        HISTORY_TRAINING_TYPE_ID = #{historyTrainingTypeId,jdbcType=VARCHAR},
      </if>
      <if test="historyTrainingTypeName != null">
        HISTORY_TRAINING_TYPE_NAME = #{historyTrainingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="auditUserFlow != null">
        AUDIT_USER_FLOW = #{auditUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="auditUserName != null">
        AUDIT_USER_NAME = #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="historySessionNumber != null">
        HISTORY_SESSION_NUMBER = #{historySessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="recruitFlow != null">
        RECRUIT_FLOW = #{recruitFlow,jdbcType=VARCHAR},
      </if>
      <if test="outCheckChangeBaseFile != null">
        OUT_CHECK_CHANGE_BASE_FILE = #{outCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="inCheckChangeBaseFile != null">
        IN_CHECK_CHANGE_BASE_FILE = #{inCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="globalCheckChangeBaseFile != null">
        GLOBAL_CHECK_CHANGE_BASE_FILE = #{globalCheckChangeBaseFile,jdbcType=VARCHAR},
      </if>
      <if test="localCheckChangeSpeFile != null">
        LOCAL_CHECK_CHANGE_SPE_FILE = #{localCheckChangeSpeFile,jdbcType=VARCHAR},
      </if>
      <if test="changeInGraduationYear != null">
        CHANGE_IN_GRADUATION_YEAR = #{changeInGraduationYear,jdbcType=VARCHAR},
      </if>
      <if test="isAgreeOldTrain != null">
        IS_AGREE_OLD_TRAIN = #{isAgreeOldTrain,jdbcType=VARCHAR},
      </if>
      <if test="secondSpeId != null">
        SECOND_SPE_ID = #{secondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="secondSpeName != null">
        SECOND_SPE_NAME = #{secondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="historySecondSpeId != null">
        HISTORY_SECOND_SPE_ID = #{historySecondSpeId,jdbcType=VARCHAR},
      </if>
      <if test="historySecondSpeName != null">
        HISTORY_SECOND_SPE_NAME = #{historySecondSpeName,jdbcType=VARCHAR},
      </if>
      <if test="isOnlySecond != null">
        IS_ONLY_SECOND = #{isOnlySecond,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null">
        AUDIT_OPINION = #{auditOpinion,jdbcType=CLOB},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    set DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      HISTORY_ORG_FLOW = #{historyOrgFlow,jdbcType=VARCHAR},
      HISTORY_ORG_NAME = #{historyOrgName,jdbcType=VARCHAR},
      OUT_DATE = #{outDate,jdbcType=VARCHAR},
      IN_DATE = #{inDate,jdbcType=VARCHAR},
      CHANGE_STATUS_ID = #{changeStatusId,jdbcType=VARCHAR},
      CHANGE_STATUS_NAME = #{changeStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{trainingSpeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_ID = #{historyTrainingSpeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_NAME = #{historyTrainingSpeName,jdbcType=VARCHAR},
      SPE_CHANGE_APPLY_FILE = #{speChangeApplyFile,jdbcType=VARCHAR},
      CHANGE_TYPE_ID = #{changeTypeId,jdbcType=VARCHAR},
      CHANGE_TYPE_NAME = #{changeTypeName,jdbcType=VARCHAR},
      TRAINING_TYPE_ID = #{trainingTypeId,jdbcType=VARCHAR},
      TRAINING_TYPE_NAME = #{trainingTypeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_ID = #{historyTrainingTypeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_NAME = #{historyTrainingTypeName,jdbcType=VARCHAR},
      AUDIT_USER_FLOW = #{auditUserFlow,jdbcType=VARCHAR},
      AUDIT_USER_NAME = #{auditUserName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      HISTORY_SESSION_NUMBER = #{historySessionNumber,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{recruitFlow,jdbcType=VARCHAR},
      OUT_CHECK_CHANGE_BASE_FILE = #{outCheckChangeBaseFile,jdbcType=VARCHAR},
      IN_CHECK_CHANGE_BASE_FILE = #{inCheckChangeBaseFile,jdbcType=VARCHAR},
      GLOBAL_CHECK_CHANGE_BASE_FILE = #{globalCheckChangeBaseFile,jdbcType=VARCHAR},
      LOCAL_CHECK_CHANGE_SPE_FILE = #{localCheckChangeSpeFile,jdbcType=VARCHAR},
      CHANGE_IN_GRADUATION_YEAR = #{changeInGraduationYear,jdbcType=VARCHAR},
      IS_AGREE_OLD_TRAIN = #{isAgreeOldTrain,jdbcType=VARCHAR},
      SECOND_SPE_ID = #{secondSpeId,jdbcType=VARCHAR},
      SECOND_SPE_NAME = #{secondSpeName,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_ID = #{historySecondSpeId,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_NAME = #{historySecondSpeName,jdbcType=VARCHAR},
      IS_ONLY_SECOND = #{isOnlySecond,jdbcType=VARCHAR},
      AUDIT_OPINION = #{auditOpinion,jdbcType=CLOB}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ResDoctorOrgHistory">
    update PDSCI.RES_DOCTOR_ORG_HISTORY
    set DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      HISTORY_ORG_FLOW = #{historyOrgFlow,jdbcType=VARCHAR},
      HISTORY_ORG_NAME = #{historyOrgName,jdbcType=VARCHAR},
      OUT_DATE = #{outDate,jdbcType=VARCHAR},
      IN_DATE = #{inDate,jdbcType=VARCHAR},
      CHANGE_STATUS_ID = #{changeStatusId,jdbcType=VARCHAR},
      CHANGE_STATUS_NAME = #{changeStatusName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      TRAINING_SPE_ID = #{trainingSpeId,jdbcType=VARCHAR},
      TRAINING_SPE_NAME = #{trainingSpeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_ID = #{historyTrainingSpeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_SPE_NAME = #{historyTrainingSpeName,jdbcType=VARCHAR},
      SPE_CHANGE_APPLY_FILE = #{speChangeApplyFile,jdbcType=VARCHAR},
      CHANGE_TYPE_ID = #{changeTypeId,jdbcType=VARCHAR},
      CHANGE_TYPE_NAME = #{changeTypeName,jdbcType=VARCHAR},
      TRAINING_TYPE_ID = #{trainingTypeId,jdbcType=VARCHAR},
      TRAINING_TYPE_NAME = #{trainingTypeName,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_ID = #{historyTrainingTypeId,jdbcType=VARCHAR},
      HISTORY_TRAINING_TYPE_NAME = #{historyTrainingTypeName,jdbcType=VARCHAR},
      AUDIT_USER_FLOW = #{auditUserFlow,jdbcType=VARCHAR},
      AUDIT_USER_NAME = #{auditUserName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      HISTORY_SESSION_NUMBER = #{historySessionNumber,jdbcType=VARCHAR},
      RECRUIT_FLOW = #{recruitFlow,jdbcType=VARCHAR},
      OUT_CHECK_CHANGE_BASE_FILE = #{outCheckChangeBaseFile,jdbcType=VARCHAR},
      IN_CHECK_CHANGE_BASE_FILE = #{inCheckChangeBaseFile,jdbcType=VARCHAR},
      GLOBAL_CHECK_CHANGE_BASE_FILE = #{globalCheckChangeBaseFile,jdbcType=VARCHAR},
      LOCAL_CHECK_CHANGE_SPE_FILE = #{localCheckChangeSpeFile,jdbcType=VARCHAR},
      CHANGE_IN_GRADUATION_YEAR = #{changeInGraduationYear,jdbcType=VARCHAR},
      IS_AGREE_OLD_TRAIN = #{isAgreeOldTrain,jdbcType=VARCHAR},
      SECOND_SPE_ID = #{secondSpeId,jdbcType=VARCHAR},
      SECOND_SPE_NAME = #{secondSpeName,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_ID = #{historySecondSpeId,jdbcType=VARCHAR},
      HISTORY_SECOND_SPE_NAME = #{historySecondSpeName,jdbcType=VARCHAR},
      IS_ONLY_SECOND = #{isOnlySecond,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>