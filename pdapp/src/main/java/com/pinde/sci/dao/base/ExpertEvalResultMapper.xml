<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.ExpertEvalResultMapper">
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ExpertEvalResult">
    <id column="RESULT_FLOW" jdbcType="VARCHAR" property="resultFlow" />
    <result column="CFG_FLOW" jdbcType="VARCHAR" property="cfgFlow" />
    <result column="EVAL_YEAR" jdbcType="VARCHAR" property="evalYear" />
    <result column="CFG_NAME" jdbcType="VARCHAR" property="cfgName" />
    <result column="TYPE_ID" jdbcType="VARCHAR" property="typeId" />
    <result column="IS_FILE" jdbcType="CHAR" property="isFile" />
    <result column="FILE_PATH" jdbcType="VARCHAR" property="filePath" />
    <result column="PARENT_CFG_FLOW" jdbcType="VARCHAR" property="parentCfgFlow" />
    <result column="LEVEL_ID" jdbcType="DECIMAL" property="levelId" />
    <result column="ORDINAL" jdbcType="DECIMAL" property="ordinal" />
    <result column="ORG_FLOW" jdbcType="VARCHAR" property="orgFlow" />
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="SPE_ID" jdbcType="VARCHAR" property="speId" />
    <result column="SPE_NAME" jdbcType="VARCHAR" property="speName" />
    <result column="EXPERT_USER_FLOW" jdbcType="VARCHAR" property="expertUserFlow" />
    <result column="EXPERT_USER_NAME" jdbcType="VARCHAR" property="expertUserName" />
    <result column="EVAL_DATE" jdbcType="VARCHAR" property="evalDate" />
    <result column="BASE_SCORE" jdbcType="VARCHAR" property="baseScore" />
    <result column="EVAL_SCORE" jdbcType="VARCHAR" property="evalScore" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
    <result column="IS_EXPERT" jdbcType="CHAR" property="isExpert" />
    <result column="IS_OVER_ALL" jdbcType="VARCHAR" property="isOverAll" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pinde.sci.model.mo.ExpertEvalResult">
    <result column="EVAL_CONTENT" jdbcType="CLOB" property="evalContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RESULT_FLOW, CFG_FLOW, EVAL_YEAR, CFG_NAME, TYPE_ID, IS_FILE, FILE_PATH, PARENT_CFG_FLOW, 
    LEVEL_ID, ORDINAL, ORG_FLOW, ORG_NAME, SPE_ID, SPE_NAME, EXPERT_USER_FLOW, EXPERT_USER_NAME, 
    EVAL_DATE, BASE_SCORE, EVAL_SCORE, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW, IS_EXPERT, IS_OVER_ALL
  </sql>
  <sql id="Blob_Column_List">
    EVAL_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.pinde.sci.model.mo.ExpertEvalResultExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.EXPERT_EVAL_RESULT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.pinde.sci.model.mo.ExpertEvalResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EXPERT_EVAL_RESULT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.EXPERT_EVAL_RESULT
    where RESULT_FLOW = #{resultFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PDSCI.EXPERT_EVAL_RESULT
    where RESULT_FLOW = #{resultFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ExpertEvalResultExample">
    delete from PDSCI.EXPERT_EVAL_RESULT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ExpertEvalResult">
    insert into PDSCI.EXPERT_EVAL_RESULT (RESULT_FLOW, CFG_FLOW, EVAL_YEAR, 
      CFG_NAME, TYPE_ID, IS_FILE, 
      FILE_PATH, PARENT_CFG_FLOW, LEVEL_ID, 
      ORDINAL, ORG_FLOW, ORG_NAME, 
      SPE_ID, SPE_NAME, EXPERT_USER_FLOW, 
      EXPERT_USER_NAME, EVAL_DATE, BASE_SCORE, 
      EVAL_SCORE, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
      IS_EXPERT, IS_OVER_ALL, EVAL_CONTENT
      )
    values (#{resultFlow,jdbcType=VARCHAR}, #{cfgFlow,jdbcType=VARCHAR}, #{evalYear,jdbcType=VARCHAR}, 
      #{cfgName,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{isFile,jdbcType=CHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{parentCfgFlow,jdbcType=VARCHAR}, #{levelId,jdbcType=DECIMAL}, 
      #{ordinal,jdbcType=DECIMAL}, #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{speId,jdbcType=VARCHAR}, #{speName,jdbcType=VARCHAR}, #{expertUserFlow,jdbcType=VARCHAR}, 
      #{expertUserName,jdbcType=VARCHAR}, #{evalDate,jdbcType=VARCHAR}, #{baseScore,jdbcType=VARCHAR}, 
      #{evalScore,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, 
      #{isExpert,jdbcType=CHAR}, #{isOverAll,jdbcType=VARCHAR}, #{evalContent,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ExpertEvalResult">
    insert into PDSCI.EXPERT_EVAL_RESULT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resultFlow != null">
        RESULT_FLOW,
      </if>
      <if test="cfgFlow != null">
        CFG_FLOW,
      </if>
      <if test="evalYear != null">
        EVAL_YEAR,
      </if>
      <if test="cfgName != null">
        CFG_NAME,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="isFile != null">
        IS_FILE,
      </if>
      <if test="filePath != null">
        FILE_PATH,
      </if>
      <if test="parentCfgFlow != null">
        PARENT_CFG_FLOW,
      </if>
      <if test="levelId != null">
        LEVEL_ID,
      </if>
      <if test="ordinal != null">
        ORDINAL,
      </if>
      <if test="orgFlow != null">
        ORG_FLOW,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="speId != null">
        SPE_ID,
      </if>
      <if test="speName != null">
        SPE_NAME,
      </if>
      <if test="expertUserFlow != null">
        EXPERT_USER_FLOW,
      </if>
      <if test="expertUserName != null">
        EXPERT_USER_NAME,
      </if>
      <if test="evalDate != null">
        EVAL_DATE,
      </if>
      <if test="baseScore != null">
        BASE_SCORE,
      </if>
      <if test="evalScore != null">
        EVAL_SCORE,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
      <if test="isExpert != null">
        IS_EXPERT,
      </if>
      <if test="isOverAll != null">
        IS_OVER_ALL,
      </if>
      <if test="evalContent != null">
        EVAL_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resultFlow != null">
        #{resultFlow,jdbcType=VARCHAR},
      </if>
      <if test="cfgFlow != null">
        #{cfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="evalYear != null">
        #{evalYear,jdbcType=VARCHAR},
      </if>
      <if test="cfgName != null">
        #{cfgName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="isFile != null">
        #{isFile,jdbcType=CHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="parentCfgFlow != null">
        #{parentCfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=DECIMAL},
      </if>
      <if test="ordinal != null">
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="orgFlow != null">
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="speId != null">
        #{speId,jdbcType=VARCHAR},
      </if>
      <if test="speName != null">
        #{speName,jdbcType=VARCHAR},
      </if>
      <if test="expertUserFlow != null">
        #{expertUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="expertUserName != null">
        #{expertUserName,jdbcType=VARCHAR},
      </if>
      <if test="evalDate != null">
        #{evalDate,jdbcType=VARCHAR},
      </if>
      <if test="baseScore != null">
        #{baseScore,jdbcType=VARCHAR},
      </if>
      <if test="evalScore != null">
        #{evalScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isExpert != null">
        #{isExpert,jdbcType=CHAR},
      </if>
      <if test="isOverAll != null">
        #{isOverAll,jdbcType=VARCHAR},
      </if>
      <if test="evalContent != null">
        #{evalContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ExpertEvalResultExample" resultType="java.lang.Integer">
    select count(*) from PDSCI.EXPERT_EVAL_RESULT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PDSCI.EXPERT_EVAL_RESULT
    <set>
      <if test="record.resultFlow != null">
        RESULT_FLOW = #{record.resultFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.cfgFlow != null">
        CFG_FLOW = #{record.cfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.evalYear != null">
        EVAL_YEAR = #{record.evalYear,jdbcType=VARCHAR},
      </if>
      <if test="record.cfgName != null">
        CFG_NAME = #{record.cfgName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        TYPE_ID = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.isFile != null">
        IS_FILE = #{record.isFile,jdbcType=CHAR},
      </if>
      <if test="record.filePath != null">
        FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCfgFlow != null">
        PARENT_CFG_FLOW = #{record.parentCfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null">
        LEVEL_ID = #{record.levelId,jdbcType=DECIMAL},
      </if>
      <if test="record.ordinal != null">
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.orgFlow != null">
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.speId != null">
        SPE_ID = #{record.speId,jdbcType=VARCHAR},
      </if>
      <if test="record.speName != null">
        SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      </if>
      <if test="record.expertUserFlow != null">
        EXPERT_USER_FLOW = #{record.expertUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.expertUserName != null">
        EXPERT_USER_NAME = #{record.expertUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.evalDate != null">
        EVAL_DATE = #{record.evalDate,jdbcType=VARCHAR},
      </if>
      <if test="record.baseScore != null">
        BASE_SCORE = #{record.baseScore,jdbcType=VARCHAR},
      </if>
      <if test="record.evalScore != null">
        EVAL_SCORE = #{record.evalScore,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.isExpert != null">
        IS_EXPERT = #{record.isExpert,jdbcType=CHAR},
      </if>
      <if test="record.isOverAll != null">
        IS_OVER_ALL = #{record.isOverAll,jdbcType=VARCHAR},
      </if>
      <if test="record.evalContent != null">
        EVAL_CONTENT = #{record.evalContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update PDSCI.EXPERT_EVAL_RESULT
    set RESULT_FLOW = #{record.resultFlow,jdbcType=VARCHAR},
      CFG_FLOW = #{record.cfgFlow,jdbcType=VARCHAR},
      EVAL_YEAR = #{record.evalYear,jdbcType=VARCHAR},
      CFG_NAME = #{record.cfgName,jdbcType=VARCHAR},
      TYPE_ID = #{record.typeId,jdbcType=VARCHAR},
      IS_FILE = #{record.isFile,jdbcType=CHAR},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      PARENT_CFG_FLOW = #{record.parentCfgFlow,jdbcType=VARCHAR},
      LEVEL_ID = #{record.levelId,jdbcType=DECIMAL},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      SPE_ID = #{record.speId,jdbcType=VARCHAR},
      SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      EXPERT_USER_FLOW = #{record.expertUserFlow,jdbcType=VARCHAR},
      EXPERT_USER_NAME = #{record.expertUserName,jdbcType=VARCHAR},
      EVAL_DATE = #{record.evalDate,jdbcType=VARCHAR},
      BASE_SCORE = #{record.baseScore,jdbcType=VARCHAR},
      EVAL_SCORE = #{record.evalScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      IS_EXPERT = #{record.isExpert,jdbcType=CHAR},
      IS_OVER_ALL = #{record.isOverAll,jdbcType=VARCHAR},
      EVAL_CONTENT = #{record.evalContent,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PDSCI.EXPERT_EVAL_RESULT
    set RESULT_FLOW = #{record.resultFlow,jdbcType=VARCHAR},
      CFG_FLOW = #{record.cfgFlow,jdbcType=VARCHAR},
      EVAL_YEAR = #{record.evalYear,jdbcType=VARCHAR},
      CFG_NAME = #{record.cfgName,jdbcType=VARCHAR},
      TYPE_ID = #{record.typeId,jdbcType=VARCHAR},
      IS_FILE = #{record.isFile,jdbcType=CHAR},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      PARENT_CFG_FLOW = #{record.parentCfgFlow,jdbcType=VARCHAR},
      LEVEL_ID = #{record.levelId,jdbcType=DECIMAL},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      SPE_ID = #{record.speId,jdbcType=VARCHAR},
      SPE_NAME = #{record.speName,jdbcType=VARCHAR},
      EXPERT_USER_FLOW = #{record.expertUserFlow,jdbcType=VARCHAR},
      EXPERT_USER_NAME = #{record.expertUserName,jdbcType=VARCHAR},
      EVAL_DATE = #{record.evalDate,jdbcType=VARCHAR},
      BASE_SCORE = #{record.baseScore,jdbcType=VARCHAR},
      EVAL_SCORE = #{record.evalScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      IS_EXPERT = #{record.isExpert,jdbcType=CHAR},
      IS_OVER_ALL = #{record.isOverAll,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ExpertEvalResult">
    update PDSCI.EXPERT_EVAL_RESULT
    <set>
      <if test="cfgFlow != null">
        CFG_FLOW = #{cfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="evalYear != null">
        EVAL_YEAR = #{evalYear,jdbcType=VARCHAR},
      </if>
      <if test="cfgName != null">
        CFG_NAME = #{cfgName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="isFile != null">
        IS_FILE = #{isFile,jdbcType=CHAR},
      </if>
      <if test="filePath != null">
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="parentCfgFlow != null">
        PARENT_CFG_FLOW = #{parentCfgFlow,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        LEVEL_ID = #{levelId,jdbcType=DECIMAL},
      </if>
      <if test="ordinal != null">
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="orgFlow != null">
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="speId != null">
        SPE_ID = #{speId,jdbcType=VARCHAR},
      </if>
      <if test="speName != null">
        SPE_NAME = #{speName,jdbcType=VARCHAR},
      </if>
      <if test="expertUserFlow != null">
        EXPERT_USER_FLOW = #{expertUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="expertUserName != null">
        EXPERT_USER_NAME = #{expertUserName,jdbcType=VARCHAR},
      </if>
      <if test="evalDate != null">
        EVAL_DATE = #{evalDate,jdbcType=VARCHAR},
      </if>
      <if test="baseScore != null">
        BASE_SCORE = #{baseScore,jdbcType=VARCHAR},
      </if>
      <if test="evalScore != null">
        EVAL_SCORE = #{evalScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isExpert != null">
        IS_EXPERT = #{isExpert,jdbcType=CHAR},
      </if>
      <if test="isOverAll != null">
        IS_OVER_ALL = #{isOverAll,jdbcType=VARCHAR},
      </if>
      <if test="evalContent != null">
        EVAL_CONTENT = #{evalContent,jdbcType=CLOB},
      </if>
    </set>
    where RESULT_FLOW = #{resultFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.sci.model.mo.ExpertEvalResult">
    update PDSCI.EXPERT_EVAL_RESULT
    set CFG_FLOW = #{cfgFlow,jdbcType=VARCHAR},
      EVAL_YEAR = #{evalYear,jdbcType=VARCHAR},
      CFG_NAME = #{cfgName,jdbcType=VARCHAR},
      TYPE_ID = #{typeId,jdbcType=VARCHAR},
      IS_FILE = #{isFile,jdbcType=CHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      PARENT_CFG_FLOW = #{parentCfgFlow,jdbcType=VARCHAR},
      LEVEL_ID = #{levelId,jdbcType=DECIMAL},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      SPE_ID = #{speId,jdbcType=VARCHAR},
      SPE_NAME = #{speName,jdbcType=VARCHAR},
      EXPERT_USER_FLOW = #{expertUserFlow,jdbcType=VARCHAR},
      EXPERT_USER_NAME = #{expertUserName,jdbcType=VARCHAR},
      EVAL_DATE = #{evalDate,jdbcType=VARCHAR},
      BASE_SCORE = #{baseScore,jdbcType=VARCHAR},
      EVAL_SCORE = #{evalScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      IS_EXPERT = #{isExpert,jdbcType=CHAR},
      IS_OVER_ALL = #{isOverAll,jdbcType=VARCHAR},
      EVAL_CONTENT = #{evalContent,jdbcType=CLOB}
    where RESULT_FLOW = #{resultFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ExpertEvalResult">
    update PDSCI.EXPERT_EVAL_RESULT
    set CFG_FLOW = #{cfgFlow,jdbcType=VARCHAR},
      EVAL_YEAR = #{evalYear,jdbcType=VARCHAR},
      CFG_NAME = #{cfgName,jdbcType=VARCHAR},
      TYPE_ID = #{typeId,jdbcType=VARCHAR},
      IS_FILE = #{isFile,jdbcType=CHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      PARENT_CFG_FLOW = #{parentCfgFlow,jdbcType=VARCHAR},
      LEVEL_ID = #{levelId,jdbcType=DECIMAL},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      SPE_ID = #{speId,jdbcType=VARCHAR},
      SPE_NAME = #{speName,jdbcType=VARCHAR},
      EXPERT_USER_FLOW = #{expertUserFlow,jdbcType=VARCHAR},
      EXPERT_USER_NAME = #{expertUserName,jdbcType=VARCHAR},
      EVAL_DATE = #{evalDate,jdbcType=VARCHAR},
      BASE_SCORE = #{baseScore,jdbcType=VARCHAR},
      EVAL_SCORE = #{evalScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      IS_EXPERT = #{isExpert,jdbcType=CHAR},
      IS_OVER_ALL = #{isOverAll,jdbcType=VARCHAR}
    where RESULT_FLOW = #{resultFlow,jdbcType=VARCHAR}
  </update>
</mapper>