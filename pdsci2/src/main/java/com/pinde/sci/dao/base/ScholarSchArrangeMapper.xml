<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.ScholarSchArrangeMapper">
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ScholarSchArrange">
    <id column="ARRANGE_FLOW" jdbcType="VARCHAR" property="arrangeFlow" />
    <result column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
    <result column="DOCTOR_NAME" jdbcType="VARCHAR" property="doctorName" />
    <result column="DEPT_FLOW" jdbcType="VARCHAR" property="deptFlow" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="SECRETARY_FLOW" jdbcType="VARCHAR" property="secretaryFlow" />
    <result column="SECRETARY_NAME" jdbcType="VARCHAR" property="secretaryName" />
    <result column="SCH_START_DATE" jdbcType="VARCHAR" property="schStartDate" />
    <result column="SCH_END_DATE" jdbcType="VARCHAR" property="schEndDate" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ARRANGE_FLOW, DOCTOR_FLOW, DOCTOR_NAME, DEPT_FLOW, DEPT_NAME, SECRETARY_FLOW, SECRETARY_NAME, 
    SCH_START_DATE, SCH_END_DATE, MEMO, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" parameterType="com.pinde.sci.model.mo.ScholarSchArrangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.SCHOLAR_SCH_ARRANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PDSCI.SCHOLAR_SCH_ARRANGE
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PDSCI.SCHOLAR_SCH_ARRANGE
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ScholarSchArrangeExample">
    delete from PDSCI.SCHOLAR_SCH_ARRANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ScholarSchArrange">
    insert into PDSCI.SCHOLAR_SCH_ARRANGE (ARRANGE_FLOW, DOCTOR_FLOW, DOCTOR_NAME, 
      DEPT_FLOW, DEPT_NAME, SECRETARY_FLOW, 
      SECRETARY_NAME, SCH_START_DATE, SCH_END_DATE, 
      MEMO, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW
      )
    values (#{arrangeFlow,jdbcType=VARCHAR}, #{doctorFlow,jdbcType=VARCHAR}, #{doctorName,jdbcType=VARCHAR}, 
      #{deptFlow,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{secretaryFlow,jdbcType=VARCHAR}, 
      #{secretaryName,jdbcType=VARCHAR}, #{schStartDate,jdbcType=VARCHAR}, #{schEndDate,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ScholarSchArrange">
    insert into PDSCI.SCHOLAR_SCH_ARRANGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="arrangeFlow != null">
        ARRANGE_FLOW,
      </if>
      <if test="doctorFlow != null">
        DOCTOR_FLOW,
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME,
      </if>
      <if test="deptFlow != null">
        DEPT_FLOW,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="secretaryFlow != null">
        SECRETARY_FLOW,
      </if>
      <if test="secretaryName != null">
        SECRETARY_NAME,
      </if>
      <if test="schStartDate != null">
        SCH_START_DATE,
      </if>
      <if test="schEndDate != null">
        SCH_END_DATE,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="arrangeFlow != null">
        #{arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null">
        #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="deptFlow != null">
        #{deptFlow,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="secretaryFlow != null">
        #{secretaryFlow,jdbcType=VARCHAR},
      </if>
      <if test="secretaryName != null">
        #{secretaryName,jdbcType=VARCHAR},
      </if>
      <if test="schStartDate != null">
        #{schStartDate,jdbcType=VARCHAR},
      </if>
      <if test="schEndDate != null">
        #{schEndDate,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ScholarSchArrangeExample" resultType="java.lang.Integer">
    select count(*) from PDSCI.SCHOLAR_SCH_ARRANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PDSCI.SCHOLAR_SCH_ARRANGE
    <set>
      <if test="record.arrangeFlow != null">
        ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorFlow != null">
        DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorName != null">
        DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptFlow != null">
        DEPT_FLOW = #{record.deptFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.secretaryFlow != null">
        SECRETARY_FLOW = #{record.secretaryFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.secretaryName != null">
        SECRETARY_NAME = #{record.secretaryName,jdbcType=VARCHAR},
      </if>
      <if test="record.schStartDate != null">
        SCH_START_DATE = #{record.schStartDate,jdbcType=VARCHAR},
      </if>
      <if test="record.schEndDate != null">
        SCH_END_DATE = #{record.schEndDate,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PDSCI.SCHOLAR_SCH_ARRANGE
    set ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      DEPT_FLOW = #{record.deptFlow,jdbcType=VARCHAR},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      SECRETARY_FLOW = #{record.secretaryFlow,jdbcType=VARCHAR},
      SECRETARY_NAME = #{record.secretaryName,jdbcType=VARCHAR},
      SCH_START_DATE = #{record.schStartDate,jdbcType=VARCHAR},
      SCH_END_DATE = #{record.schEndDate,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ScholarSchArrange">
    update PDSCI.SCHOLAR_SCH_ARRANGE
    <set>
      <if test="doctorFlow != null">
        DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="deptFlow != null">
        DEPT_FLOW = #{deptFlow,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="secretaryFlow != null">
        SECRETARY_FLOW = #{secretaryFlow,jdbcType=VARCHAR},
      </if>
      <if test="secretaryName != null">
        SECRETARY_NAME = #{secretaryName,jdbcType=VARCHAR},
      </if>
      <if test="schStartDate != null">
        SCH_START_DATE = #{schStartDate,jdbcType=VARCHAR},
      </if>
      <if test="schEndDate != null">
        SCH_END_DATE = #{schEndDate,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ScholarSchArrange">
    update PDSCI.SCHOLAR_SCH_ARRANGE
    set DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      DEPT_FLOW = #{deptFlow,jdbcType=VARCHAR},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      SECRETARY_FLOW = #{secretaryFlow,jdbcType=VARCHAR},
      SECRETARY_NAME = #{secretaryName,jdbcType=VARCHAR},
      SCH_START_DATE = #{schStartDate,jdbcType=VARCHAR},
      SCH_END_DATE = #{schEndDate,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </update>
</mapper>