<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.sch.SchSwitchSpecialtyMapper">


    <insert id="insertExpressList" parameterType="java.util.List">
        insert all
        <foreach item="item" index="index" collection="addExpressList"  separator="">
            into RES_SCH_PROCESS_EXPRESS (
            REC_FLOW, ORG_FLOW, ORG_NAME,
            DEPT_FLOW, DEPT_NAME, SCH_DEPT_FLOW,
            SCH_DEPT_NAME, REC_TYPE_ID, REC_TYPE_NAME,
            ITEM_NAME, REC_VERSION, OPER_TIME,
            OPER_USER_FLOW, OPER_USER_NAME, STATUS_ID,
            STATUS_NAME, AUDIT_TIME, AUDIT_USER_FLOW,
            AUDIT_USER_NAME, AUDIT_STATUS_ID, AUDIT_STATUS_NAME,
            HEAD_AUDIT_TIME, HEAD_AUDIT_USER_FLOW, HEAD_AUDIT_USER_NAME,
            HEAD_AUDIT_STATUS_ID, HEAD_AUDIT_STATUS_NAME,
            RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW,
            MODIFY_TIME, MODIFY_USER_FLOW, MANAGER_AUDIT_TIME,
            MANAGER_AUDIT_USER_FLOW, MANAGER_AUDIT_USER_NAME,
            MANAGER_AUDIT_STATUS_ID, MANAGER_AUDIT_STATUS_NAME,
            ADMIN_AUDIT_TIME, ADMIN_AUDIT_USER_FLOW, ADMIN_AUDIT_USER_NAME,
            ADMIN_AUDIT_STATUS_ID, ADMIN_AUDIT_STATUS_NAME,
            ITEM_ID, PROCESS_FLOW, REC_FORM,
            SCH_ROTATION_DEPT_FLOW, MEDICINE_TYPE, REC_CONTENT
            )
            values
            (
            #{item.recFlow,jdbcType=VARCHAR}, #{item.orgFlow,jdbcType=VARCHAR}, #{item.orgName,jdbcType=VARCHAR},
            #{item.deptFlow,jdbcType=VARCHAR}, #{item.deptName,jdbcType=VARCHAR}, #{item.schDeptFlow,jdbcType=VARCHAR},
            #{item.schDeptName,jdbcType=VARCHAR}, #{item.recTypeId,jdbcType=VARCHAR},
            #{item.recTypeName,jdbcType=VARCHAR},
            #{item.itemName,jdbcType=VARCHAR}, #{item.recVersion,jdbcType=VARCHAR}, #{item.operTime,jdbcType=VARCHAR},
            #{item.operUserFlow,jdbcType=VARCHAR}, #{item.operUserName,jdbcType=VARCHAR},
            #{item.statusId,jdbcType=VARCHAR},
            #{item.statusName,jdbcType=VARCHAR}, #{item.auditTime,jdbcType=VARCHAR},
            #{item.auditUserFlow,jdbcType=VARCHAR},
            #{item.auditUserName,jdbcType=VARCHAR}, #{item.auditStatusId,jdbcType=VARCHAR},
            #{item.auditStatusName,jdbcType=VARCHAR},
            #{item.headAuditTime,jdbcType=VARCHAR}, #{item.headAuditUserFlow,jdbcType=VARCHAR},
            #{item.headAuditUserName,jdbcType=VARCHAR},
            #{item.headAuditStatusId,jdbcType=VARCHAR}, #{item.headAuditStatusName,jdbcType=VARCHAR},
            #{item.recordStatus,jdbcType=VARCHAR}, #{item.createTime,jdbcType=VARCHAR},
            #{item.createUserFlow,jdbcType=VARCHAR},
            #{item.modifyTime,jdbcType=VARCHAR}, #{item.modifyUserFlow,jdbcType=VARCHAR},
            #{item.managerAuditTime,jdbcType=VARCHAR},
            #{item.managerAuditUserFlow,jdbcType=VARCHAR}, #{item.managerAuditUserName,jdbcType=VARCHAR},
            #{item.managerAuditStatusId,jdbcType=VARCHAR}, #{item.managerAuditStatusName,jdbcType=VARCHAR},
            #{item.adminAuditTime,jdbcType=VARCHAR}, #{item.adminAuditUserFlow,jdbcType=VARCHAR},
            #{item.adminAuditUserName,jdbcType=VARCHAR},
            #{item.adminAuditStatusId,jdbcType=VARCHAR}, #{item.adminAuditStatusName,jdbcType=VARCHAR},
            #{item.itemId,jdbcType=VARCHAR}, #{item.processFlow,jdbcType=VARCHAR}, #{item.recForm,jdbcType=VARCHAR},
            #{item.schRotationDeptFlow,jdbcType=VARCHAR}, #{item.medicineType,jdbcType=VARCHAR},
            #{item.recContent,jdbcType=CLOB}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <insert id="insertResRecList" parameterType="java.util.List" >
        insert all
        <foreach collection="addResRecList" index="index" item="item" separator="">
        into RES_REC (
            REC_FLOW, ORG_FLOW, ORG_NAME,
            DEPT_FLOW, DEPT_NAME, SCH_DEPT_FLOW,
            SCH_DEPT_NAME, REC_TYPE_ID, REC_TYPE_NAME,
            ITEM_NAME, REC_VERSION, OPER_TIME,
            OPER_USER_FLOW, OPER_USER_NAME, STATUS_ID,
            STATUS_NAME, AUDIT_TIME, AUDIT_USER_FLOW,
            AUDIT_USER_NAME, AUDIT_STATUS_ID, AUDIT_STATUS_NAME,
            HEAD_AUDIT_TIME, HEAD_AUDIT_USER_FLOW, HEAD_AUDIT_USER_NAME,
            HEAD_AUDIT_STATUS_ID, HEAD_AUDIT_STATUS_NAME,
            RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW,
            MODIFY_TIME, MODIFY_USER_FLOW, MANAGER_AUDIT_TIME,
            MANAGER_AUDIT_USER_FLOW, MANAGER_AUDIT_USER_NAME,
            MANAGER_AUDIT_STATUS_ID, MANAGER_AUDIT_STATUS_NAME,
            ADMIN_AUDIT_TIME, ADMIN_AUDIT_USER_FLOW, ADMIN_AUDIT_USER_NAME,
            ADMIN_AUDIT_STATUS_ID, ADMIN_AUDIT_STATUS_NAME,
            ITEM_ID, PROCESS_FLOW, REC_FORM,
            SCH_ROTATION_DEPT_FLOW, MEDICINE_TYPE, REC_CONTENT
        )
        values
        (
            #{item.recFlow,jdbcType=VARCHAR}, #{item.orgFlow,jdbcType=VARCHAR}, #{item.orgName,jdbcType=VARCHAR},
            #{item.deptFlow,jdbcType=VARCHAR}, #{item.deptName,jdbcType=VARCHAR}, #{item.schDeptFlow,jdbcType=VARCHAR},
            #{item.schDeptName,jdbcType=VARCHAR}, #{item.recTypeId,jdbcType=VARCHAR},
            #{item.recTypeName,jdbcType=VARCHAR},
            #{item.itemName,jdbcType=VARCHAR}, #{item.recVersion,jdbcType=VARCHAR}, #{item.operTime,jdbcType=VARCHAR},
            #{item.operUserFlow,jdbcType=VARCHAR}, #{item.operUserName,jdbcType=VARCHAR},
            #{item.statusId,jdbcType=VARCHAR},
            #{item.statusName,jdbcType=VARCHAR}, #{item.auditTime,jdbcType=VARCHAR},
            #{item.auditUserFlow,jdbcType=VARCHAR},
            #{item.auditUserName,jdbcType=VARCHAR}, #{item.auditStatusId,jdbcType=VARCHAR},
            #{item.auditStatusName,jdbcType=VARCHAR},
            #{item.headAuditTime,jdbcType=VARCHAR}, #{item.headAuditUserFlow,jdbcType=VARCHAR},
            #{item.headAuditUserName,jdbcType=VARCHAR},
            #{item.headAuditStatusId,jdbcType=VARCHAR}, #{item.headAuditStatusName,jdbcType=VARCHAR},
            #{item.recordStatus,jdbcType=VARCHAR}, #{item.createTime,jdbcType=VARCHAR},
            #{item.createUserFlow,jdbcType=VARCHAR},
            #{item.modifyTime,jdbcType=VARCHAR}, #{item.modifyUserFlow,jdbcType=VARCHAR},
            #{item.managerAuditTime,jdbcType=VARCHAR},
            #{item.managerAuditUserFlow,jdbcType=VARCHAR}, #{item.managerAuditUserName,jdbcType=VARCHAR},
            #{item.managerAuditStatusId,jdbcType=VARCHAR}, #{item.managerAuditStatusName,jdbcType=VARCHAR},
            #{item.adminAuditTime,jdbcType=VARCHAR}, #{item.adminAuditUserFlow,jdbcType=VARCHAR},
            #{item.adminAuditUserName,jdbcType=VARCHAR},
            #{item.adminAuditStatusId,jdbcType=VARCHAR}, #{item.adminAuditStatusName,jdbcType=VARCHAR},
            #{item.itemId,jdbcType=VARCHAR}, #{item.processFlow,jdbcType=VARCHAR}, #{item.recForm,jdbcType=VARCHAR},
            #{item.schRotationDeptFlow,jdbcType=VARCHAR}, #{item.medicineType,jdbcType=VARCHAR},
            #{item.recContent,jdbcType=CLOB}
        )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <insert id="insertReqList" parameterType="java.util.List">
        insert all
        <foreach collection="addReqList" index="index" item="item" separator="">
        into PDSCI.SCH_ROTATION_DEPT_REQ (
        REQ_FLOW, ROTATION_FLOW, STANDARD_DEPT_ID,
        STANDARD_DEPT_NAME, REL_RECORD_FLOW, REC_TYPE_ID,
        REC_TYPE_NAME, ITEM_NAME, REQ_NUM,
        REQ_NOTE, RECORD_STATUS, CREATE_TIME,
        CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW,
        ORG_FLOW, ORG_NAME, ITEM_ID,REQ_STANDARD
        )
        values
            (
            #{item.reqFlow,jdbcType=VARCHAR}, #{item.rotationFlow,jdbcType=VARCHAR},
            #{item.standardDeptId,jdbcType=VARCHAR},
            #{item.standardDeptName,jdbcType=VARCHAR}, #{item.relRecordFlow,jdbcType=VARCHAR},
            #{item.recTypeId,jdbcType=VARCHAR},
            #{item.recTypeName,jdbcType=VARCHAR}, #{item.itemName,jdbcType=VARCHAR}, #{item.reqNum,jdbcType=DECIMAL},
            #{item.reqNote,jdbcType=VARCHAR}, #{item.recordStatus,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=VARCHAR},
            #{item.createUserFlow,jdbcType=VARCHAR}, #{item.modifyTime,jdbcType=VARCHAR},
            #{item.modifyUserFlow,jdbcType=VARCHAR},
            #{item.orgFlow,jdbcType=VARCHAR}, #{item.orgName,jdbcType=VARCHAR}, #{item.itemId,jdbcType=VARCHAR},
            #{item.reqStandard,jdbcType=CLOB}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <insert id="insertProcessList" parameterType="java.util.List">
        insert all
        <foreach collection="addProcessList" index="index" item="item" separator="">
        into RES_DOCTOR_SCH_PROCESS (
            PROCESS_FLOW, USER_FLOW, ORG_FLOW,
            ORG_NAME, DEPT_FLOW, DEPT_NAME,
            SCH_DEPT_FLOW, SCH_DEPT_NAME, SCH_RESULT_FLOW,
            SCH_START_DATE, SCH_END_DATE, START_DATE,
            END_DATE, TEACHER_USER_FLOW, TEACHER_USER_NAME,
            HEAD_USER_FLOW, HEAD_USER_NAME, SCH_FLAG,
            SCH_SCORE, IS_CURRENT_FLAG, SCH_PER,
            RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW,
            MODIFY_TIME, MODIFY_USER_FLOW, IS_EXTERNAL
        )
        values
            (
            #{item.processFlow,jdbcType=VARCHAR}, #{item.userFlow,jdbcType=VARCHAR}, #{item.orgFlow,jdbcType=VARCHAR},
            #{item.orgName,jdbcType=VARCHAR}, #{item.deptFlow,jdbcType=VARCHAR}, #{item.deptName,jdbcType=VARCHAR},
            #{item.schDeptFlow,jdbcType=VARCHAR}, #{item.schDeptName,jdbcType=VARCHAR}, #{item.schResultFlow,jdbcType=VARCHAR},
            #{item.schStartDate,jdbcType=VARCHAR}, #{item.schEndDate,jdbcType=VARCHAR}, #{item.startDate,jdbcType=VARCHAR},
            #{item.endDate,jdbcType=VARCHAR}, #{item.teacherUserFlow,jdbcType=VARCHAR}, #{item.teacherUserName,jdbcType=VARCHAR},
            #{item.headUserFlow,jdbcType=VARCHAR}, #{item.headUserName,jdbcType=VARCHAR}, #{item.schFlag,jdbcType=VARCHAR},
            #{item.schScore,jdbcType=DECIMAL}, #{item.isCurrentFlag,jdbcType=VARCHAR}, #{item.schPer,jdbcType=DECIMAL},
            #{item.recordStatus,jdbcType=VARCHAR}, #{item.createTime,jdbcType=VARCHAR}, #{item.createUserFlow,jdbcType=VARCHAR},
            #{item.modifyTime,jdbcType=VARCHAR}, #{item.modifyUserFlow,jdbcType=VARCHAR}, #{item.isExternal,jdbcType=VARCHAR}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

</mapper>