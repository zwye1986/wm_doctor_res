<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.jsres.JsResDoctorRecruitExtMapper">
	
	<resultMap id="DoctorRecruit" type="com.pinde.sci.model.jsres.JsResDoctorRecruitExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
		<result column="ADMIT_NOTICE" jdbcType="VARCHAR" property="admitNotice"/>
		<result column="GLOBAL_NOTICE" jdbcType="VARCHAR" property="globalNotice"/>
		<result column="ORG_CITY_ID" jdbcType="VARCHAR" property="orgCityId"/>
		<result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName"/>
		<result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason"/>
		<result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason"/>
		<result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason"/>
		<result column="RANK_NUM" jdbcType="VARCHAR" property="rankNum"/>
		<result column="IS_RETRAIN" jdbcType="VARCHAR" property="isRetrain"/>
		<result column="ARMY_TYPE" jdbcType="VARCHAR" property="armyType"/>
        <association property="sysUser" column="user_flow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" >
			<id column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
		    <result column="edOrgFlow" jdbcType="VARCHAR" property="orgFlow"/>
			<result column="edOrgName" jdbcType="VARCHAR" property="orgName"/>
			<result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId"/>
			<result column="DOCTOR_TYPE_NAME" jdbcType="VARCHAR" property="doctorTypeName"/>
			<result column="WORK_ORG_ID" jdbcType="VARCHAR" property="workOrgId"/>
			<result column="WORK_ORG_NAME" jdbcType="VARCHAR" property="workOrgName"/>
		</association>
	</resultMap>
	<resultMap id="DoctorRecruitNew" type="com.pinde.sci.model.jsres.JsResDoctorRecruitExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
		<result column="ADMIT_NOTICE" jdbcType="VARCHAR" property="admitNotice"/>
		<result column="ORG_CITY_ID" jdbcType="VARCHAR" property="orgCityId"/>
		<result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName"/>
		<result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason"/>
		<result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason"/>
		<result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason"/>
		<result column="RANK_NUM" jdbcType="VARCHAR" property="rankNum"/>
		<result column="SPE_ID_NEW" jdbcType="VARCHAR" property="speIdNew"/>
		<result column="SPE_NAME_NEW" jdbcType="VARCHAR" property="speNameNew"/>
		<result column="FIRST_IS_PASS" jdbcType="VARCHAR" property="firstIsPass"/>
        <association property="sysUser" column="user_flow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" >
			<id column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
			<result column="edOrgFlow" jdbcType="VARCHAR" property="orgFlow"/>
			<result column="edOrgName" jdbcType="VARCHAR" property="orgName"/>
			<result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId"/>
			<result column="DOCTOR_TYPE_NAME" jdbcType="VARCHAR" property="doctorTypeName"/>
		</association>
	</resultMap>
	<resultMap id="DoctorScoreRecruit" type="com.pinde.sci.model.jsres.JsResDoctorRecruitExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
		<result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason"/>
		<result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason"/>
		<result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason"/>
		<result column="THEORY_TEST_ID" jdbcType="VARCHAR" property="theoryTestId"/>
		<result column="SKILL_TEST_ID" jdbcType="VARCHAR" property="skillTestId"/>
		<result column="COUNTRY_ORG_NAME" jdbcType="VARCHAR" property="countryOrgName"/>
		<result column="THEROY_SCORE_FLOW" jdbcType="VARCHAR" property="theroyScoreFlow"/>
        <association property="sysUser" column="user_flow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resScore" column="user_flow"  resultMap="com.pinde.sci.dao.base.ResScoreMapper.ResultMapWithBLOBs" />
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" >
			<id column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
			<result column="edOrgFlow" jdbcType="VARCHAR" property="orgFlow"/>
			<result column="edOrgName" jdbcType="VARCHAR" property="orgName"/>
		</association>
	</resultMap>
	<resultMap id="doctorInfo" type="com.pinde.sci.model.jsres.JsDoctorInfoExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
		<result column="ARMY_TYPE" jdbcType="VARCHAR" property="armyType"/>
        <association property="sysUser" column="userFlow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" />
		<association property="userResume" column="userFlow"  resultMap="com.pinde.sci.dao.base.PubUserResumeMapper.ResultMapWithBLOBs" />
	</resultMap>
	
	<resultMap id="doctorInfoSun" type="com.pinde.sci.model.jsres.JsResDoctorRecruitExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
        <association property="sysUser" column="userFlow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
	</resultMap>
	 <select id="searchDoctorRecruit"  parameterType="java.util.Map" resultMap="doctorInfoSun">
	 	  select 	dr.*,		
					u.USER_FLOW,
	 				u.USER_NAME,
					u.USER_CODE ,
					u.USER_PHONE,
					u.SEX_ID,
					u.SEX_NAME,
					u.ID_NO,
					u.NATION_ID,
					u.NATION_NAME,
					u.USER_BIRTHDAY,
					u.USER_EMAIL
		    from pdsci.RES_DOCTOR_RECRUIT dr
		    inner join pdsci.SYS_USER u on dr.DOCTOR_FLOW = u.USER_FLOW 
		    where dr.RECORD_STATUS = 'Y' AND u.RECORD_STATUS = 'Y'  AND dr.RECRUIT_FLAG = 'Y'
		     <if test="doctorRecruit!=null">
				 <if test="doctorRecruit.speId!=null and doctorRecruit.speId!=''">
						    and dr.SPE_ID = #{doctorRecruit.speId} 
				</if>
				 <if test="doctorRecruit.sessionNumber!=null and doctorRecruit.sessionNumber!=''">
						    and dr.SESSION_NUMBER = #{doctorRecruit.sessionNumber} 
				 </if>
			 </if>
			  <if test="users!=null">
				  <if test="users.userName!=null and users.userName!=''">
				  			<bind name="userName" value="'%'+users.userName+'%'"/>
		    				and u.USER_NAME like #{userName} 
				  </if>
				  <if test="users.idNo!=null and users.idNo!=''">
		    				and u.ID_NO = #{users.idNo} 
				 </if>
			 </if>
		    AND (exists(
		      select so.org_flow
		      from  sys_org so
		      where so.record_status = 'Y'
		      and so.org_flow = dr.org_flow
		      <if test="orgFlow!=null and orgFlow!=''">
		    	and so.org_flow = #{orgFlow} 
			  </if>
			  <if test="doctorRecruit.placeId!=null and doctorRecruit.placeId!=''">
				 and so.ORG_CITY_ID = #{doctorRecruit.placeId} 
			 </if>
			 <if test="orgTypeId!=null and orgTypeId!=''">
				 and so.ORG_TYPE_ID = #{orgTypeId} 
			  </if>
		    )
		    <if test="check!=null and check!=''">
		    or 
		    exists(
		    select rjo.joint_org_flow
		      from  res_joint_org rjo
		      inner join sys_org so
		      on so.org_flow = rjo.org_flow
		      where so.record_status = 'Y'
		      and rjo.record_status = 'Y'
		      and rjo.joint_org_flow = dr.org_flow
		       <if test="orgFlow!=null and orgFlow!=''">
		    	and so.org_flow = #{orgFlow} 
			  </if>
			  <if test="doctorRecruit.placeId!=null and doctorRecruit.placeId!=''">
				 and so.ORG_CITY_ID = #{doctorRecruit.placeId} 
			  </if>
			   <if test="orgTypeId!=null and orgTypeId!=''">
				 and so.ORG_TYPE_ID = #{orgTypeId} 
			  </if>
		    )
		    </if>
		    )
	 	
	 	
	 
	 </select>
	
	 <select id="searchDoctorInfoExts"  parameterType="java.util.Map" resultMap="doctorInfo">
    		select *
    		from pdsci.RES_DOCTOR_RECRUIT dr
			left join  RES_DOCTOR ed
			on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
    		left join  pdsci.SYS_USER u
    		on dr.DOCTOR_FLOW =  u.USER_FLOW
    		left join pdsci.PUB_USER_RESUME pur
    		on pur.USER_FLOW=dr.DOCTOR_FLOW
		 	left join pdsci.sys_org so on so.org_flow = dr.org_flow
    		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
    		and dr.org_flow in(
    			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
			    	 AND ORG_PROV_ID = #{sysOrg.orgProvId} 
			    </if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
			    	 AND ORG_CITY_ID = #{sysOrg.orgCityId} 
			    </if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
			    	 AND ORG_FLOW = #{sysOrg.orgFlow} 
			    </if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
			    	 AND ORG_LEVEL_ID = #{sysOrg.orgLevelId} 
			    </if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
			    	 AND ORG_TYPE_ID = #{sysOrg.orgTypeId} 
			    </if>
		    </if>
		    <if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
				and dr.ORG_FLOW in 
    			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
		    <if test="docTypeList!=null and docTypeList.size>0">
				and ed.DOCTOR_TYPE_ID in
    			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
			 <if test="trainYearList!=null and trainYearList.size>0">
				 and dr.TRAIN_YEAR in
				 <foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
			 </if>
    		)
    		<if test="resDoctorRecruit!=null">
    			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber} 
    			</if>
    			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
    				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId} 
    			</if>
    			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
    				and dr.SPE_ID = #{resDoctorRecruit.speId} 
    			</if>
    			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
    				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow} 
    			</if>
    			 <if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
    				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
    			</if> 
    			 <if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
    				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
    			</if> 
    		</if>
    		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
    			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
    		</if>
    		<if test="user!=null">
    			<if test="user.userName!=null and user.userName!=''">
    				<bind name="userName" value="'%'+user.userName+'%'"/>
    				and u.USER_NAME like #{userName} 
    			</if>
    			<if test="user.idNo!=null and user.idNo!=''">
    				<bind name="idNo" value="'%'+user.idNo+'%'"/>
    				and u.ID_NO like #{idNo} 
    			</if>
    		</if>
			<if test="sessionNumbers!=null and sessionNumbers.size>0">
				and dr.SESSION_NUMBER in
				<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
    		<if test="doctor!=null">
    			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
    				and dr.CAT_SPE_ID = #{doctor.trainingTypeId} 
    			</if>
    			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
    				and dr.SPE_ID = #{doctor.trainingSpeId} 
    			</if>
    			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{doctor.sessionNumber} 
    			</if>
    			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
    				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId} 
    			</if>
				<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
					and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
				</if>
				<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
					and dr.doctor_Status_Id = #{doctor.doctorStatusId}
				</if>
				<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
					and (
					<trim prefix="" prefixOverrides="OR">
						<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
						<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
					</trim>
					)
				</if>
	    	</if>
    		order by dr.SESSION_NUMBER desc,so.org_level_id,dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.doctor_flow,dr.CREATE_TIME desc
    </select>

	<select id="searchDoctorInfoExts2"  parameterType="java.util.Map" resultMap="doctorInfo">
		select dr.*,ed.*,u.*,pur.*,so.*
			, EXTRACTVALUE(XMLTYPE(pur.user_resume), '/userResumeExtInfoForm/armyType') as ARMY_TYPE
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join pdsci.PUB_USER_RESUME pur
		on pur.USER_FLOW=dr.DOCTOR_FLOW
		left join pdsci.sys_org so on so.org_flow = dr.org_flow
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		AND NOT EXISTS (
		SELECT
		1
		FROM
		RES_DOCOTR_DELAY_TETURN T
		WHERE
		T.RECORD_STATUS = 'Y'
		AND T.TYPE_ID = 'ReturnTraining'
		AND T.AUDIT_STATUS_ID = '1'
		AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
		AND T.SESSION_NUMBER = DR.SESSION_NUMBER
		AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW
		)
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and (dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			or dr.joint_org_flow in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			)
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		)
		<if test="workOrgId != null and workOrgId !=''">
			and ed.WORK_ORG_ID = #{workOrgId}
		</if>
		<if test="workOrgName != null and workOrgName !=''">
			and ed.WORK_ORG_NAME = #{workOrgName}
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='Y'.toString()">
			AND pur.user_resume IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') != 'NO'
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='N'.toString()">
			AND pur.user_resume IS NOT NULL
			AND
			(
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') = 'NO'
			OR
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NULL
			)
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId == null">
				and dr.DOCTOR_STATUS_ID in ('20','21','22','24')
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="isPostpone != null and isPostpone != ''">
			<if test="isPostpone == 'Y'.toString()">
				AND EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
			<if test="isPostpone == 'N'.toString()">
				AND NOT EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
		</if>
		order by dr.SESSION_NUMBER desc,so.org_level_id,dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.doctor_flow,dr.CREATE_TIME desc
	</select>

	 <select id="searchDoctorInfoBaseExts"  parameterType="java.util.Map" resultMap="doctorInfo">
    	select dr.*,ed.*,u.*,pur.*,so.*
				 , EXTRACTVALUE(XMLTYPE(pur.user_resume), '/userResumeExtInfoForm/armyType') as ARMY_TYPE
    		from pdsci.RES_DOCTOR_RECRUIT dr
			left join  RES_DOCTOR ed
			on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
    		left join  pdsci.SYS_USER u
    		on dr.DOCTOR_FLOW =  u.USER_FLOW
    		left join pdsci.PUB_USER_RESUME pur
    		on pur.USER_FLOW=dr.DOCTOR_FLOW
		 	left join pdsci.sys_org so on so.org_flow = dr.org_flow
    		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
    		and ed.org_flow in(
    			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
			    	 AND ORG_PROV_ID = #{sysOrg.orgProvId}
			    </if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
			    	 AND ORG_CITY_ID = #{sysOrg.orgCityId}
			    </if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
			    	 AND ORG_FLOW = #{sysOrg.orgFlow}
			    </if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
			    	 AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			    </if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
			    	 AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			    </if>
		    </if>
		    <if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
				and dr.ORG_FLOW in
    			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
		    <if test="docTypeList!=null and docTypeList.size>0">
				and ed.DOCTOR_TYPE_ID in
    			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
			 <if test="trainYearList!=null and trainYearList.size>0">
				 and dr.TRAIN_YEAR in
				 <foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
			 </if>
    		)
		 <if test="workOrgId != null and workOrgId !=''">
			 and ed.WORK_ORG_ID = #{workOrgId}
		 </if>
		 <if test="workOrgName != null and workOrgName !=''">
			 and ed.WORK_ORG_NAME = #{workOrgName}
		 </if>
		 <if test="isArmy!=null and isArmy!='' and isArmy=='Y'.toString()">
			 AND pur.user_resume IS NOT NULL
			 AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NOT NULL
			 AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') != 'NO'
		 </if>
		 <if test="isArmy!=null and isArmy!='' and isArmy=='N'.toString()">
			 AND pur.user_resume IS NOT NULL
			 AND
			 (
			 EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') = 'NO'
			 OR
			 EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NULL
			 )
		 </if>
    		<if test="resDoctorRecruit!=null">
    			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
    			</if>
    			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
    				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
    			</if>
    			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
    				and dr.SPE_ID = #{resDoctorRecruit.speId}
    			</if>
    			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
    				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
    			</if>
    			 <if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
    				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
    			</if>
    			 <if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
    				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
    			</if>
    		</if>
    		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
    			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
    		</if>
    		<if test="user!=null">
    			<if test="user.userName!=null and user.userName!=''">
    				<bind name="userName" value="'%'+user.userName+'%'"/>
    				and u.USER_NAME like #{userName}
    			</if>
    			<if test="user.idNo!=null and user.idNo!=''">
    				<bind name="idNo" value="'%'+user.idNo+'%'"/>
    				and u.ID_NO like #{idNo}
    			</if>
    		</if>
			<if test="sessionNumbers!=null and sessionNumbers.size>0">
				and dr.SESSION_NUMBER in
				<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
    		<if test="doctor!=null">
    			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
    				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
    			</if>
    			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
    				and dr.SPE_ID = #{doctor.trainingSpeId}
    			</if>
    			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
    			</if>
    			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
    				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
    			</if>
				<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
					and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
				</if>
				<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
					and dr.doctor_Status_Id = #{doctor.doctorStatusId}
				</if>
				<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
					and (
					<trim prefix="" prefixOverrides="OR">
						<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
						<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
					</trim>
					)
				</if>
	    	</if>
    		order by dr.SESSION_NUMBER desc,so.org_level_id,dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.doctor_flow,dr.CREATE_TIME desc
    </select>


    <select id="searchDoctorInfo"  parameterType="java.util.Map" resultMap="doctorInfo">
    	SELECT *
			from pdsci.RES_DOCTOR_RECRUIT dr, pdsci.SYS_USER u,  pdsci.RES_DOCTOR ed,pdsci.PUB_USER_RESUME pur
			where dr.RECORD_STATUS = 'Y' and u.RECORD_STATUS = 'Y' and ed.RECORD_STATUS = 'Y'  and pur.RECORD_STATUS = 'Y' 
    		and dr.DOCTOR_FLOW=u.USER_FLOW and u.USER_FLOW=ed.DOCTOR_FLOW and ed.DOCTOR_FLOW=pur.USER_FLOW
    		and dr.DOCTOR_FLOW=ed.DOCTOR_FLOW and u.USER_FLOW=pur.USER_FLOW 
    		and dr.DOCTOR_FLOW=pur.USER_FLOW
    		and exists(
    				select  RECRUIT_FLOW from res_doctor_recruit r
						where create_time = 
 						 (select max(create_time) from res_doctor_recruit 
   						  where record_status='Y' 
   						  and doctor_flow=r.doctor_flow
   						  <if test="resDoctorRecruit!=null">
			    				<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				    				and SESSION_NUMBER = #{resDoctorRecruit.sessionNumber} 
				    			</if>
				    			 <if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				    				and AUDIT_STATUS_ID = #{resDoctorRecruit.auditStatusId} 
				    			</if>
    					   </if>
    				)  
    				and dr.RECRUIT_FLOW=r.RECRUIT_FLOW
    		)
    		and exists (
					SELECT ORG_FLOW
					FROM PDSCI.SYS_ORG
					WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
					and ed.org_flow =org_flow 
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
			    	 AND ORG_PROV_ID = #{sysOrg.orgProvId} 
			    </if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
			    	 AND ORG_CITY_ID = #{sysOrg.orgCityId} 
			    </if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
			    	 AND ORG_FLOW = #{sysOrg.orgFlow} 
			    </if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
			    	 AND ORG_LEVEL_ID = #{sysOrg.orgLevelId} 
			    </if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
			    	 AND ORG_TYPE_ID = #{sysOrg.orgTypeId} 
			    </if>
		    </if>
		    <if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
				and dr.ORG_FLOW in 
    			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
		    <if test="docTypeList!=null and docTypeList.size>0">
				and ed.DOCTOR_TYPE_ID in
    			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    		)
    		<if test="resDoctorRecruit!=null">
    			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber} 
    			</if>
    			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
    				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId} 
    			</if>
    			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
    				and dr.SPE_ID = #{resDoctorRecruit.speId} 
    			</if>
    			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
    				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow} 
    			</if>
    			 <if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
    				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
    			</if> 
    		</if>
    		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
    			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
    		</if>
    		<if test="user!=null">
    			<if test="user.userName!=null and user.userName!=''">
    				<bind name="userName" value="'%'+user.userName+'%'"/>
    				and u.USER_NAME like #{userName} 
    			</if>
    			<if test="user.idNo!=null and user.idNo!=''">
    				<bind name="idNo" value="'%'+user.idNo+'%'"/>
    				and u.ID_NO like #{idNo} 
    			</if>
    		</if>
    		<if test="doctor!=null">
    			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
    				and dr.CAT_SPE_ID = #{doctor.trainingTypeId} 
    			</if>
    			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
    				and dr.SPE_ID = #{doctor.trainingSpeId} 
    			</if>
    			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
    				and dr.SESSION_NUMBER = #{doctor.sessionNumber} 
    			</if>
    			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
    				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId} 
    			</if>
	    	</if>
    </select>
	<select id="searchJsDoctorScoreExtList"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.score_flow,score.theory_score,score.skill_score,score.ext_score,score.test_id AS THEORY_TEST_ID,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,dr.*
		, CASE WHEN ORG.ORG_LEVEL_ID = 'CountryOrg' THEN (SELECT DISTINCT ORG_NAME FROM RES_JOINT_ORG WHERE ORG_FLOW = ORG.ORG_FLOW AND RECORD_STATUS = 'Y')
		ELSE (SELECT ORG_NAME FROM RES_JOINT_ORG WHERE JOINT_ORG_FLOW = ORG.ORG_FLOW AND  RECORD_STATUS = 'Y') END COUNTRY_ORG_NAME
		from pdsci.res_score score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
			select a.* from RES_DOCTOR_RECRUIT a,
			(    select t.doctor_flow,max(t.create_time) as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
			<if test="resDoctorRecruit!=null">
				<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
					and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
				</if>
			</if> group by t.doctor_flow) b
			where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where score.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
		<if test="isHege!=null and isHege!=''">
			<if test='isHege == "Y"'>
				and score.theory_score = '1'
			</if>
			<if test='isHege == "N"'>
				and score.theory_score != '1'
			</if>
		</if>
		<if test="testId!=null and testId!=''">
			and  score.test_id = #{testId}
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
		</if>
		order by  org.org_code,score.theory_score desc
	</select>
	<select id="searchDoctorSkillAndTheoryScoreExts"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.SKILL_SCORE_FLOW score_flow,score.theory_score,score.skill_score,score.ext_score,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,dr.*
		from (
		SELECT  T.DOCTOR_FLOW,T.SCORE_PHASE_ID, A.THEROY_SCORE_FLOW, B.SKILL_SCORE_FLOW,A.THEORY_SCORE,B.SKILL_SCORE,B.EXT_SCORE
		FROM (SELECT DISTINCT S.DOCTOR_FLOW,S.SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS='Y'
		GROUP BY S.DOCTOR_FLOW,S.SCORE_PHASE_ID) T
		LEFT JOIN (SELECT T.SCORE_FLOW THEROY_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.THEORY_SCORE,
		T.SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('TheoryScore')) A
		ON T.DOCTOR_FLOW = A.DOCTOR_FLOW
		AND T.SCORE_PHASE_ID = A.SCORE_PHASE_ID
		LEFT JOIN (SELECT T.SCORE_FLOW SKILL_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.SKILL_SCORE,
		T.EXT_SCORE,
		T.SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('SkillScore')) B
		ON T.DOCTOR_FLOW = B.DOCTOR_FLOW
		AND T.SCORE_PHASE_ID = B.SCORE_PHASE_ID ) score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
		select a.* from RES_DOCTOR_RECRUIT a,
		(    select t.doctor_flow,max(t.create_time) as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if> group by t.doctor_flow) b
		where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where  u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
		<if test="isHege!=null and isHege!=''">
			and score.theory_score = #{isHege}
		</if>
		<if test="skillIsHege!=null and skillIsHege!=''">
			and score.skill_score = #{skillIsHege}
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
		</if>
		order by  org.org_code desc,u.user_code
	</select>
	<select id="searchDoctorSkillAndTheoryScoreExts1"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.SKILL_SCORE_FLOW score_flow,score.THEROY_SCORE_FLOW,score.theory_score,score.THEROY_SCORE_PHASE_ID AS SCORE_PHASE_ID,score.skill_score,
		score.SKILL_SCORE_PHASE_ID AS SCORE_PHASE_NAME,score.ext_score,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.training_spe_id,ed.training_spe_name,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		u.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE,
		JGA.LOCAL_REASON,
		JGA.CITY_REASON,
		JGA.GLOBAL_REASON,
		score.THEORY_TEST_ID,score.SKILL_TEST_ID,
		score.JES_THEORY_TEST_ID,score.JES_SKILL_TEST_ID,
		score.THEROY_SESSION_NUMBER,
		score.skill_SESSION_NUMBER,
		GREATEST(nvl ( score.THEORY_TEST_ID, 0 ),nvl ( score.SKILL_TEST_ID, 0 )) as QUALIFIED_TEST_ID
		, CASE WHEN ORG.ORG_LEVEL_ID = 'CountryOrg' THEN (SELECT DISTINCT ORG_NAME FROM RES_JOINT_ORG WHERE ORG_FLOW = ORG.ORG_FLOW AND RECORD_STATUS = 'Y')
		ELSE (SELECT ORG_NAME FROM RES_JOINT_ORG WHERE JOINT_ORG_FLOW = ORG.ORG_FLOW AND  RECORD_STATUS = 'Y') END COUNTRY_ORG_NAME
		from (
			SELECT case
			when A.DOCTOR_FLOW is not null then
			a.doctor_flow
			when b.doctor_flow is not null then
			b.doctor_flow
			else
			null
			end doctor_flow, A.THEROY_SCORE_FLOW, A.SESSION_NUMBER THEROY_SESSION_NUMBER,
		    B.SESSION_NUMBER skill_SESSION_NUMBER,B.SKILL_SCORE_FLOW,A.THEROY_SCORE_PHASE_ID, A.THEORY_SCORE,
			B.SKILL_SCORE_PHASE_ID, B.SKILL_SCORE, B.EXT_SCORE,A.THEORY_TEST_ID,B.SKILL_TEST_ID,A.JES_THEORY_TEST_ID,B.JES_SKILL_TEST_ID
			FROM  (
			select R.SCORE_FLOW AS THEROY_SCORE_FLOW,a.DOCTOR_FLOW,A.SESSION_NUMBER,R.THEORY_SCORE,a.THEROY_SCORE_PHASE_ID,R.TEST_ID as THEORY_TEST_ID,
			JES.TEST_ID AS 	JES_THEORY_TEST_ID
			from
			(SELECT T.DOCTOR_FLOW,T.SESSION_NUMBER,T.SCORE_PHASE_ID AS THEROY_SCORE_PHASE_ID
			FROM RES_SCORE T
			WHERE T.RECORD_STATUS = 'Y'
			AND T.SCORE_TYPE_ID IN ('TheoryScore')
			AND THEORY_SCORE = '1'
			<if test="theroyScoreYear!=null and theroyScoreYear!=''">
				AND T.SCORE_PHASE_ID = #{theroyScoreYear}
			</if>
			) a
			LEFT JOIN  JSRES_EXAM_SIGNUP JES
			ON a.DOCTOR_FLOW = JES.DOCTOR_FLOW
			AND JES.SIGNUP_TYPE_ID = 'Theory'
			AND  a.THEROY_SCORE_PHASE_ID = JES.SIGNUP_YEAR
			AND JES.RECORD_STATUS = 'Y'
			AND JES.AUDIT_STATUS_ID = 'GlobalPassed'
			left join RES_SCORE R
			on a.DOCTOR_FLOW=R.DOCTOR_FLOW
			where a.THEROY_SCORE_PHASE_ID=R.SCORE_PHASE_ID
			AND R.SCORE_TYPE_ID IN ('TheoryScore') and  R.RECORD_STATUS = 'Y'
			<if test="theroyScoreYear!=null and theroyScoreYear!=''">
				AND R.SCORE_PHASE_ID = #{theroyScoreYear}
			</if>
			<if test="roleFlag!=null and roleFlag!='' and roleFlag != 'global'.toString()">
				AND R.IS_AFFIRM_ID = 'Y'
			</if>
			) A
			FULL JOIN (
			select R.SCORE_FLOW AS SKILL_SCORE_FLOW,a.DOCTOR_FLOW,a.SESSION_NUMBER,R.SKILL_SCORE,R.EXT_SCORE,a.SKILL_SCORE_PHASE_ID,R.TEST_ID as SKILL_TEST_ID,
			JES.TEST_ID AS JES_SKILL_TEST_ID
			from
			(SELECT T.DOCTOR_FLOW,T.SESSION_NUMBER,T.SCORE_PHASE_ID AS SKILL_SCORE_PHASE_ID
			FROM RES_SCORE T
			WHERE T.RECORD_STATUS = 'Y'
			AND T.SCORE_TYPE_ID IN ('SkillScore')
			AND SKILL_SCORE = '1'
			<if test="skillScoreYear!=null and skillScoreYear!=''">
				AND T.SCORE_PHASE_ID = #{skillScoreYear}
			</if>
			) a
			LEFT JOIN  JSRES_EXAM_SIGNUP JES
			ON a.DOCTOR_FLOW = JES.DOCTOR_FLOW
			AND JES.SIGNUP_TYPE_ID = 'Skill'
			AND  a.SKILL_SCORE_PHASE_ID = JES.SIGNUP_YEAR
			AND JES.RECORD_STATUS = 'Y'
			AND JES.AUDIT_STATUS_ID = 'GlobalPassed'
			left join RES_SCORE R
			on a.DOCTOR_FLOW=R.DOCTOR_FLOW
			where a.SKILL_SCORE_PHASE_ID=R.SCORE_PHASE_ID
			AND R.SCORE_TYPE_ID IN ('SkillScore') and  R.RECORD_STATUS = 'Y'
			<if test="skillScoreYear!=null and skillScoreYear!=''">
				AND R.SCORE_PHASE_ID = #{skillScoreYear}
			</if>
			<if test="roleFlag!=null and roleFlag!='' and roleFlag != 'global'.toString()">
				AND R.IS_AFFIRM_ID = 'Y'
			</if>
			) B ON A.DOCTOR_FLOW = B.DOCTOR_FLOW

	    ) score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
		select a.* from RES_DOCTOR_RECRUIT a,
		(    select t.doctor_flow,t.create_time as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if> ) b
		where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		and score.THEROY_SESSION_NUMBER = dr.SESSION_NUMBER
		and score.skill_SESSION_NUMBER = dr.SESSION_NUMBER
		left join sys_org org on org.org_flow=ed.org_flow
		LEFT JOIN JSRES_GRADUATION_APPLY JGA ON DR.RECRUIT_FLOW = JGA.RECRUIT_FLOW
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and JGA.APPLY_YEAR = #{resDoctorRecruit.graduationYear}
			</if>
		</if>
		where  u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		AND score.theory_score = '1'
		AND score.skill_score = '1'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="isMakeUp!=null and isMakeUp!=''">
			<if test='isMakeUp =="N" '>
				AND nvl(score.THEORY_TEST_ID, 0) != nvl(score.JES_THEORY_TEST_ID, 0)
				AND nvl(score.SKILL_TEST_ID, 0)	 != nvl(score.JES_SKILL_TEST_ID, 0)
			</if>
		</if>
		<if test="testId!=null and testId!=''">
			AND GREATEST(nvl ( score.THEORY_TEST_ID, 0 ),nvl ( score.SKILL_TEST_ID, 0 ))  = #{testId}
		</if>
		<if test="scoreTestId!=null and scoreTestId!=''">
			AND  score.THEORY_TEST_ID = #{scoreTestId}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			AND DR.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
		<if test="isHege!=null and isHege!=''">
			<if test='isHege == "Y"'>
				and score.theory_score = '1'
			</if>
			<if test='isHege == "N"'>
				and score.theory_score != '1'
			</if>
		</if>
		<if test="skillIsHege!=null and skillIsHege!=''">
			and score.skill_score = #{skillIsHege}
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.doctorLicenseFlag=='passed'">
				And ((nvl(score.THEROY_SCORE_PHASE_ID,0)-nvl(score.SKILL_SCORE_PHASE_ID,0)) > -5
				and (5 > nvl(score.THEROY_SCORE_PHASE_ID,0)-nvl(score.SKILL_SCORE_PHASE_ID,0)))
				AND 5 > dr.GRADUATION_YEAR - nvl(score.THEROY_SCORE_PHASE_ID,0)
				AND 5 > dr.GRADUATION_YEAR - nvl(score.SKILL_SCORE_PHASE_ID,0)
			</if>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		order by  org.org_code desc,u.user_code
	</select>
	<select id="searchJsDoctorSkillScoreExtList"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.score_flow,score.theory_score,score.skill_score,score.ext_score,score.real_score,score.test_id AS SKILL_TEST_ID,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL,u.cret_type_name
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		u.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE
		, CASE WHEN ORG.ORG_LEVEL_ID = 'CountryOrg' THEN (SELECT DISTINCT ORG_NAME FROM RES_JOINT_ORG WHERE ORG_FLOW = ORG.ORG_FLOW AND RECORD_STATUS = 'Y' and session_number = ed.session_number)
		ELSE (SELECT ORG_NAME FROM RES_JOINT_ORG WHERE JOINT_ORG_FLOW = ORG.ORG_FLOW AND  RECORD_STATUS = 'Y' and session_number = ed.session_number) END COUNTRY_ORG_NAME
		from pdsci.res_score score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
			select a.* from RES_DOCTOR_RECRUIT a,
			(    select t.doctor_flow,t.create_time as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if> ) b
			where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		and score.SESSION_NUMBER = dr.SESSION_NUMBER
		left join sys_org org on org.org_flow=ed.org_flow
		where score.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>

		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
        <if test="testId!=null and testId!=''">
            and score.test_id = #{testId}
        </if>
        <if test="isHege!=null and isHege!=''">
            <if test='isHege == "Y"'>
                and score.skill_score = '1'
            </if>
            <if test='isHege == "N"'>
                and score.skill_score != '1'
            </if>
        </if>

		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
		</if>
		order by  org.org_code,u.user_code
	</select>

	<select id="searchJsDoctorTheoryScoreExtList"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.score_flow,score.theory_score,score.skill_score,score.ext_score,score.real_score,score.test_id AS THEORY_TEST_ID,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL,u.cret_type_name
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		org.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE
		, CASE WHEN ORG.ORG_LEVEL_ID = 'CountryOrg' THEN (SELECT DISTINCT ORG_NAME FROM RES_JOINT_ORG WHERE ORG_FLOW = ORG.ORG_FLOW AND RECORD_STATUS = 'Y' and session_number = ed.session_number)
		ELSE (SELECT ORG_NAME FROM RES_JOINT_ORG WHERE JOINT_ORG_FLOW = ORG.ORG_FLOW AND  RECORD_STATUS = 'Y' and session_number = ed.session_number) END COUNTRY_ORG_NAME
		from pdsci.res_score score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
		select a.* from RES_DOCTOR_RECRUIT a,
		(    select t.doctor_flow,t.create_time as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if> ) b
		where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		and score.SESSION_NUMBER = dr.SESSION_NUMBER
		left join sys_org org on org.org_flow=ed.org_flow
		where score.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>

		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
		<if test="testId!=null and testId!=''">
			and score.test_id = #{testId}
		</if>
		<if test="isHege!=null and isHege!=''">
			<if test='isHege == "Y"'>
				and score.theory_score = '1'
			</if>
			<if test='isHege == "N"'>
				and score.theory_score != '1'
			</if>
		</if>

		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
		</if>
		order by  org.org_code,u.user_code
	</select>

	<select id="searchJsDoctorPublicScoreExtList"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.score_flow,score.theory_score,score.skill_score,score.ext_score,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		org.ORG_FLOW,
		org.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE
		from pdsci.res_score score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
			select a.* from RES_DOCTOR_RECRUIT a,
			(    select t.doctor_flow,max(t.create_time) as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and t.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if> group by t.doctor_flow) b
			where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where score.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		and ed.org_flow=org_flow
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="typeId!=null and typeId!=''">
			and score.SCORE_TYPE_ID = #{typeId}
		</if>
		<if test="notAllQualified!=null and notAllQualified!=''">
			and score.skill_score = #{notAllQualified}
		</if>
		<if test="allQualified!=null and allQualified!=''">
			<if test="allQualified=='Y'.toString()">
				<if test="hegeScore!=null and hegeScore!=''">
				and score.theory_score >= #{hegeScore}
				</if>
			</if>
			<if test="allQualified=='N'.toString()">
				<if test="hegeScore!=null and hegeScore!=''">
				and not (score.theory_score >= #{hegeScore})
				</if>
			</if>
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and ed.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and ed.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
		</if>
		order by  org.org_code,u.user_code
	</select>

	<!--学员信息查询-->
	<select id="searchJsDoctorRecruitExtList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		SELECT
			DR.AUDITION_STATUS_ID,
			DR.AUDITION_STATUS_NAME,
			DR.OPER_STATUS_ID,
			DR.OPER_STATUS_NAME,
			DR.IN_JOINT_ORG_TRAIN,
			DR.JOINT_ORG_FLOW,
			DR.JOINT_ORG_NAME,
			DR.ROTATION_FLOW,
			DR.ROTATION_NAME,
			DR.SPECIAL_CERT_NO,
			DR.SPECIAL_FILE_URL,
			DR.AVG_COMPLETE,
			DR.AVG_AUDIT,
			DR.MATERIAL_ID,
			DR.PRACTICING_SCOPE_ID,
			DR.PRACTICING_SCOPE_NAME,
			DR.CERTIFICATE_URI,
			DR.QUALIFICATION_MATERIAL_URI,
			DR.SPECIAL_CERTIFICATION_URI,
			DR.QUALIFICATION_MATERIAL_CODE,
			DR.TYPE_ID,
			DR.REGISTE_MANUA,
			DR.RECRUIT_FLOW,
			DR.DOCTOR_FLOW,
			DR.ORG_FLOW,
			DR.SPE_ID,
			DR.SPE_NAME,
			DR.SWAP_FLAG,
			DR.RECRUIT_TYPE_ID,
			DR.RECRUIT_TYPE_NAME,
			DR.RECRUIT_YEAR,
			DR.RECRUIT_DATE,
			DR.RETEST_FLAG,
			DR.EXAM_RESULT,
			DR.AUDITION_RESULT,
			DR.OPER_RESULT,
			DR.TOTLE_RESULT,
			DR.ADMIT_FLAG,
			DR.RECRUIT_FLAG,
			DR.CONFIRM_FLAG,
			DR.SWAP_SPE_ID,
			DR.SWAP_SPE_NAME,
			DR.RECORD_STATUS,
			DR.CREATE_TIME,
			DR.CREATE_USER_FLOW,
			DR.MODIFY_TIME,
			DR.MODIFY_USER_FLOW,
			DR.RETEST_NOTICE,
			DR.ADMIT_NOTICE,
		    DR.GLOBAL_NOTICE,
			DR.CAT_SPE_ID,
			DR.CAT_SPE_NAME,
			DR.SESSION_NUMBER,
			DR.TRAIN_YEAR,
			DR.YET_TRAIN_YEAR,
			DR.DOCTOR_STATUS_ID,
			DR.DOCTOR_STATUS_NAME,
			DR.DOCTOR_STRIKE_ID,
			DR.DOCTOR_STRIKE_NAME,
			DR.TRAIN_NO,
			DR.AUDIT_STATUS_ID,
			DR.AUDIT_STATUS_NAME,
			DR.PLACE_ID,
			DR.PLACE_NAME,
			DR.PROVE_FILE_URL,
			DR.COMPLETE_CERT_NO,
			DR.COMPLETE_FILE_URL,
			DR.CURR_DEGREE_CATEGORY_ID,
			DR.CURR_DEGREE_CATEGORY_NAME,
			DR.PROV_REMARK,
			DR.GRADUATION_YEAR,
			DR.ADMIN_SWAP_FLAG,
			DR.SECOND_SPE_ID,
			DR.SECOND_SPE_NAME,
			DR.GRADUATION_CERTIFICATE_NO,
			DR.CERTIFICATE_DATE,
			DR.GRADUATION_CERTIFICATE_TYPE,
			DR.CHANGE_SPE_ID,
			DR.CHANGE_SPE_NAME,
			DR.RETURN_BACK_FLAG,
			DR.RETURN_BACK_REMARK,
			DR.IS_SEND,
			DR.IS_CERT_SEND,
			DR.QUALIFIED_ID,
			DR.CERTIFICATE_ISSUING_STATUS,
			DR.WORK_UNIT,
			DR.WORK_UNIT_CODE,
			DR.ARMY_HOSPITAL,
			DR.EXAM_STATUS_ID,
			DR.EXAM_STATUS_NAME,
			DR.ORG_NAME,
			DR.IS_RETRAIN,
			DR.ORG_AUDIT,
			DR.JOINT_ORG_AUDIT,
		    DR.SIGNUP_WAY,
			U.USER_FLOW,
			U.USER_CODE,
			U.USER_NAME,
			U.SEX_ID,
			U.SEX_NAME,
			U.USER_PHONE,
			U.USER_EMAIL,
			U.ID_NO,
			U.USER_BIRTHDAY,
			U.TITLE_ID,
			U.TITLE_NAME,
			U.DEGREE_ID,
			U.DEGREE_NAME,
			U.EDUCATION_ID,
			U.EDUCATION_NAME,
			U.POST_ID,
			U.POST_NAME,
			U.USER_ADDRESS,
			ED.ORG_FLOW AS EDORGFLOW,
			ED.ORG_NAME AS EDORGNAME,
			ED.DOCTOR_TYPE_NAME,
			ED.DOCTOR_TYPE_ID,
			ED.WORK_ORG_ID,
			ED.WORK_ORG_NAME
			<if test="isArmy!=null and isArmy!=''">
				, EXTRACTVALUE(XMLTYPE(pur.user_resume), '/userResumeExtInfoForm/armyType') as ARMY_TYPE
			</if>
		FROM
			RES_DOCTOR_RECRUIT DR
		LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U .USER_FLOW
		LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
		<if test="isArmy!=null and isArmy!=''">
			INNER JOIN PUB_USER_RESUME pur ON DR.DOCTOR_FLOW = pur.USER_FLOW AND pur.RECORD_STATUS = 'Y'
		</if>
		WHERE
			DR.RECORD_STATUS = 'Y'
		<if test="workOrgId != null and workOrgId !=''">
			and ED.WORK_ORG_ID = #{workOrgId}
		</if>
		<if test="workOrgName != null and workOrgName !=''">
			and ED.WORK_ORG_NAME = #{workOrgName}
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='Y'.toString()">
			AND pur.user_resume IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') != 'NO'
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='N'.toString()">
			AND pur.user_resume IS NOT NULL
			AND
			(
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') = 'NO'
			OR
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NULL
			)
		</if>
		AND U .RECORD_STATUS = 'Y'
		AND NOT EXISTS (
			SELECT
				1
			FROM
				RES_DOCOTR_DELAY_TETURN T
			WHERE
				T.RECORD_STATUS = 'Y'
			AND T.TYPE_ID = 'ReturnTraining'
			AND T.AUDIT_STATUS_ID = '1'
			AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
			AND T.SESSION_NUMBER = DR.SESSION_NUMBER
			AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW
		)
		AND DR.AUDIT_STATUS_ID != 'NotSubmit'
		AND EXISTS (
			SELECT
				1
			FROM
				SYS_ORG O
			WHERE
				O.RECORD_STATUS = 'Y'
			AND O.ORG_FLOW = DR.ORG_FLOW
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
					AND ORG_PROV_ID = #{sysOrg.orgProvId}
				</if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
					AND ORG_CITY_ID = #{sysOrg.orgCityId}
				</if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
					AND ORG_FLOW = #{sysOrg.orgFlow}
				</if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
					AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
				</if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
					AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
				</if>
			</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and (dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			or dr.joint_org_flow in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			)
		</if>
		<if test="joinOrgFlow!=null and joinOrgFlow!=''">
			and dr.ORG_FLOW = #{joinOrgFlow}
		</if>
		<if test="signupWay!=null and signupWay!=''">
			and dr.SIGNUP_WAY = #{signupWay}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumberBefore!=null and sessionNumberBefore != ''">
			and ed.SESSION_NUMBER >= #{sessionNumberBefore}
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.isRetrain!=null and resDoctorRecruit.isRetrain!=''">
				and dr.IS_RETRAIN = #{resDoctorRecruit.isRetrain}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<!--<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>-->
				<!--and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}-->
			<!--</if>-->
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!=''">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId != 'Passed'">
					and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId}
				</if>
			</if>
			<if test="resDoctorRecruit.doctorStatusId == null">
				and dr.DOCTOR_STATUS_ID in ('20','21','22','24')
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.orgAudit!=null and resDoctorRecruit.orgAudit!=''">
				and dr.org_audit = #{resDoctorRecruit.orgAudit}
			</if>
			<if test="resDoctorRecruit.jointOrgAudit!=null and resDoctorRecruit.jointOrgAudit!=''">
				and dr.joint_org_audit = #{resDoctorRecruit.jointOrgAudit}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
			</if>
			<if test="resDoctorRecruit.doctorStatusId != null and resDoctorRecruit.doctorStatusId != '' and resDoctorRecruit.doctorStatusId !='NotPassed'">
				<if test="resDoctorRecruit.confirmFlag!=null and resDoctorRecruit.confirmFlag!=''">
					and dr.confirm_Flag =#{resDoctorRecruit.confirmFlag}
				</if>
			</if>
			<if test="resDoctorRecruit.signupWay!=null and resDoctorRecruit.signupWay!=''">
				and dr.signup_way =#{resDoctorRecruit.signupWay}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.doctorStatusId == null">
				and dr.DOCTOR_STATUS_ID in ('20','21','22')
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="isPostpone != null and isPostpone != ''">
			<if test="isPostpone == 'Y'.toString()">
				AND EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
			<if test="isPostpone == 'N'.toString()">
				AND NOT EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>


	<select id="searchJsDoctorRecruitExtList4"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		SELECT
		DR.AUDITION_STATUS_ID,
		DR.AUDITION_STATUS_NAME,
		DR.OPER_STATUS_ID,
		DR.OPER_STATUS_NAME,
		DR.IN_JOINT_ORG_TRAIN,
		DR.JOINT_ORG_FLOW,
		DR.JOINT_ORG_NAME,
		DR.ROTATION_FLOW,
		DR.ROTATION_NAME,
		DR.SPECIAL_CERT_NO,
		DR.SPECIAL_FILE_URL,
		DR.AVG_COMPLETE,
		DR.AVG_AUDIT,
		DR.MATERIAL_ID,
		DR.PRACTICING_SCOPE_ID,
		DR.PRACTICING_SCOPE_NAME,
		DR.CERTIFICATE_URI,
		DR.QUALIFICATION_MATERIAL_URI,
		DR.SPECIAL_CERTIFICATION_URI,
		DR.QUALIFICATION_MATERIAL_CODE,
		DR.TYPE_ID,
		DR.REGISTE_MANUA,
		DR.RECRUIT_FLOW,
		DR.DOCTOR_FLOW,
		DR.ORG_FLOW,
		DR.SPE_ID,
		DR.SPE_NAME,
		DR.SWAP_FLAG,
		DR.RECRUIT_TYPE_ID,
		DR.RECRUIT_TYPE_NAME,
		DR.RECRUIT_YEAR,
		DR.RECRUIT_DATE,
		DR.RETEST_FLAG,
		DR.EXAM_RESULT,
		DR.AUDITION_RESULT,
		DR.OPER_RESULT,
		DR.TOTLE_RESULT,
		DR.ADMIT_FLAG,
		DR.RECRUIT_FLAG,
		DR.CONFIRM_FLAG,
		DR.SWAP_SPE_ID,
		DR.SWAP_SPE_NAME,
		DR.RECORD_STATUS,
		DR.CREATE_TIME,
		DR.CREATE_USER_FLOW,
		DR.MODIFY_TIME,
		DR.MODIFY_USER_FLOW,
		DR.RETEST_NOTICE,
		DR.ADMIT_NOTICE,
		DR.GLOBAL_NOTICE,
		DR.CAT_SPE_ID,
		DR.CAT_SPE_NAME,
		DR.SESSION_NUMBER,
		DR.TRAIN_YEAR,
		DR.YET_TRAIN_YEAR,
		DR.DOCTOR_STATUS_ID,
		DR.DOCTOR_STATUS_NAME,
		DR.DOCTOR_STRIKE_ID,
		DR.DOCTOR_STRIKE_NAME,
		DR.TRAIN_NO,
		DR.AUDIT_STATUS_ID,
		DR.AUDIT_STATUS_NAME,
		DR.PLACE_ID,
		DR.PLACE_NAME,
		DR.PROVE_FILE_URL,
		DR.COMPLETE_CERT_NO,
		DR.COMPLETE_FILE_URL,
		DR.CURR_DEGREE_CATEGORY_ID,
		DR.CURR_DEGREE_CATEGORY_NAME,
		DR.PROV_REMARK,
		DR.GRADUATION_YEAR,
		DR.ADMIN_SWAP_FLAG,
		DR.SECOND_SPE_ID,
		DR.SECOND_SPE_NAME,
		DR.GRADUATION_CERTIFICATE_NO,
		DR.CERTIFICATE_DATE,
		DR.GRADUATION_CERTIFICATE_TYPE,
		DR.CHANGE_SPE_ID,
		DR.CHANGE_SPE_NAME,
		DR.RETURN_BACK_FLAG,
		DR.RETURN_BACK_REMARK,
		DR.IS_SEND,
		DR.IS_CERT_SEND,
		DR.QUALIFIED_ID,
		DR.CERTIFICATE_ISSUING_STATUS,
		DR.WORK_UNIT,
		DR.WORK_UNIT_CODE,
		DR.ARMY_HOSPITAL,
		DR.EXAM_STATUS_ID,
		DR.EXAM_STATUS_NAME,
		DR.ORG_NAME,
		DR.IS_RETRAIN,
		DR.ORG_AUDIT,
		DR.JOINT_ORG_AUDIT,
		DR.SIGNUP_WAY,
		U.USER_FLOW,
		U.USER_CODE,
		U.USER_NAME,
		U.SEX_ID,
		U.SEX_NAME,
		U.USER_PHONE,
		U.USER_EMAIL,
		U.ID_NO,
		U.USER_BIRTHDAY,
		U.TITLE_ID,
		U.TITLE_NAME,
		U.DEGREE_ID,
		U.DEGREE_NAME,
		U.EDUCATION_ID,
		U.EDUCATION_NAME,
		U.POST_ID,
		U.POST_NAME,
		U.USER_ADDRESS,
		ED.ORG_FLOW AS EDORGFLOW,
		ED.ORG_NAME AS EDORGNAME,
		ED.DOCTOR_TYPE_NAME,
		ED.DOCTOR_TYPE_ID,
		ED.WORK_ORG_ID,
		ED.WORK_ORG_NAME
			, EXTRACTVALUE(XMLTYPE(pur.user_resume), '/userResumeExtInfoForm/armyType') as ARMY_TYPE
		FROM
		RES_DOCTOR_RECRUIT DR
		LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U .USER_FLOW
		LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
		LEFT JOIN PUB_USER_RESUME pur ON DR.DOCTOR_FLOW = pur.USER_FLOW AND pur.RECORD_STATUS = 'Y'
		WHERE
		DR.RECORD_STATUS = 'Y'
		<if test="workOrgId != null and workOrgId !=''">
			and ED.WORK_ORG_ID = #{workOrgId}
		</if>
		<if test="workOrgName != null and workOrgName !=''">
			and ED.WORK_ORG_NAME = #{workOrgName}
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='Y'.toString()">
			AND pur.user_resume IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NOT NULL
			AND EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') != 'NO'
		</if>
		<if test="isArmy!=null and isArmy!='' and isArmy=='N'.toString()">
			AND pur.user_resume IS NOT NULL
			AND
			(
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') = 'NO'
			OR
			EXTRACTVALUE(XMLTYPE(pur.user_resume),'/userResumeExtInfoForm/armyType') IS NULL
			)
		</if>
		AND U .RECORD_STATUS = 'Y'
		AND NOT EXISTS (
		SELECT
		1
		FROM
		RES_DOCOTR_DELAY_TETURN T
		WHERE
		T.RECORD_STATUS = 'Y'
		AND T.TYPE_ID = 'ReturnTraining'
		AND T.AUDIT_STATUS_ID = '1'
		AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
		AND T.SESSION_NUMBER = DR.SESSION_NUMBER
		AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW
		)
		AND DR.AUDIT_STATUS_ID != 'NotSubmit'
		AND EXISTS (
		SELECT
		1
		FROM
		SYS_ORG O
		WHERE
		O.RECORD_STATUS = 'Y'
		AND O.ORG_FLOW = DR.ORG_FLOW
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and (dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			or dr.joint_org_flow in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			)
		</if>
		<if test="joinOrgFlow!=null and joinOrgFlow!=''">
			and dr.ORG_FLOW = #{joinOrgFlow}
		</if>
		<if test="signupWay!=null and signupWay!=''">
			and dr.SIGNUP_WAY = #{signupWay}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumberBefore!=null and sessionNumberBefore != ''">
			and ed.SESSION_NUMBER >= #{sessionNumberBefore}
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.isRetrain!=null and resDoctorRecruit.isRetrain!=''">
				and dr.IS_RETRAIN = #{resDoctorRecruit.isRetrain}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<!--<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>-->
			<!--and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}-->
			<!--</if>-->
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!=''">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId != 'Passed'">
					and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId}
				</if>
			</if>
			<if test="resDoctorRecruit.doctorStatusId == null">
				and dr.DOCTOR_STATUS_ID in ('20','21','22','24')
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.orgAudit!=null and resDoctorRecruit.orgAudit!=''">
				and dr.org_audit = #{resDoctorRecruit.orgAudit}
			</if>
			<if test="resDoctorRecruit.jointOrgAudit!=null and resDoctorRecruit.jointOrgAudit!=''">
				and dr.joint_org_audit = #{resDoctorRecruit.jointOrgAudit}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
			</if>
			<if test="resDoctorRecruit.doctorStatusId != null and resDoctorRecruit.doctorStatusId != '' and resDoctorRecruit.doctorStatusId !='NotPassed'">
				<if test="resDoctorRecruit.confirmFlag!=null and resDoctorRecruit.confirmFlag!=''">
					and dr.confirm_Flag =#{resDoctorRecruit.confirmFlag}
				</if>
			</if>
			<if test="resDoctorRecruit.signupWay!=null and resDoctorRecruit.signupWay!=''">
				and dr.signup_way =#{resDoctorRecruit.signupWay}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.doctorStatusId == null">
				and dr.DOCTOR_STATUS_ID in ('20','21','22')
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="isPostpone != null and isPostpone != ''">
			<if test="isPostpone == 'Y'.toString()">
				AND EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
			<if test="isPostpone == 'N'.toString()">
				AND NOT EXISTS (SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'Delay'
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>

	<select id="searchResDoctorRecruitExtList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.AUDITION_STATUS_ID,
		dr.AUDITION_STATUS_NAME,
		dr.OPER_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.IN_JOINT_ORG_TRAIN,
		dr.JOINT_ORG_FLOW,
		dr.JOINT_ORG_NAME,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.WORK_UNIT,
		dr.WORK_UNIT_CODE,
		dr.ARMY_HOSPITAL,
		dr.EXAM_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ORG_NAME,
		dr.joint_org_audit,
		dr.IS_RETRAIN,
		dr.REVIEW_FLAG,
		u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND Dr.signup_way='DoctorSignup'
		AND dr.AUDIT_STATUS_ID != 'NotSubmit'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="joinOrgFlow!=null and joinOrgFlow!=''">
			and dr.ORG_FLOW = #{joinOrgFlow}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumberBefore!=null and sessionNumberBefore != ''">
			and ed.SESSION_NUMBER >= #{sessionNumberBefore}
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.reviewFlag!=null and resDoctorRecruit.reviewFlag!=''">
				and dr.REVIEW_FLAG = #{resDoctorRecruit.reviewFlag}
			</if>
			<if test="resDoctorRecruit.isRetrain!=null and resDoctorRecruit.isRetrain!=''">
				and dr.IS_RETRAIN = #{resDoctorRecruit.isRetrain}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<!--<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>-->
			<!--and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}-->
			<!--</if>-->
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'Y'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing'">
					<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'N'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing' ">
					<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
			</if>
			<if test="resDoctorRecruit.confirmFlag!=null and resDoctorRecruit.confirmFlag!=''">
				and dr.confirm_Flag =#{resDoctorRecruit.confirmFlag}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>
	<select id="searchResDoctorRecruitExtList2"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.REVIEW_FLAG,
		dr.AUDITION_STATUS_ID,
		dr.AUDITION_STATUS_NAME,
		dr.OPER_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.IN_JOINT_ORG_TRAIN,
		dr.JOINT_ORG_FLOW,
		dr.JOINT_ORG_NAME,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.WORK_UNIT,
		dr.WORK_UNIT_CODE,
		dr.ARMY_HOSPITAL,
		dr.EXAM_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ORG_NAME,
		dr.joint_org_audit,
		dr.IS_RETRAIN,
		u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND dr.AUDIT_STATUS_ID != 'NotSubmit'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="joinOrgFlow!=null and joinOrgFlow!=''">
			and dr.ORG_FLOW = #{joinOrgFlow}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumberBefore!=null and sessionNumberBefore != ''">
			and ed.SESSION_NUMBER >= #{sessionNumberBefore}
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.reviewFlag!=null and resDoctorRecruit.reviewFlag!=''">
				and dr.REVIEW_FLAG =#{resDoctorRecruit.reviewFlag}
			</if>
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.isRetrain!=null and resDoctorRecruit.isRetrain!=''">
				and dr.IS_RETRAIN = #{resDoctorRecruit.isRetrain}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<!--<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>-->
			<!--and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}-->
			<!--</if>-->
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'Y'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing'">
					<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'N'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing' ">
					<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
			</if>
			<if test="resDoctorRecruit.confirmFlag!=null and resDoctorRecruit.confirmFlag!=''">
				and dr.confirm_Flag =#{resDoctorRecruit.confirmFlag}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>
	<select id="selectCountByDoctFlow" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM RES_DOCTOR_RECRUIT
		 WHERE
		 RECORD_STATUS = 'Y'
		 AND
		 DOCTOR_FLOW = #{doctorFlow}
	</select>
	<!--学员信息查询-->
	<select id="searchJsDoctorRecruitExtListNew"  parameterType="java.util.Map" resultMap="DoctorRecruitNew">
		select dr.AUDITION_STATUS_ID,
		dr.AUDITION_STATUS_NAME,
		dr.OPER_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.IN_JOINT_ORG_TRAIN,
		dr.JOINT_ORG_FLOW,
		dr.JOINT_ORG_NAME,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.WORK_UNIT,
		dr.WORK_UNIT_CODE,
		dr.ARMY_HOSPITAL,
		dr.EXAM_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		u.ORG_NAME,
		u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id,
		rdri.SPE_ID AS SPE_ID_NEW,
		rdri.SPE_NAME AS SPE_NAME_NEW,
		rdri.FIRST_IS_PASS
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		LEFT JOIN RES_DOCTOR_RECRUIT_INFO rdri ON dr.RECRUIT_FLOW = rdri.RECRUIT_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND rdri.RECORD_STATUS = 'Y'
		AND dr.AUDIT_STATUS_ID != 'NotSubmit'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumberBefore!=null and sessionNumberBefore != ''">
			and ed.SESSION_NUMBER >= #{sessionNumberBefore}
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				AND (
				( dr.ORG_FLOW = #{resDoctorRecruit.orgFlow} AND dr.DOCTOR_STATUS_ID = 'NotPassed' )
				OR ( rdri.FIRST_IS_PASS = 'N' AND rdri.ORG_FLOW =  #{resDoctorRecruit.orgFlow})
				)
			</if>
			<if test='resDoctorRecruit.orgFlow==null or resDoctorRecruit.orgFlow==""'>
				AND dr.DOCTOR_STATUS_ID = 'NotPassed'
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
			</if>
			<if test="resDoctorRecruit.confirmFlag!=null and resDoctorRecruit.confirmFlag!=''">
				and dr.confirm_Flag =#{resDoctorRecruit.confirmFlag}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>
	<!--学员信息查询招录 -->
	<select id="searchJsDoctorRecruitExtList2"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y'
		and u.RECORD_STATUS= 'Y'  and dr.audit_status_id='Passed'
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">

			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				<if test="resDoctorRecruit.recruitFlag != 'Y'.toString()">
					and dr.recruit_flag is null
				</if>
				<if test="resDoctorRecruit.recruitFlag == 'Y'.toString()">
					and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
				</if>
			</if>
			<if test="resDoctorRecruit.examStatusId!=null and resDoctorRecruit.examStatusId!=''">
				and dr.Exam_STATUS_ID=#{resDoctorRecruit.examStatusId}
			</if>
			<if test="resDoctorRecruit.auditionStatusId!=null and resDoctorRecruit.auditionStatusId!=''">
				and dr.audition_STATUS_ID=#{resDoctorRecruit.auditionStatusId}
			</if>
			<if test="resDoctorRecruit.operStatusId!=null and resDoctorRecruit.operStatusId!=''">
				and dr.oper_STATUS_ID=#{resDoctorRecruit.operStatusId}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="scoreType != null and scoreType != ''">
			<if test="scoreType == 'exam'">
				and dr.exam_result is not null
			</if>
			<if test="scoreType == 'audition'">
				and dr.AUDITION_RESULT is not null
			</if>
			<if test="scoreType == 'oper'">
				and dr.OPER_RESULT is not null
			</if>
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Exam'">
				order by  to_number(decode(dr.Exam_RESULT,null,'0',dr.Exam_RESULT)) desc
			</if>
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT))+to_number(decode(dr.Exam_RESULT,null,'0',dr.Exam_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>

	<!--学员信息查询招录 -->
	<select id="searchJsDoctorRecruitExtList3"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Exam'">
				,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.exam_result, NULL, '0', dr.exam_result)) DESC) RANK_NUM
			</if>
			<if test="sortType == 'Interview'">
				,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.AUDITION_RESULT, NULL, '0', dr.AUDITION_RESULT)) DESC) RANK_NUM
			</if>
			<if test="sortType == 'Skill'">
				,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.OPER_RESULT, NULL, '0', dr.OPER_RESULT)) DESC) RANK_NUM
			</if>
			<if test="sortType == 'Total'">
				,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.totle_result, NULL, '0', dr.totle_result)) DESC) RANK_NUM
			</if>
		</if>
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y'
		and u.RECORD_STATUS= 'Y'
		and dr.Exam_STATUS_ID ='Passed' and dr.audition_STATUS_ID ='Passed' and dr.oper_STATUS_ID='Passed'
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">

			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				<if test="resDoctorRecruit.recruitFlag == 'F'.toString()">
					and dr.recruit_flag is null
				</if>
				<if test="resDoctorRecruit.recruitFlag != 'F'.toString()">
					and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
				</if>
			</if>
			<if test="resDoctorRecruit.examStatusId!=null and resDoctorRecruit.examStatusId!=''">
				and dr.Exam_STATUS_ID=#{resDoctorRecruit.examStatusId}
			</if>
			<if test="resDoctorRecruit.auditionStatusId!=null and resDoctorRecruit.auditionStatusId!=''">
				and dr.audition_STATUS_ID=#{resDoctorRecruit.auditionStatusId}
			</if>
			<if test="resDoctorRecruit.operStatusId!=null and resDoctorRecruit.operStatusId!=''">
				and dr.oper_STATUS_ID=#{resDoctorRecruit.operStatusId}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		<if test="scoreType != null and scoreType != ''">
			<if test="scoreType == 'exam'">
				and dr.exam_result is not null
			</if>
			<if test="scoreType == 'audition'">
				and dr.AUDITION_RESULT is not null
			</if>
			<if test="scoreType == 'oper'">
				and dr.OPER_RESULT is not null
			</if>
		</if>
		<if test="sortType == null">
			order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>

	<select id="searchJsDoctorRecruitExtList3New"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id
		,row_number() over(partition by dr.spe_id  order by to_number(decode(dr.totle_result, NULL, '0', dr.totle_result)) DESC) RANK_NUM
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y'
		and u.RECORD_STATUS= 'Y'
		and dr.Exam_STATUS_ID ='Passed' and dr.audition_STATUS_ID ='Passed' and dr.oper_STATUS_ID='Passed'
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.recruitFlag!=null and resDoctorRecruit.recruitFlag!=''">
				<if test="resDoctorRecruit.recruitFlag == 'F'.toString()">
					and dr.recruit_flag is null
				</if>
				<if test="resDoctorRecruit.recruitFlag != 'F'.toString()">
					and dr.recruit_flag =#{resDoctorRecruit.recruitFlag}
				</if>
			</if>
		</if>
	</select>

	<!--协同基地需要查看到报名在主基地实际在协同基地培训的学员-->
    <select id="searchJsDoctorRecruitExtBaseList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
        select
		dr.AUDITION_STATUS_ID,
		dr.AUDITION_STATUS_NAME,
		dr.OPER_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.IN_JOINT_ORG_TRAIN,
		dr.JOINT_ORG_FLOW,
		dr.JOINT_ORG_NAME,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.WORK_UNIT,
		dr.WORK_UNIT_CODE,
		dr.ARMY_HOSPITAL,
		dr.EXAM_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		u.ORG_NAME,
        u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
        , u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID,
        u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
        ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.doctor_type_name,ed.doctor_type_id,ed.WORK_ORG_NAME
        from pdsci.RES_DOCTOR_RECRUIT dr
        left join pdsci.SYS_USER u
        on dr.DOCTOR_FLOW = u.USER_FLOW
        left join RES_DOCTOR ed
        on dr.DOCTOR_FLOW = ed.DOCTOR_FLOW
        where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		<if test="workOrgId != null and workOrgId !=''">
			and ed.WORK_ORG_ID = #{workOrgId}
		</if>
		<if test="workOrgName != null and workOrgName !=''">
			and ed.WORK_ORG_NAME = #{workOrgName}
		</if>
		<if test="userOrgFlow != null and userOrgFlow !=''">
			and ed.SECOND_ORG_FLOW = #{userOrgFlow}
		</if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and ed.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainYearList!=null and trainYearList.size>0">
            and dr.TRAIN_YEAR in
            <foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
	<if test="sessionNumbers!=null and sessionNumbers.size>0">
		and dr.SESSION_NUMBER in
		<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
	</if>
	<if test="resDoctorRecruit!=null">
		<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
			and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
		</if>
		<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
			and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
		</if>
		<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
			and dr.SPE_ID = #{resDoctorRecruit.speId}
		</if>
		<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
			and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
		</if>
		<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
			and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
		</if>
		<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
			and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
		</if>
	</if>
	<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
		and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
	</if>
	<if test="user!=null">
		<if test="user.userName!=null and user.userName!=''">
			<bind name="userName" value="'%'+user.userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="user.idNo!=null and user.idNo!=''">
			<bind name="idNo" value="'%'+user.idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
			and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
		</if>
	</if>
	<if test="doctor!=null">
		<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
		</if>
		<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
			and dr.SPE_ID = #{doctor.trainingSpeId}
		</if>
		<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
			and dr.SESSION_NUMBER = #{doctor.sessionNumber}
		</if>
		<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
			and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
		</if>
		<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
			and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
		</if>
		<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
			and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
		</if>
		<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
			and dr.doctor_Status_Id = #{doctor.doctorStatusId}
		</if>
		<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
			and (
			<trim prefix="" prefixOverrides="OR">
				<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
				<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
			</trim>
			)
		</if>
	</if>
		<if test='speDepts!=null and speDepts.size>0'>
			and rdsp.dept_flow in
			<foreach collection="speDepts" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
</select>


<select id="searchDoctorCertificateList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
	select dr.RECRUIT_FLOW,
    dr.DOCTOR_FLOW,
    dr.ORG_FLOW,
    u.ORG_NAME,
    dr.SPE_ID,
    dr.SPE_NAME,
    dr.SWAP_FLAG,
    dr.RECRUIT_TYPE_ID,
    dr.RECRUIT_TYPE_NAME,
    dr.RECRUIT_YEAR,
    dr.RECRUIT_DATE,
    dr.RETEST_FLAG,
    dr.EXAM_RESULT,
    dr.AUDITION_RESULT,
    dr.OPER_RESULT,
    dr.TOTLE_RESULT,
    dr.ADMIT_FLAG,
    dr.RECRUIT_FLAG,
    dr.CONFIRM_FLAG,
    dr.SWAP_SPE_ID,
    dr.SWAP_SPE_NAME,
    dr.RECORD_STATUS,
    dr.CREATE_TIME,
    dr.CREATE_USER_FLOW,
    dr.MODIFY_TIME,
    dr.MODIFY_USER_FLOW,
    dr.RETEST_NOTICE,
    dr.ADMIT_NOTICE,
    dr.CAT_SPE_ID,
    dr.CAT_SPE_NAME,
    dr.SESSION_NUMBER,
    dr.TRAIN_YEAR,
    dr.YET_TRAIN_YEAR,
    dr.DOCTOR_STATUS_ID,
    dr.DOCTOR_STATUS_NAME,
    dr.DOCTOR_STRIKE_ID,
    dr.DOCTOR_STRIKE_NAME,
    dr.TRAIN_NO,
    dr.AUDIT_STATUS_ID,
    dr.AUDIT_STATUS_NAME,
    dr.PLACE_ID,
    dr.PLACE_NAME,
    dr.PROVE_FILE_URL,
    dr.COMPLETE_CERT_NO,
    dr.COMPLETE_FILE_URL,
    dr.CURR_DEGREE_CATEGORY_ID,
    dr.CURR_DEGREE_CATEGORY_NAME,
    dr.PROV_REMARK,
    dr.GRADUATION_YEAR,
    dr.ADMIN_SWAP_FLAG,
    dr.AVG_COMPLETE,
    dr.AVG_AUDIT,
    dr.MATERIAL_ID,
    dr.PRACTICING_SCOPE_ID,
    dr.PRACTICING_SCOPE_NAME,
    dr.CERTIFICATE_URI,
    dr.QUALIFICATION_MATERIAL_URI,
    dr.SPECIAL_CERTIFICATION_URI,
    dr.QUALIFICATION_MATERIAL_CODE,
    dr.TYPE_ID,
    dr.REGISTE_MANUA,
    dr.ROTATION_FLOW,
    dr.ROTATION_NAME,
    dr.SPECIAL_CERT_NO,
    dr.SPECIAL_FILE_URL,
    dr.SECOND_SPE_ID,
    dr.SECOND_SPE_NAME,
    dr.GRADUATION_CERTIFICATE_NO,
    dr.CERTIFICATE_DATE,
    dr.GRADUATION_CERTIFICATE_TYPE,
    dr.CHANGE_SPE_ID,
    dr.CHANGE_SPE_NAME,
    dr.RETURN_BACK_FLAG,
    dr.RETURN_BACK_REMARK,
    dr.IS_SEND,
    dr.IS_CERT_SEND,
    dr.QUALIFIED_ID,
    dr.CERTIFICATE_ISSUING_STATUS,
    dr.JOINT_ORG_NAME,
    dr.OPER_STATUS_ID,
    dr.EXAM_STATUS_NAME,
    dr.ARMY_HOSPITAL,
    dr.IN_JOINT_ORG_TRAIN,
    dr.WORK_UNIT,
    dr.EXAM_STATUS_ID,
    dr.OPER_STATUS_NAME,
    dr.AUDITION_STATUS_ID,
    dr.JOINT_ORG_FLOW,
    dr.AUDITION_STATUS_NAME,
    dr.WORK_UNIT_CODE,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL,SO.ORG_CITY_ID,SO.ORG_CITY_NAME,
	JGA.LOCAL_REASON,JGA.CITY_REASON,JGA.GLOBAL_REASON
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName
	from pdsci.RES_DOCTOR_RECRUIT dr
	left join  pdsci.SYS_USER u
	on dr.DOCTOR_FLOW =  u.USER_FLOW
	LEFT JOIN SYS_ORG SO
	ON SO.ORG_FLOW = dr.ORG_FLOW
	left join  RES_DOCTOR ed
	on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
	LEFT  JOIN JSRES_GRADUATION_APPLY JGA
	ON DR.RECRUIT_FLOW = JGA.RECRUIT_FLOW
	where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
				<if test="orgProvId!=null and orgProvId!=''">
					AND ORG_PROV_ID = #{orgProvId}
				</if>
				<if test="orgCityId!=null and orgCityId!=''">
					AND ORG_CITY_ID = #{orgCityId}
				</if>
				<if test="orgFlow!=null and orgFlow!=''">
					AND ORG_FLOW = #{orgFlow}
				</if>
				<if test="orgLevel!=null and orgLevel!=''">
					AND ORG_LEVEL_ID = #{orgLevel}
				</if>
				<if test="orgTypeId!=null and orgTypeId!=''">
					AND ORG_TYPE_ID = #{orgTypeId}
				</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="graduationCertificateNo!=null and graduationCertificateNo!=''">
			and dr.graduation_Certificate_No like CONCAT(CONCAT('%', #{graduationCertificateNo}),'%')
		</if>
		 and dr.graduation_Certificate_No is not null
		<if test="catSpeId!=null and catSpeId!=''">
			and dr.CAT_SPE_ID = #{catSpeId}
		</if>
		<if test="speId!=null and speId!=''">
			and dr.SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and dr.ORG_FLOW = #{orgFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and dr.GRADUATION_YEAR=#{graduationYear}
		</if>
		<if test="doctorFlow!=null and doctorFlow!=''">
			and dr.doctor_flow=#{doctorFlow}
		</if>
		and dr.AUDIT_STATUS_ID='Passed'
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test="notLikeIdNo!=null and notLikeIdNo!=''">
			and u.ID_NO =#{notLikeIdNo}
		</if>
		<if test="notLikeUserName!=null and notLikeUserName!=''">
			and u.user_name =#{notLikeUserName}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and dr.SPE_ID = #{trainingSpeId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and ed.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test="workOrgLevelId!=null and workOrgLevelId!=''">
			and ed.WORK_ORG_LEVEL_ID = #{workOrgLevelId}
		</if>
		<if test="doctorStatusId!=null and doctorStatusId!=''">
			and dr.doctor_Status_Id = #{doctorStatusId}
		</if>
		<if test="qualifiedId!=null and qualifiedId!=''">
			and dr.QUALIFIED_ID = #{qualifiedId}
		</if>
		<if test="certificateIssuingStatus!=null and certificateIssuingStatus!=''">
			and dr.CERTIFICATE_ISSUING_STATUS = #{certificateIssuingStatus}
		</if>
		<if test="workOrgName!=null and workOrgName!=''">
			and (
			<trim prefix="" prefixOverrides="OR">
				<if test="(workOrgId != null and workOrgId != '')">OR ed.work_org_id = #{workOrgId}</if>
				<if test="(workOrgName != null and workOrgName != '')">OR ed.work_org_name = #{workOrgName}</if>
			</trim>
			)
		</if>
	order by  dr.GRADUATION_YEAR desc, dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.CREATE_TIME desc
</select>

	<select id="searchDoctorCertificateList2"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		u.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL,SO.ORG_CITY_ID,SO.ORG_CITY_NAME,
		JGA.LOCAL_REASON,JGA.CITY_REASON,JGA.GLOBAL_REASON
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		LEFT JOIN SYS_ORG SO
		ON SO.ORG_FLOW = dr.ORG_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		LEFT  JOIN JSRES_GRADUATION_APPLY JGA
		ON DR.RECRUIT_FLOW = JGA.RECRUIT_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="orgProvId!=null and orgProvId!=''">
			AND ORG_PROV_ID = #{orgProvId}
		</if>
		<if test="orgCityId!=null and orgCityId!=''">
			AND ORG_CITY_ID = #{orgCityId}
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			AND ORG_FLOW = #{orgFlow}
		</if>
		<if test="orgLevel!=null and orgLevel!=''">
			AND ORG_LEVEL_ID = #{orgLevel}
		</if>
		<if test="orgTypeId!=null and orgTypeId!=''">
			AND ORG_TYPE_ID = #{orgTypeId}
		</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="graduationCertificateNo!=null and graduationCertificateNo!=''">
			and dr.graduation_Certificate_No like CONCAT(CONCAT('%', #{graduationCertificateNo}),'%')
		</if>
		and dr.graduation_Certificate_No is not null
		<if test="catSpeId!=null and catSpeId!=''">
			and dr.CAT_SPE_ID = #{catSpeId}
		</if>
		<if test="speId!=null and speId!=''">
			and dr.SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and dr.ORG_FLOW = #{orgFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and dr.GRADUATION_YEAR=#{graduationYear}
		</if>
		<if test="tabTag == 'CertificateSend'.toString() ">
			and jga.doctor_is_apply = 'Y'
		</if>
		<if test="doctorFlow!=null and doctorFlow!=''">
			and dr.doctor_flow=#{doctorFlow}
		</if>
		and dr.AUDIT_STATUS_ID='Passed'
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test="notLikeIdNo!=null and notLikeIdNo!=''">
			and u.ID_NO =#{notLikeIdNo}
		</if>
		<if test="notLikeUserName!=null and notLikeUserName!=''">
			and u.user_name =#{notLikeUserName}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and dr.SPE_ID = #{trainingSpeId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and ed.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test="workOrgLevelId!=null and workOrgLevelId!=''">
			and ed.WORK_ORG_LEVEL_ID = #{workOrgLevelId}
		</if>
		<if test="doctorStatusId!=null and doctorStatusId!=''">
			and dr.doctor_Status_Id = #{doctorStatusId}
		</if>
		<if test="qualifiedId!=null and qualifiedId!=''">
			and dr.QUALIFIED_ID = #{qualifiedId}
		</if>
		<if test="certificateIssuingStatus!=null and certificateIssuingStatus!=''">
			and dr.CERTIFICATE_ISSUING_STATUS = #{certificateIssuingStatus}
		</if>
		<if test="workOrgName!=null and workOrgName!=''">
			and (
			<trim prefix="" prefixOverrides="OR">
				<if test="(workOrgId != null and workOrgId != '')">OR ed.work_org_id = #{workOrgId}</if>
				<if test="(workOrgName != null and workOrgName != '')">OR ed.work_org_name = #{workOrgName}</if>
			</trim>
			)
		</if>
		order by  dr.GRADUATION_YEAR desc, dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.CREATE_TIME desc
	</select>

	<select id="searchNotCertificateList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.ORG_NAME,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.JOINT_ORG_NAME,
		dr.OPER_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ARMY_HOSPITAL,
		dr.IN_JOINT_ORG_TRAIN,
		dr.WORK_UNIT,
		dr.EXAM_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.AUDITION_STATUS_ID,
		dr.JOINT_ORG_FLOW,
		dr.AUDITION_STATUS_NAME,
		dr.WORK_UNIT_CODE,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL,SO.ORG_CITY_ID,SO.ORG_CITY_NAME,
		JGA.LOCAL_REASON,JGA.CITY_REASON,JGA.GLOBAL_REASON
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		LEFT JOIN SYS_ORG SO
		ON SO.ORG_FLOW = dr.ORG_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		LEFT  JOIN JSRES_GRADUATION_APPLY JGA
		ON DR.RECRUIT_FLOW = JGA.RECRUIT_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and jga.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="orgProvId!=null and orgProvId!=''">
			AND ORG_PROV_ID = #{orgProvId}
		</if>
		<if test="orgCityId!=null and orgCityId!=''">
			AND ORG_CITY_ID = #{orgCityId}
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			AND ORG_FLOW = #{orgFlow}
		</if>
		<if test="orgLevel!=null and orgLevel!=''">
			AND ORG_LEVEL_ID = #{orgLevel}
		</if>
		<if test="orgTypeId!=null and orgTypeId!=''">
			AND ORG_TYPE_ID = #{orgTypeId}
		</if>
		)
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="graduationCertificateNo!=null and graduationCertificateNo!=''">
			and dr.graduation_Certificate_No like CONCAT(CONCAT('%', #{graduationCertificateNo}),'%')
		</if>
		<if test="tabTag == 'CountryCertificate'.toString()">
			and dr.graduation_Certificate_No is null
			AND SO.ORG_LEVEL_ID != 'ProvinceOrg'
		</if>
		<if test="tabTag == 'ProvinceCertificate'.toString()">
			and dr.graduation_Certificate_No is null
			AND SO.ORG_LEVEL_ID = 'ProvinceOrg'
		</if>
		<if test="catSpeId!=null and catSpeId!=''">
			and dr.CAT_SPE_ID = #{catSpeId}
		</if>
		<if test="speId!=null and speId!=''">
			and dr.SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and dr.ORG_FLOW = #{orgFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and dr.GRADUATION_YEAR=#{graduationYear}
		</if>
		<if test="doctorFlow!=null and doctorFlow!=''">
			and dr.doctor_flow=#{doctorFlow}
		</if>
		and dr.AUDIT_STATUS_ID='Passed'
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test="notLikeIdNo!=null and notLikeIdNo!=''">
			and u.ID_NO =#{notLikeIdNo}
		</if>
		<if test="notLikeUserName!=null and notLikeUserName!=''">
			and u.user_name =#{notLikeUserName}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and dr.SPE_ID = #{trainingSpeId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and ed.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test="workOrgLevelId!=null and workOrgLevelId!=''">
			and ed.WORK_ORG_LEVEL_ID = #{workOrgLevelId}
		</if>
		<if test="doctorStatusId!=null and doctorStatusId!=''">
			and dr.doctor_Status_Id = #{doctorStatusId}
		</if>
		<if test="qualifiedId!=null and qualifiedId!=''">
			and dr.QUALIFIED_ID = #{qualifiedId}
		</if>
		<if test="certificateIssuingStatus!=null and certificateIssuingStatus!=''">
			and dr.CERTIFICATE_ISSUING_STATUS = #{certificateIssuingStatus}
		</if>
		<if test="workOrgName!=null and workOrgName!=''">
			and (
			<trim prefix="" prefixOverrides="OR">
				<if test="(workOrgId != null and workOrgId != '')">OR ed.work_org_id = #{workOrgId}</if>
				<if test="(workOrgName != null and workOrgName != '')">OR ed.work_org_name = #{workOrgName}</if>
			</trim>
			)
		</if>
		order by  dr.GRADUATION_YEAR desc, dr.org_flow,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.CREATE_TIME desc
	</select>

	<resultMap type="HashMap" id="countMap">
		<result column="NUM" property="num" javaType="string"/>
		<result column="ORG_FLOW" property="orgFlow" javaType="string"/>
		<result column="ORG_CODE" property="orgCode" javaType="string"/>
	</resultMap>
	<select id="getOrgCodeAndNum"  resultMap="countMap">
		<!--SELECT ORG.ORG_CODE,ORG.ORG_FLOW,lpad(-->
		<!--(SELECT COUNT(1) FROM RES_DOCTOR T WHERE T.ORG_FLOW=ORG.ORG_FLOW AND T.GRADUATION_STATUS_ID='GrantCertf')+1-->
		<!--, 3, '0') NUM FROM SYS_ORG ORG-->
		<!--WHERE 1=1-->
		<!--<if test="orgFlow!=null and orgFlow!=''">-->
		<!--AND ORG.ORG_FLOW = #{orgFlow}-->
		<!--</if>-->
		<!--GROUP BY ORG.ORG_FLOW,ORG.ORG_CODE-->
		SELECT ORG_CODE,LPAD(SUM(NUM)+1, 3, '0') NUM
		FROM (
		SELECT ORG.ORG_FLOW,
		ORG.ORG_CODE,
		(SELECT COUNT(1)
		FROM RES_DOCTOR_recruit T
		WHERE  T.RECORD_STATUS='Y'
		and t.audit_status_id='Passed'
		and t.graduation_Certificate_No is not null
		AND (T.cat_spe_id='WMFirst'OR T.cat_spe_id='DoctorTrainingSpe')
		AND T.ORG_FLOW = ORG.ORG_FLOW
		<if test="year!=null and year!=''">
			<bind name="year" value="year+'%'"/>
			AND T.graduation_Certificate_No LIKE #{year}
		</if>
		) NUM
		FROM (SELECT ORG.ORG_CODE, JIORG.JOINT_ORG_FLOW ORG_FLOW
		FROM SYS_ORG ORG
		LEFT JOIN RES_JOINT_ORG JIORG
		ON ORG.ORG_FLOW = JIORG.ORG_FLOW
		WHERE 1= 1
		AND JIORG.RECORD_STATUS='Y'
		<if test="orgFlow!=null and orgFlow!=''">
			AND ORG.ORG_FLOW = #{orgFlow}
		</if>
		UNION ALL
		SELECT ORG.ORG_CODE, ORG.ORG_FLOW
		FROM SYS_ORG ORG
		WHERE
		1=1
		<if test="orgFlow!=null and orgFlow!=''">
			AND ORG.ORG_FLOW = #{orgFlow}
		</if>
		) ORG ) TEMP
		GROUP BY ORG_CODE
	</select>
	<!--助理全科-->
	<select id="getOrgNumByCityId" resultType="java.util.Map">
		select LPAD(count(1)+1, 4, '0') NUM from res_doctor_recruit rd
		where rd.record_status='Y'
		and rd.cat_spe_id='AssiGeneral'
		and rd.graduation_Certificate_No is not null
		<if test="year!=null and year!=''">
			<bind name="year" value="year+'%'"/>
			AND (#{yearbefore}||rd.graduation_Certificate_No) LIKE #{year}
		</if>
		and exists (
		select 1 from sys_org org where 1=1
		<if test="orgCityId!=null and orgCityId!=''">
			AND org.org_city_id = #{orgCityId}
		</if>
		and org.record_status='Y' and org.org_flow=rd.org_flow)
	</select>
	<select id="getQuanKe" resultType="java.util.Map">
		select LPAD(count(1)+1, 4, '0') NUM from res_doctor_recruit rd
		where rd.record_status='Y'
		and rd.graduation_Certificate_No is not null
		AND (
		(rd.cat_spe_id='WMFirst' and rd.SPE_ID='51')
		OR
		(rd.cat_spe_id='WMFirst' and rd.SPE_ID='52')
		or (rd.cat_spe_id='DoctorTrainingSpe'and rd.SPE_ID='0700'))
		<if test="year!=null and year!=''">
			<bind name="year" value="year+'%'"/>
			AND (#{yearbefore}||rd.graduation_Certificate_No) LIKE #{year}
		</if>
		and exists (
		select 1 from sys_org org where 1=1
		<if test="orgCityId!=null and orgCityId!=''">
			AND org.org_city_id = #{orgCityId}
		</if>
		and org.record_status='Y' and org.org_flow=rd.org_flow)

	</select>
	<select id="getFeiQuanKe" resultType="java.util.Map">
		select LPAD(count(1)+1, 4, '0') NUM from res_doctor_recruit rd
		where rd.record_status='Y'
		AND (
		(rd.cat_spe_id='WMFirst' and rd.SPE_ID !='51')
		OR
		(rd.cat_spe_id='WMFirst' and rd.SPE_ID !='52')
		or (rd.cat_spe_id='DoctorTrainingSpe'and rd.SPE_ID !='0700'))
		<if test="year!=null and year!=''">
			<bind name="year" value="'苏卫'+year+'%'"/>
			AND rd.graduation_Certificate_No LIKE #{year}
		</if>
		and exists (
		select 1 from sys_org org where 1=1
		<if test="orgCityId!=null and orgCityId!=''">
			AND org.org_city_id = #{orgCityId}
		</if>
		and org.record_status='Y' and org.org_flow=rd.org_flow)
	</select>
	<select id="doctorScoreQuery"  parameterType="java.util.Map" resultType="java.util.HashMap">
		select u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,	ED.COMPLETE_START_DATE,ED.COMPLETE_END_DATE,ED.TRAINING_SPE_NAME,ED.ORG_NAME,ED.ORG_FLOW
		,RESUME.USER_RESUME,TS.SCORE_TYPE_ID,TS.SCORE_FLOW,TS.THEORY_SCORE,TS.THEORY_SCORE_YEAR,SS.SKILL_SCORE_FLOW,SS.SKILL_SCORE,SS.EXT_SCORE,SS.SKILL_SCORE_YEAR
		,PS.PUBLIC_SCORE_FLOW,PS.PUBLIC_ALL,PS.PUBLIC_NOTALL_PASS, PS.PUBLIC_NOTALL_SCORE,   PS.PUBLIC_SCORE_YEAR,ed.DISAGREE_REASON,dr.DOCTOR_FLOW,ed.GRADUATION_STATUS_ID
		,ed.CERTIFICATE_NO
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		LEFT JOIN PUB_USER_RESUME RESUME ON ED.DOCTOR_FLOW=RESUME.USER_FLOW
		LEFT JOIN (SELECT T.DOCTOR_FLOW,
		T.SCORE_TYPE_ID,
		S.SCORE_FLOW,
		S.THEORY_SCORE,
		S.SCORE_PHASE_ID THEORY_SCORE_YEAR
		FROM (SELECT S.DOCTOR_FLOW,
		S.SCORE_TYPE_ID,
		MAX(S.SCORE_PHASE_ID) SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS = 'Y'
		GROUP BY S.DOCTOR_FLOW, S.SCORE_TYPE_ID) T
		LEFT JOIN RES_SCORE S
		ON S.DOCTOR_FLOW = T.DOCTOR_FLOW
		AND S.SCORE_TYPE_ID = T.SCORE_TYPE_ID
		AND S.SCORE_PHASE_ID = T.SCORE_PHASE_ID
		WHERE S.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID = 'TheoryScore') TS ON TS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		LEFT JOIN (select T.DOCTOR_FLOW,
		T.SCORE_TYPE_ID SKILL_SCORE_TYPE_ID,
		S.SCORE_FLOW SKILL_SCORE_FLOW,
		S.SKILL_SCORE,
		S.EXT_SCORE,
		S.SCORE_PHASE_ID SKILL_SCORE_YEAR
		from (SELECT S.DOCTOR_FLOW,
		S.SCORE_TYPE_ID,
		MAX(S.SCORE_PHASE_ID) SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS = 'Y'
		GROUP BY S.DOCTOR_FLOW, S.SCORE_TYPE_ID) T
		left JOIN RES_SCORE S
		ON S.DOCTOR_FLOW = T.DOCTOR_FLOW
		AND S.SCORE_TYPE_ID = T.SCORE_TYPE_ID
		AND S.SCORE_PHASE_ID = T.SCORE_PHASE_ID
		WHERE S.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID = 'SkillScore') SS ON SS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		LEFT JOIN (SELECT T.SCORE_FLOW PUBLIC_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.THEORY_SCORE PUBLIC_ALL,
		T.SKILL_SCORE PUBLIC_NOTALL_PASS,
		T.EXT_SCORE PUBLIC_NOTALL_SCORE,
		T.SCORE_PHASE_ID PUBLIC_SCORE_YEAR,
		T.SCORE_TYPE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('PublicScore'))PS ON PS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>

		)
		<if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="cerStatusList!=null and cerStatusList.size>0">
			and ed.GRADUATION_STATUS_ID in
			<foreach collection="cerStatusList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.workOrgId!=null and doctor.workOrgId!=''">
				and ed.WORK_ORG_ID = #{doctor.workOrgId}
			</if>
		</if>
		order by  org.org_code desc
	</select>

	<select id="searchDoctorNum"  resultType="String">
		SELECT SESSION_NUMBER|| ','|| NUM  as num FROM (
			SELECT COUNT(DR.DOCTOR_FLOW) AS NUM,DR.SESSION_NUMBER AS SESSION_NUMBER
			FROM RES_DOCTOR_RECRUIT DR
			LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
			LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
			WHERE DR.RECORD_STATUS = 'Y'
			AND U.RECORD_STATUS = 'Y'
			AND NOT EXISTS (
				SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'ReturnTraining'
				AND T.AUDIT_STATUS_ID = '1'
				AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
				AND T.SESSION_NUMBER = DR.SESSION_NUMBER
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			AND DR.AUDIT_STATUS_ID != 'NotSubmit'
			AND EXISTS (
				SELECT 1
				FROM SYS_ORG O
				WHERE O.RECORD_STATUS = 'Y'
				AND O.ORG_FLOW = DR.ORG_FLOW)
			AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
			AND DR.AUDIT_STATUS_ID = 'Passed'
			AND DR.CAT_SPE_ID = #{catSpeId}
			AND DR.DOCTOR_STATUS_ID = #{doctorStatusId}
			AND ED.DOCTOR_TYPE_ID IN <foreach collection="doctorTypeId" open="(" separator="," close=")" item="item">#{item}</foreach>
			GROUP BY DR.SESSION_NUMBER
			ORDER BY DR.SESSION_NUMBER DESC
  		)
	</select>
	<select id="searchDoctorNum2"  resultType="String">
		SELECT SESSION_NUMBER|| ','|| NUM  as num FROM (
			SELECT COUNT(DR.DOCTOR_FLOW) AS NUM,DR.SESSION_NUMBER AS SESSION_NUMBER
			FROM pdsci.jsres_recruit_doc_info dr
			LEFT JOIN pdsci.SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
			LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
			LEFT JOIN RES_DOCTOR_RECRUiT dd ON DR.DOCTOR_FLOW = dd.DOCTOR_FLOW
			AND dr.session_number = ed.session_number
			WHERE dr.RECORD_STATUS = 'Y'
			AND ed.RECORD_STATUS = 'Y'
			AND dd.RECORD_STATUS = 'Y'
			AND dr.org_flow IN (SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
			AND ORG_PROV_ID = '320000'
			AND ORG_TYPE_ID = 'Hospital')
			AND ED.DOCTOR_TYPE_ID IN <foreach collection="doctorTypeId" open="(" separator="," close=")" item="item">#{item}</foreach>
			AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
			AND dr.audit_Status_Id = 'Passed'
			AND dr.CAT_SPE_ID = #{catSpeId}
			GROUP BY dr.session_number
			ORDER BY dr.session_number DESC
		)
	</select>

	<select id="searchDoctorNumYear" parameterType="String" resultType="String">
		SELECT SESSION_NUMBER FROM (
			SELECT COUNT(DR.DOCTOR_FLOW),DR.SESSION_NUMBER
			FROM RES_DOCTOR_RECRUIT DR
			LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
			LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
			WHERE DR.RECORD_STATUS = 'Y'
			AND U.RECORD_STATUS = 'Y'
			AND NOT EXISTS (
			SELECT 1
			FROM RES_DOCOTR_DELAY_TETURN T
			WHERE T.RECORD_STATUS = 'Y'
			AND T.TYPE_ID = 'ReturnTraining'
			AND T.AUDIT_STATUS_ID = '1'
			AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
			AND T.SESSION_NUMBER = DR.SESSION_NUMBER
			AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			AND DR.AUDIT_STATUS_ID != 'NotSubmit'
			AND EXISTS (
			SELECT 1
			FROM SYS_ORG O
			WHERE O.RECORD_STATUS = 'Y'
			AND O.ORG_FLOW = DR.ORG_FLOW)
			AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
			AND DR.AUDIT_STATUS_ID = 'Passed'
			AND DR.CAT_SPE_ID = #{catSpeId}
			AND DR.DOCTOR_STATUS_ID = #{doctorStatusId}
			GROUP BY DR.SESSION_NUMBER
			ORDER BY DR.SESSION_NUMBER DESC
		) where rownum =1
	</select>
	<select id="searchDoctorNumYear2" parameterType="String" resultType="String">
		SELECT SESSION_NUMBER FROM (
			SELECT COUNT(DR.DOCTOR_FLOW),DR.SESSION_NUMBER
			FROM pdsci.jsres_recruit_doc_info dr
			LEFT JOIN pdsci.SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
			LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
			LEFT JOIN RES_DOCTOR_RECRUiT dd ON DR.DOCTOR_FLOW = dd.DOCTOR_FLOW
			AND dr.session_number = ed.session_number
			WHERE dr.RECORD_STATUS = 'Y'
				AND ed.RECORD_STATUS = 'Y'
				AND dd.RECORD_STATUS = 'Y'
				AND dr.org_flow IN (
					SELECT ORG_FLOW
					FROM PDSCI.SYS_ORG
					WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
						AND ORG_PROV_ID = '320000'
						AND ORG_TYPE_ID = 'Hospital')
				AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
				AND dr.audit_Status_Id = 'Passed'
				AND dr.CAT_SPE_ID = #{catSpeId}
			GROUP BY DR.SESSION_NUMBER
			ORDER BY dr.session_number DESC
		) where rownum =1
	</select>

	<resultMap type="HashMap" id="searchDoctorTrainingNumMap">
		<result  property="dataInfo" column="DATAINFO" javaType="string"/>
		<result  property="num" column="num" javaType="string"/>
	</resultMap>
	<select id="searchDoctorTrainingNum"  resultMap="searchDoctorTrainingNumMap">
		SELECT org_flow || DOCTOR_TYPE_ID DATAINFO,count(DOCTOR_FLOW) num FROM (
			SELECT (
				SELECT ST.ORG_FLOW FROM SYS_ORG ST WHERE ST.ORG_FLOW =
				CASE ( SELECT T.ORG_LEVEL_ID FROM SYS_ORG T WHERE T.ORG_FLOW = DR.ORG_FLOW AND T.RECORD_STATUS = 'Y')
				WHEN 'CountryOrg' THEN ( SELECT T.ORG_FLOW FROM SYS_ORG T WHERE T.ORG_FLOW = DR.ORG_FLOW AND T.RECORD_STATUS = 'Y')
				ELSE ( SELECT t.org_flow FROM RES_JOINT_ORG T WHERE t.joint_org_flow = DR.org_flow AND t.record_status = 'Y' AND rownum = 1) END
			) AS ORG_FLOW, dr.DOCTOR_FLOW, ed.DOCTOR_TYPE_ID
			FROM RES_DOCTOR_RECRUIT DR
			LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
			LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
			LEFT JOIN SYS_ORG O ON O.ORG_FLOW = DR.ORG_FLOW
			WHERE DR.RECORD_STATUS = 'Y'
			AND U.RECORD_STATUS = 'Y'
			AND NOT EXISTS (
				SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'ReturnTraining'
				AND T.AUDIT_STATUS_ID = '1'
				AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
				AND T.SESSION_NUMBER = DR.SESSION_NUMBER
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			AND DR.AUDIT_STATUS_ID != 'NotSubmit'
			AND EXISTS (
				SELECT 1
				FROM SYS_ORG O
				WHERE O.RECORD_STATUS = 'Y'
				AND O.ORG_FLOW = DR.ORG_FLOW)
				AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
				AND DR.AUDIT_STATUS_ID = 'Passed'
				AND DR.CAT_SPE_ID = #{catSpeId}
				AND DR.DOCTOR_STATUS_ID = #{statisticsType}
				AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social', 'Graduate')
				AND DR.SESSION_NUMBER = #{sessionNumber}
		)
		WHERE ORG_FLOW IS NOT NULL
		GROUP BY org_flow , DOCTOR_TYPE_ID
	</select>

	<select id="searchSpeDoctorTrainingNum"  resultMap="searchDoctorTrainingNumMap">
		SELECT DR.SPE_ID || ED.DOCTOR_TYPE_ID DATAINFO,COUNT(DR.DOCTOR_FLOW) num
		FROM RES_DOCTOR_RECRUIT DR
		LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
		LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
		WHERE DR.RECORD_STATUS = 'Y'
		AND U.RECORD_STATUS = 'Y'
		AND NOT EXISTS (SELECT 1
		FROM RES_DOCOTR_DELAY_TETURN T
		WHERE T.RECORD_STATUS = 'Y'
			AND T.TYPE_ID = 'ReturnTraining'
			AND T.AUDIT_STATUS_ID = '1'
			AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
			AND T.SESSION_NUMBER = DR.SESSION_NUMBER
			AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
		AND DR.AUDIT_STATUS_ID != 'NotSubmit'
		AND EXISTS (SELECT 1
		FROM SYS_ORG O
		WHERE O.RECORD_STATUS = 'Y'
			AND O.ORG_FLOW = DR.ORG_FLOW)
		AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
		AND DR.AUDIT_STATUS_ID = 'Passed'
		AND DR.CAT_SPE_ID = #{catSpeId}
		AND DR.DOCTOR_STATUS_ID = #{statisticsType}
		AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social','Graduate')
		AND DR.SESSION_NUMBER = #{sessionNumber}
		GROUP BY DR.SPE_ID,ED.DOCTOR_TYPE_ID
		ORDER BY DR.SPE_ID,ED.DOCTOR_TYPE_ID
	</select>

	<select id="searchDoctorRecruitNum"  resultMap="searchDoctorTrainingNumMap">
		SELECT ORG_FLOW||DOCTOR_TYPE_ID AS DATAINFO ,COUNT(DOCTOR_FLOW) AS num FROM (
			SELECT  (
				SELECT st.org_flow FROM sys_org st WHERE st.org_flow=(
					CASE (SELECT t.org_level_id FROM sys_org t WHERE t.org_flow=dr.org_flow and t.record_status='Y')
					WHEN 'CountryOrg' THEN (SELECT T.ORG_FLOW FROM SYS_ORG T WHERE T.ORG_FLOW=DR.ORG_FLOW AND T.RECORD_STATUS='Y')
					ELSE (SELECT t.org_flow FROM RES_JOINT_ORG t WHERE t.joint_org_flow = dr.org_flow and t.record_status='Y' and rownum = 1) END
				)
			)  ORG_FLOW,dr.DOCTOR_FLOW,ed.DOCTOR_TYPE_ID
			FROM pdsci.jsres_recruit_doc_info dr
			LEFT JOIN pdsci.SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
			LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
			LEFT JOIN RES_DOCTOR_RECRUIT DD ON DR.DOCTOR_FLOW = DD.DOCTOR_FLOW
			AND dr.session_number = ed.session_number
			WHERE dr.RECORD_STATUS = 'Y'
			AND ED.RECORD_STATUS = 'Y'
			AND dd.RECORD_STATUS = 'Y'
			AND dr.org_flow IN (
				SELECT ORG_FLOW
				FROM PDSCI.SYS_ORG
				WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
				AND ORG_PROV_ID = '320000'
				AND ORG_TYPE_ID = 'Hospital')
			AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social','Graduate')
			AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
			AND dr.audit_Status_Id = 'Passed'
			AND DR.CAT_SPE_ID = #{catSpeId}
			AND DR.SESSION_NUMBER = #{sessionNumber}
		) WHERE ORG_FLOW IS NOT NULL
		GROUP BY ORG_FLOW||DOCTOR_TYPE_ID
	</select>

	<resultMap type="HashMap" id="searchDoctorRecruitNumWithNotJoinMap">
		<result  property="dataInfo" column="DATAINFO" javaType="string"/>
		<result  property="num" column="num" javaType="string"/>
		<result  property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
	</resultMap>

	<select id="searchDoctorRecruitNumWithNotJoin"  resultMap="searchDoctorRecruitNumWithNotJoinMap">
		SELECT ORG_FLOW2 AS ORG_FLOW,ORG_FLOW2||DOCTOR_TYPE_ID AS DATAINFO,ORG_NAME,count(DOCTOR_FLOW) AS num FROM (
			SELECT  (
				SELECT st.org_flow FROM sys_org st WHERE st.org_flow=(
					CASE (SELECT t.org_level_id FROM sys_org t WHERE t.org_flow=dr.org_flow and t.record_status='Y')
					WHEN 'CountryOrg' THEN (SELECT T.ORG_FLOW FROM SYS_ORG T WHERE T.ORG_FLOW=DR.ORG_FLOW AND T.RECORD_STATUS='Y')
					ELSE (SELECT t.org_flow FROM RES_JOINT_ORG t WHERE t.joint_org_flow = dr.org_flow and t.record_status='Y' and rownum = 1) END
				)
			)  ORG_FLOW,dr.DOCTOR_FLOW, ed.ORG_FLOW as ORG_FLOW2,ed.ORG_NAME,ed.DOCTOR_TYPE_ID
			FROM pdsci.jsres_recruit_doc_info dr
			LEFT JOIN pdsci.SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
			LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
			LEFT JOIN RES_DOCTOR_RECRUIT DD ON DR.DOCTOR_FLOW = DD.DOCTOR_FLOW
			AND dr.session_number = ed.session_number
			WHERE dr.RECORD_STATUS = 'Y'
			AND ed.RECORD_STATUS = 'Y'
			AND dd.RECORD_STATUS = 'Y'
			AND dr.org_flow IN (
				SELECT ORG_FLOW
				FROM PDSCI.SYS_ORG
				WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
				AND ORG_PROV_ID = '320000'
				AND ORG_TYPE_ID = 'Hospital')
			AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social','Graduate')
			AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
			AND dr.audit_Status_Id = 'Passed'
			AND DR.CAT_SPE_ID = #{catSpeId}
			AND DR.SESSION_NUMBER = #{sessionNumber}
		)
		WHERE ORG_FLOW IS NULL
		GROUP BY ORG_FLOW2,ORG_NAME,DOCTOR_TYPE_ID
	</select>

	<select id="searchDoctorTrainingNumWithNotJoin"  resultMap="searchDoctorRecruitNumWithNotJoinMap">
		SELECT ORG_FLOW2 AS ORG_FLOW,ORG_FLOW2  || DOCTOR_TYPE_ID AS DATAINFO,ORG_NAME,count(DOCTOR_FLOW) AS num FROM (
			SELECT (
				SELECT ST.ORG_FLOW FROM SYS_ORG ST WHERE ST.ORG_FLOW =
				CASE ( SELECT T.ORG_LEVEL_ID FROM SYS_ORG T WHERE T.ORG_FLOW = DR.ORG_FLOW AND T.RECORD_STATUS = 'Y')
				WHEN 'CountryOrg' THEN ( SELECT T.ORG_FLOW FROM SYS_ORG T WHERE T.ORG_FLOW = DR.ORG_FLOW AND T.RECORD_STATUS = 'Y')
				ELSE ( SELECT T.ORG_FLOW FROM RES_JOINT_ORG T WHERE T.JOINT_ORG_FLOW = DR.ORG_FLOW AND T.RECORD_STATUS = 'Y' AND ROWNUM = 1) END
			) AS ORG_FLOW, dr.DOCTOR_FLOW, ed.DOCTOR_TYPE_ID,ED.ORG_FLOW AS ORG_FLOW2,ED.ORG_NAME
			FROM RES_DOCTOR_RECRUIT DR
			LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
			LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
			LEFT JOIN SYS_ORG O ON O.ORG_FLOW = DR.ORG_FLOW
			WHERE DR.RECORD_STATUS = 'Y'
			AND U.RECORD_STATUS = 'Y'
			AND NOT EXISTS (
				SELECT 1
				FROM RES_DOCOTR_DELAY_TETURN T
				WHERE T.RECORD_STATUS = 'Y'
				AND T.TYPE_ID = 'ReturnTraining'
				AND T.AUDIT_STATUS_ID = '1'
				AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
				AND T.SESSION_NUMBER = DR.SESSION_NUMBER
				AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
			AND DR.AUDIT_STATUS_ID != 'NotSubmit'
			AND EXISTS (
				SELECT 1
				FROM SYS_ORG O
				WHERE O.RECORD_STATUS = 'Y'
				AND O.ORG_FLOW = DR.ORG_FLOW)
				AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
				AND DR.AUDIT_STATUS_ID = 'Passed'
				AND DR.CAT_SPE_ID = #{catSpeId}
				AND DR.DOCTOR_STATUS_ID = #{statisticsType}
				AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social', 'Graduate')
				AND DR.SESSION_NUMBER = #{sessionNumber}
		)
		WHERE ORG_FLOW IS NULL
    	GROUP BY ORG_FLOW2 , ORG_NAME ,DOCTOR_TYPE_ID
	</select>

	<select id="searchSpeDoctorRecruitNum"  resultMap="searchDoctorTrainingNumMap">
		SELECT DR.SPE_ID||ed.DOCTOR_TYPE_ID DATAINFO,COUNT(DR.DOCTOR_FLOW) AS num
		FROM pdsci.jsres_recruit_doc_info dr
		LEFT JOIN pdsci.SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
		LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
		LEFT JOIN RES_DOCTOR_RECRUIT DD ON DR.DOCTOR_FLOW = DD.DOCTOR_FLOW
		AND dr.session_number = ed.session_number
		WHERE dr.RECORD_STATUS = 'Y'
		AND ed.RECORD_STATUS = 'Y'
		AND dd.RECORD_STATUS = 'Y'
		AND DR.ORG_FLOW IN (
		  SELECT ORG_FLOW
		  FROM PDSCI.SYS_ORG
		  WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
		  AND ORG_PROV_ID = '320000'
		  AND ORG_TYPE_ID = 'Hospital')
		AND ED.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social','Graduate')
		AND DR.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')
		AND dr.audit_Status_Id = 'Passed'
		AND DR.CAT_SPE_ID = #{catSpeId}
		AND DR.SESSION_NUMBER = #{sessionNumber}
		GROUP BY DR.SPE_ID,ED.DOCTOR_TYPE_ID
		ORDER BY DR.SPE_ID,ED.DOCTOR_TYPE_ID
	</select>


	<select id="doctorScoreQueryForUni" parameterType="java.util.Map" resultType="java.util.HashMap">
		select u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,	ED.COMPLETE_START_DATE,ED.COMPLETE_END_DATE,ED.TRAINING_SPE_NAME,ED.ORG_NAME,ED.ORG_FLOW
		,RESUME.USER_RESUME,TS.SCORE_TYPE_ID,TS.SCORE_FLOW,TS.THEORY_SCORE,TS.THEORY_SCORE_YEAR,SS.SKILL_SCORE_FLOW,SS.SKILL_SCORE,SS.EXT_SCORE,SS.SKILL_SCORE_YEAR
		,PS.PUBLIC_SCORE_FLOW,PS.PUBLIC_ALL,PS.PUBLIC_NOTALL_PASS, PS.PUBLIC_NOTALL_SCORE,   PS.PUBLIC_SCORE_YEAR,ed.DISAGREE_REASON,dr.DOCTOR_FLOW,ed.GRADUATION_STATUS_ID
		,ed.CERTIFICATE_NO,ed.GRADUATION_STATUS_NAME
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		LEFT JOIN PUB_USER_RESUME RESUME ON ED.DOCTOR_FLOW=RESUME.USER_FLOW
		LEFT JOIN (SELECT T.DOCTOR_FLOW,
		T.SCORE_TYPE_ID,
		S.SCORE_FLOW,
		S.THEORY_SCORE,
		S.SCORE_PHASE_ID THEORY_SCORE_YEAR
		FROM (SELECT S.DOCTOR_FLOW,
		S.SCORE_TYPE_ID,
		MAX(S.SCORE_PHASE_ID) SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS = 'Y'
		GROUP BY S.DOCTOR_FLOW, S.SCORE_TYPE_ID) T
		LEFT JOIN RES_SCORE S
		ON S.DOCTOR_FLOW = T.DOCTOR_FLOW
		AND S.SCORE_TYPE_ID = T.SCORE_TYPE_ID
		AND S.SCORE_PHASE_ID = T.SCORE_PHASE_ID
		WHERE S.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID = 'TheoryScore') TS ON TS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		LEFT JOIN (select T.DOCTOR_FLOW,
		T.SCORE_TYPE_ID SKILL_SCORE_TYPE_ID,
		S.SCORE_FLOW SKILL_SCORE_FLOW,
		S.SKILL_SCORE,
		S.EXT_SCORE,
		S.SCORE_PHASE_ID SKILL_SCORE_YEAR
		from (SELECT S.DOCTOR_FLOW,
		S.SCORE_TYPE_ID,
		MAX(S.SCORE_PHASE_ID) SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS = 'Y'
		GROUP BY S.DOCTOR_FLOW, S.SCORE_TYPE_ID) T
		left JOIN RES_SCORE S
		ON S.DOCTOR_FLOW = T.DOCTOR_FLOW
		AND S.SCORE_TYPE_ID = T.SCORE_TYPE_ID
		AND S.SCORE_PHASE_ID = T.SCORE_PHASE_ID
		WHERE S.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID = 'SkillScore') SS ON SS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		LEFT JOIN (SELECT T.SCORE_FLOW PUBLIC_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.THEORY_SCORE PUBLIC_ALL,
		T.SKILL_SCORE PUBLIC_NOTALL_PASS,
		T.EXT_SCORE PUBLIC_NOTALL_SCORE,
		T.SCORE_PHASE_ID PUBLIC_SCORE_YEAR,
		T.SCORE_TYPE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('PublicScore'))PS ON PS.DOCTOR_FLOW=ED.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="orgFlow!=null and orgFlow!=''">
				AND ORG_FLOW = #{orgFlow}
			</if>
			 AND ORG_FLOW IN (
					SELECT DISTINCT RDR.ORG_FLOW
					 FROM 	RES_DOCTOR_RECRUIT RDR
					LEFT JOIN
						RES_DOCTOR RD ON RDR.DOCTOR_FLOW=RD.DOCTOR_FLOW
			        JOIN SYS_USER SU
					ON SU.USER_FLOW = RD.DOCTOR_FLOW
					 WHERE RD.RECORD_STATUS = 'Y'
					   AND SU.RECORD_STATUS = 'Y'
					   AND RD.DOCTOR_TYPE_ID = 'Graduate'
						AND (
							<trim prefix="" prefixOverrides="OR">
								<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR RD.work_org_id = #{org.sendSchoolId}</if>
								<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR RD.work_org_name = #{org.sendSchoolName}</if>
							</trim>
						)
					   AND RDR.ORG_FLOW IS NOT NULL
			  )
		)
		and ed.DOCTOR_TYPE_ID = 'Graduate'
		AND (
		<trim prefix="" prefixOverrides="OR">
			<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR ED.work_org_id = #{org.sendSchoolId}</if>
			<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR ED.work_org_name = #{org.sendSchoolName}</if>
		</trim>
		)
		<if test="cerStatusList!=null and cerStatusList.size>0">
			and ed.GRADUATION_STATUS_ID in
			<foreach collection="cerStatusList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="school!=null and school!=''">
			and ed.SCHOOL = #{school}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
		  	and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
		  	and dr.ORG_FLOW = #{orgFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
		  	and dr.GRADUATION_YEAR=#{graduationYear}
		</if>
		and dr.AUDIT_STATUS_ID='Passed'
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			  and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
		  	<bind name="idNo" value="'%'+idNo+'%'"/>
		  	and u.ID_NO like #{idNo}
		</if>
			<if test="trainingTypeId!=null and trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{trainingTypeId}
			</if>
			<if test="trainingSpeId!=null and trainingSpeId!=''">
				and dr.SPE_ID = #{trainingSpeId}
			</if>
		order by  org.org_code desc
	</select>
	<select id="searchBasePassCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    		SELECT count(DOCTOR_FLOW)
			from (select DOCTOR_FLOW, count(DOCTOR_FLOW) dcount
			from RES_DOCTOR_RECRUIT
			where RECORD_STATUS = 'Y'
    		<if test="recruit!=null">
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
				<if test="recruit.jointOrgFlow!=null and recruit.jointOrgFlow!=''">
					and RES_DOCTOR_RECRUIT.JOINT_ORG_FLOW = #{recruit.jointOrgFlow,jdbcType=VARCHAR}
				</if>
    			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR} 
    			</if>
				<if test="recruit.jointOrgAudit!=null and recruit.jointOrgAudit!=''">
					and RES_DOCTOR_RECRUIT.JOINT_ORG_AUDIT = #{recruit.jointOrgAudit,jdbcType=VARCHAR}
				</if>
    		</if>
			and RES_DOCTOR_RECRUIT.SESSION_NUMBER= #{year}
			AND RES_DOCTOR_RECRUIT.recruit_flag = 'Y'
			AND RES_DOCTOR_RECRUIT.confirm_Flag = 'Y'
    		<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
			GROUP by DOCTOR_FLOW) a
			where dcount > 0
    </select> 
    <select id="searchTrainInfoCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    		select count(doctor_Flow) 
    		from RES_DOCTOR_RECRUIT
			where RECORD_STATUS = 'Y'
    		<if test="recruit!=null">
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and RES_DOCTOR_RECRUIT.CAT_SPE_ID = #{recruit.catSpeId,jdbcType=VARCHAR} 
    			</if>
    		</if>
    		<if test="ProvFlag!=null">
    			and RES_DOCTOR_RECRUIT.PROV_REMARK is null
    		</if>
    		<if test="UrlFlag!=null">
    			and RES_DOCTOR_RECRUIT.PROVE_FILE_URL is null
    			and RES_DOCTOR_RECRUIT.TRAIN_YEAR not in (#{recruit.trainYear})
    		</if>
    		<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    </select> 
    <select id="doctorCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    		select count(distinct doctor_Flow) 
    		from RES_DOCTOR_RECRUIT
			where RECORD_STATUS = 'Y'
    		<if test="recruit!=null">
    			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and RES_DOCTOR_RECRUIT.SESSION_NUMBER = #{recruit.sessionNumber,jdbcType=VARCHAR} 
    			</if>
				<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
					and RES_DOCTOR_RECRUIT.cat_spe_id = #{recruit.catSpeId,jdbcType=VARCHAR}
				</if>
    		</if>
    			<if test="cityIdList!=null and cityIdList.size>0">
					 and RES_DOCTOR_RECRUIT.PLACE_ID in 
    			<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    </select>
	<select id="doctorCounMap"  parameterType="java.util.Map" resultType="java.util.Map">
		select
		a.*,b.*,c.*,d.*
		from
		(
			select nvl(count(distinct rdr.doctor_Flow),0) doctorCount
			from RES_DOCTOR_RECRUIT rdr
			left join res_doctor d on rdr.doctor_flow = d.doctor_flow
			where rdr.RECORD_STATUS = 'Y'
			AND d.RECORD_STATUS = 'Y'
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
			<if test="sessionNumber!=null and sessionNumber!=''">
				AND rdr.SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR}
			</if>
			<if test="cityIdList!=null and cityIdList.size>0">
				AND rdr.PLACE_ID in
				<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test="orgFlow!=null and orgFlow!=''">
				and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="jointOrgFlow!=null and jointOrgFlow!=''">
				and rdr.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
			</if>

		) a,
		(
			select
			nvl(sum(decode(rdr.CAT_SPE_ID,'DoctorTrainingSpe', COUNT(DISTINCT d.doctor_flow),0)),0) "DoctorTrainingSpe",
			nvl(sum(decode(rdr.CAT_SPE_ID,'AssiGeneral', COUNT(DISTINCT d.doctor_flow),0)),0) "AssiGeneral"
			FROM RES_DOCTOR_RECRUIT rdr left join res_doctor d
			on rdr.doctor_flow = d.doctor_flow
			WHERE rdr.RECORD_STATUS = 'Y'
			AND d.record_status = 'Y'
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			<if test="sessionNumber!=null and sessionNumber!=''">
				and rdr.SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR}
			</if>
			<if test="cityIdList!=null and cityIdList.size>0">
				and rdr.PLACE_ID in
				<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test="orgFlow!=null and orgFlow!=''">
				and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="jointOrgFlow!=null and jointOrgFlow!=''">
				and rdr.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
			</if>
			group by rdr.CAT_SPE_ID
		) b,
		(
			select
			nvl(sum(decode(d.doctor_type_id,'CompanyEntrust',  COUNT(DISTINCT d.doctor_flow),0)),0) "CompanyEntrust",
			nvl(sum(decode(d.doctor_type_id,'Company',  COUNT(DISTINCT d.doctor_flow),0)),0) "Company",
			nvl(sum(decode(d.doctor_type_id,'Graduate', COUNT(DISTINCT d.doctor_flow),0)),0) "Graduate",
			nvl(sum(decode(d.doctor_type_id,'Social', COUNT(DISTINCT d.doctor_flow),0)),0) "Social"
			FROM RES_DOCTOR_RECRUIT rdr left join res_doctor d
			on rdr.doctor_flow = d.doctor_flow
			WHERE rdr.RECORD_STATUS = 'Y'
			AND d.record_status = 'Y'
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
			<if test="sessionNumber!=null and sessionNumber!=''">
				and rdr.SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR}
			</if>
			<if test="cityIdList!=null and cityIdList.size>0">
				and rdr.PLACE_ID in
				<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test="orgFlow!=null and orgFlow!=''">
				and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="jointOrgFlow!=null and jointOrgFlow!=''">
				and rdr.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
			</if>
			group by d.doctor_type_id
		) c,
		(
			select
			nvl(sum(decode(o.org_level_id,'CountryOrg', COUNT(DISTINCT d.doctor_flow),0)),0) "CountryOrg",
			nvl(sum(decode(o.org_level_id,'JointOrg', COUNT(DISTINCT d.doctor_flow),0)),0) "JointOrg",
			nvl(sum(decode(o.org_level_id,'ProvinceOrg', COUNT(DISTINCT d.doctor_flow),0)),0) "ProvinceOrg"
			FROM RES_DOCTOR_RECRUIT rdr left join res_doctor d
			on rdr.doctor_flow = d.doctor_flow
			LEFT JOIN
			(
				select case when org.org_level_id ='CountryOrg' then org.org_level_id
				when org.org_level_id ='ProvinceOrg' then org.org_level_id
				when 1=(
						select 1 from res_joint_org j where j.record_status='Y' and j.joint_org_flow=org.org_flow and rownum=1
					) then 'JointOrg'
				end org_level_id ,org.org_flow,org.record_status
				from sys_org org
				where org.RECORD_STATUS = 'Y'
			) o
			ON d.org_flow = o.org_flow
		WHERE rdr.RECORD_STATUS = 'Y'
			AND d.record_status = 'Y'
			AND o.record_status = 'Y'
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
			<if test="sessionNumber!=null and sessionNumber!=''">
				and rdr.SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR}
			</if>
			<if test="cityIdList!=null and cityIdList.size>0">
				and rdr.PLACE_ID in
				<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test="orgFlow!=null and orgFlow!=''">
				and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="jointOrgFlow!=null and jointOrgFlow!=''">
				and rdr.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
			</if>
			group by o.org_level_id
		) d
	</select>
	<select id="doctorCountMapForUni"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT count(DISTINCT  RDR.DOCTOR_FLOW) PEOPLE_NUM
		FROM
		RES_DOCTOR_RECRUIT RDR
		LEFT JOIN
		RES_DOCTOR RD ON RDR.DOCTOR_FLOW=RD.DOCTOR_FLOW
		JOIN SYS_USER SU
		ON SU.USER_FLOW = RD.DOCTOR_FLOW
		WHERE RD.RECORD_STATUS = 'Y'
		AND SU.RECORD_STATUS = 'Y'
		AND RDR.RECORD_STATUS='Y'
		AND RD.DOCTOR_TYPE_ID = 'Graduate'
		AND rdr.AUDIT_STATUS_ID = 'Passed'
		and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
		AND (
			<trim prefix="" prefixOverrides="OR">
				<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR rd.work_org_id = #{org.sendSchoolId}</if>
				<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR rd.work_org_name = #{org.sendSchoolName}</if>
			</trim>
		)
		AND RDR.SESSION_NUMBER=#{sessionNumber}
		AND RDR.ORG_FLOW IS NOT NULL
	</select>
	<select id="joingorgCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    		select nvl(count(distinct JOINT_ORG_FLOW),0)
    		from RES_JOINT_ORG rjo
			join sys_org org on org.org_flow=rjo.JOINT_ORG_FLOW
			where rjo.RECORD_STATUS = 'Y'
			and org.record_status='Y'
			and org.org_prov_id='320000'
			<if test="org!=null">
    				and rjo.joint_org_flow in(
    					select org_flow from sys_org where sys_org.RECORD_STATUS = 'Y'
						and org_type_id ='Hospital'
    					<if test="org.orgCityId!=null and org.orgCityId!=''">
    						and sys_org.org_city_id =  #{org.orgCityId,jdbcType=VARCHAR} 
    					</if>
    				)
    		</if>
    </select>
	<select id="getCurrDocDetails"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		nvl(COUNT(DISTINCT d.doctor_flow),0) num,rdr.doctor_status_id statusId ,rdr.SESSION_NUMBER sessionNumber
		FROM RES_DOCTOR_RECRUIT rdr
			LEFT JOIN res_doctor d ON rdr.doctor_flow = d.doctor_flow
		WHERE rdr.RECORD_STATUS = 'Y'
			AND d.record_status = 'Y'
			AND rdr.SESSION_NUMBER >= '2014'
			AND rdr.doctor_status_id in ('20','21','22')
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
			<if test="cityIdList!=null and cityIdList.size>0">
				and rdr.PLACE_ID in
				<foreach collection="cityIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test="orgFlow!=null and orgFlow!=''">
				and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="jointOrgFlow!=null and jointOrgFlow!=''">
				and rdr.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
			</if>
			GROUP BY rdr.doctor_status_id,rdr.SESSION_NUMBER
  			order by rdr.SESSION_NUMBER desc
	</select>
	<select id="getCurrDocDetailsForUni"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		nvl(COUNT(DISTINCT d.doctor_flow),0) num,rdr.doctor_status_id statusId ,rdr.SESSION_NUMBER sessionNumber
		FROM RES_DOCTOR_RECRUIT rdr
			LEFT JOIN res_doctor d ON rdr.doctor_flow = d.doctor_flow
		JOIN SYS_USER SU ON SU.USER_FLOW = d.DOCTOR_FLOW
		WHERE rdr.RECORD_STATUS = 'Y'
			AND SU.RECORD_STATUS = 'Y'
			AND d.record_status = 'Y'
			AND rdr.SESSION_NUMBER >= '2014'
			AND rdr.doctor_status_id in ('20','21','22')
			AND rdr.AUDIT_STATUS_ID = 'Passed'
			and rdr.CAT_SPE_ID in ('DoctorTrainingSpe','AssiGeneral')
			AND d.DOCTOR_TYPE_ID = 'Graduate'
			AND (
			<trim prefix="" prefixOverrides="OR">
				<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR d.work_org_id = #{org.sendSchoolId}</if>
				<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR d.work_org_name = #{org.sendSchoolName}</if>
			</trim>
			)
			AND RDR.ORG_FLOW IS NOT NULL
			GROUP BY rdr.doctor_status_id,rdr.SESSION_NUMBER
  			order by rdr.SESSION_NUMBER desc
	</select>
	<resultMap type="HashMap" id="notUseAppDocMap">
		<result  property="userFlow" column="USER_FLOW" javaType="string"/>
		<result  property="userName" column="USER_NAME" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="speName" column="SPE_NAME" javaType="string"/>
		<result  property="idNo" column="ID_NO" javaType="string"/>
		<result  property="userPhone" column="USER_PHONE" javaType="string"/>
		<result  property="sexName" column="SEX_NAME" javaType="string"/>
		<result  property="tutorName" column="TUTOR_NAME" javaType="string"/>
		<result  property="doctorStatusName" column="DOCTOR_STATUS_NAME" javaType="string"/>
	</resultMap>
	<select id="searchOrgNotUseAppDoc"  parameterType="java.util.Map" resultMap="notUseAppDocMap">
		select
		SU.USER_FLOW ,
		SU.USER_NAME ,
		SU.ORG_NAME ,
		RD.SESSION_NUMBER ,
		RD.SPE_NAME ,
		SU.ID_NO ,
		SU.USER_PHONE,
		SU.SEX_NAME ,
		DOC.TUTOR_NAME ,
		DOC.DOCTOR_STATUS_NAME
		from RES_DOCTOR_RECRUIT rd,
		SYS_USER su
		,res_doctor doc,sys_org org
		where  doc.record_status='Y'and doc.DOCTOR_FLOW= su.USER_FLOW and
		rd.RECORD_STATUS='Y' and su.RECORD_STATUS='Y' and rd.DOCTOR_FLOW= su.USER_FLOW
		and rd.DOCTOR_STATUS_ID = '20'
		and org.record_status='Y' and org.org_flow=rd.org_flow
		   AND  rd.DOCTOR_FLOW not IN
					  (SELECT DOCOTR_FLOW
							FROM SYS_APP_USER_INFO
							WHERE RECORD_STATUS = 'Y'
							<if test='startDate!=null and startDate!=""'>
								and USE_MONTH >= #{startDate}
							</if>
							<if test='endDate!=null and endDate!=""'>
								and USE_MONTH <![CDATA[ <= ]]> #{endDate}
							</if>
							<if test='startTime!=null and startTime!=""'>
								and to_char(to_date(create_time,'yyyymmddhh24miss'),'yyyy-mm-dd') >= #{startTime}
							</if>
							<if test='endTime!=null and endTime!=""'>
								and to_char(to_date(create_time,'yyyymmddhh24miss'),'yyyy-mm-dd') <![CDATA[ <= ]]> #{endTime}
							</if>
				)
		AND RD.DOCTOR_FLOW NOT IN(
			SELECT DOCTOR_FLOW FROM RES_DOCOTR_DELAY_TETURN WHERE RECORD_STATUS='Y' AND TYPE_ID in ('Delay','ReturnTraining')
		)
		<if test="orgFlow!=null and orgFlow!=''">
			  and rd.org_flow = #{orgFlow}
		</if>
		<if test="jointOrgFlow!=null and jointOrgFlow!=''">
			and rd.JOINT_ORG_FLOW = #{jointOrgFlow}
		</if>
		<if test="orgLevel!=null and orgLevel!=''">
			  and org.org_level_id = #{orgLevel}
		</if>
		<if test="orgFlows!=null and orgFlows.size>0">
			AND rd.ORG_FLOW in
			<foreach collection="orgFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="(orgFlow==null or orgFlow=='') and (orgFlows==null or orgFlows.size==0) and userListScope=='charge'">
			and rd.ORG_FLOW ='charge'
		</if>
		  	and rd.AUDIT_STATUS_ID='Passed'
		<if test="sessionNumber!=null and sessionNumber!=''">
				and rd.SESSION_NUMBER=#{sessionNumber}
		</if>
		<if test="workOrgName!=null and workOrgName!=''">
			and doc.WORK_ORG_NAME=#{workOrgName}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			  and rd.CAT_SPE_ID=#{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and rd.SPE_ID = #{trainingSpeId}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and doc.doctor_type_id  in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="school!=null and school!=''">
			and doc.school = #{school}
		</if>
		order by rd.org_flow,NLSSORT(su.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
	</select>
	<resultMap type="HashMap" id="definMap">
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
	</resultMap>
	<select id="findSchArrengResultByDoctorAndYearMonth" parameterType="java.util.Map" resultMap="definMap">
		select  SCH_DEPT_FLOW,SCH_DEPT_NAME
		 from SCH_ARRANGE_RESULT
			WHERE DOCTOR_FLOW=#{doctorFlow}
			AND RECORD_STATUS='Y'
			AND ( to_date(substr(#{monthDate},1,7),'yyyy-mm')  BETWEEN to_date(substr(SCH_START_DATE,1,7),'yyyy-mm') and  to_date(substr(SCH_end_DATE,1,7),'yyyy-mm'))
	</select>
	<select id="sumCountAudit"  resultType="java.util.Map" parameterType="java.util.Map">
		select nvl(count(*),0) SUMCOUNT
		from res_doctor d left join res_rec r
			on d.doctor_flow=r.oper_user_flow
			left join sys_user u
			on u.user_flow=d.doctor_flow
		where d.record_status = 'Y'
		AND r.record_status = 'Y'
		AND u.record_status = 'Y'
		<if test="orgFlows!=null and orgFlows.size>0">
			AND r.ORG_FLOW in
			<foreach collection="orgFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		AND r.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
		AND r.rec_type_id is not null
	</select>
	<select id="sumCountAuditRes"  resultType="java.util.Map" parameterType="java.util.Map">
		select nvl(count(*),0) SUMCOUNTRES
		from res_doctor d left join res_rec r
			on d.doctor_flow=r.oper_user_flow
			left join sys_user u
			on u.user_flow=d.doctor_flow
		where d.record_status = 'Y'
		AND r.record_status = 'Y'
		AND u.record_status = 'Y'
		<if test="orgFlows!=null and orgFlows.size>0">
			AND r.ORG_FLOW in
			<foreach collection="orgFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		AND r.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
		AND r.audit_status_id is not null
	</select>
	<resultMap type="HashMap" id="docCountMap">
		<result  property="key" column="KEY" javaType="string"/>
		<result property="value" column="NUM" javaType="java.lang.Integer"/>
	</resultMap>
	 <select id="statisticDocCouByType"  parameterType="java.util.Map" resultMap="docCountMap">
    		select ORG_FLOW||CAT_SPE_ID||SPE_ID KEY,count(*) NUM
    		from RES_DOCTOR_RECRUIT
    		where RECORD_STATUS = 'Y'
    		<if test="recruit!=null">
    			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and RES_DOCTOR_RECRUIT.session_Number = #{recruit.sessionNumber,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and RES_DOCTOR_RECRUIT.cat_spe_id = #{recruit.catSpeId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.speId!=null and recruit.speId!=''">
    				and RES_DOCTOR_RECRUIT.SPE_ID = #{recruit.speId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
    		</if>
    		<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    		<if test="doctor!=null">
    			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
    				and exists(
    					select doctor_flow from RES_DOCTOR where RES_DOCTOR.DOCTOR_TYPE_ID = #{doctor.doctorTypeId} 
    					and RES_DOCTOR_RECRUIT.doctor_flow =RES_DOCTOR.doctor_flow
    				)
    			</if>
    		</if>
    		<if test="docTypeList!=null and docTypeList.size>0">
    				and exists(
    					select doctor_flow from RES_DOCTOR where RES_DOCTOR.DOCTOR_TYPE_ID in 
							<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach> 
    					and RES_DOCTOR_RECRUIT.doctor_flow =RES_DOCTOR.doctor_flow
    				)
    		</if>
    		group BY ORG_FLOW,SPE_ID,cat_spe_Id
    		order by cat_spe_Id
    </select> 
	
	 <select id="statisticJointCount"  parameterType="java.util.Map" resultMap="docCountMap">
    		select CAT_SPE_ID||SPE_ID KEY,count(*) NUM
    		from RES_DOCTOR_RECRUIT
    		where RECORD_STATUS = 'Y'
    		<if test="recruit!=null">
    			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and RES_DOCTOR_RECRUIT.session_Number = #{recruit.sessionNumber,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and RES_DOCTOR_RECRUIT.cat_spe_id = #{recruit.catSpeId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.speId!=null and recruit.speId!=''">
    				and RES_DOCTOR_RECRUIT.SPE_ID = #{recruit.speId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR} 
    			</if>
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
				<if test="jointOrgFlow!=null and jointOrgFlow!=''">
					and RES_DOCTOR_RECRUIT.JOINT_ORG_FLOW = #{jointOrgFlow,jdbcType=VARCHAR}
				</if>
    		</if>
    		<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    		<if test="docTypeList!=null and docTypeList.size>0">
    				and exists(
    					select doctor_flow from RES_DOCTOR where RES_DOCTOR.DOCTOR_TYPE_ID in 
							<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach> 
    					and RES_DOCTOR_RECRUIT.doctor_flow =RES_DOCTOR.doctor_flow
    				)
    		</if>
    		group BY CAT_SPE_ID,SPE_ID
    </select>
	<select id="statisticJointCountByOrg"  parameterType="java.util.Map" resultMap="docCountMap">
		select count(*) COUNT,rdr.org_Flow ORGFLOW,rdr.org_name ORGNAME
		from RES_DOCTOR_RECRUIT rdr
		LEFT JOIN RES_DOCTOR d ON rdr.DOCTOR_FLOW = d.DOCTOR_FLOW
		where d.RECORD_STATUS = 'Y'
		AND rdr.RECORD_STATUS = 'Y'
		<if test="recruit!=null">
			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
				and rdr.session_Number = #{recruit.sessionNumber,jdbcType=VARCHAR}
			</if>
			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
				and rdr.cat_spe_id = #{recruit.catSpeId,jdbcType=VARCHAR}
			</if>
			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
				and rdr.AUDIT_STATUS_ID = #{recruit.auditStatusId,jdbcType=VARCHAR}
			</if>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and rdr.ORG_FLOW  in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and exists(
			select doctor_flow from RES_DOCTOR where RES_DOCTOR.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
			and rdr.doctor_flow =RES_DOCTOR.doctor_flow
			and RES_DOCTOR.RECORD_STATUS = 'Y'
			)
		</if>
		group BY rdr.org_flow,rdr.org_name
	</select>

	<resultMap type="HashMap" id="zlxytjMap">
		<result  property="cityId" column="org_city_id" javaType="string"/>
		<result property="cityName" column="org_city_name" javaType="string"/>
		<result property="sessionNumber" column="session_number" javaType="string"/>
		<result property="typeId" column="doctor_type_id" javaType="string"/>
		<result property="typeName" column="doctor_type_name" javaType="string"/>
		<result property="num" column="num" javaType="integer"/>
	</resultMap>
	<select id="zlxytj"  resultMap="zlxytjMap">
		select  org.org_city_id,
				org.org_city_name,
				t.session_number,
				t.doctor_type_id,
				count(1) num
		FROM jsres_recruit_info T
		left join sys_org org
		on t.org_flow = org.org_flow
		WHERE T.RECORD_STATUS = 'Y'
		AND t.org_flow IN
		(SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
		AND ORG_PROV_ID = '320000')
		and t.doctor_type_id in ('Company', 'Graduate', 'Social','CompanyEntrust')
		and t.session_number is not null
		and t.session_number >'2014'
		and t.cat_spe_id='DoctorTrainingSpe'
		<if test="sessionNumber!=null and sessionNumber!=''">
			and session_number=#{sessionNumber}
		</if>
		group by org_city_id,
		org_city_name,
		session_number,
		doctor_type_id
		order by org_city_id, session_number
	</select>
	<select id="zlxytjold"  resultMap="zlxytjMap">
		select org_city_id,
		org_city_name,
		session_number,
		doctor_type_id,
		count(1) num
		from (SELECT org.org_city_id,
		org.org_city_name,
		t.session_number,
		rd.doctor_type_id,
		rd.doctor_type_name,
		rd.doctor_flow
		FROM RES_DOCTOR_recruit T
		left join sys_org org
		on t.org_flow = org.org_flow
		left join res_doctor rd
		on t.doctor_flow = rd.doctor_flow
		LEFT JOIN SYS_USER u
		ON t.DOCTOR_FLOW = u.USER_FLOW
		WHERE T.RECORD_STATUS = 'Y'
		and t.audit_status_id = 'Passed'
		AND t.org_flow IN
		(SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
		AND ORG_PROV_ID = '320000')
		AND u.RECORD_STATUS = 'Y'
		and rd.doctor_type_id in ('Company', 'Graduate', 'Social','CompanyEntrust')
		and t.session_number is not null
		and t.session_number >'2014'
		and t.cat_spe_id='DoctorTrainingSpe'
		union
		select org.org_city_id,
		org.org_city_name,
		t.session_number,
		rd.doctor_type_id,
		rd.doctor_type_name,
		rd.doctor_flow
		from res_docotr_delay_teturn t
		left join sys_org org
		on t.org_flow = org.org_flow
		left join res_doctor rd
		on t.doctor_flow = rd.doctor_flow
		LEFT JOIN SYS_USER u
		ON t.DOCTOR_FLOW = u.USER_FLOW
		where t.record_status = 'Y'
		and t.type_id = 'ReturnTraining'
		AND T.AUDIT_STATUS_ID !='0'
		AND t.org_flow IN
		(SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
		AND ORG_PROV_ID = '320000')
		and not exists(
			select 1
			FROM RES_DOCTOR_recruit r
			where r.record_status='Y'
			and r.audit_status_id='Passed'
			and r.doctor_flow=t.doctor_flow
			and r.session_number=t.session_number
		)
		and rd.doctor_type_id in ('Company', 'Graduate', 'Social','CompanyEntrust')
		and t.session_number is not null
		and t.session_number >'2014'
		and t.training_type_id='DoctorTrainingSpe'
		) t
		<if test="sessionNumber!=null and sessionNumber!=''">
			where session_number=#{sessionNumber}
		</if>
		group by org_city_id,
		org_city_name,
		session_number,
		doctor_type_id
		order by org_city_id, session_number
	</select>
	<resultMap type="HashMap" id="zlxytj2Map">
		<result  property="cityId" column="org_city_id" javaType="string"/>
		<result property="jointOrgFlow" column="JOINT_ORG_FLOW" javaType="string"/>
		<result property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result property="speId" column="SPE_ID" javaType="string"/>
		<result property="num" column="num" javaType="integer"/>
	</resultMap>
	<select id="zlxytj2"  resultMap="zlxytj2Map">
		 SELECT ORG.ORG_FLOW, org.org_city_id, T.SPE_ID,  COUNT(1) NUM
              FROM jsres_recruit_info T
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                          LEFT JOIN RES_JOINT_ORG JIORG
                            ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                         WHERE 1 = 1
                           AND JIORG.RECORD_STATUS = 'Y'
                           and org.org_level_id = 'CountryOrg'
                        UNION
                        SELECT ORG.ORG_FLOW JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                         where org.org_level_id = 'CountryOrg') ORG
                on t.org_flow = org.JOINT_ORG_FLOW
             WHERE T.RECORD_STATUS = 'Y'
               AND ORG.org_flow IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
				<if test="docTypeList!=null and docTypeList.size>0">
					and t.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.cat_spe_id=#{trainTypeId}
				</if>
				<if test="trainingSpeId!=null and trainingSpeId!=''">
					and  t.spe_id=#{trainingSpeId}
				</if>
				<if test="orgCityId!=null and orgCityId!=''">
					and  org.org_city_id=#{orgCityId}
				</if>
     group by ORG.ORG_FLOW, org.org_city_id, T.SPE_ID
     order by org.org_city_id, T.SPE_ID
	</select>
	<select id="zlxytj2old"  resultMap="zlxytj2Map">
		select ORG_FLOW, org_city_id, SPE_ID, COUNT(1) NUM
      from (SELECT ORG.ORG_FLOW, org.org_city_id, T.SPE_ID, rd.doctor_flow
              FROM RES_DOCTOR_recruit T
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                          LEFT JOIN RES_JOINT_ORG JIORG
                            ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                         WHERE 1 = 1
                           AND JIORG.RECORD_STATUS = 'Y'
                           and org.org_level_id = 'CountryOrg'
                        UNION
                        SELECT ORG.ORG_FLOW JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                         where org.org_level_id = 'CountryOrg') ORG
                on t.org_flow = org.JOINT_ORG_FLOW
              left join res_doctor rd
                on t.doctor_flow = rd.doctor_flow
              LEFT JOIN SYS_USER u
                ON t.DOCTOR_FLOW = u.USER_FLOW
             WHERE T.RECORD_STATUS = 'Y'
               and t.audit_status_id = 'Passed'
               AND ORG.org_flow IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
               AND u.RECORD_STATUS = 'Y'
				<if test="docTypeList!=null and docTypeList.size>0">
					and rd.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.cat_spe_id=#{trainTypeId}
				</if>
				<if test="trainingSpeId!=null and trainingSpeId!=''">
					and  t.spe_id=#{trainingSpeId}
				</if>
            union
            select ORG.ORG_FLOW,
                   org.org_city_id,
                   T.TRAINING_SPE_ID SPE_ID,
                   rd.doctor_flow
              from res_docotr_delay_teturn t
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                                ORG.ORG_FLOW,
                                ORG.ORG_NAME,
                                ORG.ORG_CITY_ID,
                                ORG.ORG_CITY_NAME
                           FROM SYS_ORG ORG
                           LEFT JOIN RES_JOINT_ORG JIORG
                             ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                          WHERE 1 = 1
                            AND JIORG.RECORD_STATUS = 'Y'
                            and org.org_level_id = 'CountryOrg'
                         UNION
                         SELECT ORG.ORG_FLOW JOINT_ORG_FLOW,
                                ORG.ORG_FLOW,
                                ORG.ORG_NAME,
                                ORG.ORG_CITY_ID,
                                ORG.ORG_CITY_NAME
                           FROM SYS_ORG ORG
                          where org.org_level_id = 'CountryOrg') ORG
                on t.org_flow = org.JOINT_ORG_FLOW
              left join res_doctor rd
                on t.doctor_flow = rd.doctor_flow
              LEFT JOIN SYS_USER u
                ON t.DOCTOR_FLOW = u.USER_FLOW
             where t.record_status = 'Y'
               and t.type_id = 'ReturnTraining'
               AND T.AUDIT_STATUS_ID != '0'
               AND ORG.org_flow IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
			   and not exists(
					select 1
					FROM RES_DOCTOR_recruit r
					where r.record_status='Y'
					and r.audit_status_id='Passed'
					and r.doctor_flow=t.doctor_flow
					and r.session_number=t.session_number
				)
				<if test="docTypeList!=null and docTypeList.size>0">
					and t.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.TRAINING_TYPE_ID=#{trainTypeId}
				</if>
				<if test="trainingSpeId!=null and trainingSpeId!=''">
					and  t.TRAINING_SPE_ID=#{trainingSpeId}
				</if>
               ) t
		<if test="orgCityId!=null and orgCityId!=''">
			where  org_city_id=#{orgCityId}
		</if>
     group by ORG_FLOW, org_city_id, SPE_ID
     order by org_city_id, SPE_ID
	</select>
	<select id="zlxytjJoint"  resultMap="zlxytj2Map">
		SELECT ORG.JOINT_ORG_FLOW,ORG.ORG_FLOW, org.org_city_id, T.SPE_ID,  COUNT(1) NUM
              FROM jsres_recruit_info T
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                          LEFT JOIN RES_JOINT_ORG JIORG
                            ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                         WHERE 1 = 1
                           AND JIORG.RECORD_STATUS = 'Y'
                           and org.org_level_id = 'CountryOrg'
							<if test="orgFlow!=null and orgFlow!=''">
								and  org.org_flow=#{orgFlow}
							</if>
					) ORG
                on t.org_flow = org.JOINT_ORG_FLOW
             WHERE T.RECORD_STATUS = 'Y'
               AND ORG.JOINT_ORG_FLOW IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
				<if test="docTypeList!=null and docTypeList.size>0">
					and t.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.cat_spe_id=#{trainTypeId}
				</if>
		<if test="orgCityId!=null and orgCityId!=''">
			and  org_city_id=#{orgCityId}
		</if>
     group by ORG.JOINT_ORG_FLOW,ORG.ORG_FLOW, org.org_city_id, T.SPE_ID
     order by org.org_city_id, T.SPE_ID
	</select>
	<select id="zlxytjJointold"  resultMap="zlxytj2Map">
		select JOINT_ORG_FLOW,ORG_FLOW, org_city_id, SPE_ID, COUNT(1) NUM
      from (SELECT ORG.JOINT_ORG_FLOW,ORG.ORG_FLOW, org.org_city_id, T.SPE_ID, rd.doctor_flow
              FROM RES_DOCTOR_recruit T
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                               ORG.ORG_FLOW,
                               ORG.ORG_NAME,
                               ORG.ORG_CITY_ID,
                               ORG.ORG_CITY_NAME
                          FROM SYS_ORG ORG
                          LEFT JOIN RES_JOINT_ORG JIORG
                            ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                         WHERE 1 = 1
                           AND JIORG.RECORD_STATUS = 'Y'
                           and org.org_level_id = 'CountryOrg'
							<if test="orgFlow!=null and orgFlow!=''">
								and  org.org_flow=#{orgFlow}
							</if>
					) ORG
                on t.org_flow = org.JOINT_ORG_FLOW
              left join res_doctor rd
                on t.doctor_flow = rd.doctor_flow
              LEFT JOIN SYS_USER u
                ON t.DOCTOR_FLOW = u.USER_FLOW
             WHERE T.RECORD_STATUS = 'Y'
               and t.audit_status_id = 'Passed'
               AND ORG.JOINT_ORG_FLOW IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
               AND u.RECORD_STATUS = 'Y'
				<if test="docTypeList!=null and docTypeList.size>0">
					and rd.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.cat_spe_id=#{trainTypeId}
				</if>
            union
            select ORG.JOINT_ORG_FLOW,ORG.ORG_FLOW,
                   org.org_city_id,
                   T.TRAINING_SPE_ID SPE_ID,
                   rd.doctor_flow
              from res_docotr_delay_teturn t
              left join (SELECT JIORG.JOINT_ORG_FLOW,
                                ORG.ORG_FLOW,
                                ORG.ORG_NAME,
                                ORG.ORG_CITY_ID,
                                ORG.ORG_CITY_NAME
                           FROM SYS_ORG ORG
                           LEFT JOIN RES_JOINT_ORG JIORG
                             ON ORG.ORG_FLOW = JIORG.ORG_FLOW
                          WHERE 1 = 1
                            AND JIORG.RECORD_STATUS = 'Y'
                            and org.org_level_id = 'CountryOrg'
							<if test="orgFlow!=null and orgFlow!=''">
								and  org.ORG_FLOW=#{orgFlow}
							</if>) ORG
                on t.org_flow = org.JOINT_ORG_FLOW
              left join res_doctor rd
                on t.doctor_flow = rd.doctor_flow
              LEFT JOIN SYS_USER u
                ON t.DOCTOR_FLOW = u.USER_FLOW
             where t.record_status = 'Y'
               and t.type_id = 'ReturnTraining'
               AND T.AUDIT_STATUS_ID != '0'
               AND ORG.JOINT_ORG_FLOW IN
                   (SELECT ORG_FLOW
                      FROM PDSCI.SYS_ORG
                     WHERE PDSCI.SYS_ORG.RECORD_STATUS = 'Y'
                       AND ORG_PROV_ID = '320000')
				and not exists(
					select 1
					FROM RES_DOCTOR_recruit r
					where r.record_status='Y'
					and r.audit_status_id='Passed'
					and r.doctor_flow=t.doctor_flow
					and r.session_number=t.session_number
				)
				<if test="docTypeList!=null and docTypeList.size>0">
					and t.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
               and t.session_number is not null
				<if test="sessionNumber!=null and sessionNumber!=''">
					and  t.session_number=#{sessionNumber}
				</if>
				<if test="trainTypeId!=null and trainTypeId!=''">
					and  t.TRAINING_TYPE_ID=#{trainTypeId}
				</if>
               ) t
		<if test="orgCityId!=null and orgCityId!=''">
			where  org_city_id=#{orgCityId}
		</if>
     group by JOINT_ORG_FLOW,ORG_FLOW, org_city_id, SPE_ID
     order by org_city_id, SPE_ID
	</select>
	<resultMap type="HashMap" id="jointOrgMap">
		<result  property="key" column="KEY" javaType="string"/>
		<result property="value" column="NAME" javaType="string"/>
	</resultMap>
	 <select id="searchJointOrgList"  parameterType="java.util.Map" resultMap="jointOrgMap">
    		select JOINT_ORG_FLOW KEY, ORG_NAME NAME
    		from res_joint_org 
    		where RECORD_STATUS = 'Y'
    		GROUP BY ORG_NAME,JOINT_ORG_FLOW
    </select> 
	 <select id="statisticDocCountByOrg"  parameterType="java.util.Map" resultMap="docCountMap">
    		select RES_DOCTOR_RECRUIT.org_flow KEY,count(distinct RES_DOCTOR_RECRUIT.doctor_flow) NUM
    		from RES_DOCTOR_RECRUIT
			 ,res_doctor doc
			 where  doc.record_status='Y'and doc.DOCTOR_FLOW= RES_DOCTOR_RECRUIT.DOCTOR_FLOW and
			 RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y' and RES_DOCTOR_RECRUIT.DOCTOR_STATUS_ID <![CDATA[ <> ]]> '21'
    		<if test="recruit!=null">
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and RES_DOCTOR_RECRUIT.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
				<if test="recruit.jointOrgFlow!=null and recruit.jointOrgFlow!=''">
					and RES_DOCTOR_RECRUIT.JOINT_ORG_FLOW = #{recruit.jointOrgFlow,jdbcType=VARCHAR}
				</if>
    			 <if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID=#{recruit.auditStatusId}
    			</if> 
    			 <if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and RES_DOCTOR_RECRUIT.SESSION_NUMBER=#{recruit.sessionNumber}
    			</if> 
    			 <if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and RES_DOCTOR_RECRUIT.CAT_SPE_ID=#{recruit.catSpeId}
    			</if>
				<if test="recruit.jointOrgFlow!=null and recruit.jointOrgFlow!=''">
					and RES_DOCTOR_RECRUIT.JOINT_ORG_FLOW=#{recruit.jointOrgFlow}
				</if>
			</if>
    		<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
			 <if test="docTypes!=null and docTypes.size>0">
				 and doc.doctor_type_id  in
				 <foreach collection="docTypes" open="(" separator="," close=")" item="item">#{item}</foreach>
			 </if>
    		group by RES_DOCTOR_RECRUIT.org_flow
    </select> 
	 <select id="statisticDocCountByOrgForTime"  parameterType="java.util.Map" resultMap="docCountMap">
    		select org_flow KEY,count(distinct doctor_flow) NUM
    		from RES_DOCTOR_RECRUIT
    		where RECORD_STATUS = 'Y'
    		<if test='jointFlag!=null and jointFlag!=""'>
   				and RES_DOCTOR_RECRUIT.ORG_FLOW  in (
   					select joint_org_flow from res_joint_org where RECORD_STATUS = 'Y'
   					<if test="orgFlowList!=null and orgFlowList.size>0">
					and res_joint_org.ORG_FLOW  in 
	    			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
	    		</if>
   				)
    		</if>
    		<if test="recruit!=null">
    			 <if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID=#{recruit.auditStatusId}
    			</if> 
    			 <if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and RES_DOCTOR_RECRUIT.SESSION_NUMBER=#{recruit.sessionNumber}
    			</if> 
    			 <if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and RES_DOCTOR_RECRUIT.CAT_SPE_ID=#{recruit.catSpeId}
    			</if> 
    		</if>
    		<if test='jointFlag ==null or jointFlag ==""'>
	    		<if test="orgFlowList!=null and orgFlowList.size>0">
					and RES_DOCTOR_RECRUIT.ORG_FLOW  in 
	    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
	    		</if>
    		</if>
    		group by org_flow
    </select> 
    <resultMap type="HashMap" id="docMap">
		<result  property="key" column="KEY" javaType="string"/>
		<result property="value" column="NUM" javaType="java.lang.Integer"/>
	</resultMap>
	 <select id="statisticAppCountByOrg"  parameterType="java.util.Map" resultMap="docMap">
		 SELECT use_month AS KEY,
			   COUNT(DISTINCT rec.docotr_flow) AS NUM
		  FROM SYS_APP_USER_INFO rec, res_doctor_recruit re, res_doctor doc
		 WHERE doc.record_status = 'Y'
		   AND doc.DOCTOR_FLOW = re.DOCTOR_FLOW
		   AND rec.RECORD_STATUS = 'Y'
		   AND re.RECORD_STATUS = 'Y'
		   AND rec.docotr_flow = re.DOCTOR_FLOW
		   AND re.DOCTOR_STATUS_ID <![CDATA[ <> ]]> '21'
			 <if test="recruit!=null">
				 <if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
					 and re.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR}
				 </if>
				 <if test="recruit.jointOrgFlow!=null and recruit.jointOrgFlow!=''">
					 and re.JOINT_ORG_FLOW = #{recruit.jointOrgFlow,jdbcType=VARCHAR}
				 </if>
				 <if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
					 and re.AUDIT_STATUS_ID=#{recruit.auditStatusId}
				 </if>
				 <if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
					 and re.SESSION_NUMBER=#{recruit.sessionNumber}
				 </if>
				 <if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
					 and re.CAT_SPE_ID=#{recruit.catSpeId}
				 </if>
			 </if>
			 <if test='startTime!=null and startTime!=""'>
				 and use_month >= #{startTime}
			 </if>
			 <if test='endTime!=null and endTime!=""'>
				 and use_month <![CDATA[ <= ]]> #{endTime}
			 </if>
			 <if test="docTypes!=null and docTypes.size>0">
				 and doc.doctor_type_id  in
				 <foreach collection="docTypes" open="(" separator="," close=")" item="item">#{item}</foreach>
			 </if>
		 <if test="orgFlowList!=null and orgFlowList.size>0">
			 and re.ORG_FLOW  in
			 <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		 </if>
		 GROUP BY use_month
		 ORDER BY use_month
    </select> 
	 <select id="statisticRealAppCount"  parameterType="java.util.Map" resultMap="docCountMap">
    		select re.org_flow KEY,count( distinct rec.docotr_flow) NUM
    		 from SYS_APP_USER_INFO rec ,res_doctor_recruit re
    		 where rec.RECORD_STATUS = 'Y' and re.RECORD_STATUS = 'Y'and rec.docotr_flow = re.DOCTOR_FLOW
    		<if test='month!=null and month!=""'>
   				and use_month = #{month}
    		</if>
    		 <if test="recruit!=null">
    			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
    				and re.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR} 
    			</if>
    			 <if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
    				and re.AUDIT_STATUS_ID=#{recruit.auditStatusId}
    			</if> 
    			 <if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
    				and re.SESSION_NUMBER=#{recruit.sessionNumber}
    			</if> 
    			 <if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
    				and re.CAT_SPE_ID=#{recruit.catSpeId}
    			</if> 
    		</if>
    		<if test='jointFlag !=null and jointFlag !=""'>
    			and re.ORG_FLOW  in (
   					select joint_org_flow from res_joint_org where RECORD_STATUS = 'Y'
   					<if test="orgFlowList!=null and orgFlowList.size>0">
					and res_joint_org.ORG_FLOW  in 
	    			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
	    			</if>
	    			)
    		</if>
    		<if test='jointFlag ==null or jointFlag ==""'>
	    		<if test="orgFlowList!=null and orgFlowList.size>0">
					and re.ORG_FLOW  in
	    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
	    		</if>
    		</if>
		group by re.org_flow
    </select> 
    <resultMap id="info" type="com.pinde.sci.model.jsres.JsDoctorInfoExt" extends="com.pinde.sci.dao.base.ResDoctorRecruitMapper.BaseResultMap" >
        <association property="sysUser" column="userFlow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="resDoctor" column="doctorFlow"  resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap" />
	</resultMap>
	<select id="statisticNoAppUser"  parameterType="java.util.Map" resultMap="info">

		SELECT rd.RECRUIT_FLOW,
			   rd.doctor_flow,
			   su.user_flow,
			   rd.spe_name,
			   su.user_name,
			   su.USER_PHONE
		  FROM RES_DOCTOR_RECRUIT rd, SYS_USER su, res_doctor doc
		 WHERE doc.record_status = 'Y'
		   AND doc.DOCTOR_FLOW = su.USER_FLOW
			and rd.DOCTOR_STATUS_ID = '20'
		   AND rd.RECORD_STATUS = 'Y'
		   AND su.RECORD_STATUS = 'Y'
		   AND rd.DOCTOR_FLOW = su.USER_FLOW
		   AND  NOT EXISTS
				 (SELECT 1
						  FROM SYS_APP_USER_INFO
						 WHERE  RECORD_STATUS = 'Y'
						   AND rd.DOCTOR_FLOW = SYS_APP_USER_INFO.DOCOTR_FLOW
							<if test='startDate!=null and startDate!=""'>
								and USE_MONTH >= #{startDate}
							</if>
							<if test='endDate!=null and endDate!=""'>
								and USE_MONTH <![CDATA[ <= ]]> #{endDate}
							</if>
		)
		   AND RD.DOCTOR_FLOW NOT IN
			   (SELECT DOCTOR_FLOW
				  FROM RES_DOCOTR_DELAY_TETURN
				 WHERE RECORD_STATUS = 'Y'
				   AND TYPE_ID IN ('Delay', 'ReturnTraining'))
		<if test="recruit!=null">
			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">
				and rd.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR}
			</if>
			<if test="recruit.jointOrgFlow!=null and recruit.jointOrgFlow!=''">
				and rd.JOINT_ORG_FLOW = #{recruit.jointOrgFlow,jdbcType=VARCHAR}
			</if>
			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
				and rd.AUDIT_STATUS_ID=#{recruit.auditStatusId}
			</if>
			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
				and rd.SESSION_NUMBER=#{recruit.sessionNumber}
			</if>
			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
				and rd.CAT_SPE_ID=#{recruit.catSpeId}
			</if>
		</if>
		<if test="docTypes!=null and docTypes.size>0">
			and doc.doctor_type_id  in
			<foreach collection="docTypes" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		 ORDER BY NLSSORT(su.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
	</select>

	<select id="statisticNoAppUserByJoint"  parameterType="java.util.Map" resultMap="info">

		SELECT rd.RECRUIT_FLOW,
		rd.doctor_flow,
		su.user_flow,
		rd.spe_name,
		su.user_name,
		su.USER_PHONE
		FROM RES_DOCTOR_RECRUIT rd, SYS_USER su, res_doctor doc
		WHERE doc.record_status = 'Y'
		AND doc.DOCTOR_FLOW = su.USER_FLOW
		and rd.DOCTOR_STATUS_ID = '20'
		AND rd.RECORD_STATUS = 'Y'
		AND su.RECORD_STATUS = 'Y'
		AND rd.DOCTOR_FLOW = su.USER_FLOW
		AND  NOT EXISTS
		(SELECT 1
		FROM SYS_APP_USER_INFO
		WHERE  RECORD_STATUS = 'Y'
		AND rd.DOCTOR_FLOW = SYS_APP_USER_INFO.DOCOTR_FLOW
		<if test='startDate!=null and startDate!=""'>
			and USE_MONTH >= #{startDate}
		</if>
		<if test='endDate!=null and endDate!=""'>
			and USE_MONTH <![CDATA[ <= ]]> #{endDate}
		</if>
		)
		AND RD.DOCTOR_FLOW NOT IN
		(SELECT DOCTOR_FLOW
		FROM RES_DOCOTR_DELAY_TETURN
		WHERE RECORD_STATUS = 'Y'
		AND TYPE_ID IN ('Delay', 'ReturnTraining'))
		<if test="recruit!=null">
<!--			<if test="recruit.orgFlow!=null and recruit.orgFlow!=''">-->
<!--				and rd.org_flow = #{recruit.orgFlow,jdbcType=VARCHAR}-->
<!--			</if>-->
			<if test="recruit.auditStatusId!=null and recruit.auditStatusId!=''">
				and rd.AUDIT_STATUS_ID=#{recruit.auditStatusId}
			</if>
			<if test="recruit.sessionNumber!=null and recruit.sessionNumber!=''">
				and rd.SESSION_NUMBER=#{recruit.sessionNumber}
			</if>
			<if test="recruit.catSpeId!=null and recruit.catSpeId!=''">
				and rd.CAT_SPE_ID=#{recruit.catSpeId}
			</if>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and rd.org_flow  in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypes!=null and docTypes.size>0">
			and doc.doctor_type_id  in
			<foreach collection="docTypes" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		ORDER BY NLSSORT(su.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
	</select>

	<!--****************************高******校******管******理******员******角******色************************************************-->

	<select id="searchJsDoctorRecruitExtListForUni"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.school as school
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'AND ed.RECORD_STATUS = 'Y'
		and EXISTS ( select 1 from sys_org org where (org.send_school_id=ed.work_org_id or
		org.send_school_name=ed.work_org_name) and org.record_status='Y' and org.org_flow =#{currUser.orgFlow})
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				and dr.org_Flow = #{doctor.orgFlow}
			</if>
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.school!=null and doctor.school!=''">
				and ed.school = #{doctor.school}
			</if>
			and dr.org_flow in(
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
					AND ORG_PROV_ID = #{sysOrg.orgProvId}
				</if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
					AND ORG_CITY_ID = #{sysOrg.orgCityId}
				</if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
					AND ORG_FLOW = #{sysOrg.orgFlow}
				</if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
					AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
				</if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
					AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
				</if>
			</if>
			)
			AND ed.doctor_type_id = 'Graduate'
		</if>
		order by  NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.org_flow, dr.doctor_flow,dr.CREATE_TIME desc
	</select>


	<select id="searchDoctorSkillScoreForUni"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.SKILL_SCORE_FLOW score_flow,score.theory_score,score.skill_score,score.ext_score,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,dr.*
		from (
		SELECT  T.DOCTOR_FLOW,T.SCORE_PHASE_ID, A.THEROY_SCORE_FLOW, B.SKILL_SCORE_FLOW,A.THEORY_SCORE,B.SKILL_SCORE,B.EXT_SCORE
		FROM (SELECT DISTINCT S.DOCTOR_FLOW,S.SCORE_PHASE_ID
		FROM RES_SCORE S
		WHERE S.RECORD_STATUS='Y'
		GROUP BY S.DOCTOR_FLOW,S.SCORE_PHASE_ID) T
		LEFT JOIN (SELECT T.SCORE_FLOW THEROY_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.THEORY_SCORE,
		T.SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('TheoryScore')) A
		ON T.DOCTOR_FLOW = A.DOCTOR_FLOW
		AND T.SCORE_PHASE_ID = A.SCORE_PHASE_ID
		LEFT JOIN (SELECT T.SCORE_FLOW SKILL_SCORE_FLOW,
		T.DOCTOR_FLOW,
		T.SKILL_SCORE,
		T.EXT_SCORE,
		T.SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('SkillScore')) B
		ON T.DOCTOR_FLOW = B.DOCTOR_FLOW
		AND T.SCORE_PHASE_ID = B.SCORE_PHASE_ID ) score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
		select a.* from RES_DOCTOR_RECRUIT a,
		(    select t.doctor_flow,max(t.create_time) as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
				and t.AUDIT_STATUS_ID='Passed'
		group by t.doctor_flow) b
		where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where  u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="orgFlow!=null and orgFlow!=''">
				AND ORG_FLOW = #{orgFlow}
			</if>
			AND ORG_FLOW IN (
				SELECT DISTINCT RDR.ORG_FLOW
				FROM
				RES_DOCTOR_RECRUIT RDR
				LEFT JOIN
				RES_DOCTOR RD ON RDR.DOCTOR_FLOW=RD.DOCTOR_FLOW
				JOIN SYS_USER SU
				ON SU.USER_FLOW = RD.DOCTOR_FLOW
				WHERE RD.RECORD_STATUS = 'Y'
				AND SU.RECORD_STATUS = 'Y'
				AND RD.DOCTOR_TYPE_ID = 'Graduate'
				AND (
				<trim prefix="" prefixOverrides="OR">
					<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR ed.work_org_id = #{org.sendSchoolId}</if>
					<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR ed.work_org_name = #{org.sendSchoolName}</if>
				</trim>
				)
				AND RDR.ORG_FLOW IS NOT NULL
			)
			and ed.org_flow=org_flow
		)
		<if test="graduationYear!=null and graduationYear!=''">
		   and dr.GRADUATION_YEAR=#{graduationYear}

		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="isHege!=null and isHege!=''">
			and score.theory_score = #{isHege}
		</if>
		<if test="skillIsHege!=null and skillIsHege!=''">
			<if test="skillIsHege=='Y'.toString()">
				and score.skill_score = '1'
			</if>
			<if test="skillIsHege=='N'.toString()">
				and score.skill_score = '0'
			</if>
		</if>
			<if test="userName!=null and userName!=''">
				<bind name="userName" value="'%'+userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="idNo!=null and idNo!=''">
				<bind name="idNo" value="'%'+idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		<if test=" trainYear!=null and trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{trainYear})
		</if>
			<if test="trainingTypeId!=null and trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{trainingTypeId}
			</if>
			<if test="trainingSpeId!=null and trainingSpeId!=''">
				and dr.SPE_ID = #{trainingSpeId}
			</if>
			<if test="trainingYears!=null and trainingYears!=''">
				and dr.TRAIN_YEAR = #{trainingYears}
			</if>
			<if test="sessionNumber!=null and sessionNumber!=''">
				and ed.SESSION_NUMBER = #{sessionNumber}
			</if>
		   <if test="school!=null and school!=''">
		    	and ed.SCHOOL = #{school}
		   </if>
				and ed.DOCTOR_TYPE_ID = 'Graduate'
		order by  org.org_code desc
	</select>

	<select id="searchDoctorInfoExtsForUni"  parameterType="java.util.Map" resultMap="doctorInfo">
		select dr.*, ed.*, u.*, pur.*
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join pdsci.PUB_USER_RESUME pur
		on pur.USER_FLOW=dr.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'AND ed.RECORD_STATUS = 'Y'
		and EXISTS ( select 1 from sys_org org where (org.send_school_id=ed.work_org_id or
		org.send_school_name=ed.work_org_name) and org.record_status='Y' and org.org_flow =#{currUser.orgFlow})
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.school!=null and doctor.school!=''">
				and ed.SCHOOL = #{doctor.school}
			</if>
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				and dr.ORG_FLOW = #{doctor.orgFlow}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
		</if>
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		)
		AND ed.doctor_type_id = 'Graduate'
		order by  NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),dr.org_flow, dr.doctor_flow,dr.CREATE_TIME desc
	</select>
	<select id="searchDoctorManualForUni"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		select dr.*,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,ed.TRAINING_YEARS
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join  sys_org sysOrg
		on ed.ORG_FLOW =  sysOrg.ORG_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'AND ed.RECORD_STATUS = 'Y'
		and EXISTS ( select 1 from sys_org org where (org.send_school_id=ed.work_org_id or
		org.send_school_name=ed.work_org_name) and org.record_status='Y' and org.org_flow =#{currUser.orgFlow,jdbcType=VARCHAR})
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.auditStatusId!=null and resDoctorRecruit.auditStatusId!=''">
				and dr.AUDIT_STATUS_ID=#{resDoctorRecruit.auditStatusId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.doctorName!=null and doctor.doctorName!=''">
				<bind name="doctorName" value="'%'+doctor.doctorName+'%'"/>
				and ed.DOCTOR_NAME like #{doctorName}
			</if>
			<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
				and dr.org_Flow = #{doctor.orgFlow}
			</if>
			<if test="doctor.school!=null and doctor.school!=''">
				and ed.SCHOOL = #{doctor.school}
			</if>
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.trainingYears!=null and doctor.trainingYears!=''">
				and dr.TRAIN_YEAR = #{doctor.trainingYears,jdbcType=VARCHAR}
			</if>
			and dr.org_flow in(
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			)
			AND ed.doctor_type_id = 'Graduate'
		</if>
		order by  ed.session_number desc,sysOrg.org_code, dr.doctor_flow
	</select>
	<resultMap type="HashMap" id="areaMap">
		<result column="MIN_DATE" property="minDate" javaType="string"/>
		<result column="MAX_DATE" property="maxDate" javaType="string"/>
	</resultMap>
	<select id="getDocProcessArea" resultMap="areaMap">
		select min(sch_start_date) MIN_DATE,max(sch_end_date) MAX_DATE
		from pdsci.sch_arrange_result
		where record_status = 'Y'
		and doctor_flow = #{doctorFlow}
		and rotation_flow = #{rotationFlow}
	</select>
	<resultMap id="graduateMap" type="com.pinde.sci.model.jsres.JsGraduateExt">
		<result column="SESSION_NUMBER" jdbcType="VARCHAR" property="sessionNumber"/>
		<result column="ORG_NAME" jdbcType="VARCHAR" property="orgName"/>
		<result column="SPE_NAME" jdbcType="VARCHAR" property="speName"/>
		<result column="TRAIN_YEAR" jdbcType="VARCHAR" property="trainYear"/>
		<result column="RECRUIT_DATE" jdbcType="VARCHAR" property="recruitDate"/>
		<result column="ORG_LEVEL_ID" jdbcType="VARCHAR" property="orgLevelId"/>
		<result column="JOINT_FLOW" jdbcType="VARCHAR" property="jointFlow"/>
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
		<result column="SEX_NAME" jdbcType="VARCHAR" property="sexName"/>
		<result column="CRET_TYPE_NAME" jdbcType="VARCHAR" property="cretTypeName"/>
		<result column="ID_NO" jdbcType="VARCHAR" property="idNo"/>
		<result column="NATION_NAME" jdbcType="VARCHAR" property="nationName"/>
		<result column="USER_BIRTHDAY" jdbcType="VARCHAR" property="userBirthday"/>
		<result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone"/>
		<result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail"/>
		<result column="EDUCATION_ID" jdbcType="VARCHAR" property="educationId"/>
		<result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId"/>
		<result column="WORK_ORG_NAME" jdbcType="VARCHAR" property="workOrgName"/>
		<result column="DOCTOR_TYPE_NAME" jdbcType="VARCHAR" property="doctorTypeName"/>
		<result column="IS_YEAR_GRADUATE" jdbcType="VARCHAR" property="isYearGraduate"/>
		<result column="CERTIFICATE_NO" jdbcType="VARCHAR" property="certificateNo"/>
		<result column="DEGREE_NO" jdbcType="VARCHAR" property="degreeNo"/>
		<result column="USER_RESUME" jdbcType="VARCHAR" property="userResume"/>
		<result column="THEORY_YEAR" jdbcType="VARCHAR" property="theoryYear"/>
		<result column="THEORY_SCORE" jdbcType="DECIMAL" property="theoryScore"/>
		<result column="SKILL_YEAR" jdbcType="VARCHAR" property="skillYear"/>
		<result column="SKILL_SCORE" jdbcType="DECIMAL" property="skillScore"/>
		<result column="CFG_PASS_SCORE" jdbcType="VARCHAR" property="cfgPassScore"/>
		<result column="EXT_SCORE" jdbcType="VARCHAR" property="extScore"/>
	</resultMap>
	<select id="graduateExtList" parameterType="java.util.Map" resultMap="graduateMap">
		select rdr.session_number,
			   rdr.org_name,
			   rdr.spe_Name,
			   rdr.train_Year,
			   rdr.recruit_date,
			   so.org_level_id,
			   rjo.joint_flow,
			   su.user_name,
			   su.sex_name,
			   su.cret_type_name,
			   su.id_no,
			   su.nation_name,
			   su.user_birthday,
			   su.user_phone,
			   su.user_email,
			   su.education_id,
			   rd.doctor_type_id,
			   rd.work_org_name,
			   rd.doctor_type_name,
			   rd.is_year_graduate,
			   rd.certificate_no,
			   rd.degree_no,
			   pur.user_resume,
			   nvl(rpsc.cfg_pass_score,'60') cfg_pass_score,
			   a.score_phase_id theory_year,
			   a.theory_score,
			   b.score_phase_id skill_year,
			   b.skill_score,
			   b.ext_score
		  from res_doctor_recruit rdr
		  left join sys_org so
			on rdr.org_flow = so.org_flow
		  left join res_joint_org rjo
			on so.org_flow = rjo.joint_org_flow
			and rjo.record_status='Y'
		  left join sys_user su
			on rdr.doctor_flow = su.user_flow
		  left join res_doctor rd
			on su.user_flow = rd.doctor_flow
		  left join pub_user_resume pur
			on su.user_flow = pur.user_flow
		  left join res_pass_score_cfg rpsc
			on rpsc.cfg_year = rdr.graduation_year
		   and rpsc.record_status = 'Y'
		  left join (select doctor_flow, theory_score, score_phase_id
					   from (select doctor_flow,theory_score,score_phase_id,row_number() over(partition by doctor_flow order by score_phase_id desc) rn
							   from res_score
							  where record_status = 'Y'
								and score_type_id = 'TheoryScore')
					  where rn = 1) a
			on rdr.doctor_flow = a.doctor_flow
		  left join (select doctor_flow, skill_score, ext_score, score_phase_id
					   from (select doctor_flow,skill_score,ext_score,score_phase_id,row_number() over(partition by doctor_flow order by score_phase_id desc) rn
							   from res_score
							  where record_status = 'Y'
								and score_type_id = 'SkillScore')
					  where rn = 1) b
			on rdr.doctor_flow = b.doctor_flow
		 where rdr.record_status = 'Y'
		   and su.record_status = 'Y'
		   and rdr.audit_status_id = 'Passed'
			and (
					rdr.graduation_year = '2017'
				or (
					rdr.session_number != '2017'
					and rdr.graduation_year != '2017'
					and rdr.doctor_flow in (select  doctor_flow
						from res_score
						where record_status = 'Y'
						and
						score_type_id in ('TheoryScore','SkillScore')
				)
			)
		  )
		   and exists (select null
				  from sys_org so
				 where so.record_status = 'Y'
				 <if test="orgProvId!=null and orgProvId!=''">
					 and so.org_prov_id = #{orgProvId}
				 </if>
				 	and so.org_flow = rdr.org_flow)
	</select>

	<select id="searchJsDoctorRecruitExtList1"  parameterType="java.util.Map" resultMap="doctorInfo">
		select *
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join pdsci.PUB_USER_RESUME pur
		on pur.USER_FLOW=dr.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		)
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.isRetrain!=null and resDoctorRecruit.isRetrain!=''">
				and dr.IS_RETRAIN = #{resDoctorRecruit.isRetrain}
			</if>
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>
				and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}
			</if>
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!=''">
				and dr.doctor_STATUS_ID=#{resDoctorRecruit.doctorStatusId}
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
	</select>

	<select id="resDoctorInfoExtListNew"  parameterType="java.util.Map" resultMap="doctorInfo">
		select *
		from pdsci.RES_DOCTOR_RECRUIT dr
		left join  pdsci.SYS_USER u
		on dr.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on dr.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join pdsci.PUB_USER_RESUME pur
		on pur.USER_FLOW=dr.DOCTOR_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND dr.signup_way = 'DoctorSignup'
		AND dr.AUDIT_STATUS_ID != 'NotSubmit'
		and dr.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="sysOrg!=null">
			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{sysOrg.orgProvId}
			</if>
			<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{sysOrg.orgCityId}
			</if>
			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
				AND ORG_FLOW = #{sysOrg.orgFlow}
			</if>
			<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
			</if>
			<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
			</if>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'N'.toString()">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'Y'.toString()">
			and dr.JOINT_ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainYearList!=null and trainYearList.size>0">
			and dr.TRAIN_YEAR in
			<foreach collection="trainYearList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		)
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="resDoctorRecruit!=null">
			<if test="resDoctorRecruit.sessionNumber!=null and resDoctorRecruit.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{resDoctorRecruit.sessionNumber}
			</if>
			<if test="resDoctorRecruit.catSpeId!=null and resDoctorRecruit.catSpeId!=''">
				and dr.CAT_SPE_ID = #{resDoctorRecruit.catSpeId}
			</if>
			<if test="resDoctorRecruit.speId!=null and resDoctorRecruit.speId!=''">
				and dr.SPE_ID = #{resDoctorRecruit.speId}
			</if>
			<!--<if test='resDoctorRecruit.orgFlow!=null and resDoctorRecruit.orgFlow!=""'>-->
				<!--and dr.ORG_FLOW = #{resDoctorRecruit.orgFlow}-->
			<!--</if>-->
			<if test="resDoctorRecruit.graduationYear!=null and resDoctorRecruit.graduationYear!=''">
				and dr.GRADUATION_YEAR=#{resDoctorRecruit.graduationYear}
			</if>
			<!--<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!=''">-->
				<!--and dr.doctor_STATUS_ID=#{resDoctorRecruit.doctorStatusId}-->
			<!--</if>-->
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'Y'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing'">
				<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
			<if test="resDoctorRecruit.doctorStatusId!=null and resDoctorRecruit.doctorStatusId!='' and isJointOrg == 'N'.toString()">
				<if test="resDoctorRecruit.doctorStatusId == 'Passed'">
					and dr.DOCTOR_STATUS_ID != 'Auditing' and dr.DOCTOR_STATUS_ID != 'NotPassed'
					and dr.DOCTOR_STATUS_ID != 'OrgAuditing' AND DR.AUDIT_STATUS_ID = 'Passed' and dr.DOCTOR_STATUS_ID is not null
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'OrgAuditing'">
					<!-- and dr.DOCTOR_STATUS_ID=#{resDoctorRecruit.doctorStatusId} -->
					and dr.AUDIT_STATUS_ID ='Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'Auditing'">
					and dr.AUDIT_STATUS_ID ='Auditing' AND DR.JOINT_ORG_AUDIT = 'Auditing'
				</if>
				<if test="resDoctorRecruit.doctorStatusId == 'NotPassed'">
					<!-- AND DR.JOINT_ORG_AUDIT = 'NotPassed' -->
					and dr.AUDIT_STATUS_ID = 'NotPassed'
				</if>
			</if>
		</if>
		<if test="derateFlag!=null and resDoctorRecruit.trainYear!=null and resDoctorRecruit.trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{resDoctorRecruit.trainYear})
		</if>
		<if test="user!=null">
			<if test="user.userName!=null and user.userName!=''">
				<bind name="userName" value="'%'+user.userName+'%'"/>
				and u.USER_NAME like #{userName}
			</if>
			<if test="user.idNo!=null and user.idNo!=''">
				<bind name="idNo" value="'%'+user.idNo+'%'"/>
				and u.ID_NO like #{idNo}
			</if>
			<if test="user.nativePlaceCityId!=null and user.nativePlaceCityId!=''">
				and u.NATIVE_PLACE_CITY_ID = #{user.nativePlaceCityId}
			</if>
		</if>
		<if test="doctor!=null">
			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
				and dr.CAT_SPE_ID = #{doctor.trainingTypeId}
			</if>
			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
				and dr.SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
				and dr.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test="doctor.doctorTypeId!=null and doctor.doctorTypeId!=''">
				and ed.DOCTOR_TYPE_ID = #{doctor.doctorTypeId}
			</if>
			<if test="doctor.workOrgLevelId!=null and doctor.workOrgLevelId!=''">
				and ed.WORK_ORG_LEVEL_ID = #{doctor.workOrgLevelId}
			</if>
			<if test="doctor.isYearGraduate!=null and doctor.isYearGraduate!=''">
				and ed.IS_YEAR_GRADUATE = #{doctor.isYearGraduate}
			</if>
			<if test="doctor.doctorStatusId!=null and doctor.doctorStatusId!=''">
				and dr.doctor_Status_Id = #{doctor.doctorStatusId}
			</if>
			<if test="doctor.workOrgName!=null and doctor.workOrgName!=''">
				and (
				<trim prefix="" prefixOverrides="OR">
					<if test="(doctor.workOrgId != null and doctor.workOrgId != '')">OR ed.work_org_id = #{doctor.workOrgId}</if>
					<if test="(doctor.workOrgName != null and doctor.workOrgName != '')">OR ed.work_org_name like CONCAT(CONCAT('%', #{doctor.workOrgName}),'%')</if>
				</trim>
				)
			</if>
		</if>
		order by  dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
	</select>

	<select id="searchDoctorSkillScoreForUni1"  parameterType="java.util.Map" resultMap="DoctorScoreRecruit">
		select score.SKILL_SCORE_FLOW score_flow,score.theory_score,score.THEROY_SCORE_PHASE_ID AS SCORE_PHASE_ID,score.skill_score,score.SKILL_SCORE_PHASE_ID AS SCORE_PHASE_NAME,score.ext_score,u.USER_FLOW, u.USER_CODE, u.USER_NAME, u.SEX_ID, u.SEX_NAME, u.USER_PHONE, u.USER_EMAIL
		, u.ID_NO, u.USER_BIRTHDAY, u.TITLE_ID, u.TITLE_NAME, u.DEGREE_ID, u.DEGREE_NAME, u.EDUCATION_ID, u.EDUCATION_NAME, u.POST_ID, u.POST_NAME,
		ed.ORG_FLOW as edOrgFlow,ed.ORG_Name as edOrgName,dr.*
		from (
		SELECT case
		when A.DOCTOR_FLOW is not null then
		a.doctor_flow
		when b.doctor_flow is not null then
		b.doctor_flow
		else
		null
		end doctor_flow, A.THEROY_SCORE_FLOW, B.SKILL_SCORE_FLOW,A.THEROY_SCORE_PHASE_ID, A.THEORY_SCORE,
		B.SKILL_SCORE_PHASE_ID, B.SKILL_SCORE, B.EXT_SCORE
		FROM  (
		select R.SCORE_FLOW AS THEROY_SCORE_FLOW,a.DOCTOR_FLOW,R.THEORY_SCORE,a.THEROY_SCORE_PHASE_ID
		from
		(SELECT T.DOCTOR_FLOW,max(T.SCORE_PHASE_ID) AS THEROY_SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('TheoryScore')
		<if test="theroyScoreYear!=null and theroyScoreYear!=''">
			AND T.SCORE_PHASE_ID = #{theroyScoreYear}
		</if>
		group by T.DOCTOR_FLOW) a
		left join RES_SCORE R
		on a.DOCTOR_FLOW=R.DOCTOR_FLOW
		where a.THEROY_SCORE_PHASE_ID=R.SCORE_PHASE_ID
		AND R.SCORE_TYPE_ID IN ('TheoryScore') and  R.RECORD_STATUS = 'Y'
		<if test="theroyScoreYear!=null and theroyScoreYear!=''">
			AND R.SCORE_PHASE_ID = #{theroyScoreYear}
		</if>
		) A
		FULL JOIN (
		select R.SCORE_FLOW AS SKILL_SCORE_FLOW,a.DOCTOR_FLOW,R.SKILL_SCORE,R.EXT_SCORE,a.SKILL_SCORE_PHASE_ID
		from
		(SELECT T.DOCTOR_FLOW,max(T.SCORE_PHASE_ID) AS SKILL_SCORE_PHASE_ID
		FROM RES_SCORE T
		WHERE T.RECORD_STATUS = 'Y'
		AND T.SCORE_TYPE_ID IN ('SkillScore')
		<if test="skillScoreYear!=null and skillScoreYear!=''">
			AND T.SCORE_PHASE_ID = #{skillScoreYear}
		</if>
		group by T.DOCTOR_FLOW) a
		left join RES_SCORE R
		on a.DOCTOR_FLOW=R.DOCTOR_FLOW
		where a.SKILL_SCORE_PHASE_ID=R.SCORE_PHASE_ID
		AND R.SCORE_TYPE_ID IN ('SkillScore') and  R.RECORD_STATUS = 'Y'
		<if test="skillScoreYear!=null and skillScoreYear!=''">
			AND R.SCORE_PHASE_ID = #{skillScoreYear}
		</if>
		) B ON A.DOCTOR_FLOW = B.DOCTOR_FLOW
		) score
		left join  pdsci.SYS_USER u
		on score.DOCTOR_FLOW =  u.USER_FLOW
		left join  RES_DOCTOR ed
		on score.DOCTOR_FLOW =  ed.DOCTOR_FLOW
		left join (
		select a.* from RES_DOCTOR_RECRUIT a,
		(    select t.doctor_flow,max(t.create_time) as create_time from  RES_DOCTOR_RECRUIT t where t.record_status='Y'
		and t.AUDIT_STATUS_ID='Passed'
		group by t.doctor_flow) b
		where a.doctor_flow=b.doctor_flow and  a.create_time=b.create_time
		) dr on score.DOCTOR_FLOW =  dr.DOCTOR_FLOW
		left join sys_org org on org.org_flow=ed.org_flow
		where  u.RECORD_STATUS= 'Y' and  dr.RECORD_STATUS= 'Y'
		and  EXISTS (
		SELECT null
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="orgFlow!=null and orgFlow!=''">
			AND ORG_FLOW = #{orgFlow}
		</if>
		AND ORG_FLOW IN (
		SELECT DISTINCT RDR.ORG_FLOW
		FROM
		RES_DOCTOR_RECRUIT RDR
		LEFT JOIN
		RES_DOCTOR RD ON RDR.DOCTOR_FLOW=RD.DOCTOR_FLOW
		JOIN SYS_USER SU
		ON SU.USER_FLOW = RD.DOCTOR_FLOW
		WHERE RD.RECORD_STATUS = 'Y'
		AND SU.RECORD_STATUS = 'Y'
		AND RD.DOCTOR_TYPE_ID = 'Graduate'
		<if test="school!=null and school!='' ">
			and RD.SCHOOL =#{school}
		</if>
		AND (
		<trim prefix="" prefixOverrides="OR">
			<if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR ed.work_org_id = #{org.sendSchoolId}</if>
			<if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR ed.work_org_name = #{org.sendSchoolName}</if>
		</trim>
		)
		AND RDR.ORG_FLOW IS NOT NULL
		)
		and ed.org_flow=org_flow
		)
		<if test="graduationYear!=null and graduationYear!=''">
			and dr.GRADUATION_YEAR=#{graduationYear}

		</if>
		<if test="scoreYear!=null and scoreYear!=''">
			and score.SCORE_PHASE_ID = #{scoreYear}
		</if>
		<if test="isHege!=null and isHege!=''">
			and score.theory_score = #{isHege}
		</if>
		<if test="skillIsHege!=null and skillIsHege!=''">
			<if test="skillIsHege=='Y'.toString()">
				and score.skill_score = '1'
			</if>
			<if test="skillIsHege=='N'.toString()">
				and score.skill_score = '0'
			</if>
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test=" trainYear!=null and trainYear!='' ">
			and dr.TRAIN_YEAR not in (#{trainYear})
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and dr.SPE_ID = #{trainingSpeId}
		</if>
		<if test="trainingYears!=null and trainingYears!=''">
			and dr.TRAIN_YEAR = #{trainingYears}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and ed.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="doctorLicenseFlag=='passed'">
			And ((nvl(score.THEROY_SCORE_PHASE_ID,0)-nvl(score.SKILL_SCORE_PHASE_ID,0)) > -5
			and (5 > nvl(score.THEROY_SCORE_PHASE_ID,0)-nvl(score.SKILL_SCORE_PHASE_ID,0)))
		</if>
		and ed.DOCTOR_TYPE_ID = 'Graduate'
		order by  org.org_code desc
	</select>
	
	<select id="searchCertificateNo" parameterType="string" resultType="map">
		SELECT A .graduation_year || '32' || b .training_spe_id ||
				(SELECT SUBSTR (org_code ,- 3, 3) FROM sys_ORG WHERE org_flow = (SELECT org_flow AS org_flow FROM sys_oRG o WHERE O.RECORD_STATUS = 'Y' AND NOT EXISTS ( SELECT 1 FROM REs_JOINT_ORG J WHERE J.RECORD_STATUS = 'Y' AND J.JOINT_ORG_FLOw = o.oRG_FLow ) AND org_flow = b.org_flow UNION SELECT ORG_FLow AS ORG_FLow FROM REs_JoINT_ORG WHERE RECORD_StaTUs = 'Y' AND joint_org_floW = b.org_flow ) )||
				LPAD(NVL(
					(SELECT COUNT(1) NUM FROM RES_DOCTOR_RECRUIT INFO WHERE INFO.RECORD_STATUS = 'Y'
					AND INFO.GRADUATION_YEAR = #{graduationYear}
					AND INFO.GRADUATION_CERTIFICATE_NO IS NOT NULL and info.org_flow = #{orgFlow}), 0)+1 ,3, '0'
				) certificate_number,
				'JS'|| LPAD(NVL(
						(SELECT COUNT(1) NUM FROM RES_DOCTOR_RECRUIT rdr
						WHERE rdr.RECORD_STATUS = 'Y'
						AND rdr.GRADUATION_CERTIFICATE_NO IS NOT NULL), 0)+1, 13, '0'
					) CERTIFICATE_FLOW
		FROM RES_DOCTOR_RECRUIT A
		LEFT JOIN res_doctor b ON A .doctor_flow = b.doctor_flow
		WHERE A .RECORD_STATUS = 'Y' AND b.RECORD_STATUS = 'Y'
		and recruit_flow = #{recruitFlow}
	</select>

	<select id="searchRecruitExtList"  parameterType="java.util.Map" resultMap="DoctorRecruit">
		SELECT
		DR.AUDITION_STATUS_ID,
		DR.AUDITION_STATUS_NAME,
		DR.OPER_STATUS_ID,
		DR.OPER_STATUS_NAME,
		DR.IN_JOINT_ORG_TRAIN,
		DR.JOINT_ORG_FLOW,
		DR.JOINT_ORG_NAME,
		DR.ROTATION_FLOW,
		DR.ROTATION_NAME,
		DR.SPECIAL_CERT_NO,
		DR.SPECIAL_FILE_URL,
		DR.AVG_COMPLETE,
		DR.AVG_AUDIT,
		DR.MATERIAL_ID,
		DR.PRACTICING_SCOPE_ID,
		DR.PRACTICING_SCOPE_NAME,
		DR.CERTIFICATE_URI,
		DR.QUALIFICATION_MATERIAL_URI,
		DR.SPECIAL_CERTIFICATION_URI,
		DR.QUALIFICATION_MATERIAL_CODE,
		DR.TYPE_ID,
		DR.REGISTE_MANUA,
		DR.RECRUIT_FLOW,
		DR.DOCTOR_FLOW,
		DR.ORG_FLOW,
		DR.SPE_ID,
		DR.SPE_NAME,
		DR.SWAP_FLAG,
		DR.RECRUIT_TYPE_ID,
		DR.RECRUIT_TYPE_NAME,
		DR.RECRUIT_YEAR,
		DR.RECRUIT_DATE,
		DR.RETEST_FLAG,
		DR.EXAM_RESULT,
		DR.AUDITION_RESULT,
		DR.OPER_RESULT,
		DR.TOTLE_RESULT,
		DR.ADMIT_FLAG,
		DR.RECRUIT_FLAG,
		DR.CONFIRM_FLAG,
		DR.SWAP_SPE_ID,
		DR.SWAP_SPE_NAME,
		DR.RECORD_STATUS,
		DR.CREATE_TIME,
		DR.CREATE_USER_FLOW,
		DR.MODIFY_TIME,
		DR.MODIFY_USER_FLOW,
		DR.RETEST_NOTICE,
		DR.ADMIT_NOTICE,
		DR.GLOBAL_NOTICE,
		DR.CAT_SPE_ID,
		DR.CAT_SPE_NAME,
		DR.SESSION_NUMBER,
		DR.TRAIN_YEAR,
		DR.YET_TRAIN_YEAR,
		DR.DOCTOR_STATUS_ID,
		DR.DOCTOR_STATUS_NAME,
		DR.DOCTOR_STRIKE_ID,
		DR.DOCTOR_STRIKE_NAME,
		DR.TRAIN_NO,
		DR.AUDIT_STATUS_ID,
		DR.AUDIT_STATUS_NAME,
		DR.PLACE_ID,
		DR.PLACE_NAME,
		DR.PROVE_FILE_URL,
		DR.COMPLETE_CERT_NO,
		DR.COMPLETE_FILE_URL,
		DR.CURR_DEGREE_CATEGORY_ID,
		DR.CURR_DEGREE_CATEGORY_NAME,
		DR.PROV_REMARK,
		DR.GRADUATION_YEAR,
		DR.ADMIN_SWAP_FLAG,
		DR.SECOND_SPE_ID,
		DR.SECOND_SPE_NAME,
		DR.GRADUATION_CERTIFICATE_NO,
		DR.CERTIFICATE_DATE,
		DR.GRADUATION_CERTIFICATE_TYPE,
		DR.CHANGE_SPE_ID,
		DR.CHANGE_SPE_NAME,
		DR.RETURN_BACK_FLAG,
		DR.RETURN_BACK_REMARK,
		DR.IS_SEND,
		DR.IS_CERT_SEND,
		DR.QUALIFIED_ID,
		DR.CERTIFICATE_ISSUING_STATUS,
		DR.WORK_UNIT,
		DR.WORK_UNIT_CODE,
		DR.ARMY_HOSPITAL,
		DR.EXAM_STATUS_ID,
		DR.EXAM_STATUS_NAME,
		DR.ORG_NAME,
		DR.IS_RETRAIN,
		DR.ORG_AUDIT,
		DR.JOINT_ORG_AUDIT,
		DR.SIGNUP_WAY,
		U.USER_FLOW,
		U.USER_CODE,
		U.USER_NAME,
		U.SEX_ID,
		U.SEX_NAME,
		U.USER_PHONE,
		U.USER_EMAIL,
		U.ID_NO,
		U.USER_BIRTHDAY,
		U.TITLE_ID,
		U.TITLE_NAME,
		U.DEGREE_ID,
		U.DEGREE_NAME,
		U.EDUCATION_ID,
		U.EDUCATION_NAME,
		U.POST_ID,
		U.POST_NAME,
		ED.ORG_FLOW AS EDORGFLOW,
		ED.ORG_NAME AS EDORGNAME,
		ED.DOCTOR_TYPE_NAME,
		ED.DOCTOR_TYPE_ID
		FROM
		RES_DOCTOR_RECRUIT DR
		LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U .USER_FLOW
		LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
		WHERE DR.RECORD_STATUS = 'Y'
		AND U .RECORD_STATUS = 'Y'
		AND NOT EXISTS (
			SELECT
			1
			FROM
			RES_DOCOTR_DELAY_TETURN T
			WHERE
			T.RECORD_STATUS = 'Y'
			AND T.TYPE_ID = 'ReturnTraining'
			AND T.AUDIT_STATUS_ID = '1'
			AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
			AND T.SESSION_NUMBER = DR.SESSION_NUMBER
			AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW
		)
		AND DR.AUDIT_STATUS_ID != 'NotSubmit'
		AND DR.ORG_FLOW IN (
			SELECT ORG_FLOW FROM SYS_ORG
			WHERE RECORD_STATUS = 'Y'
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
					AND ORG_PROV_ID = #{sysOrg.orgProvId}
				</if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
					AND ORG_CITY_ID = #{sysOrg.orgCityId}
				</if>
				<if test="sysOrg.orgLevelId!=null and sysOrg.orgLevelId!=''">
					AND ORG_LEVEL_ID = #{sysOrg.orgLevelId}
				</if>
				<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
					AND ORG_TYPE_ID = #{sysOrg.orgTypeId}
				</if>
			</if>
		)
		<if test="orgFlow!=null and orgFlow!=''">
			and dr.ORG_FLOW = #{orgFlow}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and dr.SESSION_NUMBER in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctorSignupFlag!=null and doctorSignupFlag!=''">
			and dr.signup_way = #{doctorSignupFlag}
		</if>
		and dr.audit_status_id = 'WaitGlobalPass'
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and dr.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and dr.SPE_ID = #{trainingSpeId}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and u.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and u.ID_NO like #{idNo}
		</if>
		<if test="sortType != null and sortType != ''">
			<if test="sortType == 'Interview'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.audition_result)) desc
			</if>
			<if test="sortType == 'Skill'">
				order by  to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
			<if test="sortType == 'Total'">
				order by  to_number(decode(dr.AUDITION_RESULT,null,'0',dr.AUDITION_RESULT))+ to_number(decode(dr.OPER_RESULT,null,'0',dr.OPER_RESULT)) desc
			</if>
		</if>
		<if test="sortType == null">
			order by dr.session_number desc,dr.org_flow,dr.spe_id,NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'), dr.doctor_flow,dr.CREATE_TIME desc
		</if>
	</select>

	<resultMap id="doctorDataMap" type="map">
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
		<result column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow"/>
		<result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone"/>
		<result column="ID_NO" jdbcType="VARCHAR" property="idNo"/>
		<result column="SESSION_NUMBER" jdbcType="VARCHAR" property="sessionNumber"/>
		<result column="SPE_ID" jdbcType="VARCHAR" property="speId"/>
		<result column="SPE_NAME" jdbcType="VARCHAR" property="speName"/>
		<result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId"/>
		<result column="DOCTOR_TYPE_NAME" jdbcType="VARCHAR" property="doctorTypeName"/>
		<result column="COMPLETE_NUM" jdbcType="VARCHAR" property="completeNum"/>
		<result column="REQ_NUM" jdbcType="VARCHAR" property="reqNum"/>
		<result column="GRADUATION_YEAR" jdbcType="VARCHAR" property="graduationYear"/>
	</resultMap>
	<select id="searchDoctorData" parameterType="map" resultMap="doctorDataMap">
		SELECT su.USER_NAME AS user_name, rdr.doctor_flow,su.user_phone,su.id_no,rdr.session_number,rdr.spe_id
           ,rdr.spe_name,dr.doctor_type_id,dr.doctor_type_name,NVL(COMP.COMPLETE_NUM,0) AS COMPLETE_NUM
           ,NVL((CASE WHEN rdr.cat_spe_id = 'DoctorTrainingSpe' AND rdr.session_number >= '2015'
                      AND (rdr.train_year = 'OneYear' OR rdr.train_year = 'TwoYear')
                      AND (SELECT COUNT(1)
                                FROM sch_doctor_dept sdd
                                WHERE sdd.record_status = 'Y'
                                  AND sdd.doctor_flow = rdr.doctor_flow
                                  AND sdd.rotation_flow = rdr.rotation_flow
                                  AND sdd.org_flow = rdr.org_flow) > 0
                   THEN SUM(NVL(ROUND((CASE WHEN NVL(SRD.SCH_MONTH, 0) = 0 THEN
                                           0
                                          ELSE
                                           NVL(SDD.SCH_MONTH, 0) / SRD.SCH_MONTH * REQ.REQ_NUM
                                        END),
                                        0),
                                  0))
                    ELSE SUM(REQ.REQ_NUM)
                    END), 0) AS REQ_NUM
		FROM  RES_DOCTOR_RECRUIT rdr
		INNER JOIN SYS_USER su ON rdr.DOCTOR_FLOW = su.USER_FLOW
		LEFT JOIN RES_DOCTOR dr ON dr.DOCTOR_FLOW = rdr.DOCTOR_FLOW
		LEFT JOIN SCH_ROTATION_DEPT SRD ON RDR.ROTATION_FLOW = SRD.ROTATION_FLOW
				   AND SRD.ORG_FLOW IS NULL
				   AND SRD.RECORD_STATUS = 'Y'
		LEFT JOIN SCH_ROTATION_DEPT_REQ REQ ON REQ.REL_RECORD_FLOW = SRD.RECORD_FLOW
				   AND REQ.RECORD_STATUS = 'Y'
				   AND REQ.REC_TYPE_ID IN
					   ('CaseRegistry',
						'DiseaseRegistry',
						'SkillRegistry',
						'OperationRegistry',
						'CampaignRegistry')
		LEFT JOIN SCH_DOCTOR_DEPT SDD ON SDD.GROUP_FLOW = SRD.GROUP_FLOW
				   AND SDD.STANDARD_DEPT_ID = SRD.STANDARD_DEPT_ID
				   AND SDD.ORG_FLOW = RDR.ORG_FLOW
				   AND SDD.DOCTOR_FLOW = RDR.DOCTOR_FLOW
				   AND SDD.RECORD_STATUS = 'Y'
		LEFT JOIN (SELECT COUNT(1) COMPLETE_NUM,
								   RR.OPER_USER_FLOW
							  FROM RES_REC rr
				   LEFT JOIN RES_DOCTOR_RECRUIT RDR ON RR.OPER_USER_FLOW = RDR.DOCTOR_FLOW
				   INNER JOIN SCH_ROTATION_DEPT srd ON RDR.ROTATION_FLOW = srd.ROTATION_FLOW
					   AND SRD.ORG_FLOW IS NULL
					   and SRD.RECORD_STATUS = 'Y'
					   AND rr.SCH_ROTATION_DEPT_FLOW = srd.RECORD_FLOW
				   WHERE rr.RECORD_STATUS = 'Y'
				   AND srd.RECORD_STATUS = 'Y'
				   AND RDR.RECORD_STATUS = 'Y'
				   and RR.REC_TYPE_ID in('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
				   GROUP BY  RR.OPER_USER_FLOW) COMP ON COMP.OPER_USER_FLOW = RDR.DOCTOR_FLOW
		WHERE dr.RECORD_STATUS = 'Y'
		  AND su.RECORD_STATUS = 'Y'
		  AND rdr.record_status = 'Y'
		  AND rdr.AUDIT_STATUS_ID = 'Passed'
		  and RDR.DOCTOR_STATUS_ID = '20'
		  and rdr.org_flow in (
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="searchOrg!=null">
				<if test="searchOrg.orgProvId!=null and searchOrg.orgProvId!=''">
					AND ORG_PROV_ID = #{searchOrg.orgProvId}
				</if>
				<if test="searchOrg.orgCityId!=null and searchOrg.orgCityId!=''">
					AND ORG_CITY_ID = #{searchOrg.orgCityId}
				</if>
				<if test="searchOrg.orgTypeId!=null and searchOrg.orgTypeId!=''">
					AND ORG_TYPE_ID = #{searchOrg.orgTypeId}
				</if>
			</if>
		  )
		<if test="docTypeList!=null and docTypeList.size>0">
			AND dr.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
		      AND rdr.org_flow = #{orgFlow}
		</if>
		<if test="idNo!=null and idNo!=''">
			AND su.id_no = #{idNo}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and su.USER_NAME like #{userName}
		</if>
		<if test="speId!=null and speId!=''">
			AND rdr.spe_id = #{speId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			AND rdr.session_number = #{sessionNumber}
		</if>
		group by su.USER_NAME ,rdr.doctor_flow,su.user_phone,su.id_no,rdr.session_number,rdr.spe_id
			   ,rdr.spe_name,dr.doctor_type_id,dr.doctor_type_name ,rdr.cat_spe_id,rdr.train_year
			   ,RDR.ROTATION_FLOW,RDR.ORG_FLOW,COMP.COMPLETE_NUM
		ORDER BY RDR.SESSION_NUMBER DESC, RDR.SPE_ID
	</select>

	<select id="searchDoctorDataNew" parameterType="map" resultMap="doctorDataMap">
		SELECT * from DOCTOR_DATA
		where org_flow in (
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="searchOrg!=null">
			<if test="searchOrg.orgProvId!=null and searchOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{searchOrg.orgProvId}
			</if>
			<if test="searchOrg.orgCityId!=null and searchOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{searchOrg.orgCityId}
			</if>
			<if test="searchOrg.orgTypeId!=null and searchOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{searchOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			AND DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			AND org_flow = #{orgFlow}
		</if>
		<if test="idNo!=null and idNo!=''">
			AND id_no = #{idNo}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and USER_NAME like #{userName}
		</if>
		<if test="speId!=null and speId!=''">
			AND spe_id = #{speId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			AND session_number = #{sessionNumber}
		</if>
		ORDER BY SESSION_NUMBER DESC
	</select>

	<select id="searchDoctorDataNew2" parameterType="map" resultMap="doctorDataMap">
		SELECT d.*, RD.GRADUATION_YEAR AS GRADUATION_YEAR from DOCTOR_DATA D
		LEFT JOIN RES_DOCTOR R ON D.DOCTOR_FLOW=R.DOCTOR_FLOW
		LEFT JOIN RES_DOCTOR_RECRUIT RD ON D.DOCTOR_FLOW=RD.DOCTOR_FLOW
		where D.org_flow in (
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		<if test="searchOrg!=null">
			<if test="searchOrg.orgProvId!=null and searchOrg.orgProvId!=''">
				AND ORG_PROV_ID = #{searchOrg.orgProvId}
			</if>
			<if test="searchOrg.orgCityId!=null and searchOrg.orgCityId!=''">
				AND ORG_CITY_ID = #{searchOrg.orgCityId}
			</if>
			<if test="searchOrg.orgTypeId!=null and searchOrg.orgTypeId!=''">
				AND ORG_TYPE_ID = #{searchOrg.orgTypeId}
			</if>
		</if>
		)
		<if test="docTypeList!=null and docTypeList.size>0">
			AND D. DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			AND D. org_flow = #{orgFlow}
		</if>
		<if test="idNo!=null and idNo!=''">
			AND D. id_no = #{idNo}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and D. USER_NAME like #{userName}
		</if>
		<if test="speId!=null and speId!=''">
			AND D. spe_id = #{speId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			AND D. session_number = #{sessionNumber}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			AND R.TRAINING_TYPE_ID = #{trainingTypeId}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			AND RD.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="fillInPercentLow!=null and fillInPercentLow!=''">
			AND (D.COMPLETE_NUM/(D.REQ_NUM + 0.01)) <![CDATA[>=]]> #{fillInPercentLow}
		</if>
		<if test="fillInPercentHigh!=null and fillInPercentHigh!=''">
			AND (CASE WHEN ((D.COMPLETE_NUM/(D.REQ_NUM + 0.01)) <![CDATA[>]]> 1) THEN 1 ELSE (D.COMPLETE_NUM/(D.REQ_NUM + 0.01)) END) <![CDATA[ <= ]]> #{fillInPercentHigh}
		</if>
		ORDER BY D. SESSION_NUMBER DESC
	</select>

	<insert id="autoAddData">
		INSERT INTO DOCTOR_DATA(USER_NAME, DOCTOR_FLOW, USER_PHONE, ID_NO, ORG_FLOW, SESSION_NUMBER,SPE_ID, SPE_NAME, DOCTOR_TYPE_ID, DOCTOR_TYPE_NAME, COMPLETE_NUM, REQ_NUM)
			SELECT su.USER_NAME AS user_name, rdr.doctor_flow,su.user_phone,su.id_no,RDR.ORG_FLOW,rdr.session_number,rdr.spe_id
           ,rdr.spe_name,dr.doctor_type_id,dr.doctor_type_name,NVL(COMP.COMPLETE_NUM,0) AS COMPLETE_NUM
           ,NVL((CASE WHEN rdr.cat_spe_id = 'DoctorTrainingSpe' AND rdr.session_number >= '2015'
                      AND (rdr.train_year = 'OneYear' OR rdr.train_year = 'TwoYear')
                      AND (SELECT COUNT(1)
                                FROM sch_doctor_dept sdd
                                WHERE sdd.record_status = 'Y'
                                  AND sdd.doctor_flow = rdr.doctor_flow
                                  AND sdd.rotation_flow = rdr.rotation_flow
                                  AND sdd.org_flow = rdr.org_flow) > 0
                   THEN SUM(NVL(ROUND((CASE WHEN NVL(SRD.SCH_MONTH, 0) = 0 THEN
                                           0
                                          ELSE
                                           NVL(SDD.SCH_MONTH, 0) / SRD.SCH_MONTH * REQ.REQ_NUM
                                        END),
                                        0),
                                  0))
                    ELSE SUM(REQ.REQ_NUM)
                    END), 0) AS REQ_NUM
		FROM  RES_DOCTOR_RECRUIT rdr
		INNER JOIN SYS_USER su ON rdr.DOCTOR_FLOW = su.USER_FLOW
		LEFT JOIN RES_DOCTOR dr ON dr.DOCTOR_FLOW = rdr.DOCTOR_FLOW
		LEFT JOIN SCH_ROTATION_DEPT SRD ON RDR.ROTATION_FLOW = SRD.ROTATION_FLOW
				   AND SRD.ORG_FLOW IS NULL
				   AND SRD.RECORD_STATUS = 'Y'
		LEFT JOIN SCH_ROTATION_DEPT_REQ REQ ON REQ.REL_RECORD_FLOW = SRD.RECORD_FLOW
				   AND REQ.RECORD_STATUS = 'Y'
				   AND REQ.REC_TYPE_ID IN
					   ('CaseRegistry',
						'DiseaseRegistry',
						'SkillRegistry',
						'OperationRegistry',
						'CampaignRegistry')
		LEFT JOIN SCH_DOCTOR_DEPT SDD ON SDD.GROUP_FLOW = SRD.GROUP_FLOW
				   AND SDD.STANDARD_DEPT_ID = SRD.STANDARD_DEPT_ID
				   AND SDD.ORG_FLOW = RDR.ORG_FLOW
				   AND SDD.DOCTOR_FLOW = RDR.DOCTOR_FLOW
				   AND SDD.RECORD_STATUS = 'Y'
		LEFT JOIN (SELECT COUNT(1) COMPLETE_NUM,
								   RR.OPER_USER_FLOW
							  FROM RES_REC rr
				   LEFT JOIN RES_DOCTOR_RECRUIT RDR ON RR.OPER_USER_FLOW = RDR.DOCTOR_FLOW
				   INNER JOIN SCH_ROTATION_DEPT srd ON RDR.ROTATION_FLOW = srd.ROTATION_FLOW
					   AND SRD.ORG_FLOW IS NULL
					   and SRD.RECORD_STATUS = 'Y'
					   AND rr.SCH_ROTATION_DEPT_FLOW = srd.RECORD_FLOW
				   WHERE rr.RECORD_STATUS = 'Y'
				   AND srd.RECORD_STATUS = 'Y'
				   AND RDR.RECORD_STATUS = 'Y'
				   and RR.REC_TYPE_ID in('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
				   GROUP BY  RR.OPER_USER_FLOW) COMP ON COMP.OPER_USER_FLOW = RDR.DOCTOR_FLOW
		WHERE dr.RECORD_STATUS = 'Y'
		  AND su.RECORD_STATUS = 'Y'
		  AND rdr.record_status = 'Y'
		  AND rdr.AUDIT_STATUS_ID = 'Passed'
		  and RDR.DOCTOR_STATUS_ID = '20'
		  and rdr.org_flow in (
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
		  )
		group by su.USER_NAME ,rdr.doctor_flow,su.user_phone,su.id_no,rdr.session_number,rdr.spe_id
			   ,rdr.spe_name,dr.doctor_type_id,dr.doctor_type_name ,rdr.cat_spe_id,rdr.train_year
			   ,RDR.ROTATION_FLOW,RDR.ORG_FLOW,COMP.COMPLETE_NUM
		ORDER BY RDR.SESSION_NUMBER DESC, RDR.SPE_ID
	</insert>

	<delete id="delData">
		delete from DOCTOR_DATA
	</delete>

	<select id="searchTeacherUserList" parameterType="map" resultType="map">
		SELECT su.user_flow,su.user_name,su.org_flow,su.org_name,su.dept_flow,su.dept_name
		FROM PDSCI.SYS_USER su
		WHERE RECORD_STATUS = 'Y'
			AND NOT EXISTS (SELECT NULL
				FROM res_doctor rd
				WHERE su.user_flow = rd.doctor_flow
					AND rd.RECORD_STATUS = 'Y')
			AND EXISTS (SELECT NULL
				FROM SYS_USER_ROLE sur
				WHERE sur.RECORD_STATUS = 'Y'
					AND su.USER_FLOW = sur.USER_FLOW
					AND sur.ROLE_FLOW = #{roleFlow})
		AND su.org_flow in (
			SELECT ORG_FLOW
			FROM PDSCI.SYS_ORG
			WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'
			<if test="searchOrg!=null">
				<if test="searchOrg.orgProvId!=null and searchOrg.orgProvId!=''">
					AND ORG_PROV_ID = #{searchOrg.orgProvId}
				</if>
				<if test="searchOrg.orgCityId!=null and searchOrg.orgCityId!=''">
					AND ORG_CITY_ID = #{searchOrg.orgCityId}
				</if>
				<if test="searchOrg.orgTypeId!=null and searchOrg.orgTypeId!=''">
					AND ORG_TYPE_ID = #{searchOrg.orgTypeId}
				</if>
			</if>
		)
		<if test="orgFlow!=null and orgFlow!=''">
			AND su.org_flow = #{orgFlow}
		</if>
		<if test="deptFlow!=null and deptFlow!=''">
			AND su.dept_flow = #{deptFlow}
		</if>
		<if test="teacherName!=null and teacherName!=''">
			<bind name="teacherName" value="'%'+teacherName+'%'"/>
			and su.USER_NAME like #{teacherName}
		</if>
		ORDER BY SU.DEPT_FLOW
	</select>

	<select id="searchTeacherAuditList" parameterType="map" resultType="map">
		select
			  count(case when audit_status_id is null then 1 else null end) AS not_audited,
			  count(case when audit_status_id is not null then 1 else null end) as is_audited,
			  p.TEACHER_USER_FLOW
        from RES_REC rr
        join res_doctor_sch_process p on rr.process_flow=p.process_flow
		inner join (select * from (
		<foreach collection="teacherFlows" item="partsNo" separator="union">
			SELECT #{partsNo,jdbcType=VARCHAR} TEACHER_USER_FLOW FROM DUAL
		</foreach>))T1 on p.TEACHER_USER_FLOW = T1.TEACHER_USER_FLOW
    	join res_doctor rd on rr.oper_user_flow = rd.doctor_flow
    	where rr.RECORD_STATUS = 'Y'
    	and rr.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
		and p.record_status='Y'
		and rd.record_status='Y'
		group by p.TEACHER_USER_FLOW
	</select>

	<select id="jsresDoctorWorkPro" statementType="CALLABLE" parameterType="java.lang.String">
        {call JSRES_DOCTOR_WORK_PRO}
    </select>

	<select id="countTrainingDoctor" resultType="map" parameterType="map">
		SELECT
		    <if test='orgGroup == "Y"'>
				dr.org_flow,
			</if>
		    dr.spe_id speId, count(1) trainingCount
		FROM RES_DOCTOR_RECRUIT DR
				 LEFT JOIN PDSCI.SYS_USER U ON DR.DOCTOR_FLOW = U.USER_FLOW
				 LEFT JOIN RES_DOCTOR ED ON DR.DOCTOR_FLOW = ED.DOCTOR_FLOW
		WHERE DR.RECORD_STATUS = 'Y'
		  AND U.RECORD_STATUS = 'Y'
		  AND NOT EXISTS (SELECT 1
						  FROM RES_DOCOTR_DELAY_TETURN T
						  WHERE T.RECORD_STATUS = 'Y'
							AND T.TYPE_ID = 'ReturnTraining'
							AND T.AUDIT_STATUS_ID = '1'
							AND T.RECRUIT_FLOW = DR.RECRUIT_FLOW
							AND T.SESSION_NUMBER = DR.SESSION_NUMBER
							AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
		  AND DR.AUDIT_STATUS_ID != 'NotSubmit'
		AND EXISTS (SELECT 1
			FROM SYS_ORG O
			WHERE O.RECORD_STATUS = 'Y'
				AND O.ORG_FLOW = DR.ORG_FLOW
				AND ORG_PROV_ID = '320000'
				AND ORG_TYPE_ID = 'Hospital')
		AND dr.AUDIT_STATUS_ID = 'Passed'

		<if test="doctorStatusId != null and doctorStatusId != ''">
			AND dr.doctor_Status_Id = #{doctorStatusId}
		</if>

		<if test="trainYearList != null and trainYearList.size() > 0">

			AND dr.TRAIN_YEAR IN
			<foreach collection="trainYearList" item="trainYear" open="(" close=")" separator=",">
				#{trainYear}
			</foreach>
		</if>

		<if test="docTypeList != null and docTypeList.size() > 0">
			AND ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" item="docType" open="(" close=")" separator=",">
				#{docType}
			</foreach>
		</if>

		<if test="orgFlowList != null and orgFlowList.size() > 0">
			and dr.ORG_FLOW in
			<foreach collection="orgFlowList" item="orgFlow" open="(" close=")" separator=",">
				#{orgFlow}
			</foreach>
		</if>

		<if test="speIdList != null and speIdList.size() > 0">
			and dr.spe_id in
			<foreach collection="speIdList" item="speId" open="(" close=")" separator=",">
				#{speId}
			</foreach>
		</if>

		group by
		<if test='orgGroup == "Y"'>
			dr.org_flow,
		</if>
		    dr.spe_id
    </select>
</mapper>
