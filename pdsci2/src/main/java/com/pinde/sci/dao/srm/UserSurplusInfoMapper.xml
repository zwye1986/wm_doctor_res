<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.srm.UserSurplusInfoMapper">
    <resultMap id="BaseResultMap" type="com.pinde.sci.model.srm.UserSurplusInfo">
        <result column="userFlow" jdbcType="VARCHAR" property="userFlow"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="deptName" jdbcType="VARCHAR" property="deptName"/>
        <result column="accountNo" jdbcType="VARCHAR" property="accountNo"/>
        <result column="projCount" jdbcType="INTEGER" property="projCount"/>
        <result column="budgetAmount" jdbcType="DECIMAL" property="budgetAmount"/>
        <result column="realityAmount" jdbcType="DECIMAL" property="realityAmount"/>
        <result column="yetPaymentAmount" jdbcType="DECIMAL" property="yetPaymentAmount"/>
        <result column="realityBalance" jdbcType="DECIMAL" property="realityBalance"/>
    </resultMap>
    <resultMap type="com.pinde.sci.model.srm.PubProjExt" id="ProjFundInfoResultMap" extends="com.pinde.sci.dao.base.PubProjMapper.BaseResultMap">
        <association property="projFundInfo" column="fundFlow" resultMap="com.pinde.sci.dao.base.SrmProjFundInfoMapper.BaseResultMap"></association>
        <association property="user" column="userFlow" resultMap="com.pinde.sci.dao.base.SysUserMapper.BaseResultMap"></association>
    </resultMap>
    <resultMap type="com.pinde.sci.model.srm.PersonalFundInfoExt" id="PersonalFundInfoExtMap"
               extends="com.pinde.sci.dao.base.SrmProjFundInfoMapper.BaseResultMap">
        <association property="sysUser" column="USER_FLOW"
                     resultMap="com.pinde.sci.dao.base.SysUserMapper.BaseResultMap"></association>
    </resultMap>
    <select id="surplusInfoList" parameterType="java.util.Map" resultMap="BaseResultMap">
        select su.user_flow userFlow,max(su.user_name) userName,max(su.dept_name) deptName,max(su.ACCOUNT_NO) accountNo,
        count(pp.proj_flow) projCount,sum(spfi.budget_amount) budgetAmount,
        sum(spfi.reality_amount) realityAmount,sum(spfi.yet_payment_amount) yetPaymentAmount,sum(spfi.reality_balance)
        realityBalance
        from sys_user su,pub_proj pp,srm_proj_fund_info spfi
        where su.record_status = 'Y'
        and pp.record_status = 'Y'
        and spfi.record_status = 'Y'
        and su.user_flow = pp.apply_user_flow
        and pp.proj_flow = spfi.proj_flow
        and pp.proj_stage_id = 'Archive'
        and pp.proj_status_id = 'Archive'
        <if test='deptFlow!=null and deptFlow!=""'>
            AND su.dept_flow=#{deptFlow}
        </if>
        <if test='userName!=null and userName!=""'>
            AND su.user_name like '%${userName}%'
        </if>
        and (spfi.budget_status_id = 'FirstAudit' or spfi.budget_status_id = 'SecondAudit')
        group by su.user_flow
    </select>

    <select id="surplusProjInfoList" parameterType="com.pinde.sci.model.srm.PubProjExt" resultMap="ProjFundInfoResultMap">
        SELECT pp.*,SPFI.FUND_FLOW,SPFI.PROJ_SOURCE_ID, SPFI.PROJ_SOURCE_NAME, SPFI.BUDGET_STATUS_ID,
        SPFI.BUDGET_STATUS_NAME, SPFI.DEPT_FLOW, SPFI.AMOUNT_FUND, SPFI.GOVE_FUND, SPFI.ORG_FUND,
        SPFI.BUDGET_AMOUNT, SPFI.SCHEME_FLOW,SPFI.REALITY_AMOUNT, SPFI.YET_PAYMENT_AMOUNT, SPFI.REALITY_BALANCE,
        SPFI.REALITY_GOVE_AMOUNT, SPFI.REALITY_ORG_AMOUNT,SPFI.SURPLUS_FUND,
        SPFI.FUND_INCOME_TIME,SPFI.BUDGET_GOVE, SPFI.BUDGET_ORG, SPFI.YET_PAYMENT_GOVE, SPFI.YET_PAYMENT_ORG
        FROM PDSCI.PUB_PROJ PP , PDSCI.SRM_PROJ_FUND_INFO SPFI  WHERE PP.PROJ_FLOW=SPFI.PROJ_FLOW AND  PP.RECORD_STATUS='Y' AND SPFI.RECORD_STATUS='Y'
        and pp.proj_stage_id = 'Archive'
        and pp.proj_status_id = 'Archive'
        and spfi.budget_status_id = 'FirstAudit'
        <if test='projFlow!=null and projFlow!=""'>
            AND PP.PROJ_FLOW=#{projFlow}
        </if>
        <if test='projDeclarerFlow!=null and projDeclarerFlow!=""'>
            and PP.PROJ_DECLARER_FLOW = '${projDeclarerFlow}'
        </if>
        <if test='projSecondSourceId!=null and projSecondSourceId!=""'>
            and PP.PROJ_SECOND_SOURCE_ID = '${projSecondSourceId}'
        </if>
        <if test='projCategoryId!=null and projCategoryId!=""'>
            AND PP.Proj_Category_Id = '${projCategoryId}'
        </if>
        <if test='projTypeId!=null and projTypeId!=""'>
            AND PP.PROJ_TYPE_ID = '${projTypeId}'
        </if>
        <if test='accountNo!=null and accountNo!=""'>
            and PP.account_No like '%${accountNo}%'
        </if>
        <if test='projNo!=null and projNo!=""'>
            and PP.PROJ_NO like '%${projNo}%'
        </if>
        <if test='applyUserFlow!=null and applyUserFlow!=""'>
            AND PP.APPLY_USER_FLOW = '${applyUserFlow}'
        </if>
        <if test='projName!=null and projName!=""'>
            AND PP.PROJ_NAME LIKE '%${projName}%'
        </if>
        <if test='applyUserName!=null and applyUserName!=""'>
            AND PP.APPLY_USER_NAME LIKE '%${applyUserName}%'
        </if>
        <if test='applyOrgFlow!=null and applyOrgFlow!=""'>
            AND PP.APPLY_ORG_FLOW = '${applyOrgFlow}'
        </if>
        <if test='applyDeptFlow!=null and applyDeptFlow!=""'>
            AND PP.APPLY_DEPT_FLOW = '${applyDeptFlow}'
        </if>

        ORDER BY PP.proj_year DESC
    </select>


    <select id="personalFundList" parameterType="java.util.Map" resultMap="PersonalFundInfoExtMap">
        select su.user_flow,su.user_name,su.dept_flow,su.dept_name,su.account_no,
        a.FUND_FLOW,a.REALITY_AMOUNT,a.YET_PAYMENT_AMOUNT,a.REALITY_BALANCE,a.PROJ_FLOW
        from srm_proj_fund_info a , sys_user su where a.proj_flow = su.user_flow
        and a.record_status = 'Y'
        and su.record_status = 'Y'
        <if test='orgFlow!=null and orgFlow!=""'>
            and su.org_flow = #{orgFlow}
        </if>
        <if test='deptFlow!=null and deptFlow!=""'>
            AND su.dept_flow=#{deptFlow}
        </if>
        <if test='accountNo!=null and accountNo!=""'>
            AND a.account_no LIKE '%${accountNo}%'
        </if>
        <if test='accountTypeId!=null and accountTypeId!=""'>
            AND a.account_type_id=#{accountTypeId}
        </if>
        <if test='userName!=null and userName!=""'>
            AND su.user_name like '%${userName}%'
        </if>
        order by a.create_time desc
    </select>

</mapper>