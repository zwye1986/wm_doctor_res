<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ResLectureEvaDetailMapper" >
    <resultMap id="BaseResultMap" type="com.pinde.core.model.ResLectureEvaDetail">
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="LECTURE_FLOW" property="lectureFlow" jdbcType="VARCHAR" />
    <result column="OPER_USER_FLOW" property="operUserFlow" jdbcType="VARCHAR" />
    <result column="OPER_USER_NAME" property="operUserName" jdbcType="VARCHAR" />
    <result column="EVA_CONTENT" property="evaContent" jdbcType="VARCHAR" />
    <result column="EVA_SCORE" property="evaScore" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="EVAL_FORM_SCORE" property="evalFormScore" jdbcType="VARCHAR" />
    <result column="FILE_FLOW" property="fileFlow" jdbcType="VARCHAR" />
    <result column="SCAN_REGIST_FLOW" property="scanRegistFlow" jdbcType="VARCHAR" />
    <result column="TARGET_FLOW" property="targetFlow" jdbcType="VARCHAR" />
    <result column="TARGET_NAME" property="targetName" jdbcType="VARCHAR" />
    <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
  </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.pinde.core.model.ResLectureEvaDetail" extends="BaseResultMap">
    <result column="EVAL_FORM_CONTENT" property="evalFormContent" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, LECTURE_FLOW, OPER_USER_FLOW, OPER_USER_NAME, EVA_CONTENT, EVA_SCORE, 
    RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, EVAL_FORM_SCORE, 
    FILE_FLOW, SCAN_REGIST_FLOW, TARGET_FLOW, TARGET_NAME, ORDINAL
  </sql>
  <sql id="Blob_Column_List" >
    EVAL_FORM_CONTENT
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.pinde.core.model.ResLectureEvaDetailExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from RES_LECTURE_EVA_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.pinde.core.model.ResLectureEvaDetailExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
      from RES_LECTURE_EVA_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from RES_LECTURE_EVA_DETAIL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
      delete from RES_LECTURE_EVA_DETAIL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.pinde.core.model.ResLectureEvaDetailExample">
      delete from RES_LECTURE_EVA_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.pinde.core.model.ResLectureEvaDetail">
      insert into RES_LECTURE_EVA_DETAIL (RECORD_FLOW, LECTURE_FLOW, OPER_USER_FLOW,
      OPER_USER_NAME, EVA_CONTENT, EVA_SCORE, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW, EVAL_FORM_SCORE, 
      FILE_FLOW, SCAN_REGIST_FLOW, TARGET_FLOW, 
      TARGET_NAME, ORDINAL, EVAL_FORM_CONTENT
      )
    values (#{recordFlow,jdbcType=VARCHAR}, #{lectureFlow,jdbcType=VARCHAR}, #{operUserFlow,jdbcType=VARCHAR}, 
      #{operUserName,jdbcType=VARCHAR}, #{evaContent,jdbcType=VARCHAR}, #{evaScore,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, #{evalFormScore,jdbcType=VARCHAR}, 
      #{fileFlow,jdbcType=VARCHAR}, #{scanRegistFlow,jdbcType=VARCHAR}, #{targetFlow,jdbcType=VARCHAR}, 
      #{targetName,jdbcType=VARCHAR}, #{ordinal,jdbcType=DECIMAL}, #{evalFormContent,jdbcType=CLOB}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.pinde.core.model.ResLectureEvaDetail">
      insert into RES_LECTURE_EVA_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="lectureFlow != null" >
        LECTURE_FLOW,
      </if>
      <if test="operUserFlow != null" >
        OPER_USER_FLOW,
      </if>
      <if test="operUserName != null" >
        OPER_USER_NAME,
      </if>
      <if test="evaContent != null" >
        EVA_CONTENT,
      </if>
      <if test="evaScore != null" >
        EVA_SCORE,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="evalFormScore != null" >
        EVAL_FORM_SCORE,
      </if>
      <if test="fileFlow != null" >
        FILE_FLOW,
      </if>
      <if test="scanRegistFlow != null" >
        SCAN_REGIST_FLOW,
      </if>
      <if test="targetFlow != null" >
        TARGET_FLOW,
      </if>
      <if test="targetName != null" >
        TARGET_NAME,
      </if>
      <if test="ordinal != null" >
        ORDINAL,
      </if>
      <if test="evalFormContent != null" >
        EVAL_FORM_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureFlow != null" >
        #{lectureFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserFlow != null" >
        #{operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserName != null" >
        #{operUserName,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null" >
        #{evaContent,jdbcType=VARCHAR},
      </if>
      <if test="evaScore != null" >
        #{evaScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="evalFormScore != null" >
        #{evalFormScore,jdbcType=VARCHAR},
      </if>
      <if test="fileFlow != null" >
        #{fileFlow,jdbcType=VARCHAR},
      </if>
      <if test="scanRegistFlow != null" >
        #{scanRegistFlow,jdbcType=VARCHAR},
      </if>
      <if test="targetFlow != null" >
        #{targetFlow,jdbcType=VARCHAR},
      </if>
      <if test="targetName != null" >
        #{targetName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="evalFormContent != null" >
        #{evalFormContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.pinde.core.model.ResLectureEvaDetailExample"
            resultType="java.lang.Integer">
      select count(*) from RES_LECTURE_EVA_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
      update RES_LECTURE_EVA_DETAIL
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureFlow != null" >
        LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.operUserFlow != null" >
        OPER_USER_FLOW = #{record.operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.operUserName != null" >
        OPER_USER_NAME = #{record.operUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.evaContent != null" >
        EVA_CONTENT = #{record.evaContent,jdbcType=VARCHAR},
      </if>
      <if test="record.evaScore != null" >
        EVA_SCORE = #{record.evaScore,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.evalFormScore != null" >
        EVAL_FORM_SCORE = #{record.evalFormScore,jdbcType=VARCHAR},
      </if>
      <if test="record.fileFlow != null" >
        FILE_FLOW = #{record.fileFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.scanRegistFlow != null" >
        SCAN_REGIST_FLOW = #{record.scanRegistFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.targetFlow != null" >
        TARGET_FLOW = #{record.targetFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.targetName != null" >
        TARGET_NAME = #{record.targetName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordinal != null" >
        ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      </if>
      <if test="record.evalFormContent != null" >
        EVAL_FORM_CONTENT = #{record.evalFormContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
      update RES_LECTURE_EVA_DETAIL
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{record.operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{record.operUserName,jdbcType=VARCHAR},
      EVA_CONTENT = #{record.evaContent,jdbcType=VARCHAR},
      EVA_SCORE = #{record.evaScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      EVAL_FORM_SCORE = #{record.evalFormScore,jdbcType=VARCHAR},
      FILE_FLOW = #{record.fileFlow,jdbcType=VARCHAR},
      SCAN_REGIST_FLOW = #{record.scanRegistFlow,jdbcType=VARCHAR},
      TARGET_FLOW = #{record.targetFlow,jdbcType=VARCHAR},
      TARGET_NAME = #{record.targetName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL},
      EVAL_FORM_CONTENT = #{record.evalFormContent,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
      update RES_LECTURE_EVA_DETAIL
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{record.operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{record.operUserName,jdbcType=VARCHAR},
      EVA_CONTENT = #{record.evaContent,jdbcType=VARCHAR},
      EVA_SCORE = #{record.evaScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      EVAL_FORM_SCORE = #{record.evalFormScore,jdbcType=VARCHAR},
      FILE_FLOW = #{record.fileFlow,jdbcType=VARCHAR},
      SCAN_REGIST_FLOW = #{record.scanRegistFlow,jdbcType=VARCHAR},
      TARGET_FLOW = #{record.targetFlow,jdbcType=VARCHAR},
      TARGET_NAME = #{record.targetName,jdbcType=VARCHAR},
      ORDINAL = #{record.ordinal,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.ResLectureEvaDetail">
      update RES_LECTURE_EVA_DETAIL
    <set >
      <if test="lectureFlow != null" >
        LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserFlow != null" >
        OPER_USER_FLOW = #{operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserName != null" >
        OPER_USER_NAME = #{operUserName,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null" >
        EVA_CONTENT = #{evaContent,jdbcType=VARCHAR},
      </if>
      <if test="evaScore != null" >
        EVA_SCORE = #{evaScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="evalFormScore != null" >
        EVAL_FORM_SCORE = #{evalFormScore,jdbcType=VARCHAR},
      </if>
      <if test="fileFlow != null" >
        FILE_FLOW = #{fileFlow,jdbcType=VARCHAR},
      </if>
      <if test="scanRegistFlow != null" >
        SCAN_REGIST_FLOW = #{scanRegistFlow,jdbcType=VARCHAR},
      </if>
      <if test="targetFlow != null" >
        TARGET_FLOW = #{targetFlow,jdbcType=VARCHAR},
      </if>
      <if test="targetName != null" >
        TARGET_NAME = #{targetName,jdbcType=VARCHAR},
      </if>
      <if test="ordinal != null" >
        ORDINAL = #{ordinal,jdbcType=DECIMAL},
      </if>
      <if test="evalFormContent != null" >
        EVAL_FORM_CONTENT = #{evalFormContent,jdbcType=CLOB},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.core.model.ResLectureEvaDetail">
      update RES_LECTURE_EVA_DETAIL
    set LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{operUserName,jdbcType=VARCHAR},
      EVA_CONTENT = #{evaContent,jdbcType=VARCHAR},
      EVA_SCORE = #{evaScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      EVAL_FORM_SCORE = #{evalFormScore,jdbcType=VARCHAR},
      FILE_FLOW = #{fileFlow,jdbcType=VARCHAR},
      SCAN_REGIST_FLOW = #{scanRegistFlow,jdbcType=VARCHAR},
      TARGET_FLOW = #{targetFlow,jdbcType=VARCHAR},
      TARGET_NAME = #{targetName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL},
      EVAL_FORM_CONTENT = #{evalFormContent,jdbcType=CLOB}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.ResLectureEvaDetail">
      update RES_LECTURE_EVA_DETAIL
    set LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{operUserName,jdbcType=VARCHAR},
      EVA_CONTENT = #{evaContent,jdbcType=VARCHAR},
      EVA_SCORE = #{evaScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      EVAL_FORM_SCORE = #{evalFormScore,jdbcType=VARCHAR},
      FILE_FLOW = #{fileFlow,jdbcType=VARCHAR},
      SCAN_REGIST_FLOW = #{scanRegistFlow,jdbcType=VARCHAR},
      TARGET_FLOW = #{targetFlow,jdbcType=VARCHAR},
      TARGET_NAME = #{targetName,jdbcType=VARCHAR},
      ORDINAL = #{ordinal,jdbcType=DECIMAL}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>