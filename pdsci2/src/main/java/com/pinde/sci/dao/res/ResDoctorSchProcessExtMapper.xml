<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.res.ResDoctorSchProcessExtMapper" >
	<resultMap type="HashMap" id="processCountMap">
		<result  property="key" column="USER_FLOW" javaType="string"/>
		<result property="value" column="PROCESS_COUNT" javaType="java.math.BigDecimal"/>
	</resultMap>
	<resultMap type="HashMap" id="processResRecShMap">
		<result property="processFlow" column="PROCESS_FLOW" javaType="string"/>
		<result property="userFlow" column="USER_FLOW" javaType="string"/>
		<result property="userName" column="USER_NAME" javaType="string"/>
		<result property="content" column="REC_CONTENT" javaType="string"/>
	</resultMap>
	<update id="delProcessByResultFlow" >
		UPDATE res_doctor_sch_process set record_status='N'
		where record_status='Y'
		and sch_result_flow=#{resultFlow}
	</update>
	<select id="checkProcessEval" resultType="Integer">
		select count(1)
		  from res_doctor_sch_process rdsp
		 where record_status = 'Y'
		and process_flow=#{processFlow}
		   and MONTHS_BETWEEN(to_date(substr(sch_end_date, 0, 7), 'yyyy-MM'),
							  to_date(substr(sch_start_date, 0, 7), 'yyyy-MM')) + 1 <![CDATA[>]]>
			   (select count(1)
				  from RES_DOCTOR_SCH_PROCESS_EVAL eval
				 where eval.process_flow = rdsp.process_flow
				   and eval.record_status = 'Y')
	</select>
	<select id="processRecShMap" resultMap="processResRecShMap">
		select rdsp.PROCESS_FLOW, rdsp.USER_FLOW,su.USER_NAME,rr.REC_CONTENT from RES_DOCTOR_SCH_PROCESS rdsp,RES_REC rr,SYS_USER su
		where rdsp.RECORD_STATUS='Y' and rr.RECORD_STATUS='Y' and su.RECORD_STATUS='Y'
		 and rr.PROCESS_FLOW =rdsp.PROCESS_FLOW
      	 and rr.OPER_USER_FLOW=rdsp.USER_FLOW
      	 and su.USER_FLOW=rdsp.USER_FLOW
		 and rr.rec_type_id ='DeptGrade'
	    <if test="deptFlow!=null and deptFlow!=''">
			  and rdsp.DEPT_FLOW=#{deptFlow}
		</if>
		<if test="startDate!=null and startDate!=''">
			 and rr.OPER_TIME<![CDATA[>=]]>#{startDate}
		</if>
	    <if test="endDate!=null and endDate!=''">
		 	 and rr.OPER_TIME<![CDATA[<=]]>#{endDate}
	    </if>
	</select>
	<select id="processRecRecTeacherMap" resultMap="processResRecShMap">
		select rdsp.PROCESS_FLOW, rdsp.USER_FLOW,su.USER_NAME,rr.REC_CONTENT from RES_DOCTOR_SCH_PROCESS rdsp,RES_REC rr,SYS_USER su
		where rdsp.RECORD_STATUS='Y' and rr.RECORD_STATUS='Y' and su.RECORD_STATUS='Y'
		 and rr.PROCESS_FLOW =rdsp.PROCESS_FLOW
      	 and rr.OPER_USER_FLOW=rdsp.USER_FLOW
      	 and su.USER_FLOW=rdsp.USER_FLOW
		 and rr.rec_type_id ='TeacherGrade'
	    <if test="teacherFlow!=null and teacherFlow!=''">
			  and rdsp.TEACHER_USER_FLOW=#{teacherFlow}
		</if>
		<if test="startDate!=null and startDate!=''">
			 and rr.OPER_TIME<![CDATA[>=]]>#{startDate}
		</if>
	    <if test="endDate!=null and endDate!=''">
		 	 and rr.OPER_TIME<![CDATA[<=]]>#{endDate}
	    </if>
	</select>
	<select id="schDoctorSchProcessDistinctQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
				 select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
						p.PROCESS_FLOW PROCESS_FLOW,
						su.user_flow user_flow,
						p.SCH_START_DATE SCH_START_DATE,
						p.SCH_END_DATE SCH_END_DATE,
					   RD.DOCTOR_TYPE_ID,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' ),'N') STU_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008' ),'N') STU_JDZS_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001' ),'N') TEA_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' ),'N') TEA_APP
				  from res_doctor_sch_process p
				  left join res_doctor rd
					on p.user_flow = rd.doctor_flow
				  left join sys_user su
					on su.user_flow = rd.doctor_flow
				  left join sys_user tu
					on tu.user_flow = p.teacher_user_flow
				 where p.record_status = 'Y'
				   and rd.record_status = 'Y'
				   and su.record_status = 'Y'
				   and tu.record_status = 'Y') A
		 WHERE (
			 (A.DOCTOR_TYPE_ID !='Graduate' AND A.STU_JD_GC='Y')
			 OR
			 (A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='Y')
			 OR
			 (A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='N' AND A.STU_JD_GC='Y' AND A.STU_JDZS_GC='Y')
		 )
		and a.SCH_START_DATE <![CDATA[<=]]>to_char(sysdate,'yyyy-MM-dd')
		and a.SCH_END_DATE <![CDATA[>=]]>to_char(sysdate,'yyyy-MM-dd')
		and a.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<select id="schDoctorSchProcessDistinctQueryByDate" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		p.SCH_START_DATE SCH_START_DATE,
		p.SCH_END_DATE SCH_END_DATE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' AND ROWNUM=1),'N') STU_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND ROWNUM=1 AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008'AND ROWNUM=1 ),'N' ) STU_JDZS_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001'  AND ROWNUM=1),'N') TEA_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' AND ROWNUM=1),'N' ) TEA_APP
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE  (
		(A.DOCTOR_TYPE_ID !='Graduate' AND A.STU_JD_GC='Y')
		OR
		(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='Y')
		OR
		(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='N' AND A.STU_JD_GC='Y' AND A.STU_JDZS_GC='Y')
		)
		<if test="startDate !=null and startDate !='' and endDate !=null and endDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND a.SCH_END_DATE >= #{endDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		and a.TEACHER_USER_FLOW='${teacherUserFlow}'
	</select>
	<select id="schDoctorSchProcessTeacherQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
				 select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
						p.PROCESS_FLOW PROCESS_FLOW,
						su.user_flow user_flow,
					   RD.DOCTOR_TYPE_ID,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' ),'N') STU_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008' ),'N') STU_JDZS_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001' ),'N') TEA_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' ),'N') TEA_APP
				  from res_doctor_sch_process p
				  left join res_doctor rd
					on p.user_flow = rd.doctor_flow
				  left join sys_user su
					on su.user_flow = rd.doctor_flow
				  left join sys_user tu
					on tu.user_flow = p.teacher_user_flow
				 where p.record_status = 'Y'
				   and rd.record_status = 'Y'
				   and su.record_status = 'Y'
				   and tu.record_status = 'Y') A
		 WHERE  (
			 (A.DOCTOR_TYPE_ID !='Graduate' AND A.STU_JD_GC='Y')
			 OR
			 (A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='Y')
			 OR
			 (A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='N' AND A.STU_JD_GC='Y' AND A.STU_JDZS_GC='Y')
		 )
		 and a.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<select id="schDoctorSchProcessWaitingExamineQuery" resultType="int">
		select count(0) from (
				 select  p.*,
						RD.DOCTOR_TYPE_ID,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' ),'N') STU_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008' ),'N') STU_JDZS_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001' ),'N') TEA_JD_GC,
					   nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' ),'N') TEA_APP
				  from res_doctor_sch_process p
				  left join res_doctor rd
					on p.user_flow = rd.doctor_flow
				  left join sys_user su
					on su.user_flow = rd.doctor_flow
				  left join sys_user tu
					on tu.user_flow = p.teacher_user_flow
				 where p.record_status = 'Y'
				   and rd.record_status = 'Y'
				   and su.record_status = 'Y'
				   and tu.record_status = 'Y') re,RES_REC rr,sys_user su
		where re.RECORD_STATUS='Y' and rr.RECORD_STATUS='Y'
		and rr.oper_user_flow=su.user_flow
		and su.record_status='Y'
		and re.TEACHER_USER_FLOW=#{teacherUserFlow}
		and re.PROCESS_FLOW=rr.PROCESS_FLOW
		and rr.AUDIT_STATUS_ID is null
		and (
			 (re.DOCTOR_TYPE_ID !='Graduate' AND re.STU_JD_GC='Y')
			 OR
			 (re.DOCTOR_TYPE_ID ='Graduate' AND re.STU_SEND_SCHOOL_GC='Y')
			 OR
			 (re.DOCTOR_TYPE_ID ='Graduate' AND re.STU_SEND_SCHOOL_GC='N' AND re.STU_JD_GC='Y' AND re.STU_JDZS_GC='Y')
		 )
		 and rr.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
		<!--and rr.rec_type_id not in ('Delay','ReturnTraining','DoctorAuth','TeacherGrade','DeptGrade','AfterSummary','AfterEvaluation','DOPS','Mini_CEX')-->
	</select>
	
	<select id="schProcessStudentDistinctQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
				SELECT SAR.SESSION_NUMBER,
				SAR.RESULT_FLOW,
				RDR.SPE_ID,
				RDR.SPE_NAME,
				RDR.CAT_SPE_ID,
				RDR.CAT_SPE_NAME,
				RDSP.PROCESS_FLOW,
				RDSP.USER_FLOW,
				RDSP.ORG_FLOW,
				RDSP.ORG_NAME,
				RDSP.DEPT_FLOW,
				RDSP.DEPT_NAME,
				RDSP.SCH_DEPT_FLOW,
				RDSP.SCH_DEPT_NAME,
				RDSP.SCH_RESULT_FLOW,
				RDSP.SCH_START_DATE,
				RDSP.SCH_END_DATE,
				RDSP.TEACHER_USER_FLOW,
				tu.user_name TEACHER_USER_NAME,
				RDSP.HEAD_USER_FLOW,
				RDSP.HEAD_USER_NAME,
				RDSP.SCH_FLAG,
				RDSP.SCH_SCORE,
				RDSP.IS_CURRENT_FLAG,
				SU.USER_NAME,
				SU.USER_HEAD_IMG,
				RD.DOCTOR_TYPE_ID,
				nvl((select CFG_VALUE
				from jsres_power_cfg cfg
				where cfg.record_status = 'Y'
				and cfg.cfg_code = 'jsres_doctor_app_menu_' || rd.doctor_flow),
				'N') APP_MENU_FLAG,
				nvl(cfg2.power_start_time, '0000-00-00') power_start_time,
				nvl(cfg2.power_end_time, '9999-99-99') power_end_time
				from RES_DOCTOR_SCH_PROCESS rdsp
				left join sch_arrange_result sar
				on rdsp.sch_result_flow = sar.result_flow
				left join res_doctor_recruit rdr
				on (rdr.DOCTOR_FLOW = sar.DOCTOR_FLOW and rdr.RECORD_STATUS = 'Y' and
				sar.session_number = rdr.SESSION_NUMBER and
				rdr.AUDIT_STATUS_ID = 'Passed')
				left join res_doctor rd
				on rdsp.user_flow = rd.doctor_flow
				left join sys_user su
				on su.user_flow = rdsp.user_flow
				left join sys_user tu
				on tu.user_flow = rdsp.teacher_user_flow
				left join jsres_power_cfg cfg2
				on cfg2.record_status = 'Y'
				and cfg2.cfg_code = 'jsres_doctor_data_time_' || rd.doctor_flow
				where rdsp.record_status = 'Y'
				and rd.record_status = 'Y'
				and su.record_status = 'Y'
				and tu.record_status = 'Y'
				and sar.record_status = 'Y'
		) a
		WHERE
		 a.APP_MENU_FLAG = 'Y'
		AND (a.SCH_START_DATE  <![CDATA[<=]]> A.power_start_time
		AND a.SCH_END_DATE >= A.power_END_time
		OR a.SCH_START_DATE >= A.power_start_time
		AND a.SCH_START_DATE  <![CDATA[<=]]> A.power_END_time
		OR a.SCH_END_DATE >= A.power_start_time
		AND a.SCH_END_DATE  <![CDATA[<=]]> A.power_END_time)
		AND A.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
		and (
			exists(
			select null
			from SYS_USER_DEPT sud
			where sud.RECORD_STATUS='Y'
			and sud.USER_FLOW=#{userFlow}
			and a.DEPT_FLOW=sud.DEPT_FLOW
			)
			<if test="deptFlow!=null and deptFlow!=''">
				or  a.DEPT_FLOW=#{deptFlow}
			</if>
		)
		 and a.SCH_START_DATE <![CDATA[<=]]>to_char(sysdate,'yyyy-MM-dd')
		 and a.SCH_END_DATE <![CDATA[>=]]>to_char(sysdate,'yyyy-MM-dd')
	</select>

	<resultMap type="HashMap" id="schProcessStudentDistinctQuery2Map">
		<result column="DEPT_FLOW" javaType="string" property="deptFlow"></result>
		<result column="DEPT_NAME" javaType="string" property="deptName"></result>
		<result column="NUM" javaType="string" property="num"></result>
	</resultMap>
	<select id="schProcessStudentDistinctQuery2"  resultMap="schProcessStudentDistinctQuery2Map">
		SELECT DEPT_FLOW,DEPT_NAME,COUNT(DISTINCT a.USER_FLOW) NUM
		FROM (
		SELECT SAR.SESSION_NUMBER, SAR.RESULT_FLOW, RDR.SPE_ID, RDR.SPE_NAME, RDR.CAT_SPE_ID
		, RDR.CAT_SPE_NAME, RDSP.PROCESS_FLOW, RDSP.USER_FLOW, RDSP.ORG_FLOW, RDSP.ORG_NAME
		, RDSP.DEPT_FLOW, RDSP.DEPT_NAME, RDSP.SCH_DEPT_FLOW, RDSP.SCH_DEPT_NAME, RDSP.SCH_RESULT_FLOW
		, RDSP.SCH_START_DATE, RDSP.SCH_END_DATE, RDSP.TEACHER_USER_FLOW, tu.user_name AS TEACHER_USER_NAME, RDSP.HEAD_USER_FLOW
		, RDSP.HEAD_USER_NAME, RDSP.SCH_FLAG, RDSP.SCH_SCORE, RDSP.IS_CURRENT_FLAG, SU.USER_NAME
		, SU.USER_HEAD_IMG, RD.DOCTOR_TYPE_ID, nvl((
		SELECT CFG_VALUE
		FROM jsres_power_cfg cfg
		WHERE cfg.record_status = 'Y'
		AND cfg.cfg_code = ('jsres_doctor_app_menu_' || rd.doctor_flow)
		), 'N') AS APP_MENU_FLAG, nvl(cfg2.power_start_time, '0000-00-00') AS power_start_time, nvl(cfg2.power_end_time, '9999-99-99') AS power_end_time
		FROM RES_DOCTOR_SCH_PROCESS rdsp
		LEFT JOIN sch_arrange_result sar ON rdsp.sch_result_flow = sar.result_flow
		LEFT JOIN res_doctor_recruit rdr ON rdr.DOCTOR_FLOW = sar.DOCTOR_FLOW
		AND rdr.RECORD_STATUS = 'Y'
		AND sar.session_number = rdr.SESSION_NUMBER
		AND rdr.AUDIT_STATUS_ID = 'Passed'
		LEFT JOIN res_doctor rd ON rdsp.user_flow = rd.doctor_flow
		LEFT JOIN sys_user su ON su.user_flow = rdsp.user_flow
		LEFT JOIN sys_user tu ON tu.user_flow = rdsp.teacher_user_flow
		LEFT JOIN SYS_DEPT SD ON SD.DEPT_FLOW=RDSP.SCH_DEPT_FLOW
		LEFT JOIN jsres_power_cfg cfg2 ON cfg2.record_status = 'Y'
		AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
		WHERE rdsp.record_status = 'Y'
		AND rd.record_status = 'Y'
		AND su.record_status = 'Y'
		AND tu.record_status = 'Y'
		AND SAR.RECORD_STATUS = 'Y'
		AND SD.RECORD_STATUS = 'Y'
		<if test="orgFlow!=null and orgFlow!=''">
			AND SD.ORG_FLOW= #{orgFlow}
		</if>
		<if test="startTime!=null and startTime!=''">
			AND RDSP.SCH_START_DATE <![CDATA[>=]]> #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and RDSP.SCH_END_DATE <![CDATA[<=]]> #{endTime}
		</if>
		) a
		WHERE a.APP_MENU_FLAG = 'Y'
		AND (a.SCH_START_DATE <![CDATA[<=]]> A.power_start_time
		AND a.SCH_END_DATE <![CDATA[>=]]> A.power_END_time
		OR a.SCH_START_DATE <![CDATA[>=]]> A.power_start_time
		AND a.SCH_START_DATE <![CDATA[<=]]> A.power_END_time
		OR a.SCH_END_DATE <![CDATA[>=]]> A.power_start_time
		AND a.SCH_END_DATE <![CDATA[<=]]> A.power_END_time)
		AND A.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
		AND (EXISTS (SELECT NULL
		FROM SYS_USER_DEPT sud
		WHERE sud.RECORD_STATUS = 'Y'
		AND a.DEPT_FLOW = sud.DEPT_FLOW))
		<if test="deptFlow!=null and deptFlow!=''">
			AND A.DEPT_FLOW= #{deptFlow}
		</if>
		GROUP BY DEPT_FLOW, DEPT_NAME
	</select>

	<select id="schProcessComingStudentQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
				SELECT SAR.SESSION_NUMBER,
				SAR.RESULT_FLOW,
				RDR.SPE_ID,
				RDR.SPE_NAME,
				RDR.CAT_SPE_ID,
				RDR.CAT_SPE_NAME,
				RDSP.PROCESS_FLOW,
				RDSP.USER_FLOW,
				RDSP.ORG_FLOW,
				RDSP.ORG_NAME,
				RDSP.DEPT_FLOW,
				RDSP.DEPT_NAME,
				RDSP.SCH_DEPT_FLOW,
				RDSP.SCH_DEPT_NAME,
				RDSP.SCH_RESULT_FLOW,
				RDSP.SCH_START_DATE,
				RDSP.SCH_END_DATE,
				RDSP.TEACHER_USER_FLOW,
				tu.user_name TEACHER_USER_NAME,
				RDSP.HEAD_USER_FLOW,
				RDSP.HEAD_USER_NAME,
				RDSP.SCH_FLAG,
				RDSP.SCH_SCORE,
				RDSP.IS_CURRENT_FLAG,
				SU.USER_NAME,
				SU.USER_HEAD_IMG,
				RD.DOCTOR_TYPE_ID,
				nvl((select CFG_VALUE
				from jsres_power_cfg cfg
				where cfg.record_status = 'Y'
				and cfg.cfg_code = 'jsres_doctor_app_menu_' || rd.doctor_flow),
				'N') APP_MENU_FLAG,
				nvl(cfg2.power_start_time, '0000-00-00') power_start_time,
				nvl(cfg2.power_end_time, '9999-99-99') power_end_time
				from RES_DOCTOR_SCH_PROCESS rdsp
				left join sch_arrange_result sar
				on rdsp.sch_result_flow = sar.result_flow
				left join res_doctor_recruit rdr
				on (rdr.DOCTOR_FLOW = sar.DOCTOR_FLOW and rdr.RECORD_STATUS = 'Y' and
				sar.session_number = rdr.SESSION_NUMBER and
				rdr.AUDIT_STATUS_ID = 'Passed')
				left join res_doctor rd
				on rdsp.user_flow = rd.doctor_flow
				left join sys_user su
				on su.user_flow = rdsp.user_flow
				left join sys_user tu
				on tu.user_flow = rdsp.teacher_user_flow
				left join jsres_power_cfg cfg2
				on cfg2.record_status = 'Y'
				and cfg2.cfg_code = 'jsres_doctor_data_time_' || rd.doctor_flow
				where rdsp.record_status = 'Y'
				and rd.record_status = 'Y'
				and su.record_status = 'Y'
				and tu.record_status = 'Y'
				and sar.record_status = 'Y'
		) a
		WHERE
		 a.APP_MENU_FLAG = 'Y'
		AND (a.SCH_START_DATE  <![CDATA[<=]]> A.power_start_time
		AND a.SCH_END_DATE >= A.power_END_time
		OR a.SCH_START_DATE >= A.power_start_time
		AND a.SCH_START_DATE  <![CDATA[<=]]> A.power_END_time
		OR a.SCH_END_DATE >= A.power_start_time
		AND a.SCH_END_DATE  <![CDATA[<=]]> A.power_END_time)
		AND A.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
		and (
			exists(
			select null
			from SYS_USER_DEPT sud
			where sud.RECORD_STATUS='Y'
			and sud.USER_FLOW=#{userFlow}
			and a.DEPT_FLOW=sud.DEPT_FLOW
			)
			<if test="deptFlow!=null and deptFlow!=''">
				or  a.DEPT_FLOW=#{deptFlow}
			</if>
		)
		and TO_CHAR(SYSDATE, 'yyyy-mm-dd') <![CDATA[>=]]> TO_CHAR(TO_DATE(a.SCH_END_DATE,'yyyy-mm-dd')-7,'yyyy-mm-dd')
		and  TO_CHAR(SYSDATE, 'yyyy-mm-dd') <![CDATA[<=]]>TO_CHAR(TO_DATE(a.SCH_END_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')
	</select>
	<select id="schProcessStudentQuery" resultType="int">

		select count(distinct(a.USER_FLOW)) from (
				SELECT SAR.SESSION_NUMBER,
				SAR.RESULT_FLOW,
				RDR.SPE_ID,
				RDR.SPE_NAME,
				RDR.CAT_SPE_ID,
				RDR.CAT_SPE_NAME,
				RDSP.PROCESS_FLOW,
				RDSP.USER_FLOW,
				RDSP.ORG_FLOW,
				RDSP.ORG_NAME,
				RDSP.DEPT_FLOW,
				RDSP.DEPT_NAME,
				RDSP.SCH_DEPT_FLOW,
				RDSP.SCH_DEPT_NAME,
				RDSP.SCH_RESULT_FLOW,
				RDSP.SCH_START_DATE,
				RDSP.SCH_END_DATE,
				RDSP.TEACHER_USER_FLOW,
				tu.user_name TEACHER_USER_NAME,
				RDSP.HEAD_USER_FLOW,
				RDSP.HEAD_USER_NAME,
				RDSP.SCH_FLAG,
				RDSP.SCH_SCORE,
				RDSP.IS_CURRENT_FLAG,
				SU.USER_NAME,
				SU.USER_HEAD_IMG,
				RD.DOCTOR_TYPE_ID,
				nvl((select CFG_VALUE
				from jsres_power_cfg cfg
				where cfg.record_status = 'Y'
				and cfg.cfg_code = 'jsres_doctor_app_menu_' || rd.doctor_flow),
				'N') APP_MENU_FLAG,
				nvl(cfg2.power_start_time, '0000-00-00') power_start_time,
				nvl(cfg2.power_end_time, '9999-99-99') power_end_time
				from RES_DOCTOR_SCH_PROCESS rdsp
				left join sch_arrange_result sar
				on rdsp.sch_result_flow = sar.result_flow
				left join res_doctor_recruit rdr
				on (rdr.DOCTOR_FLOW = sar.DOCTOR_FLOW and rdr.RECORD_STATUS = 'Y' and
				sar.session_number = rdr.SESSION_NUMBER and
				rdr.AUDIT_STATUS_ID = 'Passed')
				left join res_doctor rd
				on rdsp.user_flow = rd.doctor_flow
				left join sys_user su
				on su.user_flow = rdsp.user_flow
				left join sys_user tu
				on tu.user_flow = rdsp.teacher_user_flow
				left join jsres_power_cfg cfg2
				on cfg2.record_status = 'Y'
				and cfg2.cfg_code = 'jsres_doctor_data_time_' || rd.doctor_flow
				where rdsp.record_status = 'Y'
				and rd.record_status = 'Y'
				and su.record_status = 'Y'
				and tu.record_status = 'Y'
				and sar.record_status = 'Y'
		) a
		WHERE
		 a.APP_MENU_FLAG = 'Y'
		AND (a.SCH_START_DATE  <![CDATA[<=]]> A.power_start_time
		AND a.SCH_END_DATE >= A.power_END_time
		OR a.SCH_START_DATE >= A.power_start_time
		AND a.SCH_START_DATE  <![CDATA[<=]]> A.power_END_time
		OR a.SCH_END_DATE >= A.power_start_time
		AND a.SCH_END_DATE  <![CDATA[<=]]> A.power_END_time)
		AND A.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
		and (
			exists(
			select null
			from SYS_USER_DEPT sud
			where sud.RECORD_STATUS='Y'
			and sud.USER_FLOW=#{userFlow}
			and a.DEPT_FLOW=sud.DEPT_FLOW
			)
			<if test="deptFlow!=null and deptFlow!=''">
				or  a.DEPT_FLOW=#{deptFlow}
			</if>
		)
	</select>
	
	<select id="countProcessByUser" resultMap="processCountMap">
		SELECT USER_FLOW,COUNT(*) PROCESS_COUNT
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS
		WHERE USER_FLOW IN
		<foreach collection="userFlows" item="userFlow" open="(" separator="," close=")">
			#{userFlow}
		</foreach>
		AND RECORD_STATUS = 'Y'
		GROUP BY USER_FLOW
	</select>
	
	<resultMap type="HashMap" id="processUserMap">
		<result column="PROCESS_FLOW" javaType="string" property="processFlow"></result>
		<result column="USER_FLOW" javaType="string" property="userFlow"></result>
		<result column="ORG_FLOW" javaType="string" property="orgFlow"></result>
		<result column="ORG_NAME" javaType="string" property="orgName"></result>
		<result column="DEPT_FLOW" javaType="string" property="deptFlow"></result>
		<result column="DEPT_NAME" javaType="string" property="deptName"></result>
		<result column="SCH_DEPT_FLOW" javaType="string" property="schDeptFlow"></result>
		<result column="SCH_DEPT_NAME" javaType="string" property="schDeptName"></result>
		<result column="SCH_RESULT_FLOW" javaType="string" property="schResultFlow"></result>
		<result column="SCH_START_DATE" javaType="string" property="schStartDate"></result>
		<result column="SCH_END_DATE" javaType="string" property="schEndDate"></result>
		<result column="TEACHER_USER_FLOW" javaType="string" property="teacherUserFlow"></result>
		<result column="TEACHER_USER_NAME" javaType="string" property="teacherUserName"></result>
		<result column="HEAD_USER_FLOW" javaType="string" property="headUserFlow"></result>
		<result column="HEAD_USER_NAME" javaType="string" property="headUserName"></result>
		<result column="SCH_FLAG" javaType="string" property="schFlag"></result>
		<result column="SCH_SCORE" javaType="string" property="schScore"></result>
		<result column="IS_CURRENT_FLAG" javaType="string" property="isCurrentFlag"></result>
		<result column="USER_NAME" javaType="string" property="userName"></result>
		<result column="SEX_NAME" javaType="string" property="sexName"></result>
		<result column="USER_PHONE" javaType="string" property="userPhone"></result>
		<result column="TRAINING_SPE_NAME" javaType="string" property="trainingSpeName"></result>
		<result column="EVAL_NUM" javaType="string" property="evalNum"></result>
		<result column="DOCTOR_TYPE_NAME" javaType="string" property="doctorTypeName"></result>
		<result column="TEMPORARY_AUDIT_STATUS_ID" javaType="string" property="temporaryAuditStatusId"></result>
		<result column="TEMPORARY_AUDIT_STATUS_NAME" javaType="string" property="temporaryAuditStatusName"></result>
	</resultMap>
	<select id="schDoctorSchProcessHead"  resultMap="processUserMap">
		select A.*
		from (select p.PROCESS_FLOW,
		p.USER_FLOW USER_FLOW,
		P.ORG_FLOW          ORG_FLOW,
		P.ORG_NAME          ORG_NAME,
		P.DEPT_FLOW DEPT_FLOW,
		P.DEPT_NAME,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_RESULT_FLOW,
		P.SCH_START_DATE SCH_START_DATE,
		P.SCH_END_DATE SCH_END_DATE,
		P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		P.TEACHER_USER_NAME,
		P.HEAD_USER_FLOW,
		P.HEAD_USER_NAME,
		P.SCH_FLAG,
		P.SCH_SCORE,
		P.IS_CURRENT_FLAG,
		su.USER_Name USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' ),'N') STU_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008' ),'N') STU_JDZS_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001' ),'N') TEA_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' ),'N') TEA_APP
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE  (
		(A.DOCTOR_TYPE_ID !='Graduate' AND A.STU_JD_GC='Y')
		OR
		(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='Y')
		OR
		(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='N' AND A.STU_JD_GC='Y' AND A.STU_JDZS_GC='Y')
		)
	    <if test='schStartDate!=null and schStartDate!=""'>
			and a.SCH_START_DATE <![CDATA[>=]]> #{schStartDate}
		</if>
		<if test='schEndDate!=null and schEndDate!=""'>
			and a.SCH_END_DATE <![CDATA[<=]]> #{schEndDate}
		</if>
		<if test="doctorName!=null and doctorName!=''">
			<bind name="name" value="'%'+doctorName+'%'"/>
			 and a.USER_NAME like #{name}
		</if>
		and (
				exists(
				  select null
				  from SYS_USER_DEPT sud
				  where sud.RECORD_STATUS='Y' 
				  and sud.USER_FLOW=#{userFlow}
				  and a.DEPT_FLOW=sud.DEPT_FLOW
				)
				<if test="deptFlow!=null and deptFlow!=''">
					or  a.DEPT_FLOW=#{deptFlow}
				</if>
			)
		ORDER BY a.SCH_START_DATE DESC nulls last
	</select>
	<select id="schDoctorSchProcessQuery"  resultMap="processUserMap">
		select A.*
		from (select p.PROCESS_FLOW,
		p.USER_FLOW,
		p.ORG_FLOW,
		p.ORG_NAME,
		p.DEPT_FLOW,
		p.DEPT_NAME,
		p.SCH_DEPT_FLOW,
		p.SCH_DEPT_NAME,
		p.SCH_RESULT_FLOW,
		p.SCH_START_DATE,
		p.SCH_END_DATE,
		p.TEACHER_USER_FLOW,
		p.TEACHER_USER_NAME,
		p.HEAD_USER_FLOW,
		p.HEAD_USER_NAME,
		p.SCH_FLAG,
		p.SCH_SCORE,
		p.IS_CURRENT_FLAG ,
		su.USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P001' ),'N') STU_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_sendSchool_'||rd.Work_Org_Id||'_P007' AND RD.DOCTOR_TYPE_ID='Graduate' ),'Y') STU_SEND_SCHOOL_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||rd.org_flow||'_P008' ),'N') STU_JDZS_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P001' ),'N') TEA_JD_GC,
		nvl((select CFG_VALUE from sys_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jswjw_'||TU.org_flow||'_P006' ),'N') TEA_APP
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE  (
			(A.DOCTOR_TYPE_ID !='Graduate' AND A.STU_JD_GC='Y')
			OR
			(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='Y')
			OR
			(A.DOCTOR_TYPE_ID ='Graduate' AND A.STU_SEND_SCHOOL_GC='N' AND A.STU_JD_GC='Y' AND A.STU_JDZS_GC='Y')
		)
		<if test="teacherUserFlow!=null and teacherUserFlow!=''">
			and a.TEACHER_USER_FLOW = #{teacherUserFlow}
		</if>
		<if test='schStartDate!=null and schStartDate!=""'>
			and a.SCH_START_DATE <![CDATA[>=]]> #{schStartDate}
		</if>
		<if test='schEndDate!=null and schEndDate!=""'>
			and a.SCH_END_DATE <![CDATA[<=]]> #{schEndDate}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="name" value="'%'+userName+'%'"/>
			 and a.user_Name like #{name}
		</if>
		<if test="biaoJi!=null and biaoJi!=''">
			and (
				exists(
				  select null
				  from res_rec rr
				  where rr.RECORD_STATUS='Y' 
				  and rr.PROCESS_FLOW = a.PROCESS_FLOW
				  and rr.AUDIT_STATUS_ID is null
				  and rr.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
				)
				or not exists(
					select null
					from RES_SCH_PROCESS_EXPRESS rr
					where rr.RECORD_STATUS='Y' 
					and rr.PROCESS_FLOW = a.PROCESS_FLOW
					and rr.rec_type_id = 'AfterEvaluation'
				)
			)
		</if>
		ORDER BY a.process_flow DESC nulls last
	</select>

	<select id="searchProcessByDoctorNew" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		left join PDSCI.RES_DOCTOR RD
		on RDSP.USER_FLOW = RD.DOCTOR_FLOW
		left join RES_POWER_CFG RPC
		on 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		left join sch_arrange_result sar on sar.result_flow = rdsp.sch_result_flow
		left join sch_rotation_dept srd on srd.standard_dept_id = sar.standard_dept_id
		and sar.STANDARD_GROUP_FLOW = srd.group_flow
		and srd.org_Flow IS NULL
		and srd.RECORD_STATUS = 'Y'
		WHERE RDSP.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND sar.RECORD_STATUS = 'Y'
		and rd.org_Flow is not null
		<if test='basicPractice!=null and basicPractice!=""'>
			and srd.Practic_Or_Theory = #{basicPractice}
		</if>
		<if test="doctor!=null">
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE '%${doctor.doctorName}%'
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
		</if>
		<if test="process!=null">
			<if test='process.teacherUserFlow!=null and process.teacherUserFlow!=""'>
				AND RDSP.TEACHER_USER_FLOW = #{process.teacherUserFlow}
			</if>
			<if test='process.headUserFlow!=null and process.headUserFlow!=""'>
				AND RDSP.HEAD_USER_FLOW = #{process.headUserFlow}
			</if>
			<if test='process.isCurrentFlag!=null and process.isCurrentFlag!=""'>
				AND RDSP.IS_CURRENT_FLAG = #{process.isCurrentFlag}
			</if>
			<if test='process.startDate!=null and process.startDate!=""'>
				AND RDSP.START_DATE >= #{process.startDate}
			</if>
			<if test='process.endDate!=null and process.endDate!=""'>
				AND RDSP.START_DATE <![CDATA[<]]>= #{process.endDate}
			</if>
			<if test='process.schDeptFlow!=null and process.schDeptFlow!=""'>
				AND RDSP.SCH_DEPT_FLOW = #{process.schDeptFlow}
			</if>
		</if>

		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>

		<if test='roleFlagMap!=null'>
			<if test='roleFlagMap.roleFlag!=null and roleFlagMap.roleFlag!="" and roleFlagMap.val!=null and roleFlagMap.val!=""'>
				<if test='roleFlagMap.roleFlag=="head"'>
					AND ( RDSP.SCH_DEPT_FLOW IN (
					SELECT SCH_DEPT_FLOW
					FROM PDSCI.SCH_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND DEPT_FLOW IN (
					SELECT DEPT_FLOW
					FROM SYS_USER_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND USER_FLOW = #{roleFlagMap.val}
					)
					) or rdsp.head_user_flow=#{roleFlagMap.val} )
				</if>
				<if test='roleFlagMap.roleFlag=="manager"'>
					<if test='roleFlagMap.trainingSpeId!="" and roleFlagMap.trainingSpeId!=null'>
						and rd.training_spe_id=#{trainingSpeId}
					</if>
					AND RD.ORG_FLOW IN (
					SELECT ORG_FLOW
					FROM PDSCI.SYS_USER
					WHERE USER_FLOW = #{roleFlagMap.val}
					)
				</if>
				<if test='roleFlagMap.roleFlag=="admin"'>
					AND RDSP.ORG_FLOW = #{roleFlagMap.val}
				</if>
				<if test='roleFlagMap.roleFlag=="charge"'>
					<if test='roleFlagMap.val!="" and roleFlagMap.val!= null '>
						AND RDSP.ORG_FLOW = #{roleFlagMap.val}
					</if>
				</if>
			</if>
		</if>
		ORDER by RD.session_Number DESC,RD.TRAINING_SPE_ID desc,rd.doctor_flow
	</select>

	<select id="searchProcessByMp" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		left join PDSCI.RES_DOCTOR RD
		on RDSP.USER_FLOW = RD.DOCTOR_FLOW
		left join RES_POWER_CFG RPC
		on 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		left join sch_arrange_result sar on sar.result_flow = rdsp.sch_result_flow
		left join sch_rotation_dept srd on srd.standard_dept_id = sar.standard_dept_id
		and sar.STANDARD_GROUP_FLOW = srd.group_flow
		and srd.org_Flow IS NULL
		and srd.RECORD_STATUS = 'Y'
		WHERE RDSP.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND sar.RECORD_STATUS = 'Y'
		and rd.org_Flow is not null
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='basicPractice!=null and basicPractice!=""'>
			and srd.Practic_Or_Theory = #{basicPractice}
		</if>
		<if test="doctor!=null">
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE '%${doctor.doctorName}%'
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
		</if>
		<if test="process!=null">
			<if test='process.teacherUserFlow!=null and process.teacherUserFlow!=""'>
				AND RDSP.TEACHER_USER_FLOW = #{process.teacherUserFlow}
			</if>
			<if test='process.headUserFlow!=null and process.headUserFlow!=""'>
				AND RDSP.HEAD_USER_FLOW = #{process.headUserFlow}
			</if>
			<if test='process.isCurrentFlag!=null and process.isCurrentFlag!=""'>
				AND RDSP.IS_CURRENT_FLAG = #{process.isCurrentFlag}
			</if>
			<if test='process.startDate!=null and process.startDate!=""'>
				AND RDSP.START_DATE >= #{process.startDate}
			</if>
			<if test='process.endDate!=null and process.endDate!=""'>
				AND RDSP.START_DATE <![CDATA[<]]>= #{process.endDate}
			</if>
			<if test='process.schDeptFlow!=null and process.schDeptFlow!=""'>
				AND RDSP.SCH_DEPT_FLOW = #{process.schDeptFlow}
			</if>
		</if>

		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>

		<if test='roleFlagMap!=null'>
			<if test='roleFlagMap.roleFlag!=null and roleFlagMap.roleFlag!="" and roleFlagMap.val!=null and roleFlagMap.val!=""'>
				<if test='roleFlagMap.roleFlag=="head"'>
					AND ( RDSP.SCH_DEPT_FLOW IN (
					SELECT SCH_DEPT_FLOW
					FROM PDSCI.SCH_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND DEPT_FLOW IN (
					SELECT DEPT_FLOW
					FROM SYS_USER_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND USER_FLOW = #{roleFlagMap.val}
					)
					) or rdsp.head_user_flow=#{roleFlagMap.val} )
				</if>
				<if test='roleFlagMap.roleFlag=="secretary"'>
					AND  RDSP.SCH_DEPT_FLOW IN (
					SELECT SCH_DEPT_FLOW
					FROM PDSCI.SCH_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND DEPT_FLOW IN (
					SELECT DEPT_FLOW
					FROM SYS_USER_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND USER_FLOW = #{roleFlagMap.val}
					) )
				</if>
				<if test='roleFlagMap.roleFlag=="manager"'>
					<if test='roleFlagMap.trainingSpeId!="" and roleFlagMap.trainingSpeId!=null'>
						and rd.training_spe_id=#{trainingSpeId}
					</if>
					AND RD.ORG_FLOW IN (
					SELECT ORG_FLOW
					FROM PDSCI.SYS_USER
					WHERE USER_FLOW = #{roleFlagMap.val}
					)
				</if>
				<if test='roleFlagMap.roleFlag=="professionalBase"'>
					<if test='roleFlagMap.trainingSpeId!="" and roleFlagMap.trainingSpeId!=null'>
						and rd.training_spe_id=#{roleFlagMap.trainingSpeId}
					</if>
					AND RD.ORG_FLOW IN (
					SELECT ORG_FLOW
					FROM PDSCI.SYS_USER
					WHERE USER_FLOW = #{roleFlagMap.val}
					)
				</if>
				<if test='roleFlagMap.roleFlag=="admin"'>
					AND RDSP.ORG_FLOW = #{roleFlagMap.val}
				</if>
				<if test='roleFlagMap.roleFlag=="charge"'>
					<if test='roleFlagMap.val!="" and roleFlagMap.val!= null '>
						AND RDSP.ORG_FLOW = #{roleFlagMap.val}
					</if>
				</if>
			</if>
		</if>
		<if test='dshStatus!=null and dshStatus == "Y" '>
			<if test='roleFlagMap!=null'>
				<if test='roleFlagMap.roleFlag=="teacher"'>

					<if test='recTypeIds!=null and recTypeIds.size>0 or (recTypeIds3!=null and recTypeIds3.size>0)or (recTypeIds4!=null and recTypeIds4.size>0)'>
						and (
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							<foreach collection="recTypeIds" item="item" index="index" open="" separator="or" close="">
							not exists(
								SELECT 1
								FROM Res_Sch_Process_Express a
								WHERE a.RECORD_STATUS = 'Y'
								AND a.REC_TYPE_ID =#{item}
								AND a.PROCESS_FLOW = rdsp.process_flow
							)
							</foreach>
						</if>
						<if test='recTypeIds3!=null and recTypeIds3.size>0'>

							<if test='recTypeIds!=null and recTypeIds.size>0'>
								or
							</if>
							exists (
							select 1
							FROM Res_Sch_Process_Express a
							WHERE a.RECORD_STATUS = 'Y'
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds3" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
							AND a.PROCESS_FLOW = rdsp.process_flow
							and a.AUDIT_STATUS_ID is null
							)
						</if>
						<if test='recTypeIds4!=null and recTypeIds4.size>0'>
							<if test='recTypeIds!=null and recTypeIds.size>0 or (recTypeIds3!=null and recTypeIds3.size>0)'>
								or
							</if>
							not exists (
								select 1
								FROM Res_Sch_Process_Express a
								WHERE a.RECORD_STATUS = 'Y'
								AND a.REC_TYPE_ID IN
								<foreach collection="recTypeIds4" item="item" index="index" open="(" separator="," close=")">
									#{item}
								</foreach>
								AND a.PROCESS_FLOW = rdsp.process_flow
							)
						</if>
						)
					</if>
				</if>
				<if test='roleFlagMap.roleFlag=="head"'>
					and  exists(
						SELECT 1
						FROM Res_Sch_Process_Express a
						WHERE a.RECORD_STATUS = 'Y'
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
						</if>
						AND a.PROCESS_FLOW = rdsp.process_flow
						and a.AUDIT_STATUS_ID is not null
						AND a.HEAD_AUDIT_STATUS_ID IS NULL
					)
				</if>
				<if test='roleFlagMap.roleFlag=="secretary"'>
					and  exists(
						SELECT 1
						FROM Res_Sch_Process_Express a
						WHERE a.RECORD_STATUS = 'Y'
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
						</if>
						AND a.PROCESS_FLOW = rdsp.process_flow
						and a.AUDIT_STATUS_ID is not null
						AND a.HEAD_AUDIT_STATUS_ID IS NULL
					)
				</if>
				<if test='roleFlagMap.roleFlag=="manager"'>
					and  exists(
						SELECT 1
						FROM Res_Sch_Process_Express a
						WHERE a.RECORD_STATUS = 'Y'
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
						</if>
						AND a.PROCESS_FLOW = rdsp.process_flow
						and a.AUDIT_STATUS_ID is not null
						AND a.HEAD_AUDIT_STATUS_ID IS not NULL
						AND a.manager_AUDIT_STATUS_ID IS NULL
					)
				</if>
				<if test='roleFlagMap.roleFlag=="professionalBase"'>
					and  exists(
						SELECT 1
						FROM Res_Sch_Process_Express a
						WHERE a.RECORD_STATUS = 'Y'
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
						</if>
						AND a.PROCESS_FLOW = rdsp.process_flow
						and a.AUDIT_STATUS_ID is not null
						AND a.HEAD_AUDIT_STATUS_ID IS not NULL
						AND a.manager_AUDIT_STATUS_ID IS NULL
					)
				</if>
				<if test='roleFlagMap.roleFlag=="admin"'>
					and  exists(
						SELECT 1
						FROM Res_Sch_Process_Express a
						WHERE a.RECORD_STATUS = 'Y'
						<if test='recTypeIds!=null and recTypeIds.size>0'>
							AND a.REC_TYPE_ID IN
							<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
								#{item}
							</foreach>
						</if>
						AND a.PROCESS_FLOW = rdsp.process_flow
						and a.AUDIT_STATUS_ID is not null
						AND a.HEAD_AUDIT_STATUS_ID IS not NULL
						AND a.manager_AUDIT_STATUS_ID IS not NULL
						AND a.admin_AUDIT_STATUS_ID IS NULL
					)
				</if>
			</if>
		</if>
		<if test='recDshStatus!=null and recDshStatus == "Y" '>
			and exists(
			SELECT null FROM RES_REC a
			WHERE a.RECORD_STATUS = 'Y'
			AND a.OPER_USER_FLOW=rdsp.user_flow
			AND a.PROCESS_FLOW = rdsp.process_flow
			and a.sch_dept_flow=rdsp.sch_dept_flow
			<if test='recTypeIds!=null and recTypeIds.size>0'>
				AND a.REC_TYPE_ID IN
				<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test='roleFlagMap!=null'>
				<if test='roleFlagMap.roleFlag=="teacher"'>
					AND a.AUDIT_STATUS_ID IS NULL
				</if>
				<if test='roleFlagMap.roleFlag=="head"'>
					AND a.HEAD_AUDIT_STATUS_ID IS NULL
				</if>
			</if>)
		</if>
		ORDER by rdsp.sch_start_date desc nulls last ,RD.session_Number DESC,RD.TRAINING_SPE_ID desc,rd.doctor_flow
	</select>

	<resultMap id="resultMap" type="com.pinde.sci.model.res.SchProcessExt"
			   extends="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		<association property="schArrangeResult" column="sch_Month"  resultMap="com.pinde.sci.dao.base.SchArrangeResultMapper.BaseResultMap" />

	</resultMap>
	<select id="searchProcessAndResultByDoctorFlow" resultMap="resultMap">
		select sar.sch_Month,rdsp.* from RES_DOCTOR_SCH_PROCESS rdsp left join SCH_ARRANGE_RESULT sar
		on rdsp.sch_result_flow = sar.result_flow
		and rdsp.user_flow = sar.doctor_flow
		and rdsp.dept_flow = sar.dept_flow
		and rdsp.dept_flow = sar.dept_flow
		where  RDSP.RECORD_STATUS = 'Y'and sar.record_status ='Y'

		<if test='doctorFlow!=null and doctorFlow!=""'>
			and sar.doctor_flow = #{doctorFlow}
		</if>
		<if test='deptFlow!=null and deptFlow!=""'>
			and sar.dept_flow = #{deptFlow}
		</if>
	</select>


	<select id="searchProcessByDoctorNew2" resultMap="com.pinde.sci.dao.base.ResDoctorMapper.BaseResultMap">
		SELECT rd.*
		FROM res_doctor rd
		left JOIN sys_user su ON rd.DOCTOR_FLOW = su.USER_FLOW
		left join RES_POWER_CFG RPC
		on 'res_doctor_web_'||su.USER_FLOW = RPC.CFG_CODE
		where su.RECORD_STATUS = 'Y'
		AND rd.RECORD_STATUS = 'Y'
		<if test='flag!="Y"'>
			and rd.session_number is not null
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and  doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test='doctor.graduationYear!=null and doctor.graduationYear!=""'>
			AND rd.GRADUATION_YEAR = #{doctor.graduationYear}
		</if>
		<if test="doctor!=null">
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE '%${doctor.doctorName}%'
			</if>
			<if test='doctor.doctorCategoryId!=null and doctor.doctorCategoryId!=""'>
				AND RD.DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.workOrgId!=null and doctor.workOrgId!=""'>
				AND RD.work_Org_Id = #{doctor.workOrgId}
			</if>
		</if>
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
		</if>
		<if test='roleFlagMap!=null'>

			<if test='roleFlagMap.medicineTypeId!=null and roleFlagMap.medicineTypeId!=""'>
				and instr('${roleFlagMap.medicineTypeId}',su.medicine_Type_Id)>0
			</if>
			<if test='roleFlagMap.roleFlag!=null and roleFlagMap.roleFlag!=""
				and roleFlagMap.val!=null and roleFlagMap.val!=""'>
				<if test='roleFlagMap.roleFlag=="teacher" or roleFlagMap.roleFlag=="head"'>
					AND exists(
						select 1 from SCH_ARRANGE_RESULT a
						left join	res_doctor_sch_process rdsp
						on a.result_flow=rdsp.sch_result_flow
						and rdsp.record_status='Y'
						where a.doctor_flow=su.user_flow
						and a.record_status='Y'
						<if test='roleFlagMap.roleFlag=="head"'>
							AND (
								EXISTS (SELECT NULL
								FROM SYS_USER_DEPT sud
								WHERE sud.RECORD_STATUS = 'Y'
								AND sud.USER_FLOW = #{roleFlagMap.val}
								AND a.DEPT_FLOW = sud.DEPT_FLOW)
								<if test='roleFlagMap.deptFlow!=null and roleFlagMap.deptFlow!=""'>
									OR	a.DEPT_FLOW = #{roleFlagMap.deptFlow}
								</if>
							)
						</if>
						<if test='roleFlagMap.roleFlag=="teacher"'>
							AND RDSP.TEACHER_USER_FLOW = #{roleFlagMap.val}
						</if>
						<if test="process!=null">
							<if test='process.deptFlow!=null and process.deptFlow!=""'>
								AND RDSP.DEPT_FLOW = #{process.deptFlow}
							</if>
							<if test='process.teacherUserFlow!=null and process.teacherUserFlow!=""'>
								AND RDSP.TEACHER_USER_FLOW = #{process.teacherUserFlow}
							</if>
							<if test='process.headUserFlow!=null and process.headUserFlow!=""'>
								AND RDSP.HEAD_USER_FLOW = #{process.headUserFlow}
							</if>
							<if test='process.isCurrentFlag!=null and process.isCurrentFlag!=""'>
								AND RDSP.IS_CURRENT_FLAG = #{process.isCurrentFlag}
							</if>
							<if test='process.startDate!=null and process.startDate!=""'>
								AND RDSP.START_DATE >= #{process.startDate}
							</if>
							<if test='process.endDate!=null and process.endDate!=""'>
								AND RDSP.START_DATE <![CDATA[<]]>= #{process.endDate}
							</if>
							<if test='process.schDeptFlow!=null and process.schDeptFlow!=""'>
								AND RDSP.SCH_DEPT_FLOW = #{process.schDeptFlow}
							</if>
						</if>
						<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
							AND
							(
							(RPC.POWER_START_TIME BETWEEN a.SCH_START_DATE AND a.SCH_END_DATE)
							OR
							(RPC.POWER_END_TIME BETWEEN a.SCH_START_DATE AND a.SCH_END_DATE)
							OR
							(a.SCH_START_DATE >= RPC.POWER_START_TIME AND a.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
							)
						</if>
					)
				</if>
				<if test='roleFlagMap.roleFlag=="manager"'>
					<if test='roleFlagMap.trainingSpeId!="" and roleFlagMap.trainingSpeId!=null'>
						and rd.training_spe_id=#{trainingSpeId}
					</if>
					AND RD.ORG_FLOW IN (
						SELECT ORG_FLOW
						FROM PDSCI.SYS_USER
						WHERE USER_FLOW = #{roleFlagMap.val}
					)
				</if>
				<if test='roleFlagMap.roleFlag=="admin"'>
					AND rd.ORG_FLOW = #{roleFlagMap.val}
				</if>
				<if test='roleFlagMap.roleFlag=="charge" or roleFlagMap.roleFlag=="university"'>
					<if test='roleFlagMap.val!="" and roleFlagMap.val!= null '>
						AND rd.ORG_FLOW = #{roleFlagMap.val}
					</if>
				</if>
			</if>
		</if>
		<if test="process!=null">
			<if test='process.isCurrentFlag!=null and process.isCurrentFlag!=""'>
				AND exists(
				select 1 from SCH_ARRANGE_RESULT a
				left join res_doctor_sch_process rdsp
				on a.result_flow=rdsp.sch_result_flow
				and rdsp.record_status='Y'
				where a.doctor_flow=su.user_flow
				and a.record_status='Y'
				AND RDSP.IS_CURRENT_FLAG = #{process.isCurrentFlag}
				)
			</if>
		</if>
		AND (rd.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
		OR rd.DOCTOR_STATUS_ID IS NULL)
		AND rd.org_flow IS NOT NULL
		AND rd.org_flow != '20160914888888'
		AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND rd.org_flow != '00000000000000000000000000000000'

		ORDER BY nlssort(su.user_name, 'NLS_SORT=SCHINESE_PINYIN_M'), rd.session_number DESC, su.user_code, rd.CREATE_TIME

	</select>




	<select id="searchProcessByDoctor" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP,PDSCI.RES_DOCTOR RD
		WHERE RDSP.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND RDSP.USER_FLOW = RD.DOCTOR_FLOW
		<if test="doctor!=null">
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE '%${doctor.doctorName}%'
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
		</if>
		<if test="process!=null">
			<if test='process.teacherUserFlow!=null and process.teacherUserFlow!=""'>
				AND RDSP.TEACHER_USER_FLOW = #{process.teacherUserFlow}
			</if>
			<if test='process.headUserFlow!=null and process.headUserFlow!=""'>
				AND RDSP.HEAD_USER_FLOW = #{process.headUserFlow}
			</if>
			<if test='process.isCurrentFlag!=null and process.isCurrentFlag!=""'>
				AND RDSP.IS_CURRENT_FLAG = #{process.isCurrentFlag}
			</if>
			<if test='process.startDate!=null and process.startDate!=""'>
				AND RDSP.START_DATE >= #{process.startDate}
			</if>
			<if test='process.endDate!=null and process.endDate!=""'>
				AND RDSP.START_DATE <![CDATA[<]]>= #{process.endDate}
			</if>
			<if test='process.schDeptFlow!=null and process.schDeptFlow!=""'>
				AND RDSP.SCH_DEPT_FLOW = #{process.schDeptFlow}
			</if>
		</if>
		<if test='roleFlagMap!=null'>
			<if test='roleFlagMap.roleFlag!=null and roleFlagMap.roleFlag!="" and roleFlagMap.val!=null and roleFlagMap.val!=""'>
				<if test='roleFlagMap.roleFlag=="head"'>
					AND ( RDSP.SCH_DEPT_FLOW IN (
						SELECT SCH_DEPT_FLOW 
						FROM PDSCI.SCH_DEPT
						WHERE RECORD_STATUS = 'Y'
						AND DEPT_FLOW IN (
							SELECT DEPT_FLOW 
							FROM SYS_USER_DEPT 
							WHERE RECORD_STATUS = 'Y'
							AND USER_FLOW = #{roleFlagMap.val}
						)
					) or rdsp.head_user_flow=#{roleFlagMap.val} )
				</if>
				<if test='roleFlagMap.roleFlag=="manager"'>
					<if test='roleFlagMap.trainingSpeId!="" and roleFlagMap.trainingSpeId!=null'>
						and rd.training_spe_id=#{trainingSpeId}
					</if>
					AND RD.ORG_FLOW IN (
	    				SELECT ORG_FLOW
	    				FROM PDSCI.SYS_USER
	    				WHERE USER_FLOW = #{roleFlagMap.val}
	    			)
				</if>
				<if test='roleFlagMap.roleFlag=="admin"'>
					AND RDSP.ORG_FLOW = #{roleFlagMap.val}
				</if>
				<if test='roleFlagMap.roleFlag=="charge"'>
					<if test='roleFlagMap.val!="" and roleFlagMap.val!= null '>
						AND RDSP.ORG_FLOW = #{roleFlagMap.val}
					</if>
				</if>
			</if>
		</if>
		ORDER by RD.session_Number DESC,RD.TRAINING_SPE_ID desc
	</select>
	
	<select id="searchTeachDept" resultType="string">
		SELECT DISTINCT SCH_DEPT_FLOW
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS
		WHERE RECORD_STATUS = 'Y'
		<if test='userFlow!=null and userFlow!=""'>
			AND TEACHER_USER_FLOW = #{userFlow}
		</if>
	</select>
	
	<select id="searchRotationDoctor" resultType="string">
		SELECT DISTINCT USER_FLOW
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS
		WHERE RECORD_STATUS = 'Y'
		AND USER_FLOW IN 
		<foreach collection="doctorFlows" item="doctorFlow" open="(" separator="," close=")">
			#{doctorFlow}
		</foreach>
	</select>

	<select id="searchDoctorProcess" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		join sys_user su on rdsp.user_flow=su.user_flow
		WHERE RDSP.RECORD_STATUS = 'Y'
		and su.record_stAtus='Y'
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			and su.user_name like '%${doctorName}%'
		</if>
		<if test="doctorProcess!=null">
			  <if test='doctorProcess.orgFlow!=null and doctorProcess.orgFlow!="" '>
				  AND RDSP.ORG_FLOW = #{doctorProcess.orgFlow}
			  </if>
			  <if test='doctorProcess.teacherUserFlow!=null and doctorProcess.teacherUserFlow!=""'>
				  AND RDSP.TEACHER_USER_FLOW = #{doctorProcess.teacherUserFlow}
			  </if>
			  <if test='doctorProcess.headUserFlow!=null and doctorProcess.headUserFlow!="" '>
				  AND RDSP.HEAD_USER_FLOW = #{doctorProcess.headUserFlow}
			  </if>
			  <if test='doctorProcess.schFlag!=null and doctorProcess.schFlag!="" '>
				  AND RDSP.SCH_FLAG = #{doctorProcess.schFlag}
			  </if>
			  <if test='doctorProcess.isCurrentFlag!=null and doctorProcess.isCurrentFlag!="" '>
				  AND RDSP.IS_CURRENT_FLAG = #{doctorProcess.isCurrentFlag}
			  </if>
			  <if test='doctorProcess.schDeptFlow!=null and doctorProcess.schDeptFlow!="" '>
				  AND RDSP.SCH_DEPT_FLOW = #{doctorProcess.schDeptFlow}
			  </if>
			  <if test='doctorProcess.userFlow!=null and doctorProcess.userFlow!="" '>
				  AND RDSP.USER_FLOW = #{doctorProcess.userFlow}
			  </if>
		</if>
		ORDER BY RDSP.START_DATE DESC
	</select>

	<select id="searchDoctorProcess2" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		join sys_user su on rdsp.user_flow=su.user_flow
		left join res_doctor rd on su.user_flow=rd.doctor_flow
		WHERE RDSP.RECORD_STATUS = 'Y'
		and su.record_stAtus='Y'
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			and su.user_name like '%${doctorName}%'
		</if>
		<if test="doctorProcess!=null">
			<if test='doctorProcess.orgFlow!=null and doctorProcess.orgFlow!="" '>
				AND RDSP.ORG_FLOW = #{doctorProcess.orgFlow}
			</if>
			<if test='doctorProcess.teacherUserFlow!=null and doctorProcess.teacherUserFlow!=""'>
				AND RDSP.TEACHER_USER_FLOW = #{doctorProcess.teacherUserFlow}
			</if>
			<if test='doctorProcess.headUserFlow!=null and doctorProcess.headUserFlow!="" '>
				AND RDSP.HEAD_USER_FLOW = #{doctorProcess.headUserFlow}
			</if>
			<if test='doctorProcess.schFlag!=null and doctorProcess.schFlag!="" '>
				AND RDSP.SCH_FLAG = #{doctorProcess.schFlag}
			</if>
			<if test='doctorProcess.isCurrentFlag!=null and doctorProcess.isCurrentFlag!="" '>
				AND RDSP.IS_CURRENT_FLAG = #{doctorProcess.isCurrentFlag}
			</if>
			<if test='doctorProcess.schDeptFlow!=null and doctorProcess.schDeptFlow!="" '>
				AND RDSP.SCH_DEPT_FLOW = #{doctorProcess.schDeptFlow}
			</if>
			<if test='doctorProcess.userFlow!=null and doctorProcess.userFlow!="" '>
				AND RDSP.USER_FLOW = #{doctorProcess.userFlow}
			</if>
		</if>
		ORDER BY RDSP.START_DATE DESC
	</select>

	<select id="searchCurrentProcessByUserFlow" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		WHERE RDSP.RECORD_STATUS = 'Y'
		<if test='isCurrentFlag!=null and isCurrentFlag!=""'>
			AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		</if>
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>

		<if test='userFlow!=null and userFlow!=""'>
			AND EXISTS (
				SELECT NULL 
				FROM SYS_USER_DEPT SUD,PDSCI.SCH_DEPT SD
				WHERE SUD.RECORD_STATUS = 'Y'
				AND SD.RECORD_STATUS = 'Y'
				AND SUD.DEPT_FLOW = SD.DEPT_FLOW
				AND SUD.USER_FLOW = #{userFlow}
				AND SD.SCH_DEPT_FLOW = RDSP.SCH_DEPT_FLOW
			)
		</if>
	</select>

	<select id="teacherGetStudents" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT DISTINCT *
		FROM RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN sys_user su on rdsp.user_flow=su.user_flow
		WHERE RDSP.RECORD_STATUS = 'Y' and su.RECORD_STATUS='Y'
		and rdsp.teacher_User_Flow = #{userFlow}
		AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
	</select>

	<select id="headGetStudents" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT DISTINCT *
		FROM RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN sys_user su on rdsp.user_flow=su.user_flow
		WHERE RDSP.RECORD_STATUS = 'Y' and su.RECORD_STATUS='Y'
		AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		<if test='userFlow!=null and userFlow!=""'>
			AND EXISTS (
			SELECT NULL
			FROM SYS_USER_DEPT SUD,PDSCI.SCH_DEPT SD
			WHERE SUD.RECORD_STATUS = 'Y'
			AND SD.RECORD_STATUS = 'Y'
			AND SUD.DEPT_FLOW = SD.DEPT_FLOW
			AND SUD.USER_FLOW = #{userFlow}
			AND SD.SCH_DEPT_FLOW = RDSP.SCH_DEPT_FLOW
			)
		</if>
	</select>

	<select id="searchProcessByUserFlow" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||RDSP.USER_FLOW = RPC.CFG_CODE
		left join sys_user su on su.user_flow=rdsp.user_flow
		left join res_doctor rd on rd.doctor_flow=rdsp.user_flow
		WHERE RDSP.RECORD_STATUS = 'Y' and su.RECORD_STATUS = 'Y' and rd.RECORD_STATUS = 'Y'
		<if test='isCurrentFlag!=null and isCurrentFlag!=""'>
			AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			AND su.user_name like '%${doctorName}%'
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			AND rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			AND rd.session_Number = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			AND rd.training_Years = #{trainingYears}
		</if>
		<if test='workDeptName!=null and workDeptName!=""'>
			AND (
				rd.work_org_name like '%${workDeptName}%'
			or
				rd.DEPART_MENT_NAME like '%${workDeptName}%'
			)
		</if>
		<if test="typeList!=null and typeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="typeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='startDate!=null and startDate!="" and endDate!=null and endDate!=""'>
			and(
			(#{startDate}>=rdsp.SCH_START_DATE and rdsp.SCH_END_DATE>=#{startDate})
			or
			(rdsp.SCH_START_DATE>=#{startDate} and #{endDate}>=rdsp.SCH_START_DATE)
			)
		</if>
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>

		<if test='userFlow!=null and userFlow!=""'>
			AND ( RDSP.SCH_DEPT_FLOW IN (
				SELECT SCH_DEPT_FLOW
				FROM PDSCI.SCH_DEPT
				WHERE RECORD_STATUS = 'Y'
					AND DEPT_FLOW IN (
					SELECT DEPT_FLOW
					FROM SYS_USER_DEPT
					WHERE RECORD_STATUS = 'Y'
					AND USER_FLOW =#{userFlow}
				)
			) or rdsp.head_user_flow=#{userFlow} )
		</if>
	</select>
	<select id="searchResultsByUserFlow" resultMap="com.pinde.sci.dao.base.SchArrangeResultMapper.BaseResultMap">
		SELECT a.*
        FROM PDSCI.SCH_ARRANGE_RESULT a
        left join res_doctor rd on a.doctor_flow=rd.doctor_flow
        left join sys_user su on a.doctor_flow=su.user_flow
        LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||su.USER_FLOW = RPC.CFG_CODE
		left join res_doctor_sch_process rdsp
		on rdsp.sch_result_flow=a.result_flow
		and rdsp.record_status='Y'
        WHERE a.RECORD_STATUS = 'Y'
        and rd.record_status='Y'
        and su.record_status='Y'

		<if test='isCurrentFlag!=null and isCurrentFlag!=""'>
			AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			AND su.user_name like '%${doctorName}%'
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			AND rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			AND rd.session_Number = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			AND rd.training_Years = #{trainingYears}
		</if>
		<if test='workDeptName!=null and workDeptName!=""'>
			AND (
				rd.work_org_name like '%${workDeptName}%'
			or
				rd.DEPART_MENT_NAME like '%${workDeptName}%'
			)
		</if>
		<if test="typeList!=null and typeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="typeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='startDate!=null and startDate!="" and endDate!=null and endDate!=""'>
			and(
			(#{startDate}>=rdsp.SCH_START_DATE and rdsp.SCH_END_DATE>=#{startDate})
			or
			(rdsp.SCH_START_DATE>=#{startDate} and #{endDate}>=rdsp.SCH_START_DATE)
			)
		</if>
        <if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
            AND RPC.CFG_VALUE = 'Y'
            AND RPC.RECORD_STATUS = 'Y'
            AND
            (
            (RPC.POWER_START_TIME BETWEEN a.SCH_START_DATE AND a.SCH_END_DATE)
            OR
            (RPC.POWER_END_TIME BETWEEN a.SCH_START_DATE AND a.SCH_END_DATE)
            OR
            (a.SCH_START_DATE >= RPC.POWER_START_TIME AND a.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
            )
        </if>
        AND (
        EXISTS (SELECT NULL
            FROM SYS_USER_DEPT sud
            WHERE sud.RECORD_STATUS = 'Y'
            AND sud.USER_FLOW =#{userFlow}
            AND a.DEPT_FLOW = sud.DEPT_FLOW)
		<if test='deptFlow!=null and deptFlow!=""'>
			OR	a.DEPT_FLOW = #{deptFlow}
		</if>
        )
        ORDER BY rd.session_number,rd.training_spe_id,rd.doctor_flow,a.SCH_START_DATE
	</select>
	<resultMap id="studentMap" type="hashmap">
		<result column="USER_FLOW" jdbcType="VARCHAR" property="userFlow" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
		<result column="SEX_NAME" jdbcType="VARCHAR" property="sexName" />
		<result column="SCH_DEPT_FLOW" jdbcType="VARCHAR" property="schDeptFlow" />
		<result column="SCH_DEPT_NAME" jdbcType="VARCHAR" property="schDeptName" />
		<result column="RESULT_FLOW" jdbcType="VARCHAR" property="resultFlow" />
		<result column="PROCESS_FLOW" jdbcType="VARCHAR" property="processFlow" />
		<result column="SCH_START_DATE" jdbcType="VARCHAR" property="schStartDate" />
		<result column="SCH_END_DATE" jdbcType="VARCHAR" property="schEndDate" />
		<result column="START_DATE" jdbcType="VARCHAR" property="startDate" />
		<result column="END_DATE" jdbcType="VARCHAR" property="endDate" />
		<result column="SCH_FLAG" jdbcType="VARCHAR" property="schFlag" />
		<result column="IS_CURRENT_FLAG" jdbcType="VARCHAR" property="isCurrentFlag" />
		<result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
		<result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
		<result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
		<result column="IN_HOS_DATE" property="inHosDate" jdbcType="VARCHAR" />
		<result column="TRAINING_YEARS" property="trainingYears" jdbcType="VARCHAR" />
		<result column="TRAINING_TYPE_ID" property="trainingTypeId" jdbcType="VARCHAR" />
		<result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
		<result column="TRAINING_SPE_ID" property="trainingSpeId" jdbcType="VARCHAR" />
		<result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
		<result column="DOCTOR_CATEGORY_ID" property="doctorCategoryId" jdbcType="VARCHAR" />
		<result column="DOCTOR_CATEGORY_NAME" property="doctorCategoryName" jdbcType="VARCHAR" />
		<result column="SCH_SCORE" property="schScore" jdbcType="VARCHAR" />
		<result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
	</resultMap>
	<select id="readHeadOrTeaStudents" resultMap="studentMap">
		SELECT SAR.SCH_DEPT_NAME,SAR.RESULT_FLOW,RDSP.PROCESS_FLOW,
		SAR.SCH_DEPT_FLOW,SAR.SCH_START_DATE,SAR.SCH_END_DATE,RDSP.START_DATE,RDSP.END_DATE,
		RDSP.IS_CURRENT_FLAG,RDSP.SCH_FLAG,SU.USER_FLOW,SU.SEX_NAME,SU.USER_NAME,SU.USER_HEAD_IMG,
		RD.DOCTOR_CATEGORY_NAME,RD.DOCTOR_TYPE_NAME,RD.TRAINING_YEARS,RD.TRAINING_SPE_NAME,RD.SESSION_NUMBER,
		RD.ORG_FLOW,RDSP.SCH_SCORE
		FROM SCH_ARRANGE_RESULT SAR
		LEFT JOIN RES_DOCTOR_SCH_PROCESS RDSP
		ON RDSP.SCH_RESULT_FLOW=SAR.RESULT_FLOW
		left join sys_user su on su.user_flow=rdsp.user_flow
		left join res_doctor rd on rd.doctor_flow=rdsp.user_flow
		LEFT JOIN RES_POWER_CFG RPC ON 'res_doctor_web_'||SU.USER_FLOW = RPC.CFG_CODE
		WHERE RDSP.RECORD_STATUS = 'Y'
		and  su.RECORD_STATUS = 'Y'
		and rd.RECORD_STATUS = 'Y'
		and (rdsp.SCH_FLAG='Y' OR IS_CURRENT_FLAG='Y')
		<if test='isCurrentFlag!=null and isCurrentFlag!=""'>
			AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			AND su.user_name like '%${doctorName}%'
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			AND rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			AND rd.session_Number = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			AND rd.training_Years = #{trainingYears}
		</if>
		<if test="typeList!=null and typeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="typeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='startDate!=null and startDate!="" and endDate!=null and endDate!=""'>
			and(
			(#{startDate}>=rdsp.SCH_START_DATE and rdsp.SCH_END_DATE>=#{startDate})
			or
			(rdsp.SCH_START_DATE>=#{startDate} and #{endDate}>=rdsp.SCH_START_DATE)
			)
		</if>
		<if test='isOpen!=null and isOpen!="" and isOpen =="Y" '>
			AND RPC.CFG_VALUE = 'Y'
			AND RPC.RECORD_STATUS = 'Y'
			AND
			(
			(RPC.POWER_START_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RPC.POWER_END_TIME BETWEEN RDSP.SCH_START_DATE AND RDSP.SCH_END_DATE)
			OR
			(RDSP.SCH_START_DATE >= RPC.POWER_START_TIME AND RDSP.SCH_END_DATE <![CDATA[<=]]> RPC.POWER_END_TIME)
			)
		</if>
		<if test='userFlow!=null and userFlow!="" and role!=null and role !="" and role=="head"'>
			AND EXISTS (
				SELECT NULL
				FROM SYS_USER_DEPT SUD,
						PDSCI.SCH_DEPT SD
				WHERE SUD.RECORD_STATUS = 'Y'
				AND SD.RECORD_STATUS = 'Y'
				AND SUD.DEPT_FLOW = SD.DEPT_FLOW
				AND SUD.USER_FLOW = #{userFlow}
				AND SD.SCH_DEPT_FLOW = SAR.SCH_DEPT_FLOW
			)
		</if>
		<if test='userFlow!=null and userFlow!="" and role!=null and role !="" and role=="teacher"'>
			AND RDSP.TEACHER_USER_FLOW=#{userFlow}
		</if>
		order by SAR.SCH_START_DATE desc nulls last,SAR.RESULT_FLOW
	</select>

	<select id="searchProcessByUserSpe" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP,PDSCI.RES_DOCTOR RD,PDSCI.RES_USER_SPE RUS
		WHERE RDSP.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND RUS.RECORD_STATUS = 'Y'
		AND RDSP.USER_FLOW = RD.DOCTOR_FLOW
		AND RD.TRAINING_SPE_ID = RUS.TRAINING_SPE_ID
		<if test='isCurrentFlag!=null and isCurrentFlag!=""'>
			AND RDSP.IS_CURRENT_FLAG = #{isCurrentFlag}
		</if>
		<if test='userFlow!=null and userFlow!=""'>
			AND RUS.USER_FLOW = #{userFlow}
			AND RD.ORG_FLOW IN (
				SELECT ORG_FLOW
				FROM PDSCI.SYS_USER
				WHERE RECORD_STATUS = 'Y'
				AND USER_FLOW = #{userFlow}
			)
		</if>
	</select>
	<resultMap  id="SchProcessResDoctorExt" type="HashMap">
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="doctorName" column="DOCTOR_NAME" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="schStartDate" column="SCH_START_DATE" javaType="string"/>
		<result  property="schEndDate" column="SCH_END_DATE" javaType="string"/>
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="string"/>
		<result  property="teacherUserName" column="TEACHER_USER_NAME" javaType="string"/>
		<result  property="recContent" column="REC_CONTENT" javaType="string"/>
		<result  property="recTypeId" column="REC_TYPE_ID" javaType="string"/>
		<result  property="doctorCategoryId" column="DOCTOR_CATEGORY_ID" javaType="string" />
		<result  property="doctorCategoryName" column="DOCTOR_CATEGORY_NAME" javaType="string" />
	</resultMap>
	<select id="searTrainingQuery"  resultMap="SchProcessResDoctorExt">
		SELECT
			rd.DOCTOR_FLOW,
			rdsp.SCH_DEPT_NAME,
			rdsp.TEACHER_USER_FLOW,
			rdsp.TEACHER_USER_NAME,
			rdsp.SCH_DEPT_FLOW,
			rd.DOCTOR_NAME,
			rd.SESSION_NUMBER,
			rd.TRAINING_SPE_NAME,
			rdsp.SCH_START_DATE,
			rdsp.SCH_END_DATE,
			rr.REC_CONTENT,
			rr.REC_TYPE_ID
		FROM
			RES_DOCTOR rd
		INNER JOIN
			RES_DOCTOR_SCH_PROCESS rdsp
		ON
			rd.DOCTOR_FLOW = rdsp.USER_FLOW
		INNER JOIN
			SCH_ARRANGE_RESULT sar
		ON
			rdsp.SCH_RESULT_FLOW = sar.RESULT_FLOW
		INNER JOIN
			SCH_ROTATION_DEPT srd
		ON
			srd.GROUP_FLOW = sar.STANDARD_GROUP_FLOW
		AND
			srd.STANDARD_DEPT_ID = sar.STANDARD_DEPT_ID
		LEFT JOIN
			RES_REC rr
		ON
			rr.OPER_USER_FLOW = rdsp.USER_FLOW
		WHERE rdsp.RECORD_STATUS = 'Y'
			AND sar.RECORD_STATUS = 'Y'
			AND srd.RECORD_STATUS = 'Y'
			AND rd.RECORD_STATUS = 'Y'
			AND rr.RECORD_STATUS = 'Y'
			AND srd.RECORD_FLOW = rr.SCH_ROTATION_DEPT_FLOW
			AND EXISTS (SELECT NULL FROM RES_DOCTOR_RECRUIT rdr WHERE rdr.DOCTOR_FLOW = rd.DOCTOR_FLOW AND rdr.RECORD_STATUS='Y' AND rdr.AUDIT_STATUS_ID = 'Passed')
			AND rr.CREATE_TIME> (SELECT NVL(MAX(rr2.CREATE_TIME),'0') FROM RES_REC rr2 WHERE rd.DOCTOR_FLOW=rr2.OPER_USER_FLOW AND rr2.REC_TYPE_ID='ReturnTraining')
		<if test='orgFlow != null and orgFlow != ""'>
			AND rdsp.ORG_FLOW=#{orgFlow}
		</if>
		<if test='date != null and date != ""'>
			<bind name="currDate" value="'%'+date+'%'"/>
			AND rdsp.SCH_END_DATE like #{currDate}
		</if>
		ORDER BY rd.DOCTOR_FLOW,rdsp.SCH_START_DATE
	</select>
	<resultMap id="docWorkExt" type="HashMap">
		<result  property="standardDeptId" column="STANDARD_DEPT_ID" javaType="string"/>
		<result  property="standDeptName" column="STANDARD_DEPT_NAME" javaType="string"/>
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result  property="schStartDate" column="SCH_START_DATE" javaType="string"/>
		<result  property="schEndDate" column="SCH_END_DATE" javaType="string"/>
		<result  property="month" column="F_MONTH" javaType="string"/>
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="string"/>
		<result  property="schFlag" column="SCH_FLAG" javaType="string"/>
		<result  property="teacherUserName" column="TEACHER_USER_NAME" javaType="string"/>
		<result  property="headUserName" column="HEAD_USER_NAME" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="evaluationNum" column="EVALUATION_NUM" javaType="string"/>
	</resultMap>
	<select id="docWorkingDetail"  resultMap="docWorkExt">
		select
		dept.STANDARD_DEPT_ID,
		dept.STANDARD_DEPT_NAME,
		rdsp.SCH_DEPT_FLOW,
		rdsp.SCH_DEPT_NAME,
		rdsp.SCH_START_DATE,
		to_char(CEIL((TO_DATE(rdsp.SCH_END_DATE, 'YYYY-MM-DD') - TO_DATE(rdsp.SCH_START_DATE, 'YYYY-MM-DD')) / 30 * 10) / 10,'FM90.09')  F_MONTH,
		rdsp.SCH_END_DATE,
		rdsp.TEACHER_USER_FLOW,
		RDSP.SCH_FLAG,
		rdsp.TEACHER_USER_NAME,
		rdsp.HEAD_USER_NAME,
		nvl((SELECT SUM(srdr.REQ_NUM)
		FROM  SCH_ROTATION_DEPT_REQ srdr
		WHERE dept.RECORD_FLOW = srdr.REL_RECORD_FLOW
		AND srdr.RECORD_STATUS = 'Y'
		),0) REQ_NUM,
		nvl( (SELECT COUNT(1)
		FROM RES_REC rr

		WHERE rr.RECORD_STATUS = 'Y'
		AND rr.SCH_ROTATION_DEPT_FLOW = dept.RECORD_FLOW
		AND rr.PROCESS_FLOW = rdsp.PROCESS_FLOW
		AND rr.REC_TYPE_ID IN  ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')),0) COMPLETE_NUM,
		nvl((SELECT COUNT(1)
		FROM RES_SCH_PROCESS_EXPRESS rr
		WHERE rr.RECORD_STATUS = 'Y'
		AND rr.PROCESS_FLOW = rdsp.PROCESS_FLOW
		AND rr.SCH_ROTATION_DEPT_FLOW = dept.RECORD_FLOW
		AND rr.REC_TYPE_ID = 'AfterEvaluation'),0) EVALUATION_NUM
		FROM sch_rotation_dept dept
		left join sch_arrange_result r
		on dept.group_flow=r.standard_group_flow
		AND r.STANDARD_DEPT_ID =   dept.STANDARD_DEPT_ID
		and r.record_status='Y'
		<if test='userFlow != null and userFlow != ""'>
			AND  r.doctor_flow= #{userFlow}
		</if>
		left JOIN RES_DOCTOR_SCH_PROCESS rdsp
		ON rdsp.SCH_RESULT_FLOW = r.RESULT_FLOW
		and rdsp.RECORD_STATUS = 'Y'
		WHERE dept.record_status = 'Y'
		AND dept.org_flow IS NULL
		AND EXISTS
		(SELECT 1
		FROM sch_rotation_group g
		WHERE  1=1
		<if test='rotationFlow != null and rotationFlow != ""'>
			and rotation_flow = #{rotationFlow}
		</if>

		AND record_status = 'Y'
		AND org_flow IS NULL
		AND g.group_flow = dept.group_flow)
		ORDER BY r.CREATE_TIME asc

	</select>
	<resultMap id="docWorkSearchExt" type="HashMap">
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="doctorName" column="USER_NAME" javaType="string"/>
		<result  property="trainingSpeId" column="TRAINING_SPE_ID" javaType="string"/>
		<result  property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="auditNum" column="AUDIT_NUM" javaType="string"/>
		<result  property="rotationNum" column="rotationNum" javaType="string"/>
		<result  property="schNum" column="schNum" javaType="string"/>
		<result  property="ylz" column="ylz" javaType="string"/>
	</resultMap>
	<select id="docWorkingSearch"  resultMap="workListMap">
		SELECT A.DOCTOR_FLOW,
		A.RECRUIT_FLOW,
		A.ORG_NAME,
		A.ORG_FLOW,
		A.USER_NAME,
		A.TRAINING_SPE_ID,
		A.TRAINING_SPE_NAME,
		A.SESSION_NUMBER,
		A.REQ_NUM,
		A.COMPLETE_NUM,
		A.AUDIT_NUM,
		A.ROTATION_NUM,
		A.YLZ_NUM,
		A.SCH_NUM,
		A.AFTER_NUM,
		A.COMPLETE_BI,
		A.AUDIT_BI
		FROM (SELECT rd.DOCTOR_FLOW,
		DR.RECRUIT_FLOW,
		DR.ORG_NAME,
		DR.ORG_FLOW,
		SU.USER_NAME,
		DR.SPE_ID TRAINING_SPE_ID,
		DR.SPE_NAME TRAINING_SPE_NAME,
		DR.SESSION_NUMBER,
		NVL(JDW.REQ_NUM,0) REQ_NUM,
		NVL(JDW.COMPLETE_NUM, 0) COMPLETE_NUM,
		NVL(JDW.AUDIT_NUM, 0) AUDIT_NUM,
		NVL(JDW.YLZ_NUM, 0) YLZ_NUM,
		NVL(JDW.SCH_NUM, 0) SCH_NUM,
		NVL(JDW.AFTER_NUM, 0) AFTER_NUM,
		to_number(NVL(JDW.COMPLETE_BI,0)) COMPLETE_BI,
		to_number(NVL(JDW.AUDIT_BI,0)) AUDIT_BI,
		NVL(JDW.rotation_Num,0) rotation_Num
		FROM RES_DOCTOR_RECRUIT dr
		LEFT JOIN RES_DOCTOR RD
		ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
		INNER JOIN SYS_USER SU
		ON RD.DOCTOR_FLOW = SU.USER_FLOW
		LEFT JOIN JSRES_DOCTOR_WORK JDW
		ON RD.DOCTOR_FLOW =JDW.DOCTOR_FLOW
		and dr.org_flow=jdw.org_flow
		AND DR.RECRUIT_FLOW =JDW.RECRUIT_FLOW
		WHERE  RD.RECORD_STATUS = 'Y'
		AND DR.RECORD_STATUS='Y'
		AND SU.RECORD_STATUS = 'Y'
		AND dr.AUDIT_STATUS_ID = 'Passed'
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<choose >
			<when test='baseFlag != null and baseFlag != "" '>
				AND RD.SECOND_ORG_FLOW =#{userOrgFlow}
			</when>
			<otherwise>
				AND (DR.ORG_FLOW IN
				( SELECT ORG_FLOW FROM SYS_ORG ORG
				WHERE ORG.RECORD_STATUS = 'Y'
				AND ORG.ORG_PROV_ID = '320000'
				AND ORG.ORG_TYPE_ID = 'Hospital'
				<if test='	jointOrgFlag == null or jointOrgFlag == ""'>
					<if test='orgLevel != null and orgLevel != ""'>
						AND ORG.ORG_LEVEL_ID = #{orgLevel}
					</if>
					<if test='orgFlowList != null and orgFlowList.size>0'>
						AND	ORG.ORG_FLOW in
						<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
					</if>
				</if>
				) or DR.JOINT_ORG_FLOW IN
				( SELECT ORG_FLOW FROM SYS_ORG ORG
				WHERE ORG.RECORD_STATUS = 'Y'
				AND ORG.ORG_PROV_ID = '320000'
				AND ORG.ORG_TYPE_ID = 'Hospital'
				<if test='	jointOrgFlag == null or jointOrgFlag == ""'>
					<if test='orgLevel != null and orgLevel != ""'>
						AND ORG.ORG_LEVEL_ID = #{orgLevel}
					</if>
					<if test='orgFlowList != null and orgFlowList.size>0'>
						AND	ORG.ORG_FLOW in
						<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
					</if>
				</if>
				))
			</otherwise>
		</choose>

		<if test="roleFlag =='Uni'">
			and (
			<trim prefix="" prefixOverrides="OR">
				<if test="workOrgId != null and workOrgId != ''">OR rd.work_org_id = #{workOrgId}</if>
				<if test="workOrgName != null and workOrgName != ''">OR rd.work_org_name = #{workOrgName}</if>
			</trim>
			)
		</if>
		<if test='typeId != null and typeId != ""'>
			AND rd.TRAINING_TYPE_ID = #{typeId}
		</if>
		<if test='school != null and school != ""'>
			AND rd.SCHOOL = #{school}
		</if>
		<if test='speId != null and speId != ""'>
			AND rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND DR.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='userName != null and userName != ""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND SU.USER_NAME LIKE #{name}
		</if>
		<if test='idNo != null and idNo != ""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND su.ID_NO LIKE #{idNo}
		</if>
		<if test='graduationYear != null and graduationYear != ""'>
			AND DR.GRADUATION_YEAR = #{graduationYear}
		</if>
		) A

		<if test='sort != null and sort != ""'>
			<if test="sort=='completeBidesc'">
				ORDER BY COMPLETE_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='completeBiasc'">
				ORDER BY COMPLETE_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='auditBidesc'">
				ORDER BY AUDIT_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='auditBiasc'">
				ORDER BY AUDIT_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
		</if>

	</select>

	<resultMap id="searchTeacherWorkloadMap" type="HashMap">
		<result  property="schDeptFlow" column="DEPT_FLOW" javaType="string"/>
		<result  property="schDeptName" column="DEPT_NAME" javaType="string"/>
		<result  property="userFlow" column="USER_FLOW" javaType="string"/>
		<result  property="userName" column="USER_NAME" javaType="string"/>
		<result  property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
		<result  property="allNumber" column="ALL_SUM" javaType="string"/>
		<result  property="schFlagNumber" column="SCH_FLAG_NUM" javaType="string"/>
		<result  property="isCurrentFlagNumber" column="IS_CURRENT_FLAG_NUM" javaType="string"/>
		<result  property="auditNumber" column="AUDIT_NUM" javaType="string"/>
		<result  property="notAuditNumber" column="NOT_AUDIT_NUM" javaType="string"/>
	</resultMap>
	<select id="searchTeacherWorkload"  resultMap="searchTeacherWorkloadMap">
		SELECT su.user_flow,
           su.user_name,
           su.dept_flow,
           su.dept_name,
           su.user_code,
		   su.org_flow,
		   su.org_name
      FROM sys_user su
     WHERE su.record_status = 'Y'
		<if test='orgFlow != null and orgFlow != ""'>
			AND su.ORG_FLOW = #{orgFlow}
		</if>
		<if test='orgFlowList != null and orgFlowList.size>0'>
			AND	su.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='deptFlows!=null and deptFlows.size>0'>
			and su.DEPT_FLOW in
			<foreach collection="deptFlows" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
			<if test='schDept != null'>
				<if test='schDept.deptFlow != null and schDept.deptFlow != ""'>
					AND su.DEPT_FLOW = #{schDept.deptFlow}
				</if>
			</if>
		<if test='userName != null and userName != ""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND su.USER_NAME LIKE  #{name}
		</if>
       AND EXISTS
     	(SELECT 1
              FROM sys_user_role sur
             WHERE sur.user_flow = su.user_flow
               AND sur.record_status = 'Y'
               AND sur.ROLE_FLOW = #{roleFlow})
		AND NOT EXISTS (SELECT NULL
		FROM res_doctor rd
		WHERE su.user_flow = rd.doctor_flow
		AND rd.RECORD_STATUS = 'Y')
     GROUP BY su.user_flow,
              su.user_name,
              su.dept_flow,
              su.dept_name,
              su.user_code,
			  su.org_flow,
			  su.org_name
     ORDER BY dept_flow,user_flow
	</select>


	<resultMap id="TeaAuditNumMap" type="HashMap">
		<result  property="key" column="KEY" javaType="string"/>
		<result  property="qty" column="QTY" javaType="string"/>
	</resultMap>
	<select id="getTeaAuditNumMap" resultMap="TeaAuditNumMap">
		SELECT teacher_user_flow KEY,nvl(COUNT(1),0) QTY
		FROM RES_DOCTOR_SCH_PROCESS A
		JOIN RES_REC RR
		ON RR.PROCESS_FLOW = A.PROCESS_FLOW
		WHERE A.RECORD_STATUS = 'Y'
		AND RR.RECORD_STATUS = 'Y'
		AND RR.AUDIT_STATUS_ID is not null
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND RR.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY teacher_user_flow
	</select>
	<select id="getTeaNotAuditNumMap" resultMap="TeaAuditNumMap">
		SELECT teacher_user_flow KEY,nvl(COUNT(1),0)QTY
		FROM RES_DOCTOR_SCH_PROCESS A
		JOIN RES_REC RR
		ON RR.PROCESS_FLOW = A.PROCESS_FLOW
		WHERE A.RECORD_STATUS = 'Y'
		AND RR.RECORD_STATUS = 'Y'
		AND RR.AUDIT_STATUS_ID is null
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND RR.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY teacher_user_flow
	</select>
	<select id="getTeaAllDocNumMap" resultMap="TeaAuditNumMap">
		SELECT teacher_user_flow KEY,nvl(COUNT(1),0)QTY
		FROM RES_DOCTOR_SCH_PROCESS A
		WHERE A.RECORD_STATUS = 'Y'
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY teacher_user_flow
	</select>
	<select id="getTeaCurrDocNumMap" resultMap="TeaAuditNumMap">
		SELECT teacher_user_flow KEY,nvl(COUNT(1),0)QTY
		FROM RES_DOCTOR_SCH_PROCESS A
		WHERE A.RECORD_STATUS = 'Y'
		AND A.IS_CURRENT_FLAG = 'Y'
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY teacher_user_flow
	</select>
	<select id="getTeaSchDocNumMap" resultMap="TeaAuditNumMap">
		SELECT teacher_user_flow KEY,nvl(COUNT(1),0)QTY
		FROM RES_DOCTOR_SCH_PROCESS A
		WHERE A.RECORD_STATUS = 'Y'
		AND A.SCH_FLAG = 'Y'
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.teacher_user_flow IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY teacher_user_flow
	</select>
	<select id="getTeaLectureNumMap" resultMap="TeaAuditNumMap">
		SELECT LECTURE_TEACHER_FLOW KEY,nvl(COUNT(1),0)QTY
		FROM RES_LECTURE_INFO A
		WHERE A.RECORD_STATUS = 'Y'
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			A.LECTURE_TRAIN_DATE >= #{operStartDate}
			and A.LECTURE_TRAIN_DATE <![CDATA[<=]]> #{operEndDate}
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.LECTURE_START_TIME >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.LECTURE_END_TIME <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='teacherFlows!=null and teacherFlows.size>0'>
			AND a.LECTURE_TEACHER_FLOW IN
			<foreach collection="teacherFlows" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY LECTURE_TEACHER_FLOW
	</select>
	<select id="getTeaDeptAuditNum" resultType="java.lang.Integer">
		SELECT nvl(COUNT(1),0)
		FROM RES_DOCTOR_SCH_PROCESS A
		JOIN RES_REC RR
		ON RR.PROCESS_FLOW = A.PROCESS_FLOW
		WHERE A.RECORD_STATUS = 'Y'
		AND RR.RECORD_STATUS = 'Y'
		AND RR.AUDIT_STATUS_ID is not null
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND RR.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND A.ORG_FLOW = #{orgFlow}
		</if>
		and a.teacher_user_flow=#{userFlow}
	</select>
	<select id="getTeaDeptNotAuditNum" resultType="java.lang.Integer">

		SELECT nvl(COUNT(1),0)
		FROM RES_DOCTOR_SCH_PROCESS A
		JOIN RES_REC RR
		ON RR.PROCESS_FLOW = A.PROCESS_FLOW
		WHERE A.RECORD_STATUS = 'Y'
		AND RR.RECORD_STATUS = 'Y'
		AND RR.AUDIT_STATUS_ID is null
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND RR.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and exists (
			select 1 from res_doctor where doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			and record_status='Y'
			and doctor_flow=user_Flow
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and A.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and A.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			A.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			A.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			A.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND A.ORG_FLOW = #{orgFlow}
		</if>
		and a.sch_dept_flow=#{schDeptFlow}
		and a.teacher_user_flow=#{userFlow}
	</select>
	<select id="schDoctorQuery"  resultMap="SchProcessResDoctorExt">
		select rd.DOCTOR_FLOW,re.SCH_DEPT_NAME,re.SCH_DEPT_FLOW,rd.DOCTOR_NAME,rd.SESSION_NUMBER,rd.TRAINING_SPE_NAME,re.SCH_START_DATE,re.SCH_END_DATE,rd.DOCTOR_CATEGORY_ID,rd.DOCTOR_CATEGORY_NAME
		from RES_DOCTOR_SCH_PROCESS re
		inner join  RES_DOCTOR rd  on re.USER_FLOW=rd.DOCTOR_FLOW
		where re.RECORD_STATUS='Y' and re.RECORD_STATUS='Y'
		AND re.IS_CURRENT_FLAG = 'Y'
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			RE.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and RE.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			RE.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and RE.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			RE.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and RE.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			RE.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			RE.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='doctorTypeIds!=null and doctorTypeIds.size>0'>
			AND rd.DOCTOR_TYPE_ID IN
			<foreach collection="doctorTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		and re.TEACHER_USER_FLOW=#{teacherUserFlow}
		<if test='schDeptFlow != null and schDeptFlow != ""' >
			and re.SCH_DEPT_FLOW=#{schDeptFlow}
		</if>
		order by user_flow,sch_start_date,sch_end_date
	</select>
	<select id="chTeacherProcessFlowRec"  resultMap="SchProcessResDoctorExt">
		select rd.DOCTOR_FLOW,re.SCH_DEPT_NAME,re.SCH_DEPT_FLOW,rd.DOCTOR_NAME,rd.SESSION_NUMBER,rd.TRAINING_SPE_NAME,re.SCH_START_DATE,re.SCH_END_DATE,rd.DOCTOR_CATEGORY_ID,rd.DOCTOR_CATEGORY_NAME
		from RES_DOCTOR_SCH_PROCESS re
		inner join  RES_DOCTOR rd  on re.USER_FLOW=rd.DOCTOR_FLOW
		where re.RECORD_STATUS='Y' and re.RECORD_STATUS='Y'
		and re.TEACHER_USER_FLOW=#{teacherUserFlow}
		<if test='schDeptFlow != null and schDeptFlow != ""' >
		and re.SCH_DEPT_FLOW=#{schDeptFlow}
		</if>
		<if test='operStartDate != null and operStartDate != "" and operEndDate != null and operEndDate != ""'>
			and (
			(
			RE.SCH_START_DATE <![CDATA[<=]]> #{operStartDate}
			and RE.SCH_END_DATE >= #{operStartDate}
			)
			or
			(
			RE.SCH_START_DATE <![CDATA[<=]]> #{operEndDate}
			and RE.SCH_END_DATE >= #{operEndDate}
			)
			or
			(
			RE.SCH_START_DATE <![CDATA[>=]]> #{operStartDate}
			and RE.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
			)
			)
		</if>
		<if test='operStartDate != null and operStartDate != "" and (operEndDate == null or operEndDate == "")'>
			AND
			RE.SCH_START_DATE >= #{operStartDate}
		</if>
		<if test='(operStartDate == null or operStartDate == "" )and operEndDate != null and operEndDate != ""'>
			AND
			RE.SCH_END_DATE <![CDATA[<=]]> #{operEndDate}
		</if>
		<if test='doctorTypeIds!=null and doctorTypeIds.size>0'>
			AND rd.DOCTOR_TYPE_ID IN
			<foreach collection="doctorTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		AND re.SCH_FLAG = 'Y'
		order by user_flow,sch_start_date,sch_end_date
	</select>

	<resultMap id="newDocWorkingSearchMap" type="HashMap">
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="doctorName" column="DOCTOR_NAME" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
		<result  property="trainingYears" column="training_years" javaType="string"/>
		<result  property="trainingTypeId" column="training_type_id" javaType="string"/>
		<result  property="trainingTypeName" column="training_type_name" javaType="string"/>
		<result  property="doctorCategoryId" column="DOCTOR_CATEGORY_ID" javaType="string"/>
		<result  property="doctorCategoryName" column="DOCTOR_CATEGORY_NAME" javaType="string"/>
		<result  property="speId" column="TRAINING_SPE_ID" javaType="string"/>
		<result  property="speName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="reqNum" column="reqNum" javaType="string"/>
		<result  property="completeNum" column="completeNum" javaType="string"/>
		<result  property="checkNum" column="checkNum" javaType="string"/>
		<result  property="rotationNum" column="rotationNum" javaType="string"/>
		<result  property="lunzhuanNum" column="lunzhuanNum" javaType="string"/>
		<result  property="chukeNum" column="chukeNum" javaType="string"/>
		<result  property="graduationYear" column="graduation_Year" javaType="string"/>
	</resultMap>
	<select id="newDocWorkingSearch"  resultMap="newDocWorkingSearchMap">
		select doctor_flow,doctor_name,org_name,training_years,training_type_id,training_type_name,doctor_category_id,doctor_category_name,
		training_spe_id,training_spe_name,session_number,graduation_Year,reqnum,completenum,checknum,rotationnum,lunzhuannum,chukenum from(
			SELECT rd.DOCTOR_FLOW,
			su.USER_NAME doctor_name,
			rd.training_years,
			rd.org_flow,
			rd.org_name,
			rd.training_type_id,
			rd.training_type_name,
			rd.TRAINING_SPE_ID,
			rd.TRAINING_SPE_NAME,
			rd.DOCTOR_CATEGORY_ID,
			rd.DOCTOR_CATEGORY_NAME,
			rd.SESSION_NUMBER,
			rd.graduation_Year,
			NVL((select sum(req.REQ_NUM)
			from SCH_ROTATION_DEPT_REQ req
			where req.record_status = 'Y'
			AND REQ.ROTATION_FLOW = RD.ROTATION_FLOW),0) reqNum,
			NVL((select COUNT(1)
			from RES_REC RR
			WHERE RR.RECORD_STATUS = 'Y'
			AND RR.OPER_USER_FLOW = RD.DOCTOR_FLOW
			and rr.process_flow in (select process_flow from RES_DOCTOR_SCH_PROCESS where record_status='Y' and user_flow=rd.doctor_flow)
			<if test='recTypeIds!=null and recTypeIds.size>0'>
				AND RR.REC_TYPE_ID IN
				<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			),0) completeNum,
			NVL((
			select count(1)
			from  res_rec r
			where r.record_status = 'Y'
			AND r.OPER_USER_FLOW = RD.DOCTOR_FLOW
			and r.process_flow in (select process_flow from RES_DOCTOR_SCH_PROCESS where record_status='Y' and user_flow=rd.doctor_flow)
			<if test='recTypeIds!=null and recTypeIds.size>0'>
				AND R.REC_TYPE_ID IN
				<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			AND r.audit_status_id is not null
			), 0) AS checkNum,
			NVL((select COUNT(1)
			from sch_rotation_dept dept
			where record_status = 'Y'
			and dept.org_flow is null
			and exists (select 1
			from sch_rotation_group g
			where rotation_flow = RD.ROTATION_FLOW
			and record_status = 'Y'
			and org_flow is null
			and g.group_flow = dept.group_flow)),0) rotationNum,
			NVL((
			select count(1) from
			res_doctor_sch_process
			where record_status = 'Y'
			and user_flow = rd.doctor_flow
			and to_char(sysdate, 'yyyy-mm-dd' )>= sch_start_date
			),0) lunzhuanNum,
			NVL((SELECT COUNT(1)
			FROM RES_DOCTOR_SCH_PROCESS A
			WHERE A.RECORD_STATUS = 'Y'
			AND A.SCH_FLAG = 'Y'
			AND A.USER_FLOW = RD.DOCTOR_FLOW ),0) chukeNum
			FROM RES_DOCTOR rd
			INNER JOIN SYS_USER SU
			ON RD.DOCTOR_FLOW = SU.USER_FLOW
			WHERE rd.RECORD_STATUS = 'Y'
			and su.record_status='Y'
			<if test='orgFlow != null and orgFlow != ""'>
				AND rd.ORG_FLOW = #{orgFlow}
			</if>
			<if test="orgFlowList!=null and orgFlowList.size>0">
				and rd.org_flow in
				<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test='speId != null and speId != ""'>
				AND rd.TRAINING_SPE_ID = #{speId}
			</if>
			<if test="doctorCategoryId!=null and doctorCategoryId!=''">
				and rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
			</if>
			<if test="docTypeList!=null and docTypeList.size>0">
				and rd.DOCTOR_TYPE_ID in
				<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
			</if>
			<if test='doctorFlows!=null and doctorFlows.size()>0'>
				and rd.DOCTOR_FLOW IN
				<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
					#{flow}
				</foreach>
			</if>
			<if test='sessionNumber != null and sessionNumber != ""'>
				AND rd.SESSION_NUMBER = #{sessionNumber}
			</if>
			<if test='docName != null and docName != ""'>
				<bind name="name" value="'%'+docName+'%'"/>
				AND su.USER_NAME LIKE #{name}
			</if>
			<if test='cardNo != null and cardNo != ""'>
				<bind name="cardNo" value="'%'+cardNo+'%'"/>
				AND su.ID_NO LIKE #{cardNo}
			</if>
			<if test='trainingSpeId != null and trainingSpeId != ""'>
				AND rd.training_Spe_Id = #{trainingSpeId}
			</if>
			<if test='workOrgId!=null and workOrgId!=""'>
				and rd.work_Org_Id = #{workOrgId}
			</if>
			<if test='graduationYear!=null and graduationYear!=""'>
				and rd.graduation_Year = #{graduationYear}
			</if>
			<if test='trainingYears!=null and trainingYears!=""'>
				and rd.training_Years = #{trainingYears}
			</if>
			AND RD.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
			AND RD.org_flow is not null
			AND RD.org_flow != '20160914888888'
			AND RD.org_flow != '566c9f36cf014f63a569b453efa284d7'
			AND RD.org_flow != '00000000000000000000000000000000'
			order by  NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M') )
		<if test='order == "wcxx" || order == "wcdx"'>
			order by to_number(decode(reqnum,0,-1,round(completenum/reqnum*10000))) ${order eq 'wcdx'?'desc':''} , SESSION_NUMBER DESC ,doctor_name
		</if>
		<if test='order == "shxx" || order == "shdx"'>
			order by to_number(decode(completenum,0,-1,round(checknum/completenum*10000))) ${order eq 'shdx'?'desc':''} , SESSION_NUMBER DESC ,doctor_name
		</if>
	</select>
	<resultMap id="newDocWorkingDetailMap" type="HashMap">
		<result  property="standardDeptId" column="STANDARD_DEPT_ID" javaType="string"/>
		<result  property="standDeptName" column="STANDARD_DEPT_NAME" javaType="string"/>
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result  property="schStartDate" column="SCH_START_DATE" javaType="string"/>
		<result  property="schEndDate" column="SCH_END_DATE" javaType="string"/>
		<result  property="month" column="F_MONTH" javaType="string"/>
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="string"/>
		<result  property="schFlag" column="SCH_FLAG" javaType="string"/>
		<result  property="teacherUserName" column="TEACHER_USER_NAME" javaType="string"/>
		<result  property="headUserName" column="HEAD_USER_NAME" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="checkNum" column="CHECK_NUM" javaType="string"/>
		<result  property="isCurrentFlag" column="IS_CURRENT_FLAG" javaType="string"/>
		<result  property="processFlow" column="PROCESS_FLOW" javaType="string"/>
		<result  property="evaluationFlag" column="EVALUATION_FLAG" javaType="string"/>
	</resultMap>
	<select id="newDocWorkingDetail" resultMap="newDocWorkingDetailMap">
		SELECT sar.STANDARD_DEPT_ID, sar.STANDARD_DEPT_NAME, sar.SCH_DEPT_FLOW, sar.SCH_DEPT_NAME, sar.SCH_START_DATE
		, rdsp.PROCESS_FLOW,
		sar.sch_month F_MONTH
		, sar.SCH_END_DATE, rdsp.TEACHER_USER_FLOW, RDSP.SCH_FLAG
		, rdsp.TEACHER_USER_NAME, rdsp.HEAD_USER_NAME,
		NVL((
		SELECT SUM(srdr.REQ_NUM)
		FROM SCH_ROTATION_DEPT srd
		INNER JOIN SCH_ROTATION_DEPT_REQ srdr
		ON srd.RECORD_FLOW = srdr.REL_RECORD_FLOW
		WHERE srd.RECORD_STATUS = 'Y'
		AND srdr.RECORD_STATUS = 'Y'
		AND srd.STANDARD_DEPT_ID = sar.STANDARD_DEPT_ID
		AND srd.GROUP_FLOW = sar.STANDARD_GROUP_FLOW
		),0) REQ_NUM,
		NVL((
		SELECT COUNT(1)
		FROM RES_REC rr
		WHERE rr.RECORD_STATUS = 'Y'
		AND rr.PROCESS_FLOW = rdsp.PROCESS_FLOW
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND RR.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		),0) COMPLETE_NUM,
		NVL((
		select count(1)
		from  res_rec r
		where r.record_status = 'Y'
		AND r.PROCESS_FLOW = rdsp.PROCESS_FLOW
		<if test='recTypeIds!=null and recTypeIds.size>0'>
			AND R.REC_TYPE_ID IN
			<foreach collection="recTypeIds" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		AND r.audit_status_id is not null
		), 0) AS CHECK_NUM,
		RDSP.IS_CURRENT_FLAG,
		decode((select count(1) from dept_teacher_grade_info dtgi where record_status='Y' and rdsp.process_flow=dtgi.process_flow),2,'是','否') evaluation_flag
		FROM SCH_ARRANGE_RESULT sar
		left  JOIN RES_DOCTOR_SCH_PROCESS rdsp
		ON rdsp.SCH_RESULT_FLOW = sar.RESULT_FLOW and rdsp.RECORD_STATUS = 'Y'
		WHERE  sar.RECORD_STATUS = 'Y'
		<if test='userFlow != null and userFlow != ""'>
			AND sar.doctor_flow = #{userFlow}
		</if>
		ORDER BY sar.CREATE_TIME DESC
	</select>
	<resultMap type="HashMap" id="docCycleMap">
		<result property="userName" column="user_name" javaType="string"/>
		<result property="doctorCategoryName" column="DOCTOR_CATEGORY_NAME" javaType="string"/>
		<result property="trainingSpeName" column="training_spe_name" javaType="string"/>
		<result property="sessionNumber" column="session_number" javaType="string"/>
		<result property="trainingYears" column="training_years" javaType="string"/>
		<result property="doctorFlow" column="doctor_flow" javaType="string"/>
		<result property="trainingSpeId" column="training_spe_id" javaType="string"/>
		<result property="orgName" column="org_name" javaType="string"/>
		<result property="trainingTypeId" column="training_type_id" javaType="string"/>
		<result property="trainingTypeName" column="training_type_name" javaType="string"/>
	</resultMap>

	<select id="searchDocCycleList" parameterType="java.util.Map" resultMap="docCycleMap">
		select u.USER_NAME user_name, dr.DOCTOR_CATEGORY_NAME DOCTOR_CATEGORY_NAME,dr.TRAINING_SPE_NAME training_spe_name,dr.DOCTOR_Flow doctor_flow,dr.org_name,
		dr.SESSION_NUMBER session_number, dr.TRAINING_YEARS training_years,dr.TRAINING_SPE_ID training_spe_id,dr.training_type_id training_type_id,dr.training_type_name training_type_name
		from RES_DOCTOR dr
		inner join SYS_USER u
		on dr.DOCTOR_FLOW = u.USER_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND (dr.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
		OR dr.DOCTOR_STATUS_ID IS NULL)
		AND dr.org_flow IS NOT NULL
		AND dr.org_flow != '20160914888888'
		AND dr.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND dr.org_flow != '00000000000000000000000000000000'
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and dr.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='doctorCategoryId != null and doctorCategoryId != ""'>
			AND dr.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			and dr.TRAINING_YEARS = #{trainingYears}
		</if>
		<if test='workOrgId!=null and workOrgId!=""'>
			and dr.work_Org_Id = #{workOrgId}
		</if>
		<if test='userName!=null and userName!=""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND  u.USER_NAME LIKE #{name}
		</if>
		<if test='idNo!=null and idNo!=""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND u.ID_NO LIKE #{idNo}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and (
			dr.ORG_FLOW = #{orgFlow}
			)
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and dr.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='doctorFlows!=null and doctorFlows.size()>0'>
			and dr.DOCTOR_FLOW IN
			<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
				#{flow}
			</foreach>
		</if>
		<if test='medicineTypeId!=null and medicineTypeId!=""'>
			and instr('${medicineTypeId}',u.medicine_Type_Id)>0
		</if>
		order by dr.SESSION_NUMBER desc,dr.TRAINING_SPE_ID,dr.create_time,dr.doctor_flow
	</select>
	<resultMap type="HashMap" id="exportCkScoreMap">
		<result property="userName" column="USER_NAME" javaType="string"/>
		<result property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result property="trainingYears" column="TRAINING_YEARS" javaType="string"/>
		<result property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result property="trainingSpeId" column="TRAINING_SPE_ID" javaType="string"/>
		<result property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result property="schScore" column="SCH_SCORE" jdbcType="DECIMAL" />
	</resultMap>

	<select id="exportCkScore" parameterType="java.util.Map" resultMap="exportCkScoreMap">
		SELECT U.USER_NAME          USER_NAME,
		DR.TRAINING_SPE_NAME TRAINING_SPE_NAME,
		DR.DOCTOR_FLOW       DOCTOR_FLOW,
		DR.SESSION_NUMBER    SESSION_NUMBER,
		DR.TRAINING_YEARS    TRAINING_YEARS,
		DR.TRAINING_SPE_ID   TRAINING_SPE_ID,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_SCORE
		FROM RES_DOCTOR DR
		INNER JOIN SYS_USER U
		ON DR.DOCTOR_FLOW = U.USER_FLOW
		LEFT JOIN RES_DOCTOR_SCH_PROCESS P
		ON P.USER_FLOW = U.USER_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		and p.record_status='Y'
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and dr.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			and dr.TRAINING_YEARS = #{trainingYears}
		</if>
		<if test='startDate!=null and startDate!="" and endDate!=null and endDate!=""'>
			and(
			(p.SCH_START_DATE>=#{startDate} and #{endDate}>=p.SCH_START_DATE)
			or
			(p.SCH_END_DATE>=#{startDate} and #{endDate}>=p.SCH_END_DATE)
			)
		</if>
		<if test='userName!=null and userName!=""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND  u.USER_NAME LIKE #{name}
		</if>
		<if test='idNo!=null and idNo!=""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND u.ID_NO LIKE #{idNo}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and (
			dr.ORG_FLOW = #{orgFlow}
			or exists(
			select null from res_joint_org rjo
			where rjo.record_status = 'Y'
			and rjo.org_flow = #{orgFlow}
			and dr.org_flow = rjo.joint_org_flow
			)
			)
		</if>
		order by NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
	</select>
	<select id="searchCycleArrangeResults" resultMap="com.pinde.sci.dao.base.SchArrangeResultMapper.BaseResultMap">
		select ar.*
		from SCH_ARRANGE_RESULT ar,RES_DOCTOR dr,SYS_USER u
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y' and ar.RECORD_STATUS= 'Y' and dr.DOCTOR_FLOW = u.USER_FLOW and
		dr.DOCTOR_FLOW = ar.DOCTOR_FLOW
		<if test='startDate!=null and startDate!="" and endDate!=null and endDate!=""'>
			and(
			(ar.SCH_START_DATE>=#{startDate} and #{endDate}>=ar.SCH_START_DATE)
			or
			(ar.SCH_END_DATE>=#{startDate} and #{endDate}>=ar.SCH_END_DATE)
			)
		</if>
		<if test='userName!=null and userName!=""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND  u.USER_NAME LIKE #{name}
		</if>
		<if test='idNo!=null and idNo!=""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND u.ID_NO LIKE #{idNo}
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and dr.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			and dr.TRAINING_YEARS = #{trainingYears}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and (
			dr.ORG_FLOW = #{orgFlow}
			or exists(
			select null from res_joint_org rjo
			where rjo.record_status = 'Y'
			and rjo.org_flow = #{orgFlow}
			and dr.org_flow = rjo.joint_org_flow
			)
			)
		</if>
		order by NLSSORT(u.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
	</select>

	<resultMap id="searchPlanAccessDocResultMap" type="com.pinde.sci.model.res.SchProcessExt" >
		<result column="SCH_DEPT_FLOW" property="schDeptFlow" jdbcType="VARCHAR" />
		<result column="SCH_DEPT_NAME" property="schDeptName" jdbcType="VARCHAR" />
		<result column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="sysUser.userName" jdbcType="VARCHAR" />
		<result column="USER_FLOW" property="sysUser.userFlow" jdbcType="VARCHAR" />
		<result column="ORG_NAME" property="sysUser.orgName" jdbcType="VARCHAR" />
		<result column="ORG_FLOW" property="sysUser.orgFlow" jdbcType="VARCHAR" />
		<result column="TEACHER_USER_NAME" property="teacherUserName" jdbcType="VARCHAR" />
		<result column="SCH_START_DATE" property="schStartDate" jdbcType="VARCHAR" />
		<result column="SCH_END_DATE" property="schEndDate" jdbcType="VARCHAR" />
	</resultMap>
	<select id="searchPlanAccessDoc" parameterType="java.util.Map" resultMap="searchPlanAccessDocResultMap">
		select pro.SCH_DEPT_FLOW ,
				pro.SCH_DEPT_NAME ,
				pro.DEPT_FLOW,
				PRO.DEPT_NAME,
				U.USER_FLOW,
				u.USER_NAME ,
				RD.ORG_NAME,
				RD.ORG_FLOW,
				pro.TEACHER_USER_NAME ,
				pro.SCH_START_DATE,
				pro.SCH_END_DATE
		from res_doctor_sch_process pro
		left join sys_user u
		on pro.user_flow=u.user_flow
		LEFT JOIN RES_DOCTOR RD ON RD.DOCTOR_FLOW=U.USER_FLOW
		where
		pro.org_flow=#{orgFlow}
		and pro.record_status = 'Y'
		and u.record_status = 'Y'
		and RD.record_status = 'Y'
		<if test='schStartDate != null and schStartDate != ""'>
			<bind name="currDate" value="'%'+schStartDate+'%'"/>
			AND pro.SCH_START_DATE like #{currDate}
		</if>
		<if test='schEndDate != null and schEndDate != ""'>
			<bind name="currDate1" value="'%'+schEndDate+'%'"/>
			AND pro.SCH_END_DATE like #{currDate1}
		</if>
		<if test='trainingTypeId != null and trainingTypeId != ""'>
			AND RD.TRAINING_TYPE_ID= #{trainingTypeId}
		</if>
 		order by pro.SCH_DEPT_NAME,pro.SCH_START_DATE,pro.SCH_END_DATE
	</select>

	<select id="searchAlreadyInDoc" parameterType="java.util.Map" resultMap="searchPlanAccessDocResultMap">
		select distinct
		pro.SCH_DEPT_FLOW,
		pro.SCH_DEPT_NAME,
		PRO.DEPT_FLOW,
		PRO.DEPT_NAME,
		RD.ORG_FLOW,
		RD.ORG_NAME,
		PRO.PROCESS_FLOW,
		u.USER_FLOW,
		u.USER_NAME,
		pro.TEACHER_USER_NAME,
		pro.SCH_PER,
		pro.SCH_END_DATE,
		pro.sch_start_date
		from res_doctor_sch_process pro ,sys_user u,res_rec r,RES_DOCTOR RD
		where
		 pro.org_flow=#{orgFlow}
		 and pro.USER_FLOW=u.user_flow
		 AND RD.DOCTOR_FLOW=U.USER_FLOW
		 and r.process_flow=pro.process_flow
		 and pro.record_status = 'Y'
		 and RD.record_status = 'Y'
		 and u.record_status = 'Y'
		 and r.record_status = 'Y'
		<if test='schStartDate != null and schStartDate != ""'>
			<bind name="currDate" value="'%'+schStartDate+'%'"/>
			AND pro.SCH_START_DATE like #{currDate}
		</if>
		 and r.rec_type_id in
		 ('CaseRegistry','DiseaseRegistry','OperationRegistry','SkillRegistry','CampaignRegistry')
		 order by pro.SCH_DEPT_NAME,pro.sch_start_date
	</select>

	<resultMap id="searchInAndOutDocResultMap" type="com.pinde.sci.model.res.SchProcessExt" >
		<result column="SCH_DEPT_FLOW" property="schDeptFlow" jdbcType="VARCHAR" />
		<result column="SCH_DEPT_NAME" property="schDeptName" jdbcType="VARCHAR" />
		<result column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="sysUser.userName" jdbcType="VARCHAR" />
		<result column="USER_FLOW" property="sysUser.userFlow" jdbcType="VARCHAR" />
		<result column="ORG_NAME" property="sysUser.orgName" jdbcType="VARCHAR" />
		<result column="ORG_FLOW" property="sysUser.orgFlow" jdbcType="VARCHAR" />
		<result column="TEACHER_USER_NAME" property="teacherUserName" jdbcType="VARCHAR" />
		<result column="SCH_PER" property="schPer" jdbcType="VARCHAR" />
		<result column="SCH_END_DATE" property="schEndDate" jdbcType="VARCHAR" />
		<result column="AUDIT_STATUS_ID" property="resRec.auditStatusId" jdbcType="VARCHAR" />
		<result column="SCH_RESULT_FLOW" property="schResultFlow" jdbcType="VARCHAR" />
		<result column="PROCESS_FLOW" property="processFlow" jdbcType="VARCHAR" />
	</resultMap>
	<select id="searchInAndOutDoc" parameterType="java.util.Map" resultMap="searchInAndOutDocResultMap">
		SELECT DISTINCT
		pro.SCH_DEPT_FLOW,
		pro.SCH_DEPT_NAME,
		PRO.DEPT_FLOW,
		PRO.DEPT_NAME,
		RD.ORG_FLOW,
		RD.ORG_NAME,
		PRO.PROCESS_FLOW,
		u.USER_FLOW,
		u.USER_NAME,
		pro.TEACHER_USER_NAME,
		pro.SCH_PER ,
		pro.SCH_END_DATE,
		r.PROCESS_FLOW AS AUDIT_STATUS_ID,
		pro.SCH_RESULT_FLOW AS SCH_RESULT_FLOW
		FROM res_doctor_sch_process pro
		left join  sys_user u on pro.USER_FLOW = u.user_flow
		AND u.record_status = 'Y'
		left join RES_SCH_PROCESS_EXPRESS r on  r.oper_user_flow = u.user_flow
		AND r.rec_type_id = 'AfterEvaluation' AND r.record_status = 'Y' AND r.process_flow = pro.process_flow
		LEFT JOIN RES_DOCTOR RD ON RD.DOCTOR_FLOW=U.USER_FLOW
		WHERE  pro.org_flow = #{orgFlow}
		AND RD.record_status = 'Y'
		AND pro.record_status = 'Y'
		<if test='schEndDate != null and schEndDate != ""'>
			<bind name="currDate" value="'%'+schEndDate+'%'"/>
			AND pro.SCH_END_DATE like #{currDate}
		</if>
		<if test='trainingTypeId != null and trainingTypeId != ""'>
			AND RD.TRAINING_TYPE_ID= #{trainingTypeId}
		</if>
		ORDER BY pro.SCH_DEPT_NAME, pro.SCH_END_DATE
	</select>

	<select id="jsresSchDoctorSchProcessDistinctQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		p.SCH_START_DATE SCH_START_DATE,
		p.SCH_END_DATE SCH_END_DATE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		and a.SCH_START_DATE <![CDATA[<=]]>to_char(sysdate,'yyyy-MM-dd')
		and a.SCH_END_DATE <![CDATA[>=]]>to_char(sysdate,'yyyy-MM-dd')
		and a.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<select id="jsresSchDoctorSchProcessDistinctQueryByDate" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		p.SCH_START_DATE SCH_START_DATE,
		p.SCH_END_DATE SCH_END_DATE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		) A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="startDate !=null and startDate !='' and endDate !=null and endDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND a.SCH_END_DATE >= #{endDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		and a.TEACHER_USER_FLOW='${teacherUserFlow}'
	</select>
	<select id="jsresTeacherSchDocByDate" resultMap="com.pinde.sci.dao.base.SysUserMapper.BaseResultMap">
		select * from sys_user where user_Flow in(
		select distinct(a.USER_FLOW) from (
		select P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		p.SCH_START_DATE SCH_START_DATE,
		p.SCH_END_DATE SCH_END_DATE,
		RD.DOCTOR_TYPE_ID,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code =
		'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		) A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND ( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="startDate !=null and startDate !='' and endDate !=null and endDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND a.SCH_END_DATE >= #{endDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		and a.TEACHER_USER_FLOW='${teacherUserFlow}'
		)
		order by user_name,user_flow
	</select>
	<select id="jsresSchDoctorSchProcessTeacherQuery" resultType="int">
		select count(distinct(a.USER_FLOW)) from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		RD.DOCTOR_TYPE_ID,
		p.sch_start_date,
		p.sch_end_date,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		and a.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<select id="jsresSchDoctorSchProcessWaitingExamineQuery" resultType="int">
		select count(0)
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		left join RES_REC rr
		on rr.PROCESS_FLOW=p.PROCESS_FLOW
		and rr.oper_user_flow=su.user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y' and rr.RECORD_STATUS='Y'
		and rr.AUDIT_STATUS_ID is null
		and p.TEACHER_USER_FLOW=#{teacherUserFlow}
		and rr.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
			 AND (p.SCH_START_DATE <![CDATA[ <= ]]> nvl((select cfg2.power_start_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '0000-00-00')
				AND p.SCH_END_DATE >= nvl((select cfg2.power_end_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '9999-99-99')
				OR p.SCH_START_DATE >= nvl((select cfg2.power_start_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '0000-00-00')
				AND p.SCH_START_DATE <![CDATA[ <= ]]> nvl((select cfg2.power_end_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '9999-99-99')
				OR p.SCH_END_DATE >= nvl((select cfg2.power_start_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '0000-00-00')
				AND p.SCH_END_DATE <![CDATA[ <= ]]> nvl((select cfg2.power_end_time from jsres_power_cfg cfg2 where cfg2.record_status = 'Y'
				AND cfg2.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				), '9999-99-99'))
				and  nvl(( select
					CFG_VALUE
					FROM jsres_power_cfg cfg
					WHERE cfg.record_status = 'Y'
					AND cfg.cfg_code = ('jsres_doctor_app_menu_' || rd.doctor_flow))
						, 'N') = 'Y'
	</select>

	<select id="jsresSchDoctorSchProcessHead"  resultMap="processUserMap">
		select A.*
		from (select p.PROCESS_FLOW,
		p.USER_FLOW USER_FLOW,
		P.ORG_FLOW          ORG_FLOW,
		P.ORG_NAME          ORG_NAME,
		P.DEPT_FLOW DEPT_FLOW,
		P.DEPT_NAME,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_RESULT_FLOW,
		P.SCH_START_DATE SCH_START_DATE,
		P.SCH_END_DATE SCH_END_DATE,
		P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		P.TEACHER_USER_NAME,
		P.HEAD_USER_FLOW,
		P.HEAD_USER_NAME,
		P.SCH_FLAG,
		P.SCH_SCORE,
		P.IS_CURRENT_FLAG,
		su.USER_Name USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		RD.DOCTOR_TYPE_Name,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		AND P.DEPT_FLOW IN
		(
			SELECT DEPT_FLOW FROM
			SYS_USER_DEPT D WHERE D.RECORD_STATUS = 'Y'
			AND (D.USER_FLOW = #{userFlow}
			<if test="deptFlow!=null and deptFlow!=''">
				OR D.DEPT_FLOW = #{deptFlow}
			</if>
		))
		<if test="doctorName!=null and doctorName!=''">
			<bind name="name" value="'%'+doctorName+'%'"/>
			and su.USER_NAME like #{name}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		) A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test='schStartDate!=null and schStartDate!=""'>
			and a.SCH_START_DATE <![CDATA[>=]]> #{schStartDate}
		</if>
		<if test='schEndDate!=null and schEndDate!=""'>
			and a.SCH_END_DATE <![CDATA[<=]]> #{schEndDate}
		</if>
		<if test='schDeptFlow!=null and schDeptFlow!=""'>
			AND a.SCH_DEPT_FLOW= #{schDeptFlow}
		</if>
		<if test="isAfter!=null and isAfter!='' and isAfter=='Y'.toString()">
			and exists (
				SELECT 1 FROM RES_SCH_PROCESS_EXPRESS RR
				WHERE RR.RECORD_STATUS = 'Y'
				AND RR.PROCESS_FLOW =a.PROCESS_FLOW
				AND  RR.REC_TYPE_ID = 'AfterEvaluation'
				AND RR.MANAGER_AUDIT_USER_FLOW IS NOT NULL
				<if test="biaoJi!=null and biaoJi!=''">
					AND RR.HEAD_AUDIT_STATUS_ID IS NULL
				</if>
			)
		</if>
		ORDER BY a.SCH_START_DATE DESC nulls last
	</select>

	<select id="temporaryOutAuditSearch"  resultMap="processUserMap">
		select p.PROCESS_FLOW,
		p.USER_FLOW USER_FLOW,
		P.ORG_FLOW          ORG_FLOW,
		P.ORG_NAME          ORG_NAME,
		P.DEPT_FLOW DEPT_FLOW,
		P.MODIFY_TIME,
		P.DEPT_NAME,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_RESULT_FLOW,
		P.SCH_START_DATE SCH_START_DATE,
		P.SCH_END_DATE SCH_END_DATE,
		P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		P.TEACHER_USER_NAME,
		P.HEAD_USER_FLOW,
		P.HEAD_USER_NAME,
		P.SCH_FLAG,
		P.SCH_SCORE,
		P.IS_CURRENT_FLAG,
		su.USER_Name USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		RD.DOCTOR_TYPE_Name
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		AND P.DEPT_FLOW IN
		(
		SELECT DEPT_FLOW FROM
		SYS_USER_DEPT D WHERE D.RECORD_STATUS = 'Y'
		AND (D.USER_FLOW = #{userFlow}
		<if test="deptFlow!=null and deptFlow!=''">
			OR D.DEPT_FLOW = #{deptFlow}
		</if>
		))
		<if test="doctorName!=null and doctorName!=''">
			<bind name="name" value="'%'+doctorName+'%'"/>
			and su.USER_NAME like #{name}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		AND P.TEMPORARY_OUT = 'Y' AND P.TEMPORARY_AUDIT_STATUS_ID = 'Auditing'
		ORDER BY P.MODIFY_TIME DESC
	</select>

	<select id="temporaryOutSearch"  resultMap="processUserMap">
		select p.PROCESS_FLOW,
		p.USER_FLOW USER_FLOW,
		P.ORG_FLOW          ORG_FLOW,
		P.ORG_NAME          ORG_NAME,
		P.DEPT_FLOW DEPT_FLOW,
		P.MODIFY_TIME,
		P.DEPT_NAME,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_RESULT_FLOW,
		P.SCH_START_DATE SCH_START_DATE,
		P.SCH_END_DATE SCH_END_DATE,
		P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		P.TEACHER_USER_NAME,
		P.HEAD_USER_FLOW,
		P.HEAD_USER_NAME,
		P.SCH_FLAG,
		P.SCH_SCORE,
		P.IS_CURRENT_FLAG,
		P.TEMPORARY_AUDIT_STATUS_ID,
		P.TEMPORARY_AUDIT_STATUS_NAME,
		su.USER_Name USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		RD.DOCTOR_TYPE_Name
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		<if test="roleId != null and roleId == 'user'.toString()">
			and su.USER_FLOW = #{userFlow}
		</if>
		<if test="roleId != null and roleId == 'org'.toString()">
			and rd.ORG_FLOW = #{orgFlow}
		</if>
		<if test="roleId != null and roleId != 'org'.toString() and roleId != 'user'.toString()">
			AND P.DEPT_FLOW IN
			(
			SELECT DEPT_FLOW FROM
			SYS_USER_DEPT D WHERE D.RECORD_STATUS = 'Y'
			AND (D.USER_FLOW = #{userFlow}
			<if test="deptFlow!=null and deptFlow!=''">
				OR D.DEPT_FLOW = #{deptFlow}
			</if>
			))
		</if>

		<if test="doctorName!=null and doctorName!=''">
			<bind name="name" value="'%'+doctorName+'%'"/>
			and su.USER_NAME like #{name}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="temporaryAuditStatusId!=null and temporaryAuditStatusId!=''">
			AND p.TEMPORARY_AUDIT_STATUS_ID = #{temporaryAuditStatusId}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			AND rd.training_type_id = #{trainingTypeId}
		</if>
		AND P.TEMPORARY_OUT = 'Y'
		ORDER BY P.MODIFY_TIME DESC
	</select>

	<update id="temporaryOutAudit">
		update  res_doctor_sch_process set TEMPORARY_AUDIT_STATUS_ID = #{temporaryAuditStatusId},TEMPORARY_AUDIT_STATUS_NAME = #{temporaryAuditStatusName}
		where PROCESS_FLOW = #{processFlow}
	</update>

	<resultMap type="HashMap" id="processEvalMap">
		<result column="PROCESS_FLOW" javaType="string" property="processFlow"></result>
		<result column="USER_FLOW" javaType="string" property="userFlow"></result>
		<result column="ORG_FLOW" javaType="string" property="orgFlow"></result>
		<result column="ORG_NAME" javaType="string" property="orgName"></result>
		<result column="CAT_SPE_ID" javaType="string" property="catSpeId"></result>
		<result column="CAT_SPE_NAME" javaType="string" property="catSpeName"></result>
		<result column="SPE_ID" javaType="string" property="speId"></result>
		<result column="SPE_NAME" javaType="string" property="speName"></result>
		<result column="TRAIN_YEAR" javaType="string" property="trainYear"></result>
		<result column="SESSION_NUMBER" javaType="string" property="sessionNumber"></result>
		<result column="GRADUATION_YEAR" javaType="string" property="graduationYear"></result>
		<result column="DEPT_FLOW" javaType="string" property="deptFlow"></result>
		<result column="DEPT_NAME" javaType="string" property="deptName"></result>
		<result column="SCH_DEPT_FLOW" javaType="string" property="schDeptFlow"></result>
		<result column="SCH_DEPT_NAME" javaType="string" property="schDeptName"></result>
		<result column="SCH_RESULT_FLOW" javaType="string" property="schResultFlow"></result>
		<result column="SCH_START_DATE" javaType="string" property="schStartDate"></result>
		<result column="SCH_END_DATE" javaType="string" property="schEndDate"></result>
		<result column="TEACHER_USER_FLOW" javaType="string" property="teacherUserFlow"></result>
		<result column="TEACHER_USER_NAME" javaType="string" property="teacherUserName"></result>
		<result column="HEAD_USER_FLOW" javaType="string" property="headUserFlow"></result>
		<result column="HEAD_USER_NAME" javaType="string" property="headUserName"></result>
		<result column="USER_NAME" javaType="string" property="userName"></result>
		<result column="SEX_NAME" javaType="string" property="sexName"></result>
		<result column="USER_PHONE" javaType="string" property="userPhone"></result>
		<result column="DOCTOR_TYPE_ID" javaType="string" property="doctorTypeId"></result>
		<result column="DOCTOR_TYPE_NAME" javaType="string" property="doctorTypeName"></result>
	</resultMap>
	<!-- sy:start_year, sm:start_month, ey:end_year, em:end_month，先算出来，给后面复用，不然后面for中要多次计算   -->
	<select id="jsresSchDoctorSchProcessEval"  resultMap="processEvalMap">
		select * from (
		select
		to_number(substr(p.SCH_START_DATE, 1, 4)) sy,
		    substr(p.SCH_START_DATE, 6, 2) sm,
		    to_number(substr(p.SCH_END_DATE, 1, 4)) ey,
		    substr(p.SCH_END_DATE, 6, 2) em,
		p.PROCESS_FLOW,
		p.USER_FLOW ,
		DR.ORG_FLOW ,
		DR.ORG_NAME ,
		DR.CAT_SPE_ID,
		DR.CAT_SPE_NAME,
		DR.SPE_ID,
		DR.SPE_NAME,
		DR.TRAIN_YEAR,
		DR.SESSION_NUMBER,
		DR.GRADUATION_YEAR,
		DR.DOCTOR_STATUS_ID,
		P.DEPT_FLOW,
		P.DEPT_NAME,
		P.SCH_DEPT_FLOW,
		P.SCH_DEPT_NAME,
		P.SCH_RESULT_FLOW,
		P.SCH_START_DATE,
		P.SCH_END_DATE,
		P.TEACHER_USER_FLOW,
		P.TEACHER_USER_NAME,
		P.HEAD_USER_FLOW,
		P.HEAD_USER_NAME,
		su.USER_Name USER_Name,
		su.ID_NO,
		su.SEX_NAME,
		su.USER_PHONE,
		RD.DOCTOR_TYPE_ID,
		RD.DOCTOR_TYPE_NAME,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join sch_arrange_result r
		on p.sch_result_flow=r.result_flow
		left join res_doctor_recruit dr
		on rd.doctor_flow=dr.doctor_flow
		and dr.session_number=r.session_number
		and dr.org_flow=r.org_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		and r.record_status='Y'
		and dr.record_status='Y'
		and dr.audit_status_id='Passed'
		) a
		where  A.org_flow in(
		SELECT ORG_FLOW
		FROM PDSCI.SYS_ORG
		WHERE PDSCI.SYS_ORG.RECORD_STATUS='Y'

		<if test="org!=null">
			<if test="org.orgProvId!=null and org.orgProvId!=''">
				AND ORG_PROV_ID = #{org.orgProvId}
			</if>
			<if test="org.orgCityId!=null and org.orgCityId!=''">
				AND ORG_CITY_ID = #{org.orgCityId}
			</if>
			<if test="org.orgLevelId!=null and org.orgLevelId!=''">
				AND ORG_LEVEL_ID = #{org.orgLevelId}
			</if>
			<if test="org.orgTypeId!=null and org.orgTypeId!=''">
				AND ORG_TYPE_ID = #{org.orgTypeId}
			</if>
		</if>
		)
		and A.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))

		<if test="orgFlow!=null and orgFlow!=''">
			AND A.org_flow = #{orgFlow}
		</if>
		<if test="orgFlowList!=null and orgFlowList.size>0">
			and A.org_flow in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and A.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="speIds!=null and speIds.size>0">
			and A.SPE_ID in
			<foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="trainingTypeId!=null and trainingTypeId!=''">
			and A.CAT_SPE_ID = #{trainingTypeId}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and A.SPE_ID = #{trainingSpeId}
		</if>
		<if test="doctorStatusId!=null and doctorStatusId!=''">
			and A.DOCTOR_STATUS_ID = #{doctorStatusId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and A.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="schDeptFlow!=null and schDeptFlow!=''">
			and A.SCH_DEPT_FLOW = #{schDeptFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and A.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="userName" value="'%'+userName+'%'"/>
			and A.USER_NAME like #{userName}
		</if>
		<if test="idNo!=null and idNo!=''">
			<bind name="idNo" value="'%'+idNo+'%'"/>
			and A.ID_NO like #{idNo}
		</if>
		<!--<if test="userFlow !=null and deptFlow!=''">-->
			<!--and A.HEAD_USER_FLOW =#{userFlow}-->
		<!--</if>-->
		<if test="role!=null and role!=''and role =='head'.toString()">
			and (
			exists(
			select null
			from SYS_USER_DEPT sud
			where sud.RECORD_STATUS='Y'
			and sud.USER_FLOW=#{userFlow}
			and A.DEPT_FLOW=sud.DEPT_FLOW
			)
			<if test="deptFlow!=null and deptFlow!=''">
				or A.DEPT_FLOW=#{deptFlow}
			</if>
			)
		</if>
		<if test="schMonthList != null and schMonthList.size() > 0">
			<foreach collection="schMonthList" item="schMonth" open="and (" close=") > 0" separator=" + ">
				(case
				when a.sy = a.ey
					and a.sm &lt;= #{schMonth}
		  			and a.em >= #{schMonth}
				    then 1
				when a.sy + 1 = a.ey
					AND (a.sm &lt;= a.em OR (a.em >= #{schMonth} OR a.sm &lt; #{schMonth}))
					then 1
				when a.sy + 1 &lt; a.ey
				then 1
				else 0
				end)
			</foreach>
		</if>
		ORDER BY A.SCH_START_DATE DESC
	</select>
	<resultMap type="HashMap" id="evalMap">
		<result column="PROCESS_FLOW" javaType="string" property="processFlow"></result>
		<result column="RECORD_FLOW" javaType="string" property="recordFlow"></result>
		<result column="EVAL_MONTH" javaType="string" property="evalMonth"></result>
		<result column="START_TIME" javaType="string" property="startTime"></result>
		<result column="END_TIME" javaType="string" property="endTime"></result>
		<result column="EVAL_SCORE" javaType="string" property="evalScore"></result>
		<result column="IS_FORM" javaType="string" property="isForm"></result>
	</resultMap>
	<select id="findOneProcessEvals" parameterType="java.util.Map" resultMap="evalMap">
		select
		a.PROCESS_FLOW,
		a.EVAL_MONTH,
		a.START_TIME,
		a.END_TIME,
		eval.RECORD_FLOW,
		eval.EVAL_SCORE,
		eval.IS_FORM,
		eval.attendance,
		eval.leave,
		eval.absenteeism
		from
		(
		<if test="times!=null and times.size>0">
			<foreach collection="times" item="item" index="index" separator=" UNION " >
				SELECT #{item.processFlow} PROCESS_FLOW ,#{item.evlMonth} EVAL_MONTH,#{item.startTime} START_TIME,#{item.endTime} END_TIME FROM DUAL
			</foreach>
		</if>
		) a
		left join
		RES_DOCTOR_SCH_PROCESS_EVAL eval on eval.process_flow=a.process_flow
		and eval.EVAL_MONTH = a.EVAL_MONTH
		and eval.record_status='Y'
		order by a.EVAL_MONTH
	</select>
	<select id="jsresSchDoctorSchProcessQuery"  resultMap="processUserMap">
		select A.*
		from (select p.PROCESS_FLOW,
		p.USER_FLOW,
		p.ORG_FLOW,
		p.ORG_NAME,
		p.DEPT_FLOW,
		p.DEPT_NAME,
		p.SCH_DEPT_FLOW,
		p.SCH_DEPT_NAME,
		p.SCH_RESULT_FLOW,
		p.SCH_START_DATE,
		p.SCH_END_DATE,
		p.TEACHER_USER_FLOW,
		p.TEACHER_USER_NAME,
		p.HEAD_USER_FLOW,
		p.HEAD_USER_NAME,
		p.SCH_FLAG,
		p.SCH_SCORE,
		p.IS_CURRENT_FLAG ,
		su.USER_Name,
		su.SEX_NAME,
		su.USER_PHONE,
		rd.TRAINING_SPE_ID,
		rd.TRAINING_SPE_NAME,
		nvl(d.eval_num,0) eval_num,
		rd.DOCTOR_TYPE_ID,
		rd.DOCTOR_TYPE_Name,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		left join (select c.process_flow,count(c.record_flow) eval_num from res_doctor_sch_process_eval c where c.record_status='Y' group by c.process_flow)d on d.process_flow = p.process_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y') A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="teacherUserFlow!=null and teacherUserFlow!=''">
			and a.TEACHER_USER_FLOW = #{teacherUserFlow}
		</if>
		<if test='schStartDate!=null and schStartDate!=""'>
			and a.SCH_START_DATE <![CDATA[>=]]> #{schStartDate}
		</if>
		<if test='schEndDate!=null and schEndDate!=""'>
			and a.SCH_END_DATE <![CDATA[<=]]> #{schEndDate}
		</if>
		<if test="userName!=null and userName!=''">
			<bind name="name" value="'%'+userName+'%'"/>
			and a.user_Name like #{name}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and a.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="biaoJi!=null and biaoJi!='' and data!=null and data!=''">
			<if test="data=='Y'.toString()">
				and (
				exists(
				select null
				from res_rec rr
				where rr.RECORD_STATUS='Y'
				and rr.PROCESS_FLOW = a.PROCESS_FLOW
				and rr.AUDIT_STATUS_ID is null
				and rr.rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
				)
				or not exists(
					select null
					from res_sch_process_express rr
					where rr.RECORD_STATUS='Y'
					and rr.PROCESS_FLOW = a.PROCESS_FLOW
					and rr.rec_type_id = 'AfterEvaluation'
					)
				)
			</if>
			<if test="data=='N'.toString()">
				and(
					not exists(
					select null
					from res_sch_process_express rr
					where rr.RECORD_STATUS='Y'
					and rr.PROCESS_FLOW = a.PROCESS_FLOW
					and rr.rec_type_id in ('DOPS')
					)
					or not exists(
					select null
					from res_sch_process_express rr
					where rr.RECORD_STATUS='Y'
					and rr.PROCESS_FLOW = a.PROCESS_FLOW
					and rr.rec_type_id in ('Mini_CEX')
					)
				)
			</if>
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and a.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='evalFlag=="on"'>
			and (MONTHS_BETWEEN(to_date(substr(a.sch_end_date,0,7),'yyyy-MM'),to_date(substr(a.sch_start_date,0,7),'yyyy-MM'))+1 )!=a.eval_num
		</if>
		ORDER BY a.process_flow DESC nulls last
	</select>

	<select id="resSchDoctorSchProcessDistinctQuery" resultType="int">
		select count(distinct(re.USER_FLOW)) from RES_DOCTOR_SCH_PROCESS re where re.RECORD_STATUS='Y'
		and re.SCH_START_DATE <![CDATA[<=]]>to_char(sysdate,'yyyy-MM-dd')
		and re.SCH_END_DATE <![CDATA[>=]]>to_char(sysdate,'yyyy-MM-dd')
		and re.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<select id="resSchDoctorSchProcessTeacherQuery" resultType="int">
		select count(distinct(re.USER_FLOW)) from RES_DOCTOR_SCH_PROCESS re,sys_user su
		where re.RECORD_STATUS='Y'
		and re.user_flow=su.user_flow
		and su.record_status='Y'
		and re.TEACHER_USER_FLOW=#{teacherUserFlow}
	</select>
	<!--/****************************高******校******管******理******员******角******色************************************************/-->

	<select id="docWorkingSearchForUni"  resultMap="docWorkSearchExt">
		SELECT rd.DOCTOR_FLOW,
		SU.USER_NAME,
		rd.TRAINING_SPE_ID,
		rd.TRAINING_SPE_NAME,
		rd.SESSION_NUMBER,
		nvl((SELECT SUM(req.REQ_NUM)
		FROM SCH_ROTATION_DEPT_REQ req
		WHERE req.record_status = 'Y'
		and rd.org_flow is not null
		AND REQ.ROTATION_FLOW = RD.ROTATION_FLOW
		and req.rec_type_id in ('CaseRegistry', 'DiseaseRegistry', 'SkillRegistry', 'OperationRegistry', 'CampaignRegistry')),0) REQ_NUM,
		NVL((SELECT COUNT(1)
		FROM RES_REC rr
		INNER JOIN SCH_ROTATION_DEPT srd
		ON rr.SCH_ROTATION_DEPT_FLOW = srd.RECORD_FLOW
		WHERE rr.RECORD_STATUS = 'Y'
		AND srd.RECORD_STATUS = 'Y'
		and rd.org_flow is not null
		AND RR.OPER_USER_FLOW = RD.DOCTOR_FLOW
		AND rr.REC_TYPE_ID IN ('CaseRegistry', 'DiseaseRegistry', 'SkillRegistry', 'OperationRegistry', 'CampaignRegistry')),
		0) COMPLETE_NUM,
		NVL((
		SELECT COUNT(1)
		FROM RES_REC rr
		INNER JOIN SCH_ROTATION_DEPT srd ON rr.SCH_ROTATION_DEPT_FLOW = srd.RECORD_FLOW
		WHERE rr.RECORD_STATUS = 'Y'
		AND srd.RECORD_STATUS = 'Y'
		AND RR.AUDIT_STATUS_ID IS NOT NULL
		AND RR.OPER_USER_FLOW = RD.DOCTOR_FLOW
		AND rr.REC_TYPE_ID IN ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
		), 0) AS AUDIT_NUM,
		NVL((SELECT COUNT(1)
		FROM sch_rotation_dept dept
		WHERE record_status = 'Y'
		AND dept.org_flow IS NULL
		AND EXISTS
		(SELECT 1
		FROM sch_rotation_group g
		WHERE rotation_flow = RD.ROTATION_FLOW
		and rd.org_flow is not null
		AND record_status = 'Y'
		AND org_flow IS NULL
		AND g.group_flow = dept.group_flow)),
		0) AS rotationNum,
		NVL((select count(1)
		from (SELECT count(rr.rec_type_id), sar.result_flow, rdsp.user_flow
		FROM SCH_ARRANGE_RESULT sar

		inner JOIN RES_DOCTOR_SCH_PROCESS rdsp
		ON rdsp.SCH_RESULT_FLOW = sar.RESULT_FLOW
		inner join RES_SCH_PROCESS_EXPRESS rr
		on rr.PROCESS_FLOW = rdsp.PROCESS_FLOW
		INNER JOIN SCH_ROTATION_DEPT srd
		ON rr.SCH_ROTATION_DEPT_FLOW = srd.RECORD_FLOW
		WHERE rr.RECORD_STATUS = 'Y'
		AND srd.RECORD_STATUS = 'Y'
		and sar.RECORD_STATUS = 'Y'
		AND rdsp.RECORD_STATUS = 'Y'
		and rd.org_flow is not null
		AND rdsp.ORG_FLOW = rd.org_flow
		AND RR.OPER_USER_FLOW = rd.doctor_flow
		AND rr.REC_TYPE_ID = 'AfterEvaluation'
		group by sar.result_flow, rdsp.user_flow
		having count(rr.rec_type_id) > 0) t),
		0) schNum,
		NVL((select count(1)
		from (SELECT rr.process_flow, count(rr.rec_flow)
		from RES_DOCTOR_SCH_PROCESS rdsp
		left join RES_REC rr
		on rr.process_flow = rdsp.process_flow
		WHERE rr.RECORD_STATUS = 'Y'
		and rdsp.record_status = 'Y'
		AND rdsp.ORG_FLOW = rd.org_flow
		AND RR.OPER_USER_FLOW = rd.doctor_flow
		and rd.org_flow is not null
		AND rr.REC_TYPE_ID IN('CaseRegistry', 'DiseaseRegistry', 'SkillRegistry', 'OperationRegistry', 'CampaignRegistry')
		group by rr.process_flow
		having count(rr.rec_flow) > 0)),
		0) ylz
		FROM RES_DOCTOR rd
		INNER JOIN SYS_USER SU
		ON RD.DOCTOR_FLOW = SU.USER_FLOW
		LEFT JOIN (SELECT MAX(GRADUATION_YEAR) AS GRADUATION_YEAR, DOCTOR_FLOW
		FROM RES_DOCTOR_RECRUIT
		GROUP BY DOCTOR_FLOW) rdr
		ON rdr.DOCTOR_FLOW = rd.DOCTOR_FLOW
		WHERE rd.RECORD_STATUS = 'Y'
		and rd.org_flow is not null
		and (
		<trim prefix="" prefixOverrides="OR">
			<if test="workOrgId != null and workOrgId != ''">OR rd.work_org_id = #{workOrgId}</if>
			<if test="workOrgName != null and workOrgName != ''">OR rd.work_org_name = #{workOrgName}</if>
		</trim>
		)
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and rd.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND rd.ORG_FLOW = #{orgFlow}
		</if>
		<if test='speId != null and speId != ""'>
			AND rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='docName != null and docName != ""'>
			<bind name="name" value="'%'+docName+'%'"/>
			AND SU.USER_NAME LIKE #{name}
		</if>
		<if test='cardNo != null and cardNo != ""'>
			AND su.ID_NO = #{cardNo}
		</if>
		<if test='trainType != null and trainType != ""'>
			AND rd.training_type_id = #{trainType}
		</if>
		<if test='graduationYear != null and graduationYear != ""'>
			AND rdr.GRADUATION_YEAR = #{graduationYear}
		</if>
	</select>

	<resultMap id="orgTeaAuditInfoExt" type="HashMap">
		<result  property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="auditNum" column="AUDIT_NUM" javaType="string"/>
		<result  property="notAuditNum" column="NOT_AUDIT_NUM" javaType="string"/>
	</resultMap>
	<select id="orgTeaAuditInfoForUni"  resultMap="orgTeaAuditInfoExt">
		SELECT * FROM (
			SELECT ORG_FLOW,ORG_NAME,SUM(COMPLETE_NUM) COMPLETE_NUM ,SUM(AUDIT_NUM) AUDIT_NUM ,SUM(NOT_AUDIT_NUM)NOT_AUDIT_NUM  FROM (
				SELECT *
				from JSRES_org_teacher_audit_TEMP where
			   (
				<trim prefix="" prefixOverrides="OR">
					<if test="workOrgId != null and workOrgId != ''">OR work_org_id = #{workOrgId}</if>
					<if test="workOrgName != null and workOrgName != ''">OR work_org_name = #{workOrgName}</if>
				</trim>
				)
				<if test='sessionNumber != null and sessionNumber != ""'>
					AND SESSION_NUMBER = #{sessionNumber}
				</if>
				)
				  A
			GROUP BY ORG_FLOW,ORG_NAME
			) B
			ORDER BY B.COMPLETE_NUM DESC
	</select>

	<resultMap id="workListMap" type="HashMap">
		<result  property="recruitFlow" column="RECRUIT_FLOW" javaType="string"/>
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="doctorName" column="USER_NAME" javaType="string"/>
		<result  property="orgName" column="ORG_NAME" javaType="string"/>
		<result  property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result  property="trainingSpeId" column="TRAINING_SPE_ID" javaType="string"/>
		<result  property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="auditNum" column="AUDIT_NUM" javaType="string"/>
		<result  property="rotationNum" column="ROTATION_NUM" javaType="string"/>
		<result  property="schNum" column="SCH_NUM" javaType="string"/>
		<result  property="afterNum" column="AFTER_NUM" javaType="string"/>
		<result  property="ylz" column="YLZ_NUM" javaType="string"/>
		<result  property="cbl" column="COMPLETE_BI" javaType="string"/>
		<result  property="abl" column="AUDIT_BI" javaType="string"/>
	</resultMap>
	<select id="workList"  resultMap="workListMap">
		    SELECT A.DOCTOR_FLOW,
           A.ORG_NAME,
           A.ORG_FLOW,
           A.USER_NAME,
           A.RECRUIT_FLOW,
           A.TRAINING_SPE_ID,
           A.TRAINING_SPE_NAME,
           A.SESSION_NUMBER,
           A.REQ_NUM,
           A.COMPLETE_NUM,
           A.AUDIT_NUM,
           A.ROTATION_NUM,
           A.YLZ_NUM,
           A.SCH_NUM,
           A.AFTER_NUM,
           A.COMPLETE_BI,
		   A.AUDIT_BI

      FROM (SELECT rd.DOCTOR_FLOW,
				   DR.ORG_FLOW,
				   ORG2.ORG_CODE,
                   SU.USER_NAME,
					SU.USER_FLOW,
                   DR.SPE_ID TRAINING_SPE_ID,
                   DR.SPE_NAME TRAINING_SPE_NAME,
                   DR.SESSION_NUMBER,
                   DR.RECRUIT_FLOW,
					u.ORG_NAME,
		           JDW.REQ_NUM,
                   NVL(JDW.COMPLETE_NUM, 0) COMPLETE_NUM,
                   NVL(JDW.AUDIT_NUM, 0) AUDIT_NUM,
                   NVL(JDW.YLZ_NUM, 0) YLZ_NUM,
                   NVL(JDW.SCH_NUM, 0) SCH_NUM,
                   NVL(JDW.AFTER_NUM, 0) AFTER_NUM,
		to_number(NVL(JDW.COMPLETE_BI,0)) COMPLETE_BI,
		to_number(NVL(JDW.AUDIT_BI,0)) AUDIT_BI,
					JDW.rotation_Num
              FROM RES_DOCTOR_RECRUIT dr
			  left join  pdsci.SYS_USER u
			  on dr.DOCTOR_FLOW =  u.USER_FLOW
			  LEFT JOIN RES_DOCTOR RD
				ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
             INNER JOIN SYS_USER SU
                ON RD.DOCTOR_FLOW = SU.USER_FLOW
              LEFT JOIN JSRES_DOCTOR_WORK JDW
				ON RD.DOCTOR_FLOW =JDW.DOCTOR_FLOW
				and dr.org_flow=jdw.org_flow
				AND DR.RECRUIT_FLOW =JDW.RECRUIT_FLOW
			  LEFT JOIN SYS_ORG ORG2
				ON ORG2.ORG_FLOW=DR.ORG_FLOW
             WHERE  RD.RECORD_STATUS = 'Y'
				AND DR.RECORD_STATUS='Y'
               AND SU.RECORD_STATUS = 'Y'
				AND dr.AUDIT_STATUS_ID = 'Passed'
				<if test="docTypeList!=null and docTypeList.size>0">
					and rd.DOCTOR_TYPE_ID in
					<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
				AND DR.ORG_FLOW IN
				( SELECT ORG_FLOW FROM SYS_ORG ORG
					WHERE ORG.RECORD_STATUS = 'Y'
					AND ORG.ORG_PROV_ID = '320000'
					<if test='orgCityId != null and orgCityId != ""'>
						AND ORG.ORG_CITY_ID = #{orgCityId}
					</if>
					AND ORG.ORG_TYPE_ID = 'Hospital'
						<if test='jointOrgFlag != null and jointOrgFlag != ""'>
							AND (

								<if test='orgLevel != null and orgLevel != ""'>
									ORG.ORG_LEVEL_ID = #{orgLevel}
								</if>
								<if test='orgFlow != null and orgFlow != "" and (orgLevel != null and orgLevel != "")'>
									AND	ORG.ORG_FLOW = #{orgFlow}
								</if>
								<if test='orgFlow != null and orgFlow != "" and (orgLevel == null or orgLevel == "")'>
									ORG.ORG_FLOW = #{orgFlow}
								</if>
								OR org.org_flow in (
								select joint_org_flow from
								RES_JOINT_ORG JOINT
								WHERE RECORD_STATUS='Y'
								<if test='orgFlow != null and orgFlow != ""'>
									AND JOINT.ORG_FLOW = #{orgFlow}
								</if>
								)

							)
						</if>
						<if test='	jointOrgFlag == null or jointOrgFlag == ""'>
							<if test='orgLevel != null and orgLevel != ""'>
								AND ORG.ORG_LEVEL_ID = #{orgLevel}
							</if>
							<if test='orgFlow != null and orgFlow != ""'>
								AND	ORG.ORG_FLOW = #{orgFlow}
							</if>
						</if>
				)
				<if test='typeId != null and typeId != ""'>
					AND rd.TRAINING_TYPE_ID = #{typeId}
				</if>
				<if test='speId != null and speId != ""'>
					AND rd.TRAINING_SPE_ID = #{speId}
				</if>
				<if test="sessionNumbers!=null and sessionNumbers.size>0">
					and DR.SESSION_NUMBER in
					<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
				</if>
				<if test='sessionNumber != null and sessionNumber != ""'>
					AND DR.SESSION_NUMBER = #{sessionNumber}
				</if>
				<if test='userName != null and userName != ""'>
					<bind name="name" value="'%'+userName+'%'"/>
					AND SU.USER_NAME LIKE #{name}
				</if>
				<if test='idNo != null and idNo != ""'>
					<bind name="idNo" value="'%'+idNo+'%'"/>
					AND su.ID_NO LIKE #{idNo}
				</if>
				<if test='graduationYear != null and graduationYear != ""'>
					AND DR.GRADUATION_YEAR = #{graduationYear}
				</if>
               ) A

			<if test='sort == null or sort == ""'>
				ORDER BY A.ORG_CODE ,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'),A.USER_FLOW
			</if>
			<if test='sort != null and sort != ""'>
			  	<if test="sort=='completeBidesc'">
					ORDER BY COMPLETE_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'),A.USER_FLOW
				</if>
			  	<if test="sort=='completeBiasc'">
					ORDER BY COMPLETE_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'),A.USER_FLOW
				</if>
			  	<if test="sort=='auditBidesc'">
					ORDER BY AUDIT_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'),A.USER_FLOW
				</if>
			  	<if test="sort=='auditBiasc'">
					ORDER BY AUDIT_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'),A.USER_FLOW
				</if>
			</if>


	</select>

	<resultMap id="workDetailMap" type="HashMap">
		<result  property="recordFlow" column="RECORD_FLOW" javaType="string"/>
		<result  property="standardDeptId" column="STANDARD_DEPT_ID" javaType="string"/>
		<result  property="standDeptName" column="STANDARD_DEPT_NAME" javaType="string"/>
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result  property="schStartDate" column="SCH_START_DATE" javaType="string"/>
		<result  property="schEndDate" column="SCH_END_DATE" javaType="string"/>
		<result  property="month" column="F_MONTH" javaType="string"/>
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="string"/>
		<result  property="schFlag" column="SCH_FLAG" javaType="string"/>
		<result  property="teacherUserName" column="TEACHER_USER_NAME" javaType="string"/>
		<result  property="headUserName" column="HEAD_USER_NAME" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="evaluationNum" column="EVALUATION_NUM" javaType="string"/>
		<result  property="auditNum" column="AUDIT_NUM" javaType="string"/>
		<result  property="cbl" column="COMPLETE_BI" javaType="string"/>
		<result  property="abl" column="AUDIT_BI" javaType="string"/>
	</resultMap>
	<select id="workDetail"  resultMap="workDetailMap">
	  SELECT *
		FROM (
		SELECT A.RECORD_FLOW,
		   A.STANDARD_DEPT_ID,
		   A.STANDARD_DEPT_NAME,
		   A.SCH_MONTH,
		   A.SCH_DEPT_FLOW,
		   A.SCH_DEPT_NAME,
		   A.SCH_START_DATE,
		   A.F_MONTH,
		   A.SCH_END_DATE,
		   A.TEACHER_USER_FLOW,
		   A.SCH_FLAG,
		   A.TEACHER_USER_NAME,
		   A.HEAD_USER_NAME,
		   A.REQ_NUM,
		   A.COMPLETE_NUM,
		   A.AUDIT_NUM,
		   A.EVALUATION_NUM,
			ROUND(CASE
			WHEN a.REQ_NUM = 0 THEN
			1
			ELSE
			a.COMPLETE_NUM / a.REQ_NUM
			END,
			2) * 100 COMPLETE_BI,

			ROUND(CASE
			WHEN a.COMPLETE_NUM = 0 THEN
			0
			ELSE
			a.AUDIT_NUM / a.COMPLETE_NUM
			END,
			2) * 100 AUDIT_BI
	  FROM (SELECT    srd.RECORD_FLOW,
						srd.STANDARD_DEPT_ID,
						srd.STANDARD_DEPT_NAME,
						srd.SCH_MONTH,
						detail.SCH_DEPT_FLOW,
						detail.SCH_DEPT_NAME,
						detail.SCH_START_DATE,
						detail.F_MONTH,
						detail.SCH_END_DATE,
						detail.TEACHER_USER_FLOW,
						detail.SCH_FLAG,
						detail.TEACHER_USER_NAME,
						detail.HEAD_USER_NAME,
						detail.REQ_NUM,
						   NVL(detail.COMPLETE_NUM, 0) COMPLETE_NUM,
						   NVL(detail.AUDIT_NUM, 0) AUDIT_NUM,
						   NVL(detail.EVALUATION_NUM, 0) EVALUATION_NUM
				from sch_rotation_dept srd
				left join jsres_doctor_work_detail DETAIL
					on DETAIL.RECORD_STATUS = 'Y'
					and srd.record_flow=DETAIL.record_flow
					AND DETAIL.DOCTOR_FLOW = #{userFlow}
					AND DETAIL.RECRUIT_FLOW =#{recruitFlow}
				WHERE srd.record_status='Y'
					AND srd.rotation_flow = #{rotationFlow}
					and srd.org_flow is null
				<if test='isReduction!=null and isReduction=="Y"'>
					AND EXISTS
					(SELECT 1
					FROM sch_doctor_dept SDD
					WHERE SDD.RECORD_STATUS = 'Y'
					AND sdd.doctor_flow = #{userFlow}
					and sdd.org_flow =#{orgFlow}
					AND sdd.rotation_flow = srd.rotation_flow
					and sdd.group_flow = srd.group_flow
					and sdd.standard_dept_id = srd.standard_dept_id)
				</if>
			   ) A )B
		ORDER BY B.STANDARD_DEPT_ID,B.RECORD_FLOW,B.COMPLETE_BI
	</select>
	<resultMap id="deptWorkDetailMap" type="HashMap">
		<result  property="recordFlow" column="RECORD_FLOW" javaType="string"/>
		<result  property="reqNum" column="REQ_NUM" javaType="string"/>
		<result  property="completeNum" column="COMPLETE_NUM" javaType="string"/>
		<result  property="auditNum" column="AUDIT_NUM" javaType="string"/>
		<result  property="cbl" column="COMPLETE_BI" javaType="string"/>
		<result  property="abl" column="AUDIT_BI" javaType="string"/>
	</resultMap>
	<select id="deptWorkingDetail"  resultMap="deptWorkDetailMap">
		SELECT
			A.RECORD_FLOW,
			SUM(REQ_NUM) REQ_NUM,
			COMPLETE_NUM,
			 AUDIT_NUM,
			ROUND(CASE
			WHEN SUM(REQ_NUM) = 0 THEN
			1
			ELSE
			COMPLETE_NUM / SUM(REQ_NUM)
			END,
			2) * 100 COMPLETE_BI,

			ROUND(CASE
			WHEN COMPLETE_NUM = 0 THEN
			0
			ELSE
			AUDIT_NUM /COMPLETE_NUM
			END,
			2) * 100 AUDIT_BI
		FROM	(
			SELECT SRD.RECORD_FLOW,
			<if test='isReduction!=null and isReduction=="Y"'>
				NVL(ROUND((CASE
				WHEN NVL(SRD.SCH_MONTH, 0) = 0 THEN
				0
				ELSE
				NVL(SDD.SCH_MONTH, 0) / SRD.SCH_MONTH * detail.REQ_NUM
				END),0),
				0) REQ_NUM,
			</if>
			<if test='isReduction==null or isReduction=="N"'>
				NVL(detail.REQ_NUM,0) REQ_NUM,
			</if>
			NVL(detail.COMPLETE_NUM, 0) COMPLETE_NUM,
			NVL(detail.AUDIT_NUM, 0) AUDIT_NUM
			FROM SCH_ROTATION_DEPT SRD
			LEFT JOIN SCH_DOCTOR_DEPT SDD
			ON SDD.GROUP_FLOW = SRD.GROUP_FLOW
			AND SDD.STANDARD_DEPT_ID = SRD.STANDARD_DEPT_ID
			AND SDD.RECORD_STATUS = 'Y'
			and  SDD.doctor_flow = #{userFlow}
			AND SDD.ORG_FLOW =#{orgFlow}
			left join JSRES_DOCTOR_WORK_DETAIL detail
			on srd.record_flow = detail.record_flow
			and detail.doctor_flow =#{userFlow}
			and SRD.ROTATION_FLOW=detail.rotation_flow
			and detail.RECORD_STATUS='Y'
			WHERE SRD.RECORD_STATUS = 'Y'
			AND SRD.ROTATION_FLOW=#{rotationFlow}
			AND SRD.RECORD_FLOW=#{recordFlow}
			AND SRD.ORG_FLOW IS NULL
			<if test='isReduction!=null and isReduction=="Y"'>
				AND SDD.RECORD_FLOW IS NOT NULL
			</if>
			<if test='isReduction==null or isReduction=="N"'>
				AND SDD.RECORD_FLOW IS  NULL
			</if>
			) A
		GROUP BY A.RECORD_FLOW,a.COMPLETE_NUM,AUDIT_NUM
	</select>
	<resultMap id="doctorDeptAvgWorkDetailMap" type="HashMap">
		<result  property="recruitFlow" column="RECRUIT_FLOW" javaType="string"/>
		<result  property="rotationFlow" column="ROTATION_FLOW" javaType="string"/>
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="avgComplete" column="AVG_COMPLETE" javaType="string"/>
		<result  property="avgInComplete" column="AVG_IN_COMPLETE" javaType="string"/>
		<result  property="avgOutComplete" column="AVG_OUT_COMPLETE" javaType="string"/>
		<result  property="avgAudit" column="AVG_AUDIT" javaType="string"/>
	</resultMap>
	<select id="doctorDeptAvgWorkDetail"  resultMap="doctorDeptAvgWorkDetailMap">
	SELECT T.RECRUIT_FLOW,NVL(AVG_COMPLETE,0) AVG_COMPLETE,NVL(AVG_IN_COMPLETE,0) AVG_IN_COMPLETE,NVL(AVG_OUT_COMPLETE,0) AVG_OUT_COMPLETE,NVL(AVG_AUDIT,0) AVG_AUDIT
			  FROM jsres_graduation_apply T
			 WHERE  T.RECORD_STATUS = 'Y'
			 and T.RECRUIT_FLOW = #{recruitFlow}
			 and t.apply_year=#{applyYear}
	</select>
	<resultMap id="baseEvalMap" type="HashMap">
		<result  property="userFlow" column="USER_FLOW" javaType="string"/>
		<result  property="userName" column="USER_NAME" javaType="string"/>
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="string"/>
		<result  property="teacherUserName" column="TEACHER_USER_NAME" javaType="string"/>
		<result  property="formCfg" column="FORM_CFG" javaType="string"/>
	</resultMap>
	<select id="queryProcessEvalData"  resultMap="baseEvalMap">
		select a.user_flow,
			   b.user_name,
			   a.teacher_user_flow,
			   su.user_name teacher_user_name,
			   c.form_cfg
		  from res_doctor_sch_process a
		  left join sys_user b
			on a.user_flow = b.user_flow
		  left join sys_user su
		  	on a.teacher_user_flow=su.user_flow
		  left join res_doctor_process_eval_config c
			on su.org_flow = c.org_flow
		 where a.record_status = 'Y'
		 	and a.process_flow=#{processFlow}
	</select>

	<select id="searchDocoutReport" resultType="java.util.Map" parameterType="java.util.Map">
		select a.*
		from
		(select rd.DOCTOR_NAME,
		rd.TRAINING_SPE_NAME,
		rd.SESSION_NUMBER,
		rdsp.SCH_DEPT_NAME,
		rdsp.SCH_DEPT_FLOW,
		rdsp.TEACHER_USER_NAME,
		to_char((select count(0) from RES_SCH_PROCESS_EXPRESS rspe2
		where rspe2.process_flow = rdsp.process_flow
		and rspe2.rec_type_id = 'AfterSummary' and rspe2.RECORD_STATUS = 'Y'
		and rdsp.RECORD_STATUS = 'Y')) SUBMIT_NUMBER,
		to_char(to_date(substr(rspe.CREATE_TIME,1,8),'YYYYMMDD'),'yyyy.mm.dd') CREATE_TIME,
		rspe.AUDIT_STATUS_NAME,
		to_char(to_date(substr(rspe.AUDIT_TIME,1,8),'YYYYMMDD'),'yyyy.mm.dd') AUDIT_TIME,
		rspe.HEAD_AUDIT_STATUS_NAME,
		to_char(to_date(substr(rspe.HEAD_AUDIT_TIME,1,8),'YYYYMMDD'),'yyyy.mm.dd') HEAD_AUDIT_TIME,
		rspe.REC_TYPE_ID,
		rdsp.PROCESS_FLOW
		from RES_DOCTOR_SCH_PROCESS rdsp
		left join RES_DOCTOR rd on rdsp.user_flow = rd.doctor_flow  and rd.RECORD_STATUS = 'Y'
		left join RES_SCH_PROCESS_EXPRESS rspe on rspe.process_flow = rdsp.process_flow and rspe.rec_type_id = 'AfterSummary'  and rspe.RECORD_STATUS = 'Y'
		where rdsp.RECORD_STATUS = 'Y'
		<if test="orgFlow!=null and orgFlow!=''">
			and rdsp.org_flow = #{orgFlow}
		</if>
		<if test="schDeptFlow!=null and schDeptFlow!=''">
			and rdsp.SCH_DEPT_FLOW = #{schDeptFlow}
		</if>
		<if test="doctorTypeIdList!=null and doctorTypeIdList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="doctorTypeIdList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test="isAudit!=null and isAudit!='' and isAudit!='TeacherAuditN'">
			and rspe.AUDIT_STATUS_ID = #{isAudit}
		</if>
		<if test="isAudit=='TeacherAuditN'">
			and rspe.AUDIT_STATUS_ID is null
		</if>
		<if test="isHeadAudit!=null and isHeadAudit!='' and isHeadAudit!='HeadAuditN'">
			and rspe.HEAD_AUDIT_STATUS_ID = #{isHeadAudit}
		</if>
		<if test="isHeadAudit=='HeadAuditN'">
			and rspe.HEAD_AUDIT_STATUS_ID is null
		</if>
		<if test="doctorName!=null and doctorName!=''">
			and rd.doctor_Name like '%${doctorName}%'
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		order by rspe.HEAD_AUDIT_STATUS_ID,rspe.AUDIT_STATUS_ID,SUBMIT_NUMBER desc,CREATE_TIME,rd.doctor_flow
		) a where 1=1
		<if test="isSubmit!=null and isSubmit!=''">
			and a.submit_number = #{isSubmit}
		</if>
	</select>

	<select id="searchProcessByMonth" parameterType="java.util.Map" resultType="java.util.Map">
		select su.user_name,su.user_flow,rd.session_number,rd.dept_name,rd.training_spe_name,rd.training_years,rdsp.sch_dept_name,
			rdsp.SCH_START_DATE,rdsp.SCH_END_DATE,rd.GRADUATION_YEAR,rd.IN_HOS_DATE,su.user_code,zhkm.KQ_DATE,
		    rd.DOCTOR_TYPE_ID,rd.DEPART_MENT_NAME,rd.WORK_ORG_NAME,
			zhkm.M01,zhkm.M02,zhkm.M03,zhkm.M04,zhkm.M05,zhkm.M06,zhkm.M07,zhkm.M08,zhkm.M09,zhkm.M10,zhkm.M11,zhkm.M12,zhkm.M13,
			zhkm.M14,zhkm.M15,zhkm.M16,zhkm.M17,zhkm.M18,zhkm.M19,zhkm.M20,zhkm.M21,zhkm.M22,zhkm.M23,zhkm.M24,zhkm.M25,zhkm.M26,
			zhkm.M27,zhkm.M28,zhkm.M29,zhkm.M30,zhkm.M31,zhkm.is_submit,zhkm.MONTH_FLOW
		from RES_DOCTOR_SCH_PROCESS rdsp
		left join res_doctor rd on rdsp.user_flow = rd.doctor_flow
		left join sys_user su on rdsp.user_flow = su.user_flow
		left join ZSEY_HR_KQ_MONTH zhkm on rdsp.user_flow = zhkm.user_flow
		<if test="KqDate!=null and KqDate!=''">
			and zhkm.Kq_Date = #{KqDate}
		</if>
		and zhkm.RECORD_STATUS='Y'
		where rd.RECORD_STATUS='Y' and rdsp.RECORD_STATUS='Y' and su.RECORD_STATUS='Y'
		and #{KqDate} >= substr(rdsp.SCH_START_DATE,0,7)
		and substr(rdsp.SCH_end_DATE,0,7) >= #{KqDate}
		<if test="userName!=null and userName!=''">
			and su.user_name like '%${userName}%'
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test="deptFlow!=null and deptFlow!=''">
			and rd.depart_ment_flow = #{deptFlow}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test="trainingYears!=null and trainingYears!=''">
			and rd.training_years = #{trainingYears}
		</if>
		<if test="schDeptFlow!=null and schDeptFlow!=''">
			and rdsp.sch_dept_flow = #{schDeptFlow}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and rd.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="inHosDate!=null and inHosDate!=''">
			and rd.IN_HOS_DATE like '%${inHosDate}%'
		</if>
		<if test="doctorTypeList!=null and doctorTypeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="doctorTypeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test="schDeptList!=null and schDeptList.size()>0">
			and rdsp.sch_DEPT_FLOW in
			<foreach collection="schDeptList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test='onlyMiss == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} = '20' or zhkm.${item} = '21')
				</foreach>
			</if>
		</if>
		<if test='onlyAbsence == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} is not null and zhkm.${item} != '20' and zhkm.${item} != '21' and zhkm.${item} != '00')
				</foreach>
			</if>
		</if>
		order by su.user_code
	</select>

	<select id="searchProcessByTime" parameterType="java.util.Map" resultType="java.util.Map">
		select DISTINCT su.user_name,rd.session_number,rd.dept_name,rd.training_spe_name,rd.training_years,su.user_code,
		rd.GRADUATION_YEAR,rd.IN_HOS_DATE,zhkm.KQ_DATE,rd.doctor_Type_Id,rd.depart_Ment_Name,rd.work_Org_Name,
		zhkm.M01,zhkm.M02,zhkm.M03,zhkm.M04,zhkm.M05,zhkm.M06,zhkm.M07,zhkm.M08,zhkm.M09,zhkm.M10,zhkm.M11,zhkm.M12,zhkm.M13,
		zhkm.M14,zhkm.M15,zhkm.M16,zhkm.M17,zhkm.M18,zhkm.M19,zhkm.M20,zhkm.M21,zhkm.M22,zhkm.M23,zhkm.M24,zhkm.M25,zhkm.M26,
		zhkm.M27,zhkm.M28,zhkm.M29,zhkm.M30,zhkm.M31,zhkm.is_submit,zhkm.MONTH_FLOW
		from res_doctor rd
		left join ZSEY_HR_KQ_MONTH zhkm on zhkm.USER_FLOW = rd.doctor_flow and zhkm.RECORD_STATUS='Y'
		<if test="paramDates!=null and paramDates.size()>0">
			and zhkm.KQ_DATE in
			<foreach collection="paramDates" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		left join sys_user su on rd.doctor_flow = su.user_flow
		left join res_doctor_sch_process rdsp on rd.doctor_flow = rdsp.user_flow
		where rd.RECORD_STATUS='Y' and su.RECORD_STATUS='Y' and rdsp.RECORD_STATUS='Y'
		<if test="userFlow!=null and userFlow!=''">
			and su.user_flow = #{userFlow}
		</if>
		<if test='teacherUserFlow!=null and teacherUserFlow!=""'>
			and rdsp.teacher_User_Flow = #{teacherUserFlow}
		</if>
		<if test='speId!=null and speId!=""'>
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and rd.org_Flow = #{orgFlow}
		</if>
		<if test="userName!=null and userName!=''">
			and su.user_name like '%${userName}%'
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test="deptFlow!=null and deptFlow!=''">
			and rd.depart_ment_flow = #{deptFlow}
		</if>
		<if test="schDeptList!=null and schDeptList.size()>0">
			and rdsp.sch_dept_flow in
			<foreach collection="schDeptList" item="item" open="(" close=")" separator="," >
				#{item.schDeptFlow}
			</foreach>
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test="trainingYears!=null and trainingYears!=''">
			and rd.training_years = #{trainingYears}
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and rd.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="inHosDate!=null and inHosDate!=''">
			and rd.IN_HOS_DATE like '%${inHosDate}%'
		</if>
		<if test="doctorTypeList!=null and doctorTypeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="doctorTypeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test='onlyMiss == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} = '20' or zhkm.${item} = '21')
				</foreach>
			</if>
		</if>
		<if test='onlyAbsence == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} is not null and zhkm.${item} != '20' and zhkm.${item} != '21' and zhkm.${item} != '00')
				</foreach>
			</if>
		</if>
		order by su.user_code
	</select>

	<select id="searchProcessByDept" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT DISTINCT su.user_name,su.user_flow, rd.session_number, rd.dept_name, rd.training_spe_name, rd.training_years,su.user_code
		, rdsp.sch_dept_name, rdsp.SCH_START_DATE, rdsp.SCH_END_DATE, rd.GRADUATION_YEAR, rd.IN_HOS_DATE,rdsp.PROCESS_FLOW,
		rd.doctor_Type_Id,rd.depart_Ment_Name,rd.work_Org_Name
		from RES_DOCTOR_SCH_PROCESS rdsp
		left join res_doctor rd on rdsp.user_flow = rd.doctor_flow
		left join sys_user su on rdsp.user_flow = su.user_flow
		left join ZSEY_HR_KQ_MONTH zhkm on rdsp.user_flow = zhkm.user_flow and zhkm.RECORD_STATUS='Y'
		where rd.RECORD_STATUS='Y' and rdsp.RECORD_STATUS='Y' and su.RECORD_STATUS='Y'
		and (
		(#{startTime} <![CDATA[<=]]> substr(rdsp.SCH_START_DATE,0,7) and #{endTime} >=substr(rdsp.SCH_START_DATE,0,7))
 		or (#{startTime} >= substr(rdsp.SCH_START_DATE,0,7) and #{startTime} <![CDATA[<=]]> substr(rdsp.SCH_END_DATE,0,7))
 		)
		<if test="userFlow!=null and userFlow!=''">
			and su.user_flow = #{userFlow}
		</if>
		<if test='teacherUserFlow!=null and teacherUserFlow!=""'>
			and rdsp.teacher_User_Flow = #{teacherUserFlow}
		</if>
		<if test='speId!=null and speId!=""'>
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and rd.org_Flow = #{orgFlow}
		</if>
		<if test="userName!=null and userName!=''">
			and su.user_name like '%${userName}%'
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test="deptFlow!=null and deptFlow!=''">
			and rd.depart_ment_flow = #{deptFlow}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId!=''">
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test="trainingYears!=null and trainingYears!=''">
			and rd.training_years = #{trainingYears}
		</if>
		<if test="schDeptFlow!=null and schDeptFlow!=''">
			and rdsp.sch_dept_flow = #{schDeptFlow}
		</if>
		<if test="schDeptList!=null and schDeptList.size()>0">
			and rdsp.sch_dept_flow in
			<foreach collection="schDeptList" item="item" open="(" close=")" separator="," >
				#{item.schDeptFlow}
			</foreach>
		</if>
		<if test="graduationYear!=null and graduationYear!=''">
			and rd.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="inHosDate!=null and inHosDate!=''">
			and rd.IN_HOS_DATE like '%${inHosDate}%'
		</if>
		<if test="doctorTypeList!=null and doctorTypeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="doctorTypeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test='onlyMiss == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} = '20' or zhkm.${item} = '21')
				</foreach>
			</if>
		</if>
		<if test='onlyAbsence == "Y"'>
			<if test="Mlist!=null and Mlist.size()>0">
				and
				<foreach collection="Mlist" item="item" open="(" close=")" separator="or" >
					(zhkm.${item} is not null and zhkm.${item} != '20' and zhkm.${item} != '21' and zhkm.${item} != '00')
				</foreach>
			</if>
		</if>
		ORDER by su.user_code,rdsp.sch_start_date
	</select>

	<select id="jsresSearchTeacherWorkInfo" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT A.USER_FLOW, A.USER_NAME, A.USER_CODE,WM_CONCAT(TRIM(SUD.DEPT_FLOW)) DEPT_FLOW ,WM_CONCAT(TRIM(SUD.DEPT_NAME)) DEPT_NAME ,
		A.activityNum,A.currStudentHe,A.currStudentCount
		from (
		SELECT su.user_flow,
		   su.user_name,
		   su.dept_flow,
		   su.dept_name,
		   su.user_code,
		   nvl(tai.activityNum,0) activityNum,
			nvl(p.currStudentHe,0) currStudentHe,
			nvl(p.currStudentCount,0) currStudentCount
	  	FROM sys_user su
	  	LEFT JOIN
		(
			SELECT
				SPEAKER_FLOW,
				COUNT(1) AS activityNum
			FROM
				TEACHING_ACTIVITY_INFO
			WHERE
				RECORD_STATUS = 'Y'
			AND IS_EFFECTIVE = 'Y'
			<if test="newStartDate != null and newStartDate != '' and newEndDate != null and newEndDate != ''">
				AND((START_TIME  <![CDATA[ <= ]]> #{newStartDate} AND END_TIME >= #{newEndDate})
				or (START_TIME  <![CDATA[ >= ]]> #{newStartDate} AND START_TIME <![CDATA[ <= ]]>#{newEndDate})
				or (END_TIME  <![CDATA[ >= ]]> #{newStartDate} AND END_TIME <![CDATA[ <= ]]>#{newEndDate}))
			</if>
			GROUP BY SPEAKER_FLOW
		) tai ON tai.speaker_flow = su.user_flow
	  	LEFT JOIN (
			SELECT
				RESP.TEACHER_USER_FLOW,
				COUNT(DISTINCT resp.user_flow) currStudentHe,
				sum(months_between(to_date(substr(
				<if  test="endDate1 !=null and endDate1 !=''">
					CASE
						WHEN
							resp.SCH_END_DATE >= '${endDate1}'
						THEN
							'${endDate1}'
						ELSE
							resp.SCH_END_DATE
						END
				</if>
				<if  test="endDate1 ==null or endDate1 ==''">
					resp.SCH_END_DATE
				</if>
				  	,0,7),'yyyy-mm'),
   					to_date(substr(
				<if  test="startDate1 !=null and startDate1 !=''">
					CASE
						WHEN
							resp.SCH_START_DATE  <![CDATA[ <= ]]> '${startDate1}'
						THEN
							'${startDate1}'
						ELSE
							resp.SCH_START_DATE
						END
				</if>
				<if  test="startDate1 ==null or startDate1 ==''">
					resp.SCH_START_DATE
				</if>,
				  	0,7),'yyyy-mm')) + 1) currStudentCount
				   	from res_doctor_sch_process resp
				   	left join sys_user du
					 	on resp.user_flow = du.user_flow
				   	LEFT JOIN res_doctor rd
					 	ON du.user_flow = rd.doctor_flow
				   	left join jsres_power_cfg sc on  sc.record_status='Y' and sc.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
				   	left join jsres_power_cfg ec on   ec.record_status='Y' and ec.cfg_code = ('jsres_doctor_app_menu_' || rd.doctor_flow)
				  	WHERE du.record_status = 'Y'
						AND resp.record_status = 'Y'
						AND rd.record_status = 'Y'
					<if test="typeList!=null and typeList.size()>0">
						and rd.doctor_Type_Id in
						<foreach collection="typeList" item="item" open="(" close=")" separator="," >
							#{item}
						</foreach>
					</if>
					AND resp.user_flow = du.user_flow
					AND (resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(
					sc.power_start_time, '0000-00-00')
					AND resp.SCH_END_DATE >= nvl( sc.power_end_time, '9999-99-99')
					OR resp.SCH_START_DATE >= nvl(
					sc.power_start_time, '0000-00-00')
					AND resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99')
					OR resp.SCH_END_DATE >= nvl(
					sc.power_start_time, '0000-00-00')
					AND resp.SCH_END_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99'))
					AND ec.CFG_VALUE = 'Y'
						<if test="startDate1 !=null and startDate1 !='' and endDate1 !=null and endDate1 !=''">
							AND( ( resp.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate1} AND resp.SCH_END_DATE >= #{endDate1})
							or (resp.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate1} AND resp.SCH_START_DATE <![CDATA[ <= ]]>#{endDate1})
							or (resp.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate1} AND resp.SCH_END_DATE <![CDATA[ <= ]]>#{endDate1}))
						</if>
						<if test='orgFlow!=null and orgFlow!=""'>
							and exists(
							select 1 from sys_user where user_flow= resp.teacher_user_flow
							and org_flow=#{orgFlow}
							)
						</if>
				  group by resp.teacher_user_flow) p
		ON p.teacher_user_flow = su.user_flow
	 	WHERE su.record_status = 'Y'
			and su.IS_EXAM_TEA is null
		<if test='orgFlow!=null and orgFlow!=""'>
			and su.ORG_FLOW=#{orgFlow}
		</if>
		<if test="sysUser!=null">
			<if test='sysUser.deptFlow!=null and sysUser.deptFlow!=""'>
				and su.DEPT_FLOW like #{sysUser.deptFlow}
			</if>
			<if test='sysUser.userName!=null and sysUser.userName!=""'>
				<bind name="userName" value="'%'+sysUser.userName+'%'"/>
				and su.USER_NAME like #{userName}
			</if>
		</if>
		and exists(
			select 1 from  sys_user_role sur
			where sur.user_flow=su.user_flow
			AND sur.record_status = 'Y'
			<if test='roleFlow!=null and roleFlow!=""'>
				and sur.ROLE_FLOW=#{roleFlow}
			</if>
		)
		AND NOT EXISTS (SELECT 1
		FROM res_doctor rd
		WHERE su.user_flow = rd.doctor_flow
		AND rd.RECORD_STATUS = 'Y')
	 <!-- GROUP BY su.user_flow,
			  su.user_name,
			  su.dept_flow,
			  su.dept_name,
			  su.user_code,
			  p.currStudentHe,
			  p.currStudentCount -->

		)A
		LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW=A.USER_FLOW
		WHERE SUD.RECORD_STATUS='Y'
		GROUP BY A.USER_FLOW,A.USER_NAME,A.USER_CODE,A.ACTIVITYNUM,A.CURRSTUDENTHE,A.CURRSTUDENTCOUNT
		<if test="orderItem !=null and orderItem !='' and sortName !=null and sortName !=''">
			ORDER BY A. ${orderItem} ${sortName},A.USER_FLOW
		</if>

	</select>

	<select id="jsresSearchTeacherWorkInfoNew" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT su.user_flow,
		su.user_name,
		su.dept_flow,
		su.dept_name,
		su.user_code,
		COUNT(DISTINCT tai.activity_flow) AS activityNum,
		nvl(p.currStudentHe,0) currStudentHe,
		nvl(p.currStudentCount,0) currStudentCount,
		(
		select
		wm_concat(A.DOCTOR_NAME)
		from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
		p.PROCESS_FLOW PROCESS_FLOW,
		su.user_flow user_flow,
		p.SCH_START_DATE SCH_START_DATE,
		p.SCH_END_DATE SCH_END_DATE,
		RD.DOCTOR_TYPE_ID,
		RD.DOCTOR_FLOW,
		p.SCH_DEPT_NAME,
		p.SCH_DEPT_FLOW,
		RD.DOCTOR_NAME,
		RD.SESSION_NUMBER,
		RD.TRAINING_SPE_NAME,
		nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
		nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		) A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="doctorStartDate !=null and doctorStartDate !='' and doctorEndDate !=null and doctorEndDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{doctorStartDate} AND a.SCH_END_DATE >= #{doctorEndDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{doctorStartDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{doctorEndDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{doctorStartDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{doctorEndDate}))
		</if>
		and a.TEACHER_USER_FLOW = su.user_flow
		) as doctorList
		FROM sys_user su
		LEFT JOIN teaching_activity_info tai
		ON tai.record_status = 'Y'
		AND tai.speaker_flow = su.user_flow

		<if test="newStartDate !=null and newStartDate !='' and newEndDate !=null and newEndDate !=''">
			AND( ( tai.START_TIME  <![CDATA[ <= ]]> #{newStartDate} AND tai.END_TIME >= #{newEndDate})
			or (tai.START_TIME  <![CDATA[ >= ]]> #{newStartDate} AND tai.START_TIME <![CDATA[ <= ]]>#{newEndDate})
			or (tai.END_TIME  <![CDATA[ >= ]]> #{newStartDate} AND tai.END_TIME <![CDATA[ <= ]]>#{newEndDate}))
		</if>
		LEFT JOIN (select resp.teacher_user_flow,
		COUNT(DISTINCT resp.user_flow) currStudentHe,
		sum(months_between(to_date(substr(
		<if  test="endDate1 !=null and endDate1 !=''">
			CASE
			WHEN resp.SCH_END_DATE >= '${endDate1}' THEN
			'${endDate1}'
			ELSE
			resp.SCH_END_DATE
			END
		</if>
		<if  test="endDate1 ==null or endDate1 ==''">
			resp.SCH_END_DATE
		</if>
		,
		0,
		7),
		'yyyy-mm'),
		to_date(substr(
		<if  test="startDate1 !=null and startDate1 !=''">
			CASE
			WHEN resp.SCH_START_DATE  <![CDATA[ <= ]]> '${startDate1}' THEN
			'${startDate1}'
			ELSE
			resp.SCH_START_DATE
			END
		</if>
		<if  test="startDate1 ==null or startDate1 ==''">
			resp.SCH_START_DATE
		</if>,
		0,
		7),
		'yyyy-mm')) + 1) currStudentCount
		from res_doctor_sch_process resp
		left join sys_user du
		on resp.user_flow = du.user_flow
		LEFT JOIN res_doctor rd
		ON du.user_flow = rd.doctor_flow
		left join jsres_power_cfg sc on  sc.record_status='Y' and sc.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
		left join jsres_power_cfg ec on   ec.record_status='Y' and ec.cfg_code = ('jsres_doctor_app_menu_' || rd.doctor_flow)
		WHERE du.record_status = 'Y'
		AND resp.record_status = 'Y'
		AND rd.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		AND resp.user_flow = du.user_flow
		AND (resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_END_DATE >= nvl( sc.power_end_time, '9999-99-99')
		OR resp.SCH_START_DATE >= nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99')
		OR resp.SCH_END_DATE >= nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_END_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99'))
		AND ec.CFG_VALUE = 'Y'
		<if test="startDate1 !=null and startDate1 !='' and endDate1 !=null and endDate1 !=''">
			AND( ( resp.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate1} AND resp.SCH_END_DATE >= #{endDate1})
			or (resp.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate1} AND resp.SCH_START_DATE <![CDATA[ <= ]]>#{endDate1})
			or (resp.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate1} AND resp.SCH_END_DATE <![CDATA[ <= ]]>#{endDate1}))
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and exists(
			select 1 from sys_user where user_flow= resp.teacher_user_flow
			and org_flow=#{orgFlow}
			)
		</if>
		group by resp.teacher_user_flow) p
		ON p.teacher_user_flow = su.user_flow
		WHERE su.record_status = 'Y'
		and su.IS_EXAM_TEA is null
		<if test='orgFlow!=null and orgFlow!=""'>
			and su.ORG_FLOW=#{orgFlow}
		</if>
		<if test="sysUser!=null">
			<if test='sysUser.deptFlow!=null and sysUser.deptFlow!=""'>
				and su.DEPT_FLOW like #{sysUser.deptFlow}
			</if>
			<if test='sysUser.userName!=null and sysUser.userName!=""'>
				<bind name="userName" value="'%'+sysUser.userName+'%'"/>
				and su.USER_NAME like #{userName}
			</if>
		</if>
		and exists(
		select 1 from  sys_user_role sur
		where sur.user_flow=su.user_flow
		AND sur.record_status = 'Y'
		<if test='roleFlow!=null and roleFlow!=""'>
			and sur.ROLE_FLOW=#{roleFlow}
		</if>
		)
		AND NOT EXISTS (SELECT NULL
		FROM res_doctor rd
		WHERE su.user_flow = rd.doctor_flow
		AND rd.RECORD_STATUS = 'Y')
		GROUP BY su.user_flow,
		su.user_name,
		su.dept_flow,
		su.dept_name,
		su.user_code,
		p.currStudentHe,
		p.currStudentCount
		<if test="orderItem !=null and orderItem !='' and sortName !=null and sortName !=''">
			ORDER BY ${orderItem} ${sortName} ,user_flow
		</if>
	</select>
	<select id="queryActivityList" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.TeachingActivityInfoMapper.BaseResultMap">
		select tai.* from teaching_activity_info tai
		where tai.record_status='Y'
		<if test='speakerFlow!=null and speakerFlow!=""'>
			and tai.speaker_flow=#{speakerFlow}
		</if>
		<if test="startTime !=null and startTime !='' and endTime !=null and endTime !=''">
			AND( ( tai.START_TIME  <![CDATA[ <= ]]> #{startTime} AND tai.END_TIME >= #{endTime})
			or (tai.START_TIME  <![CDATA[ >= ]]> #{startTime} AND tai.START_TIME <![CDATA[ <= ]]>#{endTime})
			or (tai.END_TIME  <![CDATA[ >= ]]> #{startTime} AND tai.END_TIME <![CDATA[ <= ]]>#{endTime}))
		</if>
	</select>
	<select id="searchByStandadDeptIdAndGroupFLow" parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT rdsp.*
		FROM res_doctor_sch_process rdsp
		left join sch_arrange_result sar on rdsp.sch_result_flow = sar.result_flow
		where rdsp.record_status = 'Y'
		and sar.record_status = 'Y'
		<if test='standardDeptId != null and standardDeptId != ""'>
			and sar.Standard_Dept_Id = #{standardDeptId}
		</if>
		<if test='standardGroupFlow != null and standardGroupFlow != ""'>
			and sar.standard_group_flow = #{standardGroupFlow}
		</if>
		<if test='standardGroupFlow != null and standardGroupFlow != ""'>
			and sar.doctor_flow  = #{doctorFlow}
		</if>
	</select>
	<select id="selectProcessByDoctorNew" resultMap="com.pinde.sci.dao.base.ResDoctorSchProcessMapper.BaseResultMap">
		SELECT RDSP.*
		FROM PDSCI.RES_DOCTOR_SCH_PROCESS RDSP
		left join PDSCI.RES_DOCTOR RD
		on RDSP.USER_FLOW = RD.DOCTOR_FLOW
		WHERE RDSP.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND RD.DOCTOR_STATUS_NAME in( '在培','其他')
		<if test="roleFlog == 'nurse'">
		<if test="null != deptFlow and '' != deptFlow">
			AND RDSP.DEPT_FLOW = #{deptFlow}
		</if>
			<if test="null != deptFlows and deptFlows.size >0">
				AND RDSP.DEPT_FLOW IN (
				<foreach collection="deptFlows" separator="," item="deptFlow">
					#{deptFlow}
				</foreach>)
			</if>
		AND RDSP.ORG_FLOW =  #{orgFlow}
		</if>
		<if test="roleFlog == 'teacher'">
			AND RDSP.TEACHER_USER_FLOW = #{teacherUserFlow}
		</if>
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctor!=null">
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE '%${doctor.doctorName}%'
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
		</if>
		<if test='assessStatusId != null and assessStatusId !="" '>
			<if test="assessStatusId == 'Assessed'">
				AND EXISTS (SELECT 1 FROM DEPT_TEACHER_GRADE_INFO DTGI
				WHERE DTGI.RECORD_STATUS='Y'
				AND DTGI.PROCESS_FLOW=RDSP.PROCESS_FLOW
				<if test="roleFlog == 'nurse'">
					AND DTGI.REC_TYPE_ID='NurseDoctorGrade'
				</if>
				<if test="roleFlog == 'teacher'">
					AND DTGI.REC_TYPE_ID='TeacherDoctorGrade'
				</if>
				AND DTGI.OPER_USER_FLOW = #{userFlow}
				)
			</if>
			<if test="assessStatusId == 'Assessing'">
				AND not EXISTS (SELECT 1 FROM DEPT_TEACHER_GRADE_INFO DTGI
				WHERE DTGI.RECORD_STATUS='Y'
				AND DTGI.PROCESS_FLOW=RDSP.PROCESS_FLOW
				<if test="roleFlog == 'nurse'">
					AND DTGI.REC_TYPE_ID='NurseDoctorGrade'
				</if>
				<if test="roleFlog == 'teacher'">
					AND DTGI.REC_TYPE_ID='TeacherDoctorGrade'
				</if>
				AND DTGI.OPER_USER_FLOW = #{userFlow}
				)
			</if>
		</if>
		ORDER by RD.session_Number DESC,RD.TRAINING_SPE_ID desc,rd.doctor_flow
	</select>

	<select id="searchUniversityTeacherWorkInfoList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			su.user_flow,
			su.user_name,
			su.dept_flow,
			su.dept_name,
			su.user_code,
			su.org_name,
			nvl(tai.activityNum, 0) activityNum,
			nvl(p.currStudentHe,0) currStudentHe,
			nvl(p.currStudentCount,0) currStudentCount
		FROM sys_user su
		LEFT JOIN
		(
			SELECT
				speaker_flow,
				COUNT(1) AS activityNum
			FROM
				TEACHING_ACTIVITY_INFO
			WHERE
				RECORD_STATUS = 'Y'
			AND IS_EFFECTIVE = 'Y'
			<if test="newStartDate != null and newStartDate != '' and newEndDate != null and newEndDate != ''">
				AND((START_TIME  <![CDATA[ <= ]]> #{newStartDate} AND END_TIME >= #{newEndDate})
				or (START_TIME  <![CDATA[ >= ]]> #{newStartDate} AND START_TIME <![CDATA[ <= ]]>#{newEndDate})
				or (END_TIME  <![CDATA[ >= ]]> #{newStartDate} AND END_TIME <![CDATA[ <= ]]>#{newEndDate}))
			</if>
			GROUP BY
				SPEAKER_FLOW
		) tai on TAI.SPEAKER_FLOW = su.user_flow
		LEFT JOIN (select resp.teacher_user_flow,
		COUNT(DISTINCT resp.user_flow) currStudentHe,
		sum(months_between(to_date(substr(
		<if  test="endDate != null and endDate != ''">
			CASE
			WHEN resp.SCH_END_DATE >= '${endDate}' THEN
			'${endDate}'
			ELSE
			resp.SCH_END_DATE
			END
		</if>
		<if  test="endDate == null or endDate == ''">
			resp.SCH_END_DATE
		</if>
		,
		0,
		7),
		'yyyy-mm'),
		to_date(substr(
		<if test="startDate !=null and startDate != ''">
			CASE
			WHEN resp.SCH_START_DATE  <![CDATA[ <= ]]> '${startDate}' THEN
			'${startDate}'
			ELSE
			resp.SCH_START_DATE
			END
		</if>
		<if test="startDate == null or startDate == ''">
			resp.SCH_START_DATE
		</if>,
		0,
		7),
		'yyyy-mm')) + 1) currStudentCount
		from res_doctor_sch_process resp
		,
		(
			SELECT
				DOCTOR_FLOW
			FROM
				RES_DOCTOR
			WHERE
				RECORD_STATUS = 'Y'
			AND DOCTOR_TYPE_ID IN
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
			AND WORK_ORG_ID = #{workOrgId}
		) rd
		left join jsres_power_cfg sc on sc.record_status='Y' and sc.cfg_code = ('jsres_doctor_data_time_' || rd.doctor_flow)
		left join jsres_power_cfg ec on ec.record_status='Y' AND ec.CFG_VALUE = 'Y' and ec.cfg_code = ('jsres_doctor_app_menu_' || rd.doctor_flow)
		WHERE
			resp.user_flow = rd.doctor_flow
		AND resp.record_status = 'Y'
		AND (resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_END_DATE >= nvl( sc.power_end_time, '9999-99-99')
		OR resp.SCH_START_DATE >= nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_START_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99')
		OR resp.SCH_END_DATE >= nvl(
		sc.power_start_time, '0000-00-00')
		AND resp.SCH_END_DATE <![CDATA[ <= ]]> nvl(sc.power_end_time, '9999-99-99'))
		<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
			AND( ( resp.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND resp.SCH_END_DATE >= #{endDate})
			or (resp.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND resp.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (resp.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND resp.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		<if test='orgFlowList != null and orgFlowList.size > 0'>
			AND EXISTS (
				SELECT
					1
				FROM
					sys_user
				WHERE
					user_flow = resp.teacher_user_flow
				AND org_flow in
				<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
			)
		</if>
		<if test="orgFlow != null and orgFlow != ''">
			AND EXISTS (
				SELECT
					1
				FROM
					sys_user
				WHERE
					user_flow = resp.teacher_user_flow
				AND org_flow = #{orgFlow}
			)
		</if>
		group by resp.teacher_user_flow) p
		ON p.teacher_user_flow = su.user_flow
		WHERE su.record_status = 'Y'
		and su.IS_EXAM_TEA is null
		<if test='orgFlowList != null and orgFlowList.size > 0'>
			and su.ORG_FLOW in
			<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="orgFlow != null and orgFlow != ''">
			and su.org_flow = #{orgFlow}
		</if>
		<if test="sysUser != null">
			<if test='sysUser.deptFlow != null and sysUser.deptFlow != "" '>
				and su.DEPT_FLOW = #{sysUser.deptFlow}
			</if>
			<if test='sysUser.userName != null and sysUser.userName != ""'>
				<bind name="userName" value="'%' + sysUser.userName + '%'"/>
				and su.USER_NAME like #{userName}
			</if>
		</if>
		and exists(
			SELECT
				1
			FROM
				sys_user_role sur
			WHERE
				sur.user_flow = su.user_flow
			AND sur.record_status = 'Y'
		<if test='roleFlow != null and roleFlow != ""'>
			and sur.ROLE_FLOW = #{roleFlow}
		</if>
		)
		AND NOT EXISTS (
			SELECT
				1
			FROM
				res_doctor rd
			WHERE
				su.user_flow = rd.doctor_flow
			AND rd.RECORD_STATUS = 'Y'
		)
		<!-- GROUP BY
			su.user_flow,
			su.user_name,
			su.dept_flow,
			su.dept_name,
			su.user_code,
			su.org_name,
			tai.activityNum,
			P.currStudentHe,
			P.currStudentCount -->
		<if test="orderItem != null and orderItem != '' and sortName != null and sortName != ''">
			ORDER BY ${orderItem} ${sortName} ,user_flow
		</if>
	</select>
	<select id="docWorkingSearchNew"  resultMap="workListMap">
		SELECT A.DOCTOR_FLOW,
		A.RECRUIT_FLOW,
		A.ORG_NAME,
		A.ORG_FLOW,
		A.USER_NAME,
		A.TRAINING_SPE_ID,
		A.TRAINING_SPE_NAME,
		A.SESSION_NUMBER,
		A.REQ_NUM,
		A.COMPLETE_NUM,
		A.AUDIT_NUM,
		A.ROTATION_NUM,
		A.YLZ_NUM,
		A.SCH_NUM,
		A.AFTER_NUM,
		A.COMPLETE_BI,
		A.AUDIT_BI
		FROM (SELECT rd.DOCTOR_FLOW,
		DR.RECRUIT_FLOW,
		DR.ORG_NAME,
		DR.ORG_FLOW,
		SU.USER_NAME,
		DR.SPE_ID TRAINING_SPE_ID,
		DR.SPE_NAME TRAINING_SPE_NAME,
		DR.SESSION_NUMBER,
		NVL(JDW.REQ_NUM,0) REQ_NUM,
		NVL(JDW.COMPLETE_NUM, 0) COMPLETE_NUM,
		NVL(JDW.AUDIT_NUM, 0) AUDIT_NUM,
		NVL(JDW.YLZ_NUM, 0) YLZ_NUM,
		NVL(JDW.SCH_NUM, 0) SCH_NUM,
		NVL(JDW.AFTER_NUM, 0) AFTER_NUM,
		to_number(NVL(JDW.COMPLETE_BI,0)) COMPLETE_BI,
		to_number(NVL(JDW.AUDIT_BI,0)) AUDIT_BI,
		NVL(JDW.rotation_Num,0) rotation_Num
		FROM RES_DOCTOR_RECRUIT dr
		LEFT JOIN RES_DOCTOR RD
		ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
		INNER JOIN SYS_USER SU
		ON RD.DOCTOR_FLOW = SU.USER_FLOW
		LEFT JOIN JSRES_DOCTOR_WORK JDW
		ON RD.DOCTOR_FLOW =JDW.DOCTOR_FLOW
		and dr.org_flow=jdw.org_flow
		AND DR.RECRUIT_FLOW =JDW.RECRUIT_FLOW
		WHERE  RD.RECORD_STATUS = 'Y'
		AND DR.RECORD_STATUS='Y'
		AND SU.RECORD_STATUS = 'Y'
		AND dr.AUDIT_STATUS_ID = 'Passed'
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>

		<if test='doctorFlows!=null and doctorFlows.size()>0'>
			and rd.DOCTOR_FLOW IN
			<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
				#{flow}
			</foreach>
		</if>
		<if test='typeId != null and typeId != ""'>
			AND rd.TRAINING_TYPE_ID = #{typeId}
		</if>
		<if test='speId != null and speId != ""'>
			AND rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND DR.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='userName != null and userName != ""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND SU.USER_NAME LIKE #{name}
		</if>
		<if test='idNo != null and idNo != ""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND su.ID_NO LIKE #{idNo}
		</if>
		<if test='graduationYear != null and graduationYear != ""'>
			AND DR.GRADUATION_YEAR = #{graduationYear}
		</if>
		) A

		<if test='sort != null and sort != ""'>
			<if test="sort=='completeBidesc'">
				ORDER BY COMPLETE_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='completeBiasc'">
				ORDER BY COMPLETE_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='auditBidesc'">
				ORDER BY AUDIT_BI DESC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
			<if test="sort=='auditBiasc'">
				ORDER BY AUDIT_BI ASC,  NLSSORT(A.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
			</if>
		</if>

	</select>

	<select id="searchDocCycleListNew" parameterType="java.util.Map" resultMap="docCycleMap">
		select u.USER_NAME user_name, dr.DOCTOR_CATEGORY_NAME DOCTOR_CATEGORY_NAME,dr.TRAINING_SPE_NAME training_spe_name,dr.DOCTOR_Flow doctor_flow,dr.org_name,
		dr.SESSION_NUMBER session_number, dr.TRAINING_YEARS training_years,dr.TRAINING_SPE_ID training_spe_id,dr.training_type_id training_type_id,dr.training_type_name training_type_name
		from RES_DOCTOR dr
		inner join SYS_USER u
		on dr.DOCTOR_FLOW = u.USER_FLOW
		where dr.RECORD_STATUS= 'Y' and u.RECORD_STATUS= 'Y'
		AND (dr.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
		OR dr.DOCTOR_STATUS_ID IS NULL)
		AND dr.org_flow IS NOT NULL
		AND dr.org_flow != '20160914888888'
		AND dr.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND dr.org_flow != '00000000000000000000000000000000'
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and dr.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='doctorCategoryId != null and doctorCategoryId != ""'>
			AND dr.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			and dr.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			and dr.TRAINING_YEARS = #{trainingYears}
		</if>
		<if test='workOrgId!=null and workOrgId!=""'>
			and dr.work_Org_Id = #{workOrgId}
		</if>
		<if test='userName!=null and userName!=""'>
			<bind name="name" value="'%'+userName+'%'"/>
			AND  u.USER_NAME LIKE #{name}
		</if>
		<if test='idNo!=null and idNo!=""'>
			<bind name="idNo" value="'%'+idNo+'%'"/>
			AND u.ID_NO LIKE #{idNo}
		</if>
		<if test="docTypeList!=null">
			and dr.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='doctorFlows!=null and doctorFlows.size()>0'>
			and dr.DOCTOR_FLOW IN
			<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
				#{flow}
			</foreach>
		</if>
		<if test='medicineTypeId!=null and medicineTypeId!=""'>
			and instr('${medicineTypeId}',u.medicine_Type_Id)>0
		</if>
		order by dr.SESSION_NUMBER desc,dr.TRAINING_SPE_ID,dr.create_time,dr.doctor_flow
	</select>


	<resultMap type="HashMap" id="realAccessMap">
		<result  property="allRk" column="ALL_RK" javaType="string"/>
	</resultMap>

	<select id="realAccessNum" resultType="String">
		SELECT COUNT(*) AS ALL_NUM
		FROM RES_DOCTOR_SCH_PROCESS S
		LEFT JOIN RES_DOCTOR_RECRUIT R
		ON S.USER_FLOW=R.DOCTOR_FLOW
		WHERE SUBSTR(S.SCH_START_DATE, 0, 7) <![CDATA[ <= ]]> #{searchTime}
		AND SUBSTR(s.SCH_END_DATE, 0, 7) <![CDATA[ >= ]]> #{searchTime}
		AND S.RECORD_STATUS = 'Y'
		AND r.RECORD_STATUS = 'Y'
		AND s.ORG_FLOW =  #{orgFlow}
		AND s.SCH_DEPT_FLOW = #{deptFlow}
		AND R.CAT_SPE_ID= #{trainingTypeId}
		UNION ALL
		SELECT COUNT(*) AS HAVE_NUM
		FROM (
		SELECT OPER_USER_FLOW, SCH_DEPT_FLOW
		FROM RES_REC
		WHERE PROCESS_FLOW IN (
			SELECT S.PROCESS_FLOW
			FROM RES_DOCTOR_SCH_PROCESS S
			LEFT JOIN RES_DOCTOR_RECRUIT R
			ON S.USER_FLOW=R.DOCTOR_FLOW
			WHERE SUBSTR(S.sCH_START_DATE, 0, 7) <![CDATA[ <= ]]> #{searchTime}
			AND SUBSTR(S.SCH_END_DATE, 0, 7) <![CDATA[ >= ]]> #{searchTime}
			AND S.RECORD_STATUS = 'Y'
			AND R.RECORD_STATUS = 'Y'
			AND S.ORG_FLOW =  #{orgFlow}
			AND S.SCH_DEPT_FLOW = #{deptFlow}
			AND R.CAT_SPE_ID=#{trainingTypeId}
		)
		GROUP BY OPER_USER_FLOW, SCH_DEPT_FLOW
		)
		UNION ALL
		SELECT COUNT(*) AS ALL_CK
		FROM RES_DOCTOR_SCH_PROCESS S
		LEFT JOIN RES_DOCTOR_RECRUIT R
		ON S.USER_FLOW=R.DOCTOR_FLOW
		WHERE S.RECORD_STATUS = 'Y'
		AND R.RECORD_STATUS = 'Y'
		AND SUBSTR(S.SCH_END_DATE, 0, 7) = #{searchTime}
		AND S.ORG_FLOW =  #{orgFlow}
		AND S.SCH_DEPT_FLOW = #{deptFlow}
		AND R.CAT_SPE_ID=#{trainingTypeId}
		UNION ALL
		SELECT COUNT(*) AS HAVE_CK
		FROM PDSCI.RES_SCH_PROCESS_EXPRESS
		WHERE AUDIT_STATUS_ID = 'TeacherAuditY'
		AND REC_TYPE_ID = 'AfterEvaluation'
		AND RECORD_STATUS = 'Y'
		AND PROCESS_FLOW IN (
			SELECT s.PROCESS_FLOW
			FROM RES_DOCTOR_SCH_PROCESS S
			LEFT JOIN RES_DOCTOR_RECRUIT R
			ON S.USER_FLOW=R.DOCTOR_FLOW
			WHERE S.RECORD_STATUS = 'Y'
			AND R.RECORD_STATUS = 'Y'
			AND SUBSTR(S.SCH_END_DATE, 0, 7) = #{searchTime}
			AND S.ORG_FLOW =  #{orgFlow}
			AND S.SCH_DEPT_FLOW = #{deptFlow}
			AND R.CAT_SPE_ID= #{trainingTypeId}
		)
	</select>
    <select id="listByDoctorFlow" resultType="com.pinde.sci.model.mo.ResDoctorSchProcess">
		select * from RES_DOCTOR_SCH_PROCESS where RECORD_STATUS = 'Y' and USER_FLOW = #{doctorFlow}
	</select>
</mapper>