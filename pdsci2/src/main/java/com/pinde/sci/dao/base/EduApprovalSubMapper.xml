<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.EduApprovalSubMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.EduApprovalSub" >
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="COURSE_FLOW" property="courseFlow" jdbcType="VARCHAR" />
    <result column="TEACHER_FLOW" property="teacherFlow" jdbcType="VARCHAR" />
    <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
    <result column="TEACHER_POST" property="teacherPost" jdbcType="VARCHAR" />
    <result column="CONTENT_DESC" property="contentDesc" jdbcType="VARCHAR" />
    <result column="SCHOOL_HOURS" property="schoolHours" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="IS_TEST_TEACHER" property="isTestTeacher" jdbcType="VARCHAR" />
    <result column="IS_APPROVAL_TEACHER" property="isApprovalTeacher" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, COURSE_FLOW, TEACHER_FLOW, TEACHER_NAME, TEACHER_POST, CONTENT_DESC, 
    SCHOOL_HOURS, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
    IS_TEST_TEACHER, IS_APPROVAL_TEACHER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.EduApprovalSubExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EDU_APPROVAL_SUB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EDU_APPROVAL_SUB
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EDU_APPROVAL_SUB
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.EduApprovalSubExample" >
    delete from PDSCI.EDU_APPROVAL_SUB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.EduApprovalSub" >
    insert into PDSCI.EDU_APPROVAL_SUB (RECORD_FLOW, COURSE_FLOW, TEACHER_FLOW, 
      TEACHER_NAME, TEACHER_POST, CONTENT_DESC, 
      SCHOOL_HOURS, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
      IS_TEST_TEACHER, IS_APPROVAL_TEACHER)
    values (#{recordFlow,jdbcType=VARCHAR}, #{courseFlow,jdbcType=VARCHAR}, #{teacherFlow,jdbcType=VARCHAR}, 
      #{teacherName,jdbcType=VARCHAR}, #{teacherPost,jdbcType=VARCHAR}, #{contentDesc,jdbcType=VARCHAR}, 
      #{schoolHours,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, 
      #{isTestTeacher,jdbcType=VARCHAR}, #{isApprovalTeacher,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.EduApprovalSub" >
    insert into PDSCI.EDU_APPROVAL_SUB
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="courseFlow != null" >
        COURSE_FLOW,
      </if>
      <if test="teacherFlow != null" >
        TEACHER_FLOW,
      </if>
      <if test="teacherName != null" >
        TEACHER_NAME,
      </if>
      <if test="teacherPost != null" >
        TEACHER_POST,
      </if>
      <if test="contentDesc != null" >
        CONTENT_DESC,
      </if>
      <if test="schoolHours != null" >
        SCHOOL_HOURS,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="isTestTeacher != null" >
        IS_TEST_TEACHER,
      </if>
      <if test="isApprovalTeacher != null" >
        IS_APPROVAL_TEACHER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="courseFlow != null" >
        #{courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="teacherFlow != null" >
        #{teacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPost != null" >
        #{teacherPost,jdbcType=VARCHAR},
      </if>
      <if test="contentDesc != null" >
        #{contentDesc,jdbcType=VARCHAR},
      </if>
      <if test="schoolHours != null" >
        #{schoolHours,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isTestTeacher != null" >
        #{isTestTeacher,jdbcType=VARCHAR},
      </if>
      <if test="isApprovalTeacher != null" >
        #{isApprovalTeacher,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.EduApprovalSubExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EDU_APPROVAL_SUB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EDU_APPROVAL_SUB
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.courseFlow != null" >
        COURSE_FLOW = #{record.courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherFlow != null" >
        TEACHER_FLOW = #{record.teacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null" >
        TEACHER_NAME = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherPost != null" >
        TEACHER_POST = #{record.teacherPost,jdbcType=VARCHAR},
      </if>
      <if test="record.contentDesc != null" >
        CONTENT_DESC = #{record.contentDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolHours != null" >
        SCHOOL_HOURS = #{record.schoolHours,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.isTestTeacher != null" >
        IS_TEST_TEACHER = #{record.isTestTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.isApprovalTeacher != null" >
        IS_APPROVAL_TEACHER = #{record.isApprovalTeacher,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EDU_APPROVAL_SUB
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      COURSE_FLOW = #{record.courseFlow,jdbcType=VARCHAR},
      TEACHER_FLOW = #{record.teacherFlow,jdbcType=VARCHAR},
      TEACHER_NAME = #{record.teacherName,jdbcType=VARCHAR},
      TEACHER_POST = #{record.teacherPost,jdbcType=VARCHAR},
      CONTENT_DESC = #{record.contentDesc,jdbcType=VARCHAR},
      SCHOOL_HOURS = #{record.schoolHours,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      IS_TEST_TEACHER = #{record.isTestTeacher,jdbcType=VARCHAR},
      IS_APPROVAL_TEACHER = #{record.isApprovalTeacher,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.EduApprovalSub" >
    update PDSCI.EDU_APPROVAL_SUB
    <set >
      <if test="courseFlow != null" >
        COURSE_FLOW = #{courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="teacherFlow != null" >
        TEACHER_FLOW = #{teacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        TEACHER_NAME = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPost != null" >
        TEACHER_POST = #{teacherPost,jdbcType=VARCHAR},
      </if>
      <if test="contentDesc != null" >
        CONTENT_DESC = #{contentDesc,jdbcType=VARCHAR},
      </if>
      <if test="schoolHours != null" >
        SCHOOL_HOURS = #{schoolHours,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="isTestTeacher != null" >
        IS_TEST_TEACHER = #{isTestTeacher,jdbcType=VARCHAR},
      </if>
      <if test="isApprovalTeacher != null" >
        IS_APPROVAL_TEACHER = #{isApprovalTeacher,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.EduApprovalSub" >
    update PDSCI.EDU_APPROVAL_SUB
    set COURSE_FLOW = #{courseFlow,jdbcType=VARCHAR},
      TEACHER_FLOW = #{teacherFlow,jdbcType=VARCHAR},
      TEACHER_NAME = #{teacherName,jdbcType=VARCHAR},
      TEACHER_POST = #{teacherPost,jdbcType=VARCHAR},
      CONTENT_DESC = #{contentDesc,jdbcType=VARCHAR},
      SCHOOL_HOURS = #{schoolHours,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      IS_TEST_TEACHER = #{isTestTeacher,jdbcType=VARCHAR},
      IS_APPROVAL_TEACHER = #{isApprovalTeacher,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>