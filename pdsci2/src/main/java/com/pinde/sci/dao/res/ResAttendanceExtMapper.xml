<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.res.ResAttendanceExtMapper">

    <resultMap id="attendanceMap" type="com.pinde.sci.model.jsres.JsResAttendanceExt">
        <id column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <association property="jsresAttendance" column="ATTENDANCE_FLOW" javaType="com.pinde.sci.model.mo.JsresAttendance">
            <id column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
            <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
            <result column="TEACHER_FLOW" property="teacherFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS" property="attendStatus" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS_NAME" property="attendStatusName" jdbcType="VARCHAR" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
            <result column="AUDIT_TIME" property="auditTime" jdbcType="VARCHAR" />
            <result column="AUDIT_USER_FLOW" property="auditUserFlow" jdbcType="VARCHAR" />
            <result column="AUDIT_USER_NAME" property="auditUserName" jdbcType="VARCHAR" />
            <result column="AUDIT_STATUS_ID" property="auditStatusId" jdbcType="VARCHAR" />
            <result column="AUDIT_STATUS_NAME" property="auditStatusName" jdbcType="VARCHAR" />
        </association>
        <association property="sysDept" column="deptFlow" javaType="com.pinde.core.model.SysDept">
            <id column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
            <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
            <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
        </association>
    </resultMap>
    <resultMap id="jszyAttendanceMap" type="com.pinde.sci.model.jszy.JszyResAttendanceExt">
        <id column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <association property="jsresAttendance" column="ATTENDANCE_FLOW" javaType="com.pinde.sci.model.mo.JsresAttendance">
            <id column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
            <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
            <result column="TEACHER_FLOW" property="teacherFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS" property="attendStatus" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS_NAME" property="attendStatusName" jdbcType="VARCHAR" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
        </association>
        <association property="sysDept" column="deptFlow" javaType="com.pinde.core.model.SysDept">
            <id column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
            <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
            <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
        </association>
    </resultMap>
    <resultMap id="resAttendanceMap" type="com.pinde.sci.model.res.ResAttendanceExt">
        <id column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <association property="jsresAttendance" column="ATTENDANCE_FLOW" javaType="com.pinde.sci.model.mo.JsresAttendance">
            <id column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
            <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
            <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
            <result column="TEACHER_FLOW" property="teacherFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS" property="attendStatus" jdbcType="VARCHAR" />
            <result column="ATTEND_STATUS_NAME" property="attendStatusName" jdbcType="VARCHAR" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
            <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
        </association>
        <association property="schDept" column="deptFlow" javaType="com.pinde.sci.model.mo.SchDept">
            <id column="SCH_DEPT_FLOW" property="schDeptFlow" jdbcType="VARCHAR" />
            <result column="SCH_DEPT_NAME" property="schDeptName" jdbcType="VARCHAR" />
            <result column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
            <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
            <result column="DEPT_NUM" property="deptNum" jdbcType="DECIMAL" />
            <result column="EXTERNAL" property="external" jdbcType="VARCHAR" />
            <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
            <result column="EXTERNAL_ORG_FLOW" property="externalOrgFlow" jdbcType="VARCHAR" />
            <result column="EXTERNAL_ORG_NAME" property="externalOrgName" jdbcType="VARCHAR" />
            <result column="IS_EXTERNAL" property="isExternal" jdbcType="VARCHAR" />
        </association>
        <association property="sysDept" column="deptFlow" javaType="com.pinde.core.model.SysDept">
            <id column="DEPT_FLOW" property="deptFlow" jdbcType="VARCHAR" />
            <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
            <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="ORDINAL" property="ordinal" jdbcType="DECIMAL" />
            <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
            <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
            <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
            <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
            <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
        </association>
    </resultMap>
    <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.JsresAttendanceDetail" >
        <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
        <result column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
        <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR" />
        <result column="ATTEND_TIME" property="attendTime" jdbcType="VARCHAR" />
        <result column="ATTEND_LOCAL" property="attendLocal" jdbcType="VARCHAR" />
        <result column="SELF_REMARKS" property="selfRemarks" jdbcType="VARCHAR" />
        <result column="TEACHER_REMARKS" property="teacherRemarks" jdbcType="VARCHAR" />
        <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
        <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
        <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
        <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        RECORD_FLOW, ATTENDANCE_FLOW, DOCTOR_FLOW, DOCTOR_NAME, ATTEND_DATE, ATTEND_TIME,
        ATTEND_LOCAL, SELF_REMARKS, TEACHER_REMARKS, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW,
        MODIFY_TIME, MODIFY_USER_FLOW
    </sql>
    <select id="searchAttendanceList" parameterType="java.util.Map" resultMap="attendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_time ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        rd.org_flow,
        rd.org_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        b.dept_flow DEPT_FLOW,
        b.dept_name DEPT_NAME,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        (
            select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
            from dual
            connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A
        JOIN (
        select DISTINCT p.user_flow user_flow,
        P.ORG_FLOW          ORG_FLOW,
        P.ORG_NAME          ORG_NAME,
        P.DEPT_FLOW DEPT_FLOW,
        P.DEPT_NAME DEPT_NAME,
        P.SCH_DEPT_FLOW SCH_DEPT_FLOW,
        P.SCH_DEPT_NAME SCH_DEPT_NAME,
        P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
        P.TEACHER_USER_NAME TEACHER_USER_NAME,
        P.SCH_START_DATE SCH_START_DATE,
        P.SCH_END_DATE SCH_END_DATE,
        RD.DOCTOR_TYPE_ID DOCTOR_TYPE_ID,
        nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
        nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
        from res_doctor_sch_process p
        left join res_doctor rd
        on p.user_flow = rd.doctor_flow
        left join sys_user su
        on su.user_flow = rd.doctor_flow
        left join sys_user tu
        on tu.user_flow = p.teacher_user_flow
        left join jsres_power_cfg cfg2
        on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
        where p.record_status = 'Y'
        and rd.record_status = 'Y'
        and su.record_status = 'Y'
        and tu.record_status = 'Y'
        ) B on   b.sch_start_date <![CDATA[<]]>= a.date_time and b.sch_end_date >=a.date_time
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join JSRES_ATTENDANCE ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_time
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and b.sch_dept_flow =#{deptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        and  b.APP_MENU_FLAG='Y'
        AND	( ( b.SCH_START_DATE  <![CDATA[ <= ]]> b.power_start_time AND b.SCH_END_DATE >= b.power_END_time)
        or (b.SCH_START_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_START_DATE <![CDATA[ <= ]]>b.power_END_time)
        or (b.SCH_END_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_END_DATE <![CDATA[ <= ]]>b.power_END_time))
        ORDER BY a.date_time DESC,b.dept_Flow,su.user_name
    </select>
    <select id="searchJszyAttendanceList" parameterType="java.util.Map" resultMap="jszyAttendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_time ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        rd.org_flow,
        rd.org_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        b.dept_flow DEPT_FLOW,
        b.dept_name DEPT_NAME,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        (
        select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
        from dual
        connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A
        join
        (
        select distinct user_flow,org_flow,org_name,dept_flow,dept_name,sch_dept_flow,sch_dept_name,teacher_user_flow, teacher_user_name,sch_start_date,sch_end_date
        from res_doctor_sch_process
        where record_status = 'Y'
        <if test='orgFlow != null and orgFlow!=""'>
            and org_flow =#{orgFlow}
        </if>
        ) B on   b.sch_start_date <![CDATA[<]]>= a.date_time and b.sch_end_date >=a.date_time
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join JSRES_ATTENDANCE ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_time
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and b.sch_dept_flow =#{deptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        ORDER BY a.date_time DESC,b.dept_Flow,su.user_name
    </select>

    <select id="searchResAttendanceList" parameterType="java.util.Map" resultMap="resAttendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_time ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        rd.org_flow,
        rd.org_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        b.sch_dept_flow sch_dept_flow,
        b.sch_dept_name sch_dept_name,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        (
        select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
        from dual
        connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A
        join
        (
        select distinct p.user_flow,p.org_flow,p.org_name,p.dept_flow,p.dept_name,p.sch_dept_flow,p.sch_dept_name,p.teacher_user_flow,p.teacher_user_name,p.sch_start_date,p.sch_end_date,p.HEAD_USER_FLOW,p.HEAD_USER_NAME
        from res_doctor_sch_process p
        left join sys_user tu on tu.user_flow = p.teacher_user_flow
        left join res_power_cfg rpc on ('res_doctor_web_' || p.user_flow) = rpc.cfg_code
        where p.record_status = 'Y'
            and tu.record_status = 'Y'
            and rpc.record_status = 'Y'
            and rpc.cfg_value = 'Y'
        ) B on  b.sch_start_date <![CDATA[<]]>= a.date_time and b.sch_end_date <![CDATA[>]]>= a.date_time
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join jsres_attendance ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_time
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test="docTypeList!=null and docTypeList.size()>0">
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null and orgFlow!=""' >
            and rd.org_flow like #{orgFlow}
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_Number = #{sessionNumber}
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and b.sch_dept_flow =#{schDeptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        <if test='headUserFlow != null  and headUserFlow!=""' >
            and b.HEAD_USER_FLOW=#{headUserFlow}
        </if>
        ORDER BY a.date_time DESC,b.sch_dept_flow,su.user_name
    </select>

    <resultMap id="searchResAttendanceList2Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
        <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
        <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
        <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
        <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
        <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
        <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
        <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
        <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="searchResAttendanceList2" parameterType="java.util.Map" resultMap="searchResAttendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        b.dept_name,rd.doctor_type_name,
        count(a.date_time) all_num,
        sum(case when nvl(ja.attend_status,0)='1' then 1 else 0 end) AS cq_num,
        sum(case when nvl(ja.attend_status,0)='0' then 1 else 0 end) AS qq_num,
        sum(case when nvl(ja.attend_status,0)='-1' then 1 else 0 end) AS lx_num
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        left join
        (
            select p.user_flow, WM_CONCAT(DISTINCT p.sch_dept_name) AS dept_name
            from res_doctor_sch_process p
            left join res_power_cfg rpc on ('res_doctor_web_' || p.user_flow) = rpc.cfg_code
            where p.record_status = 'Y'
                and rpc.record_status = 'Y'
                and rpc.cfg_value = 'Y'
                AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
                or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
                or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
                <if test='schDeptFlow != null and schDeptFlow!=""' >
                    and p.sch_dept_flow =#{schDeptFlow}
                </if>
              group by p.user_flow
        ) B on su.user_flow=b.user_flow and su.record_status='Y'
        left join(
        select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
        from dual
        connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A on date_time  <![CDATA[ >= ]]> #{schStartDate} AND date_time <![CDATA[ <= ]]>#{schEndDate}
        left join jsres_attendance ja on ja.doctor_flow = su.user_flow and ja.record_status='Y'
        and ja.attend_date=a.date_time
        where su.record_status='Y'
        and rd.record_status='Y'
        AND (RD.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
        OR RD.DOCTOR_STATUS_ID IS NULL)
        AND RD.org_flow IS NOT NULL
        AND RD.org_flow != '20160914888888'
        AND RD.org_flow != '566c9f36cf014f63a569b453efa284d7'
        AND RD.org_flow != '00000000000000000000000000000000'
        <if test="docTypeList!=null and docTypeList.size()>0">
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null and orgFlow!=""' >
            and rd.org_flow = #{orgFlow}
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_Number = #{sessionNumber}
        </if>
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and b.dept_name is not null
        </if>
        group by su.user_flow,su.user_name,rd.session_number,rd.doctor_type_name,rd.training_type_name,rd.training_spe_name,b.dept_name
        order by rd.session_number desc,rd.training_type_name,su.user_flow,rd.training_spe_name,su.user_name
    </select>

    <resultMap id="searchResAttendanceList3Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
        <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
        <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
        <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
        <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
        <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
        <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
        <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
        <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="exportResAttendanceList3"  resultMap="searchResAttendanceList3Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        b.dept_name,rd.doctor_type_name
        <foreach collection="days" item="item" index="index" open="," separator="," close="">
            (select t.ATTENDANCE_FLOW from JSRES_ATTENDANCE t
            where t.doctor_flow = rd.doctor_flow
            and t.record_status='Y'
            AND t.attend_date = #{item}
            ) AS "${item}"
        </foreach>
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        left join
        (
        select p.user_flow, WM_CONCAT(DISTINCT p.sch_dept_name) AS dept_name
        from res_doctor_sch_process p
        left join res_power_cfg rpc on ('res_doctor_web_' || p.user_flow) = rpc.cfg_code
        where p.record_status = 'Y'
        and rpc.record_status = 'Y'
        and rpc.cfg_value = 'Y'
        AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
        or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
        or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and p.sch_dept_flow =#{schDeptFlow}
        </if>
        group by p.user_flow
        ) B on su.user_flow=b.user_flow and su.record_status='Y'
        where su.record_status='Y'
        and rd.record_status='Y'
        AND (RD.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
        OR RD.DOCTOR_STATUS_ID IS NULL)
        AND RD.org_flow IS NOT NULL
        AND RD.org_flow != '20160914888888'
        AND RD.org_flow != '566c9f36cf014f63a569b453efa284d7'
        AND RD.org_flow != '00000000000000000000000000000000'
        <if test="docTypeList!=null and docTypeList.size()>0">
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null and orgFlow!=""' >
            and rd.org_flow = #{orgFlow}
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_Number = #{sessionNumber}
        </if>
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and b.dept_name is not null
        </if>
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name
    </select>
    <select id="exportResAttendanceList2"  resultMap="searchResAttendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        b.dept_name,rd.doctor_type_name
        <foreach collection="days" item="item" index="index" open="," separator="," close="">
            (select to_char(max(t.attend_status)) from JSRES_ATTENDANCE t
            where t.doctor_flow = rd.doctor_flow
            and t.record_status='Y'
            AND t.attend_date = #{item}
            ) AS "${item}"
        </foreach>
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        left join
        (
            select p.user_flow, WM_CONCAT(DISTINCT p.sch_dept_name) AS dept_name
            from res_doctor_sch_process p
            left join res_power_cfg rpc on ('res_doctor_web_' || p.user_flow) = rpc.cfg_code
            where p.record_status = 'Y'
            and rpc.record_status = 'Y'
            and rpc.cfg_value = 'Y'
            AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
            or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
            or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
            <if test='schDeptFlow != null and schDeptFlow!=""' >
                and p.sch_dept_flow =#{schDeptFlow}
            </if>
            group by p.user_flow
        ) B on su.user_flow=b.user_flow and su.record_status='Y'
        where su.record_status='Y'
        and rd.record_status='Y'
        AND (RD.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
        OR RD.DOCTOR_STATUS_ID IS NULL)
        AND RD.org_flow IS NOT NULL
        AND RD.org_flow != '20160914888888'
        AND RD.org_flow != '566c9f36cf014f63a569b453efa284d7'
        AND RD.org_flow != '00000000000000000000000000000000'
        <if test="docTypeList!=null and docTypeList.size()>0">
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null and orgFlow!=""' >
            and rd.org_flow = #{orgFlow}
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_Number = #{sessionNumber}
        </if>
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and b.dept_name is not null
        </if>
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name
    </select>
    <resultMap id="signinMap" type="map">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="SIGNIN_DATE" property="signinDate" jdbcType="VARCHAR" />
        <result column="SCH_DEPT_NAME" property="schDeptName" jdbcType="VARCHAR" />
        <result column="RESULT_FLOW" property="resultFlow" jdbcType="VARCHAR" />
        <result column="SCH_START_DATE" property="schStartDate" jdbcType="VARCHAR" />
        <result column="SCH_END_DATE" property="schEndDate" jdbcType="VARCHAR" />
        <result column="ATTENDANCE_FLOW" property="attendanceFlow" jdbcType="VARCHAR" />
        <result column="PROCESS_FLOW" property="processFlow" jdbcType="VARCHAR" />
        <result column="TEACHER_USER_NAME" property="teacherUserName" jdbcType="VARCHAR" />
        <result column="IS_CURRENT_FLAG" property="isCurrentFlag" jdbcType="VARCHAR" />
        <result column="SCH_FLAG" property="schFlag" jdbcType="VARCHAR" />
    </resultMap>
    <select id="signinlist" parameterType="java.util.Map" resultMap="signinMap">
        SELECT SIGNIN_DATE,
        SU.USER_FLOW,
        SU.USER_NAME,
        SAR.SCH_DEPT_NAME,
        SAR.RESULT_FLOW,
        SAR.SCH_START_DATE,
        SAR.SCH_END_DATE,
        JA.ATTENDANCE_FLOW,
        PP.PROCESS_FLOW,
        PP.TEACHER_USER_NAME,
        PP.IS_CURRENT_FLAG,
        PP.SCH_FLAG
        FROM PDSCI.RES_ORG_SIGNIN_DATE ROSD
        LEFT JOIN RES_DOCTOR RD ON RD.ORG_FLOW = ROSD.ORG_FLOW
        AND RD.RECORD_STATUS = 'Y'
        LEFT JOIN SYS_USER SU ON RD.DOCTOR_FLOW = SU.USER_FLOW
        LEFT JOIN JSRES_ATTENDANCE JA ON JA.DOCTOR_FLOW = SU.USER_FLOW
        AND JA.RECORD_STATUS = 'Y'
        AND JA.ATTEND_DATE = ROSD.SIGNIN_DATE
        LEFT JOIN SCH_ARRANGE_RESULT SAR ON SAR.RECORD_STATUS = 'Y'
        AND SAR.DOCTOR_FLOW = RD.DOCTOR_FLOW
        AND SAR.SCH_START_DATE <![CDATA[<=]]>
        ROSD.SIGNIN_DATE
        AND SAR.SCH_END_DATE >= ROSD.SIGNIN_DATE
        LEFT JOIN (SELECT A.*,
        ROW_NUMBER() OVER(PARTITION BY SCH_RESULT_FLOW ORDER BY CREATE_TIME DESC) AS RN
        FROM RES_DOCTOR_SCH_PROCESS A
        WHERE  RECORD_STATUS = 'Y') PP ON SAR.RESULT_FLOW =
        PP.SCH_RESULT_FLOW
        AND RN = 1
        WHERE ROSD.ORG_FLOW =#{orgFlow}
        AND ROSD.RECORD_STATUS = 'Y'
        AND RD.RECORD_STATUS = 'Y'
        AND SU.RECORD_STATUS = 'Y'
        AND (rd.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
        OR rd.DOCTOR_STATUS_ID IS NULL)
        <if test="docTypeList!=null and docTypeList.size()>0">
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_Number = #{sessionNumber}
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and pp.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='schDeptFlow != null and schDeptFlow!=""' >
            and sar.sch_dept_flow =#{schDeptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            <if test='statueId =="0".toString()' >
                and ja.ATTENDANCE_FLOW is null
            </if>
            <if test='statueId =="1".toString()' >
                and ja.ATTENDANCE_FLOW is not null
            </if>
        </if>
        <if test='headUserFlow != null  and headUserFlow!=""' >
            and pp.HEAD_USER_FLOW=#{headUserFlow}
        </if>
        and rosd.signin_date >=#{schStartDate}
        and rosd.signin_date <![CDATA[<=]]>#{schEndDate}
        ORDER BY rosd.SIGNIN_DATE DESC,sar.sch_dept_flow,su.user_name
    </select>

    <!--/****************************高******校******管******理******员******角******色************************************************/-->

    <select id="searchAttendanceListForUni" parameterType="java.util.Map" resultMap="attendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_time ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        rd.org_flow,
        rd.org_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        b.dept_flow DEPT_FLOW,
        b.dept_name DEPT_NAME,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        (
        select level flow,to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1,'yyyy-mm-dd') as date_time
        from dual
        connect by level <![CDATA[<]]>= to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
        ) A
        join
        (
        select distinct user_flow,org_flow,org_name,dept_flow,dept_name,sch_dept_flow,sch_dept_name,teacher_user_flow, teacher_user_name,sch_start_date,sch_end_date
        from res_doctor_sch_process
        where record_status = 'Y'
        <if test='orgFlow != null and orgFlow!=""'>
            and org_flow =#{orgFlow}
        </if>
        ) B on   b.sch_start_date <![CDATA[<]]>= a.date_time and b.sch_end_date >=a.date_time
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join JSRES_ATTENDANCE ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_time
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        where su.record_status='Y'
        and rd.record_status='Y'
        and (
        <trim prefix="" prefixOverrides="OR">
            <if test="workOrgId != null and workOrgId != ''">OR rd.work_org_id = #{workOrgId}</if>
            <if test="workOrgName != null and workOrgName != ''">OR rd.work_org_name = #{workOrgName}</if>
        </trim>
        )
        <if test="doctorTypeId!=null and doctorTypeId!=''">
            and rd.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="school!=null and school!=''">
            and rd.SCHOOL = #{school}
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            and rd.ORG_FLOW = #{orgFlow}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and rd.TRAINING_SPE_ID = #{trainingSpeId}
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and rd.TRAINING_TYPE_ID = #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and b.sch_dept_flow =#{deptFlow}
        </if>
        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        ORDER BY a.date_time DESC,b.dept_Flow,su.user_name
    </select>

    <select id="searchAttendanceList2" parameterType="java.util.Map" resultMap="attendanceMap">
        select distinct
        rownum USER_FLOW,
        su.user_name USER_NAME,
        ja.ATTENDANCE_FLOW ATTENDANCE_FLOW,
        a.date_day ATTEND_DATE,
        su.USER_FLOW DOCTOR_FLOW,
        <!-- 学员考勤查询详情与轮转查询科室展示不一致：非本机构科室后面需要显示机构名称 -->
        <choose >
            <when test='baseFlag == null or baseFlag == ""'>
                rd.org_flow,
                rd.org_name,
            </when>
            <when test='baseFlag != null and baseFlag != "" '>
                rd.second_org_flow org_flow,
                rd.second_org_name org_name,
            </when>
        </choose>
        rd.doctor_type_name,
        ja.DOCTOR_NAME DOCTOR_NAME,
        ja.ATTEND_STATUS ATTEND_STATUS,
        ja.ATTEND_STATUS_NAME ATTEND_STATUS_NAME,
        ja.TEACHER_REMARKS TEACHER_REMARKS,
        ja.AUDIT_TIME               ,
        ja.AUDIT_USER_FLOW          ,
        ja.AUDIT_USER_NAME          ,
        ja.AUDIT_STATUS_ID          ,
        ja.AUDIT_STATUS_NAME,
        b.dept_flow DEPT_FLOW,
        b.dept_name DEPT_NAME,
        b.teacher_user_flow TEACHER_FLOW,
        b.teacher_user_name TEACHER_NAME
        from
        Sys_Date_info A
        JOIN (
        select DISTINCT p.user_flow user_flow,
        P.ORG_FLOW          ORG_FLOW,
        P.ORG_NAME          ORG_NAME,
        P.DEPT_FLOW DEPT_FLOW,
        P.DEPT_NAME DEPT_NAME,
        P.SCH_DEPT_FLOW SCH_DEPT_FLOW,
        P.SCH_DEPT_NAME SCH_DEPT_NAME,
        P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
        P.TEACHER_USER_NAME TEACHER_USER_NAME,
        P.SCH_START_DATE SCH_START_DATE,
        P.SCH_END_DATE SCH_END_DATE,
        RD.DOCTOR_TYPE_ID DOCTOR_TYPE_ID,
        nvl((select check_status_id from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_attendance_'||rd.doctor_flow),'N')APP_MENU_FLAG,
        nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
        from res_doctor_sch_process p
        left join res_doctor rd
        on p.user_flow = rd.doctor_flow
        left join sys_user su
        on su.user_flow = rd.doctor_flow
        left join sys_user tu
        on tu.user_flow = p.teacher_user_flow
        left join jsres_power_cfg cfg2
        on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
        where p.record_status = 'Y'
        and rd.record_status = 'Y'
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.TRAINING_SPE_ID = #{trainingSpeId}
        </if>
        and su.record_status = 'Y'
        and tu.record_status = 'Y'
        ) B on   b.sch_start_date <![CDATA[<]]>= a.date_day and b.sch_end_date >=a.date_day
        left join sys_user su on su.user_flow=b.user_flow and su.record_status='Y'
        left join JSRES_ATTENDANCE ja on ja.doctor_flow = b.user_flow and ja.record_status='Y'and ja.attend_date=a.date_day
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        <if test='kqType != null and kqType!="" and  kqType== "Y"' >
            LEFT JOIN (
            SELECT ATTEND_DATE , ATTENDANCE_FLOW
            FROM JSRES_ATTENDANCE_DETAIL
            GROUP BY ATTEND_DATE ,ATTENDANCE_FLOW
            ) d ON ja.ATTEND_DATE = d.ATTEND_DATE and ja.ATTENDANCE_FLOW = d.ATTENDANCE_FLOW
        </if>
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <choose >
            <when test='orgFlowList!=null and (baseFlag == null or baseFlag == "")'>
                and rd.org_flow in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test='(baseFlag != null or baseFlag != "" )and orgFlowList!=null'>
                AND rd.SECOND_ORG_FLOW in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>


        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and b.sch_dept_flow =#{deptFlow}
        </if>

        <if test='kqType != null and kqType!="" and  kqType== "Y"' >
            and  ja.ATTENDANCE_FLOW is not null
            AND ja.ATTEND_STATUS = '1'
            AND to_date( d.ATTEND_DATE, 'yyyy-mm-dd' ) <![CDATA[ >= ]]> to_date( #{schStartDate}, 'yyyy-mm-dd' )
            AND to_date( d.ATTEND_DATE, 'yyyy-mm-dd' )  <![CDATA[ <= ]]> to_date( #{schEndDate}, 'yyyy-mm-dd' )
        </if>
        <if test='kqType != null and kqType!="" and  kqType== "N"' >
            and  ja.ATTENDANCE_FLOW is null
        </if>


        <if test='statueId != null and statueId!=""' >
            and ja.ATTEND_STATUS=#{statueId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and RD.TRAINING_TYPE_ID=#{trainingTypeId}
        </if>
        and  b.APP_MENU_FLAG='Passed'
        AND	( ( b.SCH_START_DATE  <![CDATA[ <= ]]> b.power_start_time AND b.SCH_END_DATE >= b.power_END_time)
        or (b.SCH_START_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_START_DATE <![CDATA[ <= ]]>b.power_END_time)
        or (b.SCH_END_DATE  <![CDATA[ >= ]]> b.power_start_time AND b.SCH_END_DATE <![CDATA[ <= ]]>b.power_END_time))
        and a.date_day <![CDATA[ >= ]]> #{schStartDate}
        and a.date_day <![CDATA[ <= ]]> #{schEndDate}
        ORDER BY a.date_day DESC,b.dept_Flow,su.user_name
    </select>

    <resultMap id="attendanceList2Map" type="hashmap">
        <result column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
            <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
            <result column="TRAINING_TYPE_NAME" property="trainingTypeName" jdbcType="VARCHAR" />
            <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR" />
            <result column="ALL_NUM" property="allNum" jdbcType="VARCHAR" />
            <result column="CQ_NUM" property="cqNum" jdbcType="VARCHAR" />
            <result column="QQ_NUM" property="qqNum" jdbcType="VARCHAR" />
            <result column="LX_NUM" property="lxNum" jdbcType="VARCHAR" />
            <result column="date_month" property="dataMonth" jdbcType="VARCHAR" />
            <result column="date_time" property="dataTime" jdbcType="VARCHAR" />
            <result column="attend_status" property="attendStatus" jdbcType="VARCHAR" />
            <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="attendanceList3"  resultMap="attendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        p.dept_name,rd.doctor_type_name,
        count(a.date_day) all_num,
        sum(case when nvl(t.attend_status,0)='1' then 1 else 0 end) AS cq_num,
        sum(case when nvl(t.attend_status,0)='0' then 1 else 0 end) AS qq_num,
        sum(case when nvl(t.attend_status,0)='-1' then 1 else 0 end) AS lx_num
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        left join Sys_Date_info A
        on a.record_status=su.record_status
        and a.date_day <![CDATA[ >= ]]> #{schStartDate}
        and a.date_day <![CDATA[ <= ]]> #{schEndDate}
        left join JSRES_ATTENDANCE t
        on t.doctor_flow=rd.doctor_flow
        and t.attend_date=a.date_day
        and t.record_status='Y'
        and exists(
        select 1 from JSRES_ATTENDANCE_DETAIL d
        where d.record_status='Y'
        and d.attendance_flow=t.attendance_flow
        )
        LEFT JOIN (SELECT p.user_flow, WM_CONCAT(DISTINCT p.dept_name) AS dept_name
        FROM res_doctor_sch_process p
        WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_flow in
            <foreach collection="deptFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='teacherFlow != null and teacherFlow!=""' >
            AND p.TEACHER_USER_FLOW = #{teacherFlow}
        </if>
        AND (
        p.SCH_START_DATE <![CDATA[ <= ]]>
        (SELECT cfg2.power_end_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' || p.user_flow))
        AND  (SELECT cfg2.power_start_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
        p.user_flow)) <![CDATA[ <= ]]> p.SCH_END_DATE
        )
        AND (SELECT check_status_id
        FROM jsres_power_cfg cfg
        WHERE cfg.record_status = 'Y'
        AND cfg.cfg_code =
        ('jsres_doctor_attendance_' || p.user_flow))= 'Passed'
        AND (p.SCH_START_DATE  <![CDATA[ <= ]]> #{schEndDate} AND #{schStartDate} <![CDATA[ <= ]]> p.SCH_END_DATE)
        group by user_flow) P
        ON P.USER_FLOW=SU.USER_FLOW
        where su.record_status='Y'
        and rd.record_status='Y'
        AND rd.OSCA_STUDENT_SUBMIT is null
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <!--<if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>-->

        <choose >
            <when test='orgFlowList!=null and (baseFlag == null or baseFlag == "")'>
                and rd.org_flow in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test='orgFlowList!=null and baseFlag != null and baseFlag != ""'>
                and rd.SECOND_ORG_FLOW in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>



        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_name is not null
        </if>
        group by su.user_flow,su.user_name,rd.session_number,rd.doctor_type_name,rd.training_type_name,rd.training_spe_name,p.dept_name
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name

    </select>

    <select id="attendanceList2"  resultMap="attendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        p.dept_name,rd.doctor_type_name,
        count(a.date_day) all_num,
        sum(case when nvl(t.attend_status,1)='1' then 1 else 0 end) AS cq_num,
        sum(case when nvl(t.attend_status,1)='0' then 1 else 0 end) AS qq_num,
        sum(case when nvl(t.attend_status,1)='-1' then 1 else 0 end) AS lx_num
    from sys_user su
    left join res_doctor rd on su.user_flow=rd.doctor_flow
    left join Sys_Date_info A
        on a.record_status=su.record_status
        and a.date_day <![CDATA[ >= ]]> #{schStartDate}
        and a.date_day <![CDATA[ <= ]]> #{schEndDate}
        left join JSRES_ATTENDANCE t
        on t.doctor_flow=rd.doctor_flow
        and t.attend_date=a.date_day
        and t.record_status='Y'
    and exists(
            select 1 from JSRES_ATTENDANCE_DETAIL d
            where d.record_status='Y'
            and d.attendance_flow=t.attendance_flow
        )
   LEFT JOIN (SELECT p.user_flow, WM_CONCAT(DISTINCT p.dept_name) AS dept_name
          FROM res_doctor_sch_process p
         WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
       AND (
                p.SCH_START_DATE <![CDATA[ <= ]]>
            (SELECT cfg2.power_end_time
                          FROM jsres_power_cfg cfg2
            WHERE cfg2.record_status = 'Y'
            AND cfg2.cfg_code = ('jsres_doctor_data_time_' || p.user_flow))
            AND  (SELECT cfg2.power_start_time
                    FROM jsres_power_cfg cfg2
                   WHERE cfg2.record_status = 'Y'
                     AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                         p.user_flow)) <![CDATA[ <= ]]> p.SCH_END_DATE
        )
           AND (SELECT check_status_id
                     FROM jsres_power_cfg cfg
                    WHERE cfg.record_status = 'Y'
                      AND cfg.cfg_code =
                          ('jsres_doctor_attendance_' || p.user_flow)) = 'Passed'
                AND (p.SCH_START_DATE  <![CDATA[ <= ]]> #{schEndDate} AND #{schStartDate} <![CDATA[ <= ]]> p.SCH_END_DATE)
           group by user_flow) P
           ON P.USER_FLOW=SU.USER_FLOW
    where su.record_status='Y'
    and rd.record_status='Y'
    AND rd.OSCA_STUDENT_SUBMIT is null
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <!--<if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>-->

        <choose >
            <when test='orgFlowList!=null and (baseFlag == null or baseFlag == "")'>
                and rd.org_flow in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test='orgFlowList!=null and baseFlag != null and baseFlag != ""'>
                and rd.SECOND_ORG_FLOW in
                <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>



        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        group by su.user_flow,su.user_name,rd.session_number,rd.doctor_type_name,rd.training_type_name,rd.training_spe_name,p.dept_name
        order by rd.session_number desc,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name

    </select>
    <select id="exportaAttendanceList2"  resultMap="attendanceList2Map">
        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,
        p.dept_name,substr(a.date_time,0,7) date_month,a.date_time, nvl(t.attend_status, '0') attend_status
    from sys_user su
    left join res_doctor rd on su.user_flow=rd.doctor_flow
    left join (
      SELECT level AS flow, to_char(to_date(#{schStartDate}, 'yyyy-mm-dd') + level - 1, 'yyyy-mm-dd') AS date_time,'Y' record_status
      FROM dual
      CONNECT BY level <![CDATA[ <= ]]> to_date(#{schEndDate}, 'yyyy-mm-dd') - to_date(#{schStartDate}, 'yyyy-mm-dd') + 1
    ) A
    on a.record_status=su.record_status
    left join JSRES_ATTENDANCE t
    on t.doctor_flow=rd.doctor_flow
    and t.attend_date=a.date_time
   LEFT JOIN (SELECT p.user_flow, WM_CONCAT(DISTINCT p.dept_name) AS dept_name
          FROM res_doctor_sch_process p
         WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
           AND (p.SCH_START_DATE <![CDATA[ <= ]]>
               nvl((SELECT cfg2.power_start_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '0000-00-00') AND
               p.SCH_END_DATE >= nvl((SELECT cfg2.power_end_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '9999-99-99') OR
               p.SCH_START_DATE >=
               nvl((SELECT cfg2.power_start_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '0000-00-00') AND
               p.SCH_START_DATE <![CDATA[ <= ]]>
               nvl((SELECT cfg2.power_end_time
                      FROM jsres_power_cfg cfg2
                     WHERE cfg2.record_status = 'Y'
                       AND cfg2.cfg_code =
                           ('jsres_doctor_data_time_' || p.user_flow)),
                    '9999-99-99') OR
               p.SCH_END_DATE >= nvl((SELECT cfg2.power_start_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '0000-00-00') AND
               p.SCH_END_DATE <![CDATA[ <= ]]> nvl((SELECT cfg2.power_end_time
                                        FROM jsres_power_cfg cfg2
                                       WHERE cfg2.record_status = 'Y'
                                         AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
                                             p.user_flow)),
                                      '9999-99-99'))
           AND nvl((SELECT CFG_VALUE
                     FROM jsres_power_cfg cfg
                    WHERE cfg.record_status = 'Y'
                      AND cfg.cfg_code =
                          ('jsres_doctor_app_menu_' || p.user_flow)),
                   'N') = 'Y'
                AND  ( ( p.SCH_START_DATE  <![CDATA[ <= ]]> #{schStartDate} AND p.SCH_END_DATE >= #{schEndDate})
                or (p.SCH_START_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
                or (p.SCH_END_DATE  <![CDATA[ >= ]]> #{schStartDate} AND p.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
           group by user_flow) P
           ON P.USER_FLOW=SU.USER_FLOW
    where su.record_status='Y'
    and rd.record_status='Y'
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        order by substr(a.date_time,0,7),a.date_time,rd.session_number,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name

    </select>
    <select id="exportaAttendanceList3"  resultMap="attendanceList2Map">

        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,

        p.dept_name
        <foreach collection="days" item="item" index="index" open="," separator="," close="">
            (select to_char(max(t.attend_status)) from JSRES_ATTENDANCE t
            where t.doctor_flow = rd.doctor_flow
            and t.record_status='Y'
            AND t.attend_date = #{item}
            and exists(
            select 1 from JSRES_ATTENDANCE_DETAIL d
            where d.record_status='Y'
            and d.attendance_flow=t.attendance_flow
            )
            ) AS "${item}"

        </foreach>
    from sys_user su
    left join res_doctor rd on su.user_flow=rd.doctor_flow
       LEFT JOIN (SELECT p.user_flow, WM_CONCAT(DISTINCT p.dept_name) AS dept_name
            FROM res_doctor_sch_process p
            WHERE p.record_status = 'Y'
            <if test='deptFlow != null and deptFlow!=""' >
                AND p.dept_flow = #{deptFlow}
            </if>
            AND (
            p.SCH_START_DATE <![CDATA[ <= ]]>
            (SELECT cfg2.power_end_time
            FROM jsres_power_cfg cfg2
            WHERE cfg2.record_status = 'Y'
            AND cfg2.cfg_code = ('jsres_doctor_data_time_' || p.user_flow))
            AND  (SELECT cfg2.power_start_time
            FROM jsres_power_cfg cfg2
            WHERE cfg2.record_status = 'Y'
            AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
            p.user_flow)) <![CDATA[ <= ]]> p.SCH_END_DATE
            )
            AND (SELECT CFG_VALUE
            FROM jsres_power_cfg cfg
            WHERE cfg.record_status = 'Y'
            AND cfg.cfg_code =
            ('jsres_doctor_app_menu_' || p.user_flow))= 'Y'
            AND (p.SCH_START_DATE  <![CDATA[ <= ]]> #{schEndDate} AND #{schStartDate} <![CDATA[ <= ]]> p.SCH_END_DATE)
            group by user_flow) P
           ON P.USER_FLOW=SU.USER_FLOW
    where su.record_status='Y'
    and rd.record_status='Y'
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
        <if test='teacherName != null  and teacherName!=""' >
            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')
        </if>
        <if test='teacherFlow != null  and teacherFlow!=""' >
            and b.teacher_user_flow=#{teacherFlow}
        </if>
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        AND rd.OSCA_STUDENT_SUBMIT IS NULL
        <if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        <if test='graduationYear != null and graduationYear!=""' >
            and  exists (select 1 from res_doctor_recruit where record_status='Y'and doctor_flow=rd.doctor_flow
            and graduation_year >= #{graduationYear})
        </if>

        order by rd.session_number,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name
    </select>
    <select id="exportaAttendanceList4"  resultMap="attendanceList2Map">

        select su.user_flow,su.user_name,rd.session_number,rd.training_type_name,rd.training_spe_name,

        p.dept_name
        <foreach collection="days" item="item" index="index" open="," separator="," close="">
            (select to_char(max(t.attend_status)) from JSRES_ATTENDANCE t
            where t.doctor_flow = rd.doctor_flow
            and t.record_status='Y'
            AND t.attend_date = #{item}
            and exists(
            select 1 from JSRES_ATTENDANCE_DETAIL d
            where d.record_status='Y'
            and d.attendance_flow=t.attendance_flow
            )
            ) AS "${item}"

        </foreach>
        from sys_user su
        left join res_doctor rd on su.user_flow=rd.doctor_flow
        LEFT JOIN (SELECT p.user_flow, WM_CONCAT(DISTINCT p.dept_name) AS dept_name
        FROM res_doctor_sch_process p
        WHERE p.record_status = 'Y'
        <if test='deptFlow != null and deptFlow!=""' >
            AND p.dept_flow = #{deptFlow}
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_flow in
            <foreach collection="deptFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='teacherFlow != null and teacherFlow!=""' >
            AND p.TEACHER_USER_FLOW = #{teacherFlow}
        </if>
        AND (
        p.SCH_START_DATE <![CDATA[ <= ]]>
        (SELECT cfg2.power_end_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' || p.user_flow))
        AND  (SELECT cfg2.power_start_time
        FROM jsres_power_cfg cfg2
        WHERE cfg2.record_status = 'Y'
        AND cfg2.cfg_code = ('jsres_doctor_data_time_' ||
        p.user_flow)) <![CDATA[ <= ]]> p.SCH_END_DATE
        )
        AND (SELECT CFG_VALUE
        FROM jsres_power_cfg cfg
        WHERE cfg.record_status = 'Y'
        AND cfg.cfg_code =
        ('jsres_doctor_app_menu_' || p.user_flow))= 'Y'
        AND (p.SCH_START_DATE  <![CDATA[ <= ]]> #{schEndDate} AND #{schStartDate} <![CDATA[ <= ]]> p.SCH_END_DATE)
        group by user_flow) P
        ON P.USER_FLOW=SU.USER_FLOW
        where su.record_status='Y'
        and rd.record_status='Y'
        <if test='sessionNumber != null and sessionNumber!=""' >
            and rd.session_number =  #{sessionNumber}
        </if>
        <if test='trainingSpeId != null and trainingSpeId!=""' >
            and rd.training_spe_id =  #{trainingSpeId}
        </if>
        <if test='trainingTypeId != null and trainingTypeId!=""' >
            and rd.training_type_id =  #{trainingTypeId}
        </if>
        <if test='studentName != null and studentName!=""' >
            and su.user_name like CONCAT(CONCAT('%', #{studentName}),'%')
        </if>
<!--        <if test='teacherName != null  and teacherName!=""' >-->
<!--            and b.teacher_user_name like CONCAT(CONCAT('%', #{teacherName}),'%')-->
<!--        </if>-->
<!--        <if test='teacherFlow != null  and teacherFlow!=""' >-->
<!--            and b.teacher_user_flow=#{teacherFlow}-->
<!--        </if>-->
        <if test='orgFlow != null  and orgFlow!=""' >
            and rd.org_flow=#{orgFlow}
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        AND rd.OSCA_STUDENT_SUBMIT IS NULL
        <if test='orgFlowList!=null'>
            and rd.org_flow in
            <foreach item="item" index="index" collection="orgFlowList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='deptFlow != null and deptFlow!=""' >
            and p.dept_name is not null
        </if>
        <if test="deptFlows!=null and deptFlows.size>0">
            and p.dept_name is not null
        </if>
        <if test='graduationYear != null and graduationYear!=""' >
            and  exists (select 1 from res_doctor_recruit where record_status='Y'and doctor_flow=rd.doctor_flow
            and graduation_year >= #{graduationYear})
        </if>

        order by rd.session_number,rd.training_type_name,rd.training_spe_name,su.user_flow,su.user_name
    </select>
</mapper>