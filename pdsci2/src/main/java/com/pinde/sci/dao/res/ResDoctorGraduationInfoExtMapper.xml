<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.res.ResDoctorGraduationInfoExtMapper">
    <select id="getCreateCertificate" resultMap="com.pinde.sci.dao.base.ResDoctorGraduationInfoMapper.BaseResultMap">
        SELECT DOCTOR_FLOW,RECRUIT_FLOW,RECORD_FLOW,GRADUATION_YEAR||'32'||
                case when training_type_id ='ChineseMedicine' then '3500'
                when training_type_id ='TCMGeneral' then '3600'
                else '' end
                || ORG_CODE|| LPAD(NVL((SELECT COUNT(1) NUM
                FROM RES_DOCTOR_GRADUATION_INFO INFO
                WHERE INFO.RECORD_STATUS = 'Y'
                AND INFO.NATIONAL_BASE_FLOW = T.NATIONAL_BASE_FLOW
                AND INFO.GRADUATION_YEAR = T.GRADUATION_YEAR
                AND INFO.CERTIFICATE_NUMBER IS NOT NULL
                GROUP BY NATIONAL_BASE_FLOW),
                0) + 1,
                3,
                '0') CERTIFICATE_NUMBER,
               'JS'|| LPAD(NVL((SELECT COUNT(1) NUM
                FROM RES_DOCTOR_GRADUATION_INFO INFO
                WHERE INFO.RECORD_STATUS = 'Y'
                AND INFO.CERTIFICATE_NUMBER IS NOT NULL),
                0) + 4,
                13,
                '0')CERTIFICATE_FLOW
        FROM RES_DOCTOR_GRADUATION_INFO T
        WHERE RECORD_STATUS = 'Y'
        AND RECORD_FLOW =#{old.recordFlow}
    </select>

    <resultMap id="userMap" type="java.util.HashMap">
        <result column="doctor_flow" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="THEORY_SCORE" property="theoryScore" jdbcType="VARCHAR" />
        <result column="qualified_num" property="qualifiedNum" jdbcType="VARCHAR" />
        <result column="total_num" property="totalNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getExamResults" resultMap="userMap">
        select distinct y.doctor_flow,y.theory_score,y.qualified_num,y.total_num,y.session_number from (
        SELECT rdge.doctor_flow, c.theory_score,rd.org_flow,rd.session_number,
        nvl(tg.qualified_num,0) qualified_num,n.total_num FROM res_doctor_graduation_exam rdge
        inner join res_doctor rd on rd.doctor_flow = rdge.doctor_flow
        INNER JOIN (
        SELECT MAX(ger2.THEORY_SCORE) AS THEORY_SCORE, rdge2.doctor_flow AS doctor_flow
        FROM RES_DOCTOR_GRADUATION_EXAM rdge2
        INNER JOIN GRADUATION_EXAM_RESULTS ger2 ON rdge2.exam_flow = ger2.process_flow
        WHERE rdge2.record_status = 'Y'
        AND ger2.record_status = 'Y'
        GROUP BY rdge2.doctor_flow
        ) c ON c.doctor_flow = rdge.doctor_flow

        left join (
        SELECT a.doctor_flow, COUNT(1) qualified_num
        FROM (
        SELECT rdge3.doctor_flow
        FROM RES_DOCTOR_GRADUATION_EXAM rdge3
        INNER JOIN GRADUATION_EXAM_RESULTS ger3 ON rdge3.exam_flow = ger3.process_flow
        WHERE rdge3.record_status = 'Y'
        AND ger3.record_status = 'Y'
        AND ger3.is_pass = 'Y'

        ) a group by a.doctor_flow
        ) tg on tg.doctor_flow = rdge.doctor_flow

        inner join (
        SELECT b.doctor_flow, COUNT(1) total_num
        FROM (
        SELECT rdge4.doctor_flow
        FROM RES_DOCTOR_GRADUATION_EXAM rdge4
        INNER JOIN GRADUATION_EXAM_RESULTS ger4 ON rdge4.exam_flow = ger4.process_flow
        WHERE rdge4.record_status = 'Y'
        AND ger4.record_status = 'Y'

        )b group by b.doctor_flow
        ) n on n.doctor_flow = rdge.doctor_flow

        WHERE rdge.RECORD_STATUS = 'Y'
        and rd.record_status = 'Y'
        <if test="userFlows!=null and userFlows.size>0">
            and rdge.DOCTOR_FLOW in
            <foreach collection="userFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            and rd.ORG_FLOW = #{orgFlow}
        </if>
        ) y
        order by y.session_number desc
    </select>

    <resultMap id="scoreMap" type="java.util.HashMap" >
        <result column="RESULTS_ID" property="resultsId" jdbcType="VARCHAR" />
        <result column="SOLU_NAME" property="soluName" jdbcType="VARCHAR" />
        <result column="EXAM_TIME" property="examTime" jdbcType="VARCHAR" />
        <result column="SUBMIT_TIME" property="submitTime" jdbcType="VARCHAR" />
        <result column="EXAM_FLOW" property="examFlow" jdbcType="VARCHAR" />
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="EXAM_PASS_SCORE" property="examPassScore" jdbcType="VARCHAR" />
        <result column="EXAM_YEAR" property="examYear" jdbcType="VARCHAR" />
        <result column="THEORY_SCORE" property="theoryScore" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findExamBydoctorFlow" resultMap="scoreMap">
        SELECT ger.results_id,ger.SOLU_NAME,ger.EXAM_TIME,ger.SUBMIT_TIME,ger.THEORY_SCORE,ger.EXAM_PASS_SCORE,
        RDGE.EXAM_FLOW, RDGE.DOCTOR_FLOW,RDGE.EXAM_YEAR,rd.org_flow
        FROM RES_DOCTOR_GRADUATION_EXAM RDGE
        INNER JOIN GRADUATION_EXAM_RESULTS GER
        ON RDGE.EXAM_FLOW = GER.PROCESS_FLOW
        inner join res_doctor rd
        on rd.doctor_flow = rdge.doctor_flow
        WHERE RDGE.RECORD_STATUS = 'Y'
        AND GER.RECORD_STATUS = 'Y'
        and rd.record_status = 'Y'
        <if test="doctorFlow!=null and doctorFlow!=''">
            AND RDGE.DOCTOR_FLOW = #{doctorFlow}
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            AND rd.org_flow = #{orgFlow}
        </if>
        order by ger.EXAM_TIME desc
    </select>
</mapper>