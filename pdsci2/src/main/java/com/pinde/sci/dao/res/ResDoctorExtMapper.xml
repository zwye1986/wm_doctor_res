<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.res.ResDoctorExtMapper" >
    <resultMap id="ResDoctorExt" type="com.pinde.core.model.ResDoctorExt"
               extends="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
        <association property="sysUser" column="USER_FLOW" javaType="com.pinde.core.model.SysUser"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
        <association property="userResume" column="USER_FLOW" javaType="com.pinde.core.model.StuUserResume"
                     resultMap="com.pinde.core.common.sci.dao.StuUserResumeMapper.BaseResultMap"/>
		<association property="doctorRecruit" column="DOCTOR_FLOW" javaType="com.pinde.core.model.ResDoctorRecruit"
                     resultMap="com.pinde.core.common.sci.dao.ResDoctorRecruitMapper.BaseResultMap"/>
        <association property="pubUserResume" column="USER_FLOW" javaType="com.pinde.core.model.PubUserResume"
                     resultMap="com.pinde.core.common.sci.dao.PubUserResumeMapper.ResultMapWithBLOBs"/>
	</resultMap>
    <resultMap id="DoctorRecruit" type="com.pinde.core.model.JsResDoctorRecruitExt"
               extends="com.pinde.core.common.sci.dao.ResDoctorRecruitMapper.BaseResultMap">
        <association property="sysUser" column="user_flow"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
        <association property="resDoctor" column="doctorFlow"
                     resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
			<id column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
			<result column="edOrgFlow" jdbcType="VARCHAR" property="orgFlow"/>
			<result column="edOrgName" jdbcType="VARCHAR" property="orgName"/>
			<result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId"/>
			<result column="DOCTOR_TYPE_NAME" jdbcType="VARCHAR" property="doctorTypeName"/>
		</association>
	</resultMap>
    <resultMap id="AnnaulCheckMap" type="com.pinde.core.model.ResDoctorExt"
               extends="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
        <result column="USER_FLOW" property="sysUser.userFlow" jdbcType="VARCHAR"/>
        <result column="USER_NAME" property="sysUser.userName" jdbcType="VARCHAR"/>
        <result column="ID_NO" property="sysUser.idNo" jdbcType="VARCHAR"/>
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR"/>
        <result column="GRADUATION_YEAR" property="graduationYear" jdbcType="VARCHAR"/>
        <result column="TRAINING_SPE_NAME" property="trainingSpeName" jdbcType="VARCHAR"/>
        <result column="ANNUAL_ASSESSMENT_FLOW" property="assessmentRecord.annualAssessmentFlow" jdbcType="VARCHAR"/>
        <result column="ASSESSMENT_YEAR" property="assessmentRecord.assessmentYear" jdbcType="VARCHAR"/>
        <result column="DAILY_FINISH_SCORE" property="assessmentRecord.dailyFinishScore" jdbcType="VARCHAR"/>
        <result column="TRAINING_MANUAL_SCORE" property="assessmentRecord.trainingManualScore" jdbcType="VARCHAR"/>
        <result column="PROFESSIONAL_THEORY_SCORE" property="assessmentRecord.professionalTheoryScore" jdbcType="VARCHAR"/>
        <result column="SKILL_NAME" property="assessmentRecord.skillName" jdbcType="VARCHAR"/>
        <result column="SKILL_SCORE" property="assessmentRecord.skillScore" jdbcType="VARCHAR"/>
        <result column="PUBLIC_SKILLS_SCORE" property="assessmentRecord.publicSkillsScore" jdbcType="VARCHAR"/>
        <result column="APPROVED_TOTAL_SCORE" property="assessmentRecord.approvedTotalScore" jdbcType="VARCHAR"/>
        <result column="MATERIAL_URL" property="assessmentRecord.materialUrl" jdbcType="VARCHAR"/>
        <result column="MATERIAL_NAME" property="assessmentRecord.materialName" jdbcType="VARCHAR"/>
        <result column="MEMO" property="assessmentRecord.memo" jdbcType="VARCHAR"/>
    </resultMap>


    <resultMap id="ResDoctorScoreExt" type="com.pinde.core.model.ResDoctorScoreExt"
               extends="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		<id column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
		<result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
		<result column="AVG_SCORE" property="avgScore" jdbcType="DECIMAL" />
		<result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <association property="sysUser" column="USER_FLOW" javaType="com.pinde.core.model.SysUser">
			<id column="USER_FLOW" property="userFlow" jdbcType="VARCHAR" />
			<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
			<result column="USER_CODE" property="userCode" jdbcType="VARCHAR" />
			<result column="SEX_NAME" property="sexName" jdbcType="VARCHAR" />
		</association>
        <association property="resScore" column="SCORE_FLOW" javaType="com.pinde.core.model.ResScore">
			<id column="SCORE_FLOW" property="scoreFlow" jdbcType="VARCHAR" />
			<result column="MAR_SCORE" property="marScore" jdbcType="DECIMAL" />
			<result column="JUN_SCORE" property="junScore" jdbcType="DECIMAL" />
			<result column="OCT_SCORE" property="octScore" jdbcType="DECIMAL" />
		</association>
	</resultMap>
	<resultMap id="ResDoctorSys" type="HashMap">
        <result  property="doctorName" column="doctor_name" javaType="string"/>
        <result  property="doctorFlow" column="doctor_flow" javaType="string"/>
		<result  property="orgFlow" column="org_flow" javaType="string"/>
		<result  property="orgName" column="org_name" javaType="string"/>
		<result property="stuNum" column="stuNum" javaType="string"/>
		<result property="siginNum" column="siginNum" javaType="string"/>
		<result property="avgCount" column="avgCount" javaType="string"/>
		<result  property="AfterSummary" column="AfterSummary" javaType="string"/>
		<result property="TeacherGrade" column="TeacherGrade" javaType="string"/>
		<result property="DeptGrade" column="DeptGrade" javaType="string"/>
		<result property="CampaignRegistry" column="CampaignRegistry" javaType="string"/>
		<result property="CampaignNoItemRegistry" column="CampaignNoItemRegistry" javaType="string"/>
		<result property="CaseRegistry" column="CaseRegistry" javaType="string"/>
		<result  property="Grave" column="Grave" javaType="string"/>
		<result  property="Internship" column="Internship" javaType="string"/>
		<result property="ManageBedRegistry" column="ManageBedRegistry" javaType="string"/>
		<result property="SkillRegistry" column="SkillRegistry" javaType="string"/>
		<result  property="TeachRecordRegistry" column="TeachRecordRegistry" javaType="string"/>
		<result property="EmergencyCase" column="EmergencyCase" javaType="string"/>
		<result  property="DiseaseRegistry" column="DiseaseRegistry" javaType="string"/>
		<result property="SkillRegistry" column="SkillRegistry" javaType="string"/>
		<result property="OperationRegistry" column="OperationRegistry" javaType="string"/>
		<result property="AnnualTrainForm" column="AnnualTrainForm" javaType="string"/>
		<result property="SkillAndOperationRegistry" column="SkillAndOperationRegistry" javaType="string"/>
		<result property="HospitalizationLog" column="HospitalizationLog" javaType="string"/>
	</resultMap>
 	<resultMap id="trainPlanCountMap" type="HashMap">
		<result  property="key" column="TRAINING_SPE_ID" javaType="string"/>
		<result property="value" column="TRAIN_PLAN_COUNT" javaType="java.math.BigDecimal"/>
	</resultMap>
    <resultMap id="doctorRotationMap" type="HashMap">
		<result  property="key" column="ROTATION_KEY" javaType="string"/>
		<result property="name" column="ROTATION_NAME" javaType="string"/>
		<result property="flow" column="ROTATION_FLOW" javaType="string"/>
	</resultMap>
    <resultMap id="ResUserDoctorRecruitExt" type="com.pinde.core.model.ResDoctorExt"
               extends="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
        <association property="sysUser" column="USER_FLOW" javaType="com.pinde.core.model.SysUser"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
		<association property="doctorRecruit" column="DOCTOR_FLOW" javaType="com.pinde.core.model.ResDoctorRecruit"
                     resultMap="com.pinde.core.common.sci.dao.ResDoctorRecruitMapper.BaseResultMap"/>
    </resultMap>
	<insert id="insertRecruitInfo">
		insert into jsres_recruit_info( record_flow, doctor_flow, doctor_type_id, doctor_type_name, org_flow, org_name, spe_id, spe_name, cat_spe_id, cat_spe_name, train_years, session_number, graduation_year, doctor_status_id, doctor_status_name, record_status, create_time, create_user_flow, modify_time, modify_user_flow )
		select sys_guid(),dr.doctor_flow,rd.doctor_type_id,rd.doctor_type_name,case when dr.joint_org_flow is null then dr.org_flow else dr.joint_org_flow end,case when dr.joint_org_name is null then dr.org_name else dr.joint_org_name end,dr.spe_id,dr.spe_name,dr.cat_spe_id,dr.cat_spe_name,dr.train_year,dr.session_number,dr.graduation_year,dr.doctor_status_id, dr.doctor_status_name, dr.record_status, dr.create_time, dr.create_user_flow, dr.modify_time, dr.modify_user_flow
		 from res_doctor_recruit dr
		 left join res_doctor rd
		 on rd.doctor_flow=dr.doctor_flow
		 where dr.record_status='Y' and audit_status_Id='Passed'and recruit_flow=#{recruitFlow}
	</insert>
	<insert id="insertRecruitDocInfo">
		insert into jsres_recruit_doc_info( recruit_flow, doctor_flow, org_flow, org_name, spe_id, spe_name, swap_flag, recruit_type_id, recruit_type_name, recruit_year, retest_flag, exam_result, audition_result, oper_result, totle_result, admit_flag, recruit_flag, confirm_flag, record_status, create_time, create_user_flow, modify_time, modify_user_flow, swap_spe_id, swap_spe_name, recruit_date, retest_notice, admit_notice, cat_spe_id, cat_spe_name, session_number, yet_train_year, doctor_status_id, doctor_status_name, doctor_strike_id, doctor_strike_name, train_no, audit_status_id, audit_status_name, train_year, place_id, place_name, prove_file_url, complete_cert_no, complete_file_url, curr_degree_category_id, curr_degree_category_name, prov_remark, graduation_year, admin_swap_flag, rotation_flow, rotation_name, special_cert_no, special_file_url, avg_complete, avg_audit, material_id, practicing_scope_id, practicing_scope_name, certificate_uri, qualification_material_uri, special_certification_uri, qualification_material_code, type_id, registe_manua, second_spe_id, second_spe_name, graduation_certificate_no, certificate_date, graduation_certificate_type, SIGNUP_WAY)
		select sys_guid(), doctor_flow, case when joint_org_flow is null then org_flow else joint_org_flow end, case when joint_org_name is null then org_name else joint_org_name end, spe_id, spe_name, swap_flag, recruit_type_id, recruit_type_name, recruit_year, retest_flag, exam_result, audition_result, oper_result, totle_result, admit_flag, recruit_flag, confirm_flag, record_status, create_time, create_user_flow, modify_time, modify_user_flow, swap_spe_id, swap_spe_name, recruit_date, retest_notice, admit_notice, cat_spe_id, cat_spe_name, session_number, yet_train_year, doctor_status_id, doctor_status_name, doctor_strike_id, doctor_strike_name, train_no, audit_status_id, audit_status_name, train_year, place_id, place_name, prove_file_url, complete_cert_no, complete_file_url, curr_degree_category_id, curr_degree_category_name, prov_remark, graduation_year, admin_swap_flag, rotation_flow, rotation_name, special_cert_no, special_file_url, avg_complete, avg_audit, material_id, practicing_scope_id, practicing_scope_name, certificate_uri, qualification_material_uri, special_certification_uri, qualification_material_code, type_id, registe_manua, second_spe_id, second_spe_name, graduation_certificate_no, certificate_date, graduation_certificate_type, SIGNUP_WAY
		   from res_doctor_recruit
		 where record_status='Y' and audit_status_Id='Passed' and recruit_flow=#{recruitFlow}
	</insert>
	<insert id="insertRecruitDocInfoNotPass">
		insert into jsres_recruit_doc_info( recruit_flow, doctor_flow, org_flow, org_name, spe_id, spe_name, swap_flag, recruit_type_id, recruit_type_name, recruit_year, retest_flag, exam_result, audition_result, oper_result, totle_result, admit_flag, recruit_flag, confirm_flag, record_status, create_time, create_user_flow, modify_time, modify_user_flow, swap_spe_id, swap_spe_name, recruit_date, retest_notice, admit_notice, cat_spe_id, cat_spe_name, session_number, yet_train_year, doctor_status_id, doctor_status_name, doctor_strike_id, doctor_strike_name, train_no, audit_status_id, audit_status_name, train_year, place_id, place_name, prove_file_url, complete_cert_no, complete_file_url, curr_degree_category_id, curr_degree_category_name, prov_remark, graduation_year, admin_swap_flag, rotation_flow, rotation_name, special_cert_no, special_file_url, avg_complete, avg_audit, material_id, practicing_scope_id, practicing_scope_name, certificate_uri, qualification_material_uri, special_certification_uri, qualification_material_code, type_id, registe_manua, second_spe_id, second_spe_name, graduation_certificate_no, certificate_date, graduation_certificate_type)
		select sys_guid(), doctor_flow, org_flow, org_name, spe_id, spe_name, swap_flag, recruit_type_id, recruit_type_name, recruit_year, retest_flag, exam_result, audition_result, oper_result, totle_result, admit_flag, recruit_flag, confirm_flag, record_status, create_time, create_user_flow, modify_time, modify_user_flow, swap_spe_id, swap_spe_name, recruit_date, retest_notice, admit_notice, cat_spe_id, cat_spe_name, session_number, yet_train_year, doctor_status_id, doctor_status_name, doctor_strike_id, doctor_strike_name, train_no, audit_status_id, audit_status_name, train_year, place_id, place_name, prove_file_url, complete_cert_no, complete_file_url, curr_degree_category_id, curr_degree_category_name, prov_remark, graduation_year, admin_swap_flag, rotation_flow, rotation_name, special_cert_no, special_file_url, avg_complete, avg_audit, material_id, practicing_scope_id, practicing_scope_name, certificate_uri, qualification_material_uri, special_certification_uri, qualification_material_code, type_id, registe_manua, second_spe_id, second_spe_name, graduation_certificate_no, certificate_date, graduation_certificate_type
		   from res_doctor_recruit
		 where record_status='Y' and audit_status_Id='NotPassed' and recruit_flow=#{recruitFlow}
	</insert>
	<insert id="insertRecruitInfoNotPass">
		insert into jsres_recruit_info( record_flow, doctor_flow, doctor_type_id, doctor_type_name, org_flow, org_name, spe_id, spe_name, cat_spe_id, cat_spe_name, train_years, session_number, graduation_year, doctor_status_id, doctor_status_name, record_status, create_time, create_user_flow, modify_time, modify_user_flow )
		select sys_guid(),dr.doctor_flow,rd.doctor_type_id,rd.doctor_type_name,dr.org_flow,dr.org_name,dr.spe_id,dr.spe_name,dr.cat_spe_id,dr.cat_spe_name,dr.train_year,dr.session_number,dr.graduation_year,dr.doctor_status_id, dr.doctor_status_name, dr.record_status, dr.create_time, dr.create_user_flow, dr.modify_time, dr.modify_user_flow
		 from res_doctor_recruit dr
		 left join res_doctor rd
		 on rd.doctor_flow=dr.doctor_flow
		 where dr.record_status='Y' and audit_status_Id='NotPassed'and recruit_flow=#{recruitFlow}
	</insert>
	<select id="selectRecruitDocInfo" resultMap="com.pinde.core.common.sci.dao.JsresRecruitDocInfoMapper.ResultMapWithBLOBs">
		select recruit_flow, doctor_flow, org_flow, org_name, spe_id, spe_name, swap_flag, recruit_type_id, recruit_type_name, recruit_year, retest_flag, exam_result, audition_result, oper_result, totle_result, admit_flag, recruit_flag, confirm_flag, record_status, create_time, create_user_flow, modify_time, modify_user_flow, swap_spe_id, swap_spe_name, recruit_date, retest_notice, admit_notice, cat_spe_id, cat_spe_name, session_number, yet_train_year, doctor_status_id, doctor_status_name, doctor_strike_id, doctor_strike_name, train_no, audit_status_id, audit_status_name, train_year, place_id, place_name, prove_file_url, complete_cert_no, complete_file_url, curr_degree_category_id, curr_degree_category_name, prov_remark, graduation_year, admin_swap_flag, rotation_flow, rotation_name, special_cert_no, special_file_url, avg_complete, avg_audit, material_id, practicing_scope_id, practicing_scope_name, certificate_uri, qualification_material_uri, special_certification_uri, qualification_material_code, type_id, registe_manua, second_spe_id, second_spe_name, graduation_certificate_no, certificate_date, graduation_certificate_type
		   from res_doctor_recruit
		 where record_status='Y' and audit_status_Id='Passed' and recruit_flow=#{recruitFlow}
	</select>
	<select id="selectRecruitInfo" resultMap="com.pinde.core.common.sci.dao.JsresRecruitInfoMapper.BaseResultMap">
		select recruit_flow record_flow,dr.doctor_flow,rd.doctor_type_id,rd.doctor_type_name,dr.org_flow,dr.org_name,dr.spe_id,dr.spe_name,dr.cat_spe_id,dr.cat_spe_name,dr.train_year train_years,dr.session_number,dr.graduation_year,dr.doctor_status_id, dr.doctor_status_name, dr.record_status, dr.create_time, dr.create_user_flow, dr.modify_time, dr.modify_user_flow
		 from res_doctor_recruit dr
		 left join res_doctor rd
		 on rd.doctor_flow=dr.doctor_flow
		 where dr.record_status='Y' and audit_status_Id='Passed'and recruit_flow=#{recruitFlow}
	</select>
    <select id="searchDocByteacherJx" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		select * from res_doctor where RECORD_STATUS = 'Y'
		<if test='doctor != null'>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
			<if test='doctor.sessionNumber != null and doctor.sessionNumber != ""'>
				AND SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId != null and doctor.trainingSpeId != ""'>
				AND TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorCategoryId != null and doctor.doctorCategoryId != ""'>
				AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test="doctor.doctorName != null and doctor.doctorName != ''">
				AND doctor_Name = #{doctor.doctorName}
			</if>

		</if>
		<if test='teacherUserFlow != null and teacherUserFlow != ""'>
			AND doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and teacher_user_flow = #{teacherUserFlow})
		</if>
		<if test='headUserFlow != null and headUserFlow != ""'>
			AND doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and head_user_flow = #{headUserFlow})
		</if>
		ORDER BY res_doctor.DOCTOR_CODE
	</select>
	<select id="searchResDoctorGrades" parameterType="com.pinde.core.model.ResDoctorScoreExt" resultMap="ResDoctorScoreExt">
		select
		u.USER_FLOW USER_FLOW,
		u.USER_CODE USER_CODE,
		u.USER_NAME USER_NAME,
		u.SEX_NAME SEX_NAME,
		d.DOCTOR_FLOW DOCTOR_FLOW,
		d.ORG_NAME ORG_NAME,
		d.SESSION_NUMBER SESSION_NUMBER,
		s.SCORE_FLOW SCORE_FLOW,
		s.MAR_SCORE MAR_SCORE,
		s.JUN_SCORE JUN_SCORE,
		s.OCT_SCORE OCT_SCORE,
        round((nvl(s.MAR_SCORE,0)+nvl(s.JUN_SCORE,0)+nvl(s.OCT_SCORE,0))/3,2) AVG_SCORE
		from sys_user u
		inner join res_doctor d
		on u.user_flow=d.doctor_flow
		left join res_score s on d.doctor_flow=s.doctor_flow and s.record_status='Y' AND s.SCORE_TYPE_ID = 'Assessment'
		where u.record_status='Y' and d.record_status='Y'
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND d.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='doctorName != null and doctorName != ""'>
			AND u.user_name like CONCAT(CONCAT('%', #{doctorName}),'%')
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND d.org_flow = #{orgFlow}
		</if>
		<if test='sysUser != null'>
			AND u.USER_FLOW = #{sysUser.userFlow}
		</if>
		ORDER BY d.org_flow desc, (nvl(s.mar_score,0)+nvl(s.jun_score,0)+nvl(s.oct_score,0)) desc, d.doctor_name
	</select>
    <select id="searchSysRecords" parameterType="java.util.HashMap" resultMap="ResDoctorSys">
        select a.*,
        CASE when a.stuNum=0 then '0'
        when a.siginNum=0 then '0'
        else to_char((round (a.siginNum/a.stuNum,2)),'fm9999990.09')
        end as avgCount
        from (
        select
        a.org_flow org_flow
        ,a.org_name org_name
        ,nvl(
        (select count(1)
        from res_doctor rd
        where rd.record_status = 'Y'
        and rd.org_flow = a.org_flow
        <if test='sessionNumber!=null and sessionNumber!=""'>
            and rd.session_number=#{sessionNumber}
        </if>
        ),0) stuNum,
        nvl(
        (select count(1)
        from RES_SIGNIN rs left join res_doctor rd
        on rs.user_flow=rd.doctor_flow
        where rs.record_status = 'Y' and rd.record_status = 'Y'
        <if test='sessionNumber!=null and sessionNumber!=""'>
            and rd.session_number=#{sessionNumber}
        </if>
        <if test='startDate!=null and startDate!=""'>
            and rs.create_time >= #{startDate}
        </if>
        <if test='endDate!=null and endDate!=""'>
            and rs.create_time <![CDATA[<]]>= #{endDate}
        </if>
        and rs.org_flow = a.org_flow
        ),0) siginNum,
        <if test="recTypeIds!=null">
            <foreach collection="recTypeIds" item="item" separator=",">
                (select count(1) from res_rec
                where record_status='Y'
                <if test='startDate!=null and startDate!=""'>
                    and create_time >= #{startDate}
                </if>
                <if test='endDate!=null and endDate!=""'>
                    and create_time <![CDATA[<]]>= #{endDate}
                </if>
                and rec_type_id =#{item}
                and exists(select 1 from res_doctor rd where rd.record_status='Y'
                and rd.doctor_flow=res_rec.oper_user_flow
                <if test='sessionNumber!=null and sessionNumber!=""'>
                    and rd.session_number=#{sessionNumber}
                </if>
                and rd.org_flow=a.org_flow)) ${item}
            </foreach>
        </if>
        from sys_org a
        where record_status = 'Y'
        and org_type_id = 'Hospital'
        ) a
    </select>
	<select id="searchResDoctorUser" parameterType="com.pinde.core.model.ResDoctorExt" resultMap="ResDoctorExt">
		select * from res_doctor rd
        INNER JOIN  sys_user  su on  rd.DOCTOR_FLOW = su.USER_FLOW
		<if test='linkXjFlag!=null and linkXjFlag!=""'>
			inner join edu_user eu on rd.doctor_flow=eu.user_flow
			<!--trainCategoryId=1专业型-->
			and eu.train_Category_Id = '1'
		</if>
		AND su.RECORD_STATUS = 'Y' and rd.RECORD_STATUS = 'Y'
		<if test='orgProvId!=null and orgProvId!=""'>
		INNER join sys_org so on rd.org_flow = so.org_flow AND so.RECORD_STATUS = 'Y'
			AND so.ORG_PROV_ID = #{orgProvId}
		</if>
		<if test='orgCityId!=null and orgCityId!=""'>
			AND so.ORG_CITY_ID = #{orgCityId}
		</if>
		<if test='orgAreaId!=null and orgAreaId!=""'>
			AND so.ORG_AREA_ID = #{orgAreaId}
		</if>
		<if test='is5plus3 !=null and is5plus3 !=""'>
			inner join edu_user eu on eu.RECORD_STATUS = 'Y' and rd.DOCTOR_FLOW = eu.USER_FLOW
			AND eu.IS5PLUS3 = #{is5plus3}
		</if>
		<if test='workOrgId!=null and workOrgId!=""'>
			AND rd.work_Org_Id = #{workOrgId}
		</if>
		<if test='graduationYear!=null and graduationYear!=""'>
			AND rd.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='groupId != null and groupId != ""'>
			AND rd.GROUP_ID = #{groupId}
		</if>
		<if test='trainingSpeId != null and trainingSpeId != ""'>
			AND rd.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='selDeptFlag!=null and selDeptFlag!=""'>
			AND (RD.SEL_DEPT_FLAG = 'N' OR RD.SEL_DEPT_FLAG IS NULL)
		</if>
		<if test='selAllFlag!=null and selAllFlag!=""'>
			AND (RD.SEL_ALL_FLAG = 'N' OR RD.SEL_ALL_FLAG IS NULL)
		</if>
		<if test='doctorTypeIdList != null and doctorTypeIdList.size()>0'>
			and rd.DOCTOR_TYPE_ID in
		<foreach collection="doctorTypeIdList" item="item0" open="(" separator="," close=")">
			#{item0}
		</foreach>
		</if>
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and rd.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test="doctorCategoryId != null and doctorCategoryId != '' and doctorCategoryId !='all'.toString()">
			AND rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test='graduatedId != null and graduatedId != ""'>
			AND rd.GRADUATED_ID = #{graduatedId}
		</if>
		<if test='recordStatus != null and recordStatus != ""'>
			AND rd.RECORD_STATUS = #{recordStatus}
		</if>
		<if test="specialized != null and specialized != ''">
			AND rd.SPECIALIZED LIKE CONCAT(CONCAT('%', #{specialized}),'%')
		</if>
		<if test="doctorCode != null and doctorCode != ''">
			AND rd.doctor_code LIKE CONCAT(CONCAT('%', #{doctorCode}),'%')
		</if>
		<if test='doctorName != null and doctorName != ""'>
			AND su.user_name LIKE CONCAT(CONCAT('%', #{doctorName}),'%')
		</if>
		<if test='tutorFlow != null and tutorFlow != ""'>
			AND rd.tutor_flow = #{tutorFlow}
		</if>
		<if test='orgName != null and orgName != ""'>
			AND rd.org_name like CONCAT(CONCAT('%', #{orgName}),'%')
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND rd.org_flow = #{orgFlow}
		</if>
		<if test='doctorStatusId != null and doctorStatusId != ""'>
			AND rd.DOCTOR_STATUS_ID = #{doctorStatusId}
		</if>
		<if test='workOrgId != null and workOrgId!=""'>
			and rd.work_Org_Id =#{workOrgId}
		</if>

		<if test='medicineTypeId!=null and medicineTypeId!=""'>
			and instr(#{medicineTypeId},su.medicine_Type_Id)>0
		</if>
			AND (rd.DOCTOR_STATUS_ID not in( 'UnPassed','Passed','UnSubmit')
				or rd.DOCTOR_STATUS_ID is null)
			AND rd.org_flow is not null
			AND rd.org_flow != '20160914888888'
			AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
			AND rd.org_flow != '00000000000000000000000000000000'
		<if test='doctorFlows!=null and doctorFlows.size()>0'>
			and rd.DOCTOR_FLOW IN
			<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
				#{flow}
			</foreach>
		</if>
		<if test='sysUser != null'>
			<if test='sysUser.userName != null and sysUser.userName != ""'>
				AND su.USER_NAME like CONCAT(CONCAT('%', #{sysUser.userName}),'%')
			</if>
			<if test='sysUser.statusId != null and sysUser.statusId  != ""'>
				AND su.status_Id  = #{sysUser.statusId}
			</if>
			<if test='sysUser.recordStatus != null and sysUser.recordStatus  != ""'>
				AND su.RECORD_STATUS=#{recordStatus}
			</if>
			<if test="sysUser.orgFlow != null and sysUser.orgFlow != ''">
				AND su.ORG_FLOW = #{sysUser.orgFlow}
			</if>
			<if test="sysUser.educationId != null and sysUser.educationId != ''">
				AND su.EDUCATION_ID = #{sysUser.educationId}
			</if>
			<if test='sysUser.idNo != null and sysUser.idNo != ""'>
				AND su.id_No like CONCAT(CONCAT('%', #{sysUser.idNo}),'%')
			</if>
			<if test="sysUser.deptFlow != null and sysUser.deptFlow != ''">
				AND su.dept_Flow = #{sysUser.deptFlow}
			</if>
		</if>
		left join pub_user_resume pur on pur.user_flow=su.user_flow and pur.record_status='Y'
		ORDER BY rd.ORG_NAME,nlssort(su.user_name,'NLS_SORT=SCHINESE_PINYIN_M'),rd.session_number desc, su.user_code,rd.CREATE_TIME
	</select>


    <select id="searchResDoctorByAssessment" resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
        select ed.* from res_doctor ed
        LEFT JOIN SYS_USER u ON ED.DOCTOR_FLOW = u.USER_FLOW
        where ed.record_status='Y'
        AND U.RECORD_STATUS='Y'

        <if test="doctorFlow!=null and doctorFlow!=''">
            and ed.doctor_Flow = #{doctorFlow}
        </if>
        and (
        <if test="doctorTypeId!=null and doctorTypeId!=''">
            ed.doctor_Type_Id = #{doctorTypeId}
        </if>
        or(
        <if test="sessionNumber!=null and sessionNumber!=''">
            ed.session_Number = #{sessionNumber}
        </if>
        <if test="trainingYears!=null and trainingYears!=''">
            and ed.training_Years = #{trainingYears}
        </if>
        )
        )

    </select>
	<select id="searchResDoctorUserNew"  parameterType="com.pinde.core.model.ResDoctorExt" resultMap="DoctorRecruit">
		select dr.AUDITION_STATUS_ID,
		dr.AUDITION_STATUS_NAME,
		dr.OPER_STATUS_ID,
		dr.OPER_STATUS_NAME,
		dr.IN_JOINT_ORG_TRAIN,
		dr.JOINT_ORG_FLOW,
		dr.JOINT_ORG_NAME,
		dr.ROTATION_FLOW,
		dr.ROTATION_NAME,
		dr.SPECIAL_CERT_NO,
		dr.SPECIAL_FILE_URL,
		dr.AVG_COMPLETE,
		dr.AVG_AUDIT,
		dr.MATERIAL_ID,
		dr.PRACTICING_SCOPE_ID,
		dr.PRACTICING_SCOPE_NAME,
		dr.CERTIFICATE_URI,
		dr.QUALIFICATION_MATERIAL_URI,
		dr.SPECIAL_CERTIFICATION_URI,
		dr.QUALIFICATION_MATERIAL_CODE,
		dr.TYPE_ID,
		dr.REGISTE_MANUA,
		dr.RECRUIT_FLOW,
		dr.DOCTOR_FLOW,
		dr.ORG_FLOW,
		dr.SPE_ID,
		dr.SPE_NAME,
		dr.SWAP_FLAG,
		dr.RECRUIT_TYPE_ID,
		dr.RECRUIT_TYPE_NAME,
		dr.RECRUIT_YEAR,
		dr.RECRUIT_DATE,
		dr.RETEST_FLAG,
		dr.EXAM_RESULT,
		dr.AUDITION_RESULT,
		dr.OPER_RESULT,
		dr.TOTLE_RESULT,
		dr.ADMIT_FLAG,
		dr.RECRUIT_FLAG,
		dr.CONFIRM_FLAG,
		dr.SWAP_SPE_ID,
		dr.SWAP_SPE_NAME,
		dr.RECORD_STATUS,
		dr.CREATE_TIME,
		dr.CREATE_USER_FLOW,
		dr.MODIFY_TIME,
		dr.MODIFY_USER_FLOW,
		dr.RETEST_NOTICE,
		dr.ADMIT_NOTICE,
		dr.CAT_SPE_ID,
		dr.CAT_SPE_NAME,
		dr.SESSION_NUMBER,
		dr.TRAIN_YEAR,
		dr.YET_TRAIN_YEAR,
		dr.DOCTOR_STATUS_ID,
		dr.DOCTOR_STATUS_NAME,
		dr.DOCTOR_STRIKE_ID,
		dr.DOCTOR_STRIKE_NAME,
		dr.TRAIN_NO,
		dr.AUDIT_STATUS_ID,
		dr.AUDIT_STATUS_NAME,
		dr.PLACE_ID,
		dr.PLACE_NAME,
		dr.PROVE_FILE_URL,
		dr.COMPLETE_CERT_NO,
		dr.COMPLETE_FILE_URL,
		dr.CURR_DEGREE_CATEGORY_ID,
		dr.CURR_DEGREE_CATEGORY_NAME,
		dr.PROV_REMARK,
		dr.GRADUATION_YEAR,
		dr.ADMIN_SWAP_FLAG,
		dr.SECOND_SPE_ID,
		dr.SECOND_SPE_NAME,
		dr.GRADUATION_CERTIFICATE_NO,
		dr.CERTIFICATE_DATE,
		dr.GRADUATION_CERTIFICATE_TYPE,
		dr.CHANGE_SPE_ID,
		dr.CHANGE_SPE_NAME,
		dr.RETURN_BACK_FLAG,
		dr.RETURN_BACK_REMARK,
		dr.IS_SEND,
		dr.IS_CERT_SEND,
		dr.QUALIFIED_ID,
		dr.CERTIFICATE_ISSUING_STATUS,
		dr.WORK_UNIT,
		dr.WORK_UNIT_CODE,
		dr.ARMY_HOSPITAL,
		dr.EXAM_STATUS_ID,
		dr.EXAM_STATUS_NAME,
		dr.ORG_NAME ,
		su.USER_FLOW,su.USER_CODE, su.USER_NAME, su.SEX_ID, su.SEX_NAME, su.USER_PHONE,su.USER_EMAIL
		, su.ID_NO, su.USER_BIRTHDAY, su.TITLE_ID,su.TITLE_NAME, su.DEGREE_ID, su.DEGREE_NAME, su.EDUCATION_ID, su.EDUCATION_NAME,su.POST_ID, su.POST_NAME,
		rd.ORG_FLOW as edOrgFlow,rd.ORG_Name as edOrgName,rd.doctor_type_name,rd.doctor_type_id,rd.doctor_Name,rd.training_Spe_Name,
		rd.doctor_Category_Name,rd.training_Years
        from RES_DOCTOR_RECRUIT dr
        left join SYS_USER su
		on dr.DOCTOR_FLOW =  su.USER_FLOW
		left join  RES_DOCTOR rd
		on dr.DOCTOR_FLOW =  rd.DOCTOR_FLOW
		left join pub_user_resume pur on pur.user_flow=su.user_flow
		where pur.record_status='Y'
		AND su.RECORD_STATUS = 'Y' and rd.RECORD_STATUS = 'Y'
		<if test='workOrgId!=null and workOrgId!=""'>
			AND rd.work_Org_Id = #{workOrgId}
		</if>
		<if test='graduationYear!=null and graduationYear!=""'>
			AND rd.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='groupId != null and groupId != ""'>
			AND rd.GROUP_ID = #{groupId}
		</if>
		<if test='trainingSpeId != null and trainingSpeId != ""'>
			AND rd.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='selDeptFlag!=null and selDeptFlag!=""'>
			AND (RD.SEL_DEPT_FLAG = 'N' OR RD.SEL_DEPT_FLAG IS NULL)
		</if>
		<if test='selAllFlag!=null and selAllFlag!=""'>
			AND (RD.SEL_ALL_FLAG = 'N' OR RD.SEL_ALL_FLAG IS NULL)
		</if>
		<if test='doctorTypeIdList != null and doctorTypeIdList.size()>0'>
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="doctorTypeIdList" item="item0" open="(" separator="," close=")">
				#{item0}
			</foreach>
		</if>
		<if test="doctorTypeId!=null and doctorTypeId!=''">
			and rd.DOCTOR_TYPE_ID = #{doctorTypeId}
		</if>
		<if test='graduatedId != null and graduatedId != ""'>
			AND rd.GRADUATED_ID = #{graduatedId}
		</if>
		<if test='recordStatus != null and recordStatus != ""'>
			AND rd.RECORD_STATUS = #{recordStatus}
		</if>
		<if test="specialized != null and specialized != ''">
			AND rd.SPECIALIZED LIKE CONCAT(CONCAT('%', #{specialized}),'%')
		</if>
		<if test="doctorCode != null and doctorCode != ''">
			AND rd.doctor_code LIKE CONCAT(CONCAT('%', #{doctorCode}),'%')
		</if>
		<if test='doctorName != null and doctorName != ""'>
			AND su.user_name LIKE CONCAT(CONCAT('%', #{doctorName}),'%')
		</if>
		<if test='tutorFlow != null and tutorFlow != ""'>
			AND rd.tutor_flow = #{tutorFlow}
		</if>
		<if test='orgName != null and orgName != ""'>
			AND rd.org_name like CONCAT(CONCAT('%', #{orgName}),'%')
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND rd.org_flow = #{orgFlow}
		</if>
		<if test='doctorStatusId != null and doctorStatusId != ""'>
			AND rd.DOCTOR_STATUS_ID = #{doctorStatusId}
		</if>
		<if test='workOrgId != null and workOrgId!=""'>
			and rd.work_Org_Id =#{workOrgId}
		</if>

		<if test='medicineTypeId!=null and medicineTypeId!=""'>
			and instr(#{medicineTypeId},su.medicine_Type_Id)>0
		</if>
		AND (rd.DOCTOR_STATUS_ID not in( 'UnPassed','Passed','UnSubmit')
		or rd.DOCTOR_STATUS_ID is null)
		AND rd.org_flow is not null
		AND rd.org_flow != '20160914888888'
		AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND rd.org_flow != '00000000000000000000000000000000'
		<if test='doctorFlows!=null and doctorFlows.size()>0'>
			and rd.DOCTOR_FLOW IN
			<foreach collection="doctorFlows" close=")" item="flow" open="(" separator=",">
				#{flow}
			</foreach>
		</if>
		<if test='sysUser != null'>
			<if test='sysUser.userName != null and sysUser.userName != ""'>
				AND su.USER_NAME like CONCAT(CONCAT('%', #{sysUser.userName}),'%')
			</if>
			<if test='sysUser.statusId != null and sysUser.statusId  != ""'>
				AND su.status_Id  = #{sysUser.statusId}
			</if>
			<if test='sysUser.recordStatus != null and sysUser.recordStatus  != ""'>
				AND su.RECORD_STATUS=#{recordStatus}
			</if>
			<if test="sysUser.orgFlow != null and sysUser.orgFlow != ''">
				AND su.ORG_FLOW = #{sysUser.orgFlow}
			</if>
			<if test="sysUser.educationId != null and sysUser.educationId != ''">
				AND su.EDUCATION_ID = #{sysUser.educationId}
			</if>
			<if test='sysUser.idNo != null and sysUser.idNo != ""'>
				AND su.id_No like CONCAT(CONCAT('%', #{sysUser.idNo}),'%')
			</if>
			<if test="sysUser.deptFlow != null and sysUser.deptFlow != ''">
				AND su.dept_Flow = #{sysUser.deptFlow}
			</if>
		</if>

		ORDER BY rd.ORG_NAME,nlssort(su.user_name,'NLS_SORT=SCHINESE_PINYIN_M'),rd.session_number desc, su.user_code,rd.CREATE_TIME
	</select>
    <select id="searchDocUserForAnnualCheck" parameterType="com.pinde.core.model.ResDoctorExt" resultMap="AnnaulCheckMap">
        select su.USER_FLOW,su.USER_NAME USER_NAME,su.ID_NO ID_NO,rd.SESSION_NUMBER SESSION_NUMBER,rd.GRADUATION_YEAR GRADUATION_YEAR,
        rd.TRAINING_SPE_NAME,
        raar.ASSESSMENT_YEAR,
        raar.ANNUAL_ASSESSMENT_FLOW,
        raar.DAILY_FINISH_SCORE,
        raar.TRAINING_MANUAL_SCORE,
        raar.PROFESSIONAL_THEORY_SCORE,
        raar.SKILL_NAME,
        raar.SKILL_SCORE,
        raar.PUBLIC_SKILLS_SCORE,
        raar.APPROVED_TOTAL_SCORE,
        raar.MATERIAL_URL,
        raar.MATERIAL_NAME,
        raar.MEMO
        from res_doctor rd
        left join RES_ANNUAL_ASSESSMENT_RECORD raar on rd.DOCTOR_FLOW = raar.USER_FLOW and raar.RECORD_STATUS = 'Y'
        <if test='assessmentRecord != null'>
            <if test='assessmentRecord.assessmentYear!=null and assessmentRecord.assessmentYear!=""'>
                AND  raar.ASSESSMENT_YEAR = #{assessmentRecord.assessmentYear}
            </if>
        </if>
        INNER JOIN  sys_user  su on  rd.DOCTOR_FLOW = su.USER_FLOW
        AND su.RECORD_STATUS = 'Y' and rd.RECORD_STATUS = 'Y'

        <if test='graduationYear!=null and graduationYear!=""'>
            AND rd.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test='departMentFlow!=null and departMentFlow!=""'>
            AND rd.DEPART_MENT_FLOW = #{departMentFlow}
        </if>

        <if test='sessionNumber != null and sessionNumber != "" '>
            AND rd.SESSION_NUMBER = #{sessionNumber}
        </if>

        <if test='deptFlows!=null'>
            and rd.depart_Ment_Flow in
            <foreach collection="deptFlows" open="(" separator="," close=")" item="deptFlow">
                #{deptFlow}
            </foreach>
        </if>

        <if test='trainingYears != null and trainingYears != ""'>
            AND rd.TRAINING_YEARS = #{trainingYears}
        </if>
        and (rd.SESSION_NUMBER='2017' and rd.TRAINING_YEARS !='3'
            or rd.SESSION_NUMBER !='2017' and rd.TRAINING_YEARS='3'
            or rd.SESSION_NUMBER !='2017' and rd.TRAINING_YEARS!='3'
            )
        <if test='trainingSpeId != null and trainingSpeId != ""'>
            AND rd.TRAINING_SPE_ID = #{trainingSpeId}
        </if>

        <if test='doctorTypeIdList != null and doctorTypeIdList.size()>0'>
            and rd.DOCTOR_TYPE_ID in
            <foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
                #{doctorTypeId}
            </foreach>
        </if>
        <if test='doctorName != null and doctorName != ""'>
            AND su.user_name LIKE CONCAT(CONCAT('%', #{doctorName}),'%')
        </if>
        <if test='doctorFlow != null and doctorFlow != ""'>
            AND rd.doctor_Flow = #{doctorFlow}
        </if>

        <if test='deptName != null and deptName != ""'>
            AND rd.depart_ment_name LIKE CONCAT(CONCAT('%', #{deptName}),'%')
        </if>

        <if test='workOrgName != null and workOrgName != ""'>
            AND rd.work_Org_Name LIKE CONCAT(CONCAT('%', #{workOrgName}),'%')
        </if>

        AND (rd.DOCTOR_STATUS_ID not in( 'UnPassed','Passed','UnSubmit')
        or rd.DOCTOR_STATUS_ID is null)
        AND rd.org_flow is not null
        AND rd.org_flow != '20160914888888'
        AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
        AND rd.org_flow != '00000000000000000000000000000000'
        ORDER BY nlssort(su.user_name,'NLS_SORT=SCHINESE_PINYIN_M'),rd.session_number desc, su.user_code,rd.CREATE_TIME
    </select>



    <select id="searchResDoctorUserByJx" parameterType="com.pinde.core.model.ResDoctorExt" resultMap="ResDoctorExt">
        SELECT * FROM stu_user_resume sur
        INNER JOIN sys_user su ON sur.user_flow = su.USER_FLOW
        INNER join res_doctor rd on sur.user_flow = rd.doctor_flow
        AND su.RECORD_STATUS = 'Y' and rd.RECORD_STATUS = 'Y'
        <if test='doctorCategoryId != null and doctorCategoryId != ""'>
            AND rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
        </if>

        <if test='doctorName != null and doctorName != ""'>
            AND su.user_name LIKE CONCAT(CONCAT('%', #{doctorName}),'%')
        </if>

        <if test='orgFlow != null and orgFlow != ""'>
            AND rd.org_flow = #{orgFlow}
        </if>
        and su.is_foreign='N'
        AND sur.stu_status_id in ('Admited','Graduation','DelayGraduation')
        AND rd.org_flow is not null
        AND rd.org_flow != '20160914888888'
        AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
        AND rd.org_flow != '00000000000000000000000000000000'
        ORDER BY nlssort(su.user_name,'NLS_SORT=SCHINESE_PINYIN_M'),rd.CREATE_TIME
    </select>

    <resultMap  id="SchProcessResDoctorExt" type="HashMap">
		<result  property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
		<result  property="doctorName" column="DOCTOR_NAME" javaType="string"/>
		<result  property="schDeptName" column="SCH_DEPT_NAME" javaType="string"/>
		<result  property="schDeptFlow" column="SCH_DEPT_FLOW" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="schStartDate" column="SCH_START_DATE" javaType="string"/>
		<result  property="schEndDate" column="SCH_END_DATE" javaType="string"/>
		<result  property="recContent" column="REC_CONTENT" javaType="string"/>
	</resultMap>
	<resultMap  id="StuRegInfo" type="HashMap">
		<result  property="userFlow" column="USER_FLOW" javaType="string"/>
		<result  property="userCode" column="USER_CODE" javaType="string"/>
		<result  property="userName" column="USER_NAME" javaType="string"/>
		<result  property="sexName" column="SEX_NAME" javaType="string"/>
		<result  property="statusDesc" column="STATUS_DESC" javaType="string"/>
		<result  property="userPhone" column="USER_PHONE" javaType="string"/>
		<result  property="userEmail" column="USER_EMAIL" javaType="string"/>
		<result  property="idNo" column="ID_NO" javaType="string"/>
		<result  property="degreeName" column="DEGREE_NAME" javaType="string"/>
		<result  property="educationName" column="EDUCATION_NAME" javaType="string"/>
		<result  property="doctorTypeName" column="DOCTOR_TYPE_NAME" javaType="string"/>
		<result  property="pxOrgName" column="PX_ORG_NAME" javaType="string"/>
		<result  property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result  property="trainingSpeName" column="TRAINING_SPE_NAME" javaType="string"/>
		<result  property="rotationName" column="ROTATION_NAME" javaType="string"/>
		<result  property="doctorStatusName" column="DOCTOR_STATUS_NAME" javaType="string"/>
		<result  property="doctorStatusId" column="DOCTOR_STATUS_ID" javaType="string"/>
	</resultMap>
	<select id="schDoctorQuery"  resultMap="SchProcessResDoctorExt">
		select
		A.DOCTOR_FLOW,
		A.SCH_DEPT_NAME,
		A.SCH_DEPT_FLOW,
		A.DOCTOR_NAME,
		A.SESSION_NUMBER,
		A.TRAINING_SPE_NAME,
		A.SCH_START_DATE,
		A.SCH_END_DATE
		from (
		select  P.TEACHER_USER_FLOW TEACHER_USER_FLOW,
				p.PROCESS_FLOW PROCESS_FLOW,
				su.user_flow user_flow,
				p.SCH_START_DATE SCH_START_DATE,
				p.SCH_END_DATE SCH_END_DATE,
				RD.DOCTOR_TYPE_ID,
				RD.DOCTOR_FLOW,
				p.SCH_DEPT_NAME,
				p.SCH_DEPT_FLOW,
				RD.DOCTOR_NAME,
				RD.SESSION_NUMBER,
				RD.TRAINING_SPE_NAME,
				nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code = 'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
				nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
		from res_doctor_sch_process p
		left join res_doctor rd
		on p.user_flow = rd.doctor_flow
		left join sys_user su
		on su.user_flow = rd.doctor_flow
		left join sys_user tu
		on tu.user_flow = p.teacher_user_flow
		left join jsres_power_cfg cfg2
		on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
		where p.record_status = 'Y'
		and rd.record_status = 'Y'
		and su.record_status = 'Y'
		and tu.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test="workOrgId != null and workOrgId != ''">
			AND RD.WORK_ORG_ID = #{workOrgId}
		</if>
		) A
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="startDate !=null and startDate !='' and endDate !=null and endDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND a.SCH_END_DATE >= #{endDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		and a.TEACHER_USER_FLOW = #{teacherUserFlow}
		order by session_number,sch_start_date,SCH_END_DATE
	</select>
	<select id="chTeacherProcessFlowRec"  resultMap="SchProcessResDoctorExt">
		select * from (
			select rd.DOCTOR_FLOW,rdsp.SCH_DEPT_NAME,rdsp.SCH_DEPT_FLOW,
			rd.DOCTOR_NAME,rd.SESSION_NUMBER,rd.TRAINING_SPE_NAME,rdsp.SCH_START_DATE,
			rdsp.SCH_END_DATE,rr.REC_CONTENT,
			nvl((select CFG_VALUE from jsres_power_cfg cfg where cfg.record_status='Y' and cfg.cfg_code =
			'jsres_doctor_app_menu_'||rd.doctor_flow),'N')APP_MENU_FLAG,
			nvl(cfg2.power_start_time,'0000-00-00') power_start_time, nvl(cfg2.power_end_time,'9999-99-99') power_end_time
			from RES_DOCTOR_SCH_PROCESS rdsp
			inner join SCH_ARRANGE_RESULT sar on rdsp.SCH_RESULT_FLOW=sar.RESULT_FLOW
			inner join SCH_ROTATION_DEPT srd on srd.GROUP_FLOW=sar.STANDARD_GROUP_FLOW
			and srd.STANDARD_DEPT_ID=sar.STANDARD_DEPT_ID
			inner join RES_SCH_PROCESS_EXPRESS rr on rr.OPER_USER_FLOW=rdsp.USER_FLOW
			inner join RES_DOCTOR rd on rd.DOCTOR_FLOW=rdsp.USER_FLOW
			and srd.RECORD_FLOW=rr.SCH_ROTATION_DEPT_FLOW
			left join jsres_power_cfg cfg2
			on cfg2.record_status='Y' and cfg2.cfg_code = 'jsres_doctor_data_time_'||rd.doctor_flow
			where rdsp.RECORD_STATUS='Y' and sar.RECORD_STATUS='Y' and srd.RECORD_STATUS='Y' and rr.RECORD_STATUS='Y' and
			rd.RECORD_STATUS='Y'
			and rr.REC_CONTENT is not null
			<if test='teacherUserFlow != null and teacherUserFlow  != ""'>
				and rdsp.TEACHER_USER_FLOW=#{teacherUserFlow}
			</if>
			and rr.rec_type_id ='AfterSummary'
			<if test="typeList!=null and typeList.size()>0">
				and rd.doctor_Type_Id in
				<foreach collection="typeList" item="item" open="(" close=")" separator="," >
					#{item}
				</foreach>
			</if>
		) a
		WHERE
		a.APP_MENU_FLAG='Y'
		AND	( ( a.SCH_START_DATE  <![CDATA[ <= ]]> A.power_start_time AND a.SCH_END_DATE >= A.power_END_time)
		or (a.SCH_START_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_START_DATE <![CDATA[ <= ]]>A.power_END_time)
		or (a.SCH_END_DATE  <![CDATA[ >= ]]> A.power_start_time AND a.SCH_END_DATE <![CDATA[ <= ]]>A.power_END_time))
		<if test="startDate !=null and startDate !='' and endDate !=null and endDate !=''">
			AND( ( a.SCH_START_DATE  <![CDATA[ <= ]]> #{startDate} AND a.SCH_END_DATE >= #{endDate})
			or (a.SCH_START_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_START_DATE <![CDATA[ <= ]]>#{endDate})
			or (a.SCH_END_DATE  <![CDATA[ >= ]]> #{startDate} AND a.SCH_END_DATE <![CDATA[ <= ]]>#{endDate}))
		</if>
		order by session_number,sch_start_date,SCH_END_DATE
	</select>
    <resultMap id="SysUserResDoctorExt" type="com.pinde.core.model.SysUserResDoctorExt"
               extends="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap">
        <association property="doctor" column="doctor_FLOW" javaType="com.pinde.core.model.ResDoctor"
                     resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap"/>
        <collection property="resDoctorSchProcessList" ofType="com.pinde.core.model.ResDoctorSchProcess"
                    column="USER_FLOW">
			 	<id column="PROCESS_FLOW" jdbcType="VARCHAR" property="processFlow" />
			    <result column="SCH_DEPT_FLOW" jdbcType="VARCHAR" property="schDeptFlow" />
			    <result column="SCH_DEPT_NAME" jdbcType="VARCHAR" property="schDeptName" />
		</collection>
   </resultMap>
	<select id="searchSysUserAndResDoctor" parameterType="java.util.Map" resultMap="SysUserResDoctorExt">
        select * from sys_user left JOIN res_doctor on res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
        left join res_doctor_sch_process rdsp on (rdsp.user_flow = res_doctor.doctor_flow and rdsp.is_current_flag =
        'Y')
		where sys_user.RECORD_STATUS = 'Y' 
		<if test='schDeptFlow != null and schDeptFlow != ""'>
		    and rdsp.sch_dept_flow=#{schDeptFlow}
		</if>
		<if test='userDoctorExt != null'>
		<if test='userDoctorExt.doctor != null'>
		<if test='userDoctorExt.doctor.sessionNumber != null and userDoctorExt.doctor.sessionNumber != ""'>
			AND res_doctor.SESSION_NUMBER = #{userDoctorExt.doctor.sessionNumber}
		</if>
		
		<if test='userDoctorExt.doctor.trainingSpeId != null and userDoctorExt.doctor.trainingSpeId != ""'>
			AND res_doctor.TRAINING_SPE_ID = #{userDoctorExt.doctor.trainingSpeId}
		</if>
		<if test='userDoctorExt.doctor.graduatedId != null and userDoctorExt.doctor.graduatedId != ""'>
			AND res_doctor.GRADUATED_ID = #{userDoctorExt.doctor.graduatedId}
		</if>
		<if test='userDoctorExt.doctor.recordStatus != null and userDoctorExt.doctor.recordStatus != ""'>
			AND res_doctor.RECORD_STATUS = #{userDoctorExt.doctor.recordStatus}
		</if>
		<if test="userDoctorExt.doctor.specialized != null and userDoctorExt.doctor.specialized != ''">
			AND RES_DOCTOR.SPECIALIZED LIKE CONCAT(CONCAT('%', #{userDoctorExt.doctor.specialized}),'%')
		</if>
		<if test="userDoctorExt.doctor.doctorCode != null and userDoctorExt.doctor.doctorCode != ''">
			AND RES_DOCTOR.doctor_code = #{userDoctorExt.doctor.doctorCode}
		</if>
		</if>
			<if test='userDoctorExt.userName != null and userDoctorExt.userName != ""'>
				AND sys_user.USER_NAME = #{userDoctorExt.userName}
			</if>
			<if test='userDoctorExt.statusId != null and userDoctorExt.statusId  != ""'>
				AND sys_user.status_Id  = #{userDoctorExt.statusId}
			</if>
			<if test='userDoctorExt.recordStatus != null and userDoctorExt.recordStatus  != ""'>
				AND sys_user.RECORD_STATUS=#{userDoctorExt.recordStatus}
			</if>
			<if test="userDoctorExt.orgFlow != null and userDoctorExt.orgFlow != ''">
				AND SYS_USER.ORG_FLOW = #{userDoctorExt.orgFlow}
			</if>
			<if test="userDoctorExt.deptFlow != null and userDoctorExt.deptFlow != ''">
			    AND SYS_USER.DEPT_FLOW = #{userDoctorExt.deptFlow}
		    </if>
		    <if test='checkUserFlowList!=null and checkUserFlowList!=""'>
             AND SYS_USER.USER_FLOW IN
           	 <foreach collection="checkUserFlowList" item="item" index="index" open="(" separator="," close=")">  
	  			#{item}  
	 		 </foreach>
         </if>
		</if>
		ORDER BY res_doctor.DOCTOR_CODE,sys_user.create_time,sys_user.user_flow
	</select>
	<select id="searchResDoctorUserForAudit" parameterType="java.util.Map" resultMap="ResDoctorExt">
	select * from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
		AND sys_user.RECORD_STATUS = 'Y'
		AND res_doctor.RECORD_STATUS = 'Y'
		<if test='orgFlow!=null and orgFlow!=""'>
		    AND res_doctor.ORG_FLOW=#{orgFlow}
		</if>
		<if test='regNumber != null and regNumber != ""'>
			AND res_doctor.SESSION_NUMBER=#{regNumber}
		</if>
		<if test='statusId != null and statusId  != ""'>
			AND res_doctor.DOCTOR_STATUS_ID=#{statusId}
		</if>
		<if test='key!=null and key!=""'>
		   AND (sys_user.USER_NAME= #{key} 
		   OR sys_user.USER_PHONE=#{key}
		   OR SYS_USER.USER_EMAIL=#{key}
		   OR SYS_USER.ID_NO=#{key}
		   )
		</if>
		<if test='doctorType != null and doctorType !=""'>
			and res_doctor.doctor_type_id=#{doctorType}
		</if>
		<if test='freshGraduateFlag != null and freshGraduateFlag !=""'>
			and res_doctor.is_year_graduate=#{freshGraduateFlag}
		</if>
		<if test='gainLicenseFlag != null and gainLicenseFlag !=""'>
			and res_doctor.doctor_license_flag=#{gainLicenseFlag}
		</if>
		<if test='educationType != null and educationType !=""'>
			and sys_user.education_id=#{educationType}
		</if>
		ORDER BY res_doctor.CREATE_TIME,res_doctor.doctor_flow
	</select>
	<select id="searchResDoctorUserPassed" parameterType="java.util.Map" resultMap="ResDoctorExt">
	select * from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW  
		AND sys_user.RECORD_STATUS = 'Y'
		AND res_doctor.RECORD_STATUS = 'Y'
		and res_doctor.ORG_FLOW in (
			SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS='Y'
			<if test="sysOrg!=null">
				<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
			    	 AND ORG_PROV_ID = #{sysOrg.orgProvId} 
			    </if>
				<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
			    	 AND ORG_CITY_ID = #{sysOrg.orgCityId} 
			    </if>
				<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
			    	 AND ORG_FLOW = #{sysOrg.orgFlow} 
			    </if>
		    </if>
		    <if test="jointOrgFlowList!=null and jointOrgFlowList.size>0">
				and ORG_FLOW in 
    			<foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
		)
    	<if test="user!=null">
    			<if test="user.userName!=null and user.userName!=''">
    				<bind name="userName" value="'%'+user.userName+'%'"/>
    				and sys_user.USER_NAME like #{userName} 
    			</if>
    			<if test="user.idNo!=null and user.idNo!=''">
    				<bind name="idNo" value="'%'+user.idNo+'%'"/>
    				and sys_user.ID_NO like #{idNo} 
    			</if>
    		</if>
	    	<if test="doctor!=null">
	    		<if test="doctor.orgFlow!=null and doctor.orgFlow!=''">
    				and res_doctor.ORG_FLOW = #{doctor.orgFlow} 
    			</if>
    			<if test="doctor.trainingTypeId!=null and doctor.trainingTypeId!=''">
    				and res_doctor.TRAINING_TYPE_ID = #{doctor.trainingTypeId} 
    			</if>
    			<if test="doctor.trainingSpeId!=null and doctor.trainingSpeId!=''">
    				and res_doctor.TRAINING_SPE_ID = #{doctor.trainingSpeId} 
    			</if>
    			<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
    				and res_doctor.SESSION_NUMBER = #{doctor.sessionNumber} 
    			</if>
	    	</if>
    		<if test='statusId!=null and statusId!=""'>
	    		and res_doctor.DOCTOR_STATUS_ID = #{statusId}
    		</if>
		ORDER BY res_doctor.org_flow,res_doctor.CREATE_TIME DESC,res_doctor.doctor_flow
	</select>

	<select id="searchResRegUserForAudit" parameterType="java.util.Map" resultMap="ResDoctorExt">
	  select *
		from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
		left join res_reg on res_doctor.DOCTOR_FLOW = res_reg.USER_FLOW
		<if test="sczy=='Y'.toString()">
		INNER JOIN res_doctor_recruit on res_doctor.DOCTOR_FLOW = res_doctor_recruit.DOCTOR_FLOW
		</if>
		and res_reg.REG_YEAR=#{regNumber,jdbcType=VARCHAR} and res_reg.RECORD_STATUS = 'Y'
		where sys_user.RECORD_STATUS = 'Y'
		AND res_doctor.RECORD_STATUS = 'Y'
		<if test='orgFlow!=null and orgFlow!=""'>
		    AND res_doctor.ORG_FLOW=#{orgFlow}
		</if>
		<if test="jointOrgs!=null">
		     and res_doctor.ORG_FLOW IN 
		    <foreach item="item" index="index" collection="jointOrgs" open="(" separator="," close=")">
		        #{item}
		    </foreach>
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND res_doctor.SESSION_NUMBER=#{sessionNumber}
		</if>
		<if test='statusId != null and statusId  != ""'>
			AND exists (select null from res_reg where res_doctor.DOCTOR_FLOW = res_reg.USER_FLOW 
			AND res_reg.status_Id=#{statusId} 
			AND res_reg.REG_YEAR=#{regNumber,jdbcType=VARCHAR}
			AND res_reg.RECORD_STATUS = 'Y')
		</if>
		<if test='key!=null and key!=""'>
		   AND (sys_user.USER_NAME= #{key} 
		   OR sys_user.USER_PHONE=#{key}
		   OR SYS_USER.USER_EMAIL=#{key}
		   OR SYS_USER.ID_NO=#{key}
		   )
		</if>
		<if test='doctorType != null and doctorType !=""'>
			and res_doctor.doctor_type_id=#{doctorType}
		</if>
		<if test='freshGraduateFlag != null and freshGraduateFlag !=""'>
			and res_doctor.is_year_graduate=#{freshGraduateFlag}
		</if>
		<if test='gainLicenseFlag != null and gainLicenseFlag !=""'>
			and res_doctor.doctor_license_flag=#{gainLicenseFlag}
		</if>
		<if test='educationType != null and educationType !=""'>
			and sys_user.education_id=#{educationType}
		</if>
		ORDER BY res_reg.MODIFY_TIME desc,res_doctor.create_time
	</select>
	<select id="searchDoctorExtForAudit" parameterType="java.util.Map" resultMap="ResUserDoctorRecruitExt">
	select res_doctor.*,sys_user.*,res_doctor_recruit.* from res_doctor 
	INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW  
	INNER JOIN res_doctor_recruit on res_doctor.DOCTOR_FLOW = res_doctor_recruit.DOCTOR_FLOW
		AND sys_user.RECORD_STATUS = 'Y'
		AND res_doctor.RECORD_STATUS = 'Y'
		<if test='orgFlow!=null and orgFlow!=""'>
		    AND res_doctor.ORG_FLOW=#{orgFlow}
		</if>
		<if test="jointOrgs!=null">
		     and res_doctor.ORG_FLOW IN 
		    <foreach item="item" index="index" collection="jointOrgs" open="(" separator="," close=")">
		        #{item}
		    </foreach>
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND res_doctor.SESSION_NUMBER=#{sessionNumber}
		</if>
		<if test='statusId != null and statusId  != ""'>
			AND exists (select null from res_reg where res_doctor.DOCTOR_FLOW = res_reg.USER_FLOW 
			AND res_reg.status_Id=#{statusId} 
			AND res_reg.REG_YEAR=#{sessionNumber}
			AND res_reg.RECORD_STATUS = 'Y')
		</if>
		<if test='key!=null and key!=""'>
		   AND (sys_user.USER_NAME= #{key} 
		   OR sys_user.USER_PHONE=#{key}
		   OR SYS_USER.USER_EMAIL=#{key}
		   OR SYS_USER.ID_NO=#{key}
		   )
		</if>
		ORDER BY res_doctor.CREATE_TIME DESC
	</select>
	<select id="searchResDoctorUserCount" parameterType="java.util.Map" resultType="int">
		select count(*) 
		from res_doctor
		where record_status='Y' 
		and session_number=#{sessionNumber}
		<if test='status!=null'>
		    and DOCTOR_STATUS_ID in
		    <foreach item='item' index="inxex" collection="status" open="(" separator="," close=")">
		        #{item}
		    </foreach>
		</if>
		<if test='categoryId!=null and categoryId!=""'>
			and DOCTOR_CATEGORY_ID=#{categoryId}
		</if>
	</select>
	<select id="searchResRegUserCount" parameterType="java.util.Map" resultType="int">
		select count(*) 
		from res_reg
		where record_status='Y' 
		and reg_year=#{regYear}
		<if test='status!=null'>
		    and status_id in
		    <foreach item='item' index="inxex" collection="status" open="(" separator="," close=")">
		        #{item}
		    </foreach>
		</if>
	</select>
	<select id="searchPassCount" parameterType="java.util.Map" resultType="int">
	    select count(*) from RES_DOCTOR_RECRUIT rdr , 
            (
                select su.USER_FLOW userflow
                from sys_user su , RES_DOCTOR rd 
                where su.USER_FLOW=rd.DOCTOR_FLOW 
                and su.RECORD_STATUS='Y' 
                and rd.RECORD_STATUS='Y' 
                and su.STATUS_ID='Activated' 
                and rd.SESSION_NUMBER=#{sessionNumber}
            ) surd 
        where rdr.DOCTOR_FLOW = surd.userflow 
        and rdr.EXAM_RESULT>=#{gradeBorderline}
	</select>
	<select id="searchResDoctorUserRecruit" parameterType="java.util.Map" resultMap="ResUserDoctorRecruitExt">
	    SELECT RD_SU.* , RDR.EXAM_CODE FROM (
            SELECT SU.USER_FLOW , SU.USER_NAME , RD.DOCTOR_FLOW , RD.SPECIALIZED , RD.GRADUATED_ID , RD.GRADUATED_NAME , RD.CREATE_TIME
            FROM RES_DOCTOR RD , SYS_USER SU 
            WHERE  RD.DOCTOR_FLOW=SU.USER_FLOW 
            AND RD.RECORD_STATUS='Y' 
            AND SU.RECORD_STATUS='Y' 
            <if test='statusId!=null and statusId!=""'>
             AND SU.STATUS_ID=#{statusId}
            </if>
            <if test='sessionNumber!=null and sessionNumber!=""'>
            AND RD.SESSION_NUMBER=#{sessionNumber}
            </if>
            <if test='graduatedId!=null and !graduatedId.isEmpty()'>
            AND RD.GRADUATED_ID IN 
                <foreach item='item' index="index" collection="graduatedId" open="(" separator="," close=")">
		        #{item}
		        </foreach>
            </if>
            ) RD_SU 
            LEFT JOIN RES_DOCTOR_RECRUIT RDR 
            ON RD_SU.DOCTOR_FLOW = RDR.DOCTOR_FLOW
            AND RDR.RECORD_STATUS='Y' 
            ORDER BY RD_SU.SPECIALIZED , RD_SU.CREATE_TIME
	</select>

	<!--<update id="modifyResDoctorRecruit" parameterType="java.util.Map">-->
	<!--<if test='recruit.examResult!=null and recruit.examResult!="" and recruit.examCode!=null and recruit.examCode!=""'>-->
    <!--update  RES_DOCTOR_RECRUIT set EXAM_RESULT = #{recruit.examResult}-->
	<!--where RECORD_STATUS='Y'-->
	<!--and EXAM_CODE = #{recruit.examCode}-->
	<!--and DOCTOR_FLOW = (-->
	<!--select USER_FLOW-->
	<!--from SYS_USER -->
	<!--where RECORD_STATUS='Y'-->
	<!--<if test='sysUser.idNo!=null and sysUser.idNo!=""'>-->
	<!--and ID_NO = #{sysUser.idNo}-->
	<!--</if>-->
	<!--)-->
	<!--</if>-->
	<!--</update>-->
  	
  	<select id="searchTrainPlanCount" resultMap="trainPlanCountMap">
  		SELECT TRAINING_SPE_ID,COUNT(TRAINING_SPE_ID) TRAIN_PLAN_COUNT
        FROM RES_DOCTOR
  		WHERE RECORD_STATUS = 'Y'
  		<if test='countType == "Y"'>
  			AND ROTATION_FLOW IS NOT NULL
  		</if>
  		<if test='countType == "N"'>
  			AND ROTATION_FLOW IS NULL
  		</if>
  		<if test="doctor != null">
  			<if test="doctor.doctorCategoryId != null and doctor.doctorCategoryId != ''">
  				AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
  			</if>
  			<if test="doctor.sessionNumber != null and doctor.sessionNumber != ''">
  				AND SESSION_NUMBER = #{doctor.sessionNumber}
  			</if>
  		</if>
  		GROUP BY TRAINING_SPE_ID
  	</select>
  	
  	<select id="searGroupRotation" resultMap="doctorRotationMap">
  		SELECT TRAINING_SPE_ID||DOCTOR_CATEGORY_ID ROTATION_KEY,ROTATION_NAME,ROTATION_FLOW
        FROM RES_DOCTOR
  		WHERE RECORD_STATUS = 'Y'
  		AND ROTATION_FLOW IS NOT NULL
  		<if test="doctor != null">
  			<if test="doctor.doctorCategoryId != null and doctor.doctorCategoryId != ''">
  				AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
  			</if>
  			<if test="doctor.sessionNumber != null and doctor.sessionNumber != ''">
  				AND SESSION_NUMBER = #{doctor.sessionNumber}
  			</if>
  		</if>
  		GROUP BY TRAINING_SPE_ID,DOCTOR_CATEGORY_ID,ROTATION_NAME,ROTATION_FLOW
  	</select>

    <update id="modifyResDoctorRotation" parameterType="com.pinde.core.model.ResDoctor">
        UPDATE RES_DOCTOR SET ROTATION_FLOW = #{doctor.rotationFlow},ROTATION_NAME = #{doctor.rotationName}
		WHERE RECORD_STATUS = 'Y'
		AND ROTATION_FLOW IS NULL
		AND TRAINING_SPE_ID = #{doctor.trainingSpeId}
		<if test="doctor.sessionNumber != null and doctor.sessionNumber !=''">
			AND SESSION_NUMBER = #{doctor.sessionNumber}
		</if>
		<if test="doctor.doctorCategoryId != null and doctor.doctorCategoryId !=''">
			AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
		</if>
	</update>

	<update id="modifyResDoctorStatus" parameterType="java.util.Map">
        update RES_DOCTOR SET DOCTOR_STATUS_ID = #{statusId},DOCTOR_STATUS_NAME = #{statusName}
		WHERE  RES_DOCTOR.RECORD_STATUS = 'Y' AND RES_DOCTOR.DOCTOR_STATUS_ID=#{oldStatusId} and RES_DOCTOR.session_number = #{regNumber}
	</update>

    <select id="searchNotInExamUser" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap">
	    select tmp.user_flow , tmp.user_name from 
            (
                select rr.USER_FLOW , rr.USER_NAME from res_reg rr where rr.RECORD_STATUS='Y' AND rr.STATUS_ID=#{statusId} and rr.REG_YEAR=#{regYear} 
            ) tmp 
            where
            NOT  EXISTS(select 1 from res_exam_doctor red where tmp.USER_FLOW=red.DOCTOR_FLOW and red.EXAM_FLOW=#{examFlow})
	</select>

    <select id="searchNotAllotTicketNumUserInExamAndSite" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResExamDoctorMapper.BaseResultMap">
	    SELECT TMP.RECORD_FLOW , TMP.DOCTOR_FLOW FROM 
            (
                SELECT RED.RECORD_FLOW , RED.DOCTOR_FLOW  FROM  
                RES_EXAM_DOCTOR RED 
                WHERE RED.EXAM_FLOW=#{examFlow} 
                AND RED.SITE_FLOW=#{siteFlow}
                AND RED.RECORD_STATUS='Y' 
                AND RED.TICKET_NUM IS NULL
            ) TMP
            LEFT JOIN RES_DOCTOR RD 
            ON TMP.DOCTOR_FLOW = RD.DOCTOR_FLOW 
            ORDER BY RD.SPECIALIZED , RD.CREATE_TIME
	</select>

    <select id="searchExamDoctor" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResExamDoctorMapper.BaseResultMap">
        select * from res_exam_doctor where RECORD_STATUS='Y' AND DOCTOR_FLOW=#{doctorFlow}
        and exists (select null from res_exam exam where res_exam_doctor.EXAM_FLOW=exam.EXAM_FLOW
	    		and exam.RECORD_STATUS='Y'
	    		and exam.EXAM_TYPE_ID=#{examType}
	    		and exam.EXAM_YEAR=#{examYear}
	    	)
	</select>

    <resultMap id="ResExamDoctorExtMap" type="com.pinde.core.model.ResExamDoctorExt"
               extends="com.pinde.core.common.sci.dao.ResExamDoctorMapper.BaseResultMap">
        <association property="doctor" column="DOCTOR_FLOW" javaType="com.pinde.core.model.ResDoctor"
                     resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap"/>
        <association property="user" column="USER_FLOW" javaType="com.pinde.core.model.SysUser"
                     resultMap="com.pinde.core.common.sci.dao.SysUserMapper.BaseResultMap"/>
    </resultMap>
	<select id="searchExamDoctorExt" parameterType="com.pinde.core.model.ResExamDoctorExt" resultMap="ResExamDoctorExtMap">
	      SELECT * FROM 
	      (
	          SELECT * FROM RES_EXAM_DOCTOR RED 
	          WHERE RED.RECORD_STATUS='Y'
	          <if test='examFlow!=null and examFlow!=""'>
	          AND RED.EXAM_FLOW=#{examFlow}
	          </if>
	          <if test='siteFlow!=null and siteFlow!=""'>
	          AND RED.SITE_FLOW=#{siteFlow}
	          </if>
	          <if test='roomFlow!=null and roomFlow!=""'>
	          AND RED.ROOM_FLOW=#{roomFlow}
	          </if>
	          <if test='ticketNum!=null and ticketNum!=""'>
	          AND RED.TICKET_NUM=#{ticketNum}
	          </if>
				<if test='doctorFlow!=null and doctorFlow!=""'>
					AND RED.doctor_Flow=#{doctorFlow}
				</if>
	      ) TMP LEFT JOIN RES_DOCTOR RD
	      ON TMP.DOCTOR_FLOW = RD.DOCTOR_FLOW LEFT JOIN SYS_USER SU
	      ON TMP.DOCTOR_FLOW = SU.USER_FLOW
	      <where>
	          <if test='doctor!=null'>
	          <if test='doctor.doctorName!=null and doctor.doctorName!=""'>
	              AND RD.DOCTOR_NAME = #{doctor.doctorName}
	          </if>
	          <if test='doctor.graduatedId!=null and doctor.graduatedId!=""'>
	              AND RD.GRADUATED_ID = #{doctor.graduatedId}
	          </if>
	          </if>
	      </where>
	         ORDER BY RD.DOCTOR_NAME
	</select>
	
	<select id="searchExamDoctorExtByMap" parameterType="java.util.Map" resultMap="ResExamDoctorExtMap">
	 SELECT * FROM 
	      (
	          SELECT * FROM RES_EXAM_DOCTOR RED 
	          WHERE RED.RECORD_STATUS='Y'
	          <if test='examDoctor!=null'>
	          <if test='examDoctor.examFlow!=null and examDoctor.examFlow!=""'>
	          AND RED.EXAM_FLOW=#{examDoctor.examFlow}
	          </if>
	          <if test='examDoctor.siteFlow!=null and examDoctor.siteFlow!=""'>
	          AND RED.SITE_FLOW=#{examDoctor.siteFlow}
	          </if>
	          <if test='examDoctor.roomFlow!=null and examDoctor.roomFlow!=""'>
	          AND RED.ROOM_FLOW=#{examDoctor.roomFlow}
	          </if>
	          <if test='examDoctor.ticketNum!=null and examDoctor.ticketNum!=""'>
	          AND RED.TICKET_NUM=#{examDoctor.ticketNum}
	          </if>
	          </if>
	      ) TMP LEFT JOIN RES_DOCTOR RD
	      ON TMP.DOCTOR_FLOW = RD.DOCTOR_FLOW LEFT JOIN SYS_USER SU
	      ON TMP.DOCTOR_FLOW = SU.USER_FLOW
	      <where>
	          <if test='key!=null and key!=""'>
		      AND (SU.USER_NAME= #{key} 
		          OR SU.USER_PHONE=#{key}
		          OR SU.USER_EMAIL=#{key}
		          OR SU.ID_NO=#{key}
		      )
		    </if>
	      </where>
	      ORDER BY RD.SPECIALIZED , RD.CREATE_TIME
	</select>
	
	<select id="searchRegisterList" parameterType="java.util.Map" resultMap="ResUserDoctorRecruitExt">
	    select *
        from RES_DOCTOR d
        inner join RES_DOCTOR_RECRUIT dr
	    on d.DOCTOR_FLOW = dr.DOCTOR_FLOW
        inner join SYS_USER su
	    on su.USER_FLOW = d.DOCTOR_FLOW
	    where d.RECORD_STATUS='Y' and dr.RECORD_STATUS='Y'
	    and dr.RECRUIT_FLAG = 'Y'
	    and dr.CONFIRM_FLAG = 'Y'
	    <if test='doctorRecruit.orgFlow != null and doctorRecruit.orgFlow != ""'>
			AND dr.ORG_FLOW = #{doctorRecruit.orgFlow}
		</if>
		<if test='doctorRecruit.recruitYear != null and doctorRecruit.recruitYear != ""'>
			AND d.SESSION_NUMBER = #{doctorRecruit.recruitYear}
		</if>
		ORDER BY d.SESSION_NUMBER desc,dr.TOTLE_RESULT DESC nulls last
	</select>
	
	
	
	<resultMap id="speCountForm" type="com.pinde.core.common.form.ResDoctorTrainingSpeForm">
	  	  <result column="trainingSpeId" jdbcType="VARCHAR" property="speId" />
	  	  <result column="doctorCount" jdbcType="VARCHAR"  property="doctorCount"/>
    </resultMap>

    <select id="searchMonthRotationDoctor" resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		SELECT RD.*
        FROM SCH_ARRANGE_RESULT SAR, RES_DOCTOR RD
		WHERE SAR.RECORD_STATUS = 'Y'
		AND RD.RECORD_STATUS = 'Y'
		AND RD.DOCTOR_FLOW = SAR.DOCTOR_FLOW
		<if test='schDeptFlow != null and schDeptFlow != ""'>
			AND SAR.SCH_DEPT_FLOW = #{schDeptFlow}
		</if>
		<if test='month != null and month != ""'>
			AND SAR.SCH_START_DATE LIKE CONCAT(CONCAT('%', #{month}),'%')
		</if>
	</select>
	
	<select id="searchJoinExamDoctorCountByParamMap" parameterType="java.util.Map" resultType="int">
	    SELECT COUNT(*) FROM 
            (SELECT RD.SPECIALIZED 
                 FROM RES_EXAM_DOCTOR RED 
                 LEFT JOIN RES_DOCTOR RD 
                 ON RED.DOCTOR_FLOW=RD.DOCTOR_FLOW 
                 WHERE RED.RECORD_STATUS='Y'
                 <if test='examFlow!=null and examFlow!=""'>
                     AND RED.EXAM_FLOW=#{examFlow}
                 </if>
                 <if test='speId!=null and speId!=""'>
                     AND RD.SPECIALIZED=#{speId}
                 </if> 
                 <if test='(startGrade!=null) and (endGrade!=null)'>
                     AND RED.EXAM_RESULT BETWEEN #{startGrade} AND #{endGrade}
                 </if>
                 <if test='moreThanGrade!=null'>
                     AND RED.EXAM_RESULT>=#{moreThanGrade}
                 </if>
                 )
	</select>
	
	<select id="searchMaxOrMinGradeInExam" parameterType="java.util.Map" resultType="int">
	         SELECT <if test='max=="Y"'>NVL(MAX(EXAM_RESULT) , 0)</if> <if test='min=="Y"'>NVL(MIN(EXAM_RESULT) , 0)</if> FROM 
	         (
                 SELECT RED.EXAM_RESULT FROM 
                 RES_EXAM_DOCTOR RED 
                 LEFT JOIN RES_DOCTOR RD
                 ON RED.DOCTOR_FLOW=RD.DOCTOR_FLOW
                 WHERE RED.RECORD_STATUS='Y'
                 AND RED.EXAM_FLOW=#{examFlow}
                 AND RD.SPECIALIZED=#{speId})
	</select>

    <select id="searchSelDeptDoctor" resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		SELECT RD.*
        FROM RES_DOCTOR RD
		WHERE RD.DOCTOR_FLOW IN (
			SELECT DISTINCT IRD.DOCTOR_FLOW
        FROM RES_DOCTOR IRD, SCH_ROTATION_GROUP SRG
			WHERE IRD.RECORD_STATUS = 'Y'
			AND SRG.RECORD_STATUS = 'Y'
			<if test='doctor!=null'>
				<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
					AND IRD.ORG_FLOW = #{doctor.orgFlow}
				</if>
			</if>
			AND IRD.ROTATION_FLOW = SRG.ROTATION_FLOW
		)
		<if test='doctor!=null'>
			<if test='doctor.doctorCategoryId!=null and doctor.doctorCategoryId!=""'>
				AND RD.DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE CONCAT(CONCAT('%', #{doctor.doctorName}),'%')
			</if>
			<if test='doctor.selDeptFlag!=null and doctor.selDeptFlag!=""'>
				AND (RD.SEL_DEPT_FLAG = 'N' OR RD.SEL_DEPT_FLAG IS NULL)
			</if>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				AND RD.ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		ORDER BY ROTATION_NAME,CREATE_TIME
	</select>
	
	<select id="updateDocSelFlag" resultType="int">
        UPDATE RES_DOCTOR SET SEL_DEPT_FLAG = 'Y'
		WHERE RECORD_STATUS = 'Y'
		AND ROTATION_FLOW IS NOT NULL
		AND DOCTOR_FLOW NOT IN (
			SELECT DISTINCT IRD.DOCTOR_FLOW
        FROM RES_DOCTOR IRD, SCH_ROTATION_GROUP SRG
			WHERE IRD.RECORD_STATUS = 'Y'
			AND SRG.RECORD_STATUS = 'Y'
			AND IRD.ROTATION_FLOW = SRG.ROTATION_FLOW
			<if test='orgFlow!=null and orgFlow!=""'>
				AND IRD.ORG_FLOW = #{orgFlow}
			</if>
		)
	</select>

    <select id="searchDoctorForChange" resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		SELECT RD.*
        FROM RES_DOCTOR RD
		WHERE RECORD_STATUS = 'Y'
		<if test='docOrgHis!=null'>
			AND RD.DOCTOR_FLOW IN (
				SELECT DOCTOR_FLOW
            FROM RES_DOCTOR_ORG_HISTORY
				WHERE RECORD_STATUS = 'Y'
				<if test='docOrgHis.changeStatusId!=null and docOrgHis.changeStatusId!=""'>
					AND CHANGE_STATUS_ID = #{docOrgHis.changeStatusId}
				</if>
				<if test='docOrgHis.historyOrgFlow!=null and docOrgHis.historyOrgFlow!=""'>
					AND HISTORY_ORG_FLOW = #{docOrgHis.historyOrgFlow}
				</if>
				<if test='docOrgHis.orgFlow!=null and docOrgHis.orgFlow!=""'>
					AND ORG_FLOW = #{docOrgHis.orgFlow}
				</if>
			)
		</if>
		<if test='docOrgHis==null'>
			AND RD.DOCTOR_FLOW NOT IN (
				SELECT DOCTOR_FLOW
            FROM RES_DOCTOR_ORG_HISTORY
				WHERE RECORD_STATUS = 'Y'
				<if test='doctor!=null'>
					<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
						AND HISTORY_ORG_FLOW = #{doctor.orgFlow}
					</if>
				</if>
				AND CHANGE_STATUS_ID = 'Submit'
			)
		</if>
		<if test='doctor!=null'>
			<if test='doctor.doctorCategoryId!=null and doctor.doctorCategoryId!=""'>
				AND RD.DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test='doctor.sessionNumber!=null and doctor.sessionNumber!=""'>
				AND RD.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId!=null and doctor.trainingSpeId!=""'>
				AND RD.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorName!=null and doctor.doctorName!=""'>
				AND RD.DOCTOR_NAME LIKE CONCAT(CONCAT('%', #{doctor.doctorName}),'%')
			</if>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				AND RD.ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
	</select>
	
	<select id="searchDocByteacher" parameterType="java.util.Map" resultMap="ResDoctorExt">
		select * from
		(select DISTINCT rd.* from res_doctor rd
		left join RES_DOCTOR_SCH_PROCESS rdsp on rdsp.USER_FLOW = rd.doctor_flow
		where rd.record_status='Y' and rdsp.record_status='Y'
		<if test='doctor != null'>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				AND rd.ORG_FLOW = #{doctor.orgFlow}
			</if>
			<if test='doctor.sessionNumber != null and doctor.sessionNumber != ""'>
				AND rd.SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId != null and doctor.trainingSpeId != ""'>
				AND rd.TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorCategoryId != null and doctor.doctorCategoryId != ""'>
				AND rd.DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test="doctor.doctorName != null and doctor.doctorName != ''">
				AND rd.doctor_Name = #{doctor.doctorName}
			</if>
		</if>
		<if test='teacherUserFlow != null and teacherUserFlow != ""'>
			AND rd.doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and teacher_user_flow = #{teacherUserFlow})
		</if>
		<if test='headUserFlow != null and headUserFlow != ""'>
			AND rd.doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and head_user_flow = #{headUserFlow})
		</if>
		<if test='headSecretaryFlow != null and headSecretaryFlow != ""'>
			and (
			rdsp.DEPT_FLOW in(select dept_flow from sys_user_dept where user_flow= #{headSecretaryFlow} and record_status='Y')
			or rdsp.DEPT_FLOW = (select dept_flow from sys_user where user_flow= #{headSecretaryFlow} and rownum=1)
			or rd.DEPART_MENT_FLOW in(select dept_flow from sys_user_dept where user_flow= #{headSecretaryFlow} and record_status='Y')
			or rd.DEPART_MENT_FLOW = (select dept_flow from sys_user where user_flow= #{headSecretaryFlow} and rownum=1)
			)
		</if>
		<if test='isRegister == "Y"'>
			and rdsp.IS_CURRENT_FLAG = 'Y'
			and (rd.doctor_type_id='CompanyEntrust' or rd.doctor_type_id='Graduate')
		</if>
		ORDER BY rd.DOCTOR_CODE) A LEFT JOIN sys_user su on su.user_flow = A.doctor_flow
		where su.record_status='Y'
	</select>
	
	<update id="updateRedundancyData">
		UPDATE RES_DOCTOR 
		<if test="doctor!=null">
			<if test='doctor.orgName != null and doctor.orgName != ""'>
				SET ORG_NAME = #{doctor.orgName}
			</if>
			<if test='doctor.orgFlow != null and doctor.orgFlow != ""'>
				WHERE ORG_FLOW = #{doctor.orgFlow}
			</if>
			<if test='doctor.rotationName != null and doctor.rotationName != ""'>
				SET ROTATION_NAME = #{doctor.rotationName}
			</if>
			<if test='doctor.rotationFlow != null and doctor.rotationFlow != ""'>
				WHERE ROTATION_FLOW = #{doctor.rotationFlow}
			</if>
		</if>
	</update>
	
 	<resultMap type="HashMap" id="countNumMap">
		<result property="key" column="KEY" javaType="string"/>
		<result property="value" column="NUM" javaType="java.math.BigDecimal"/>
	</resultMap>
	<select id="countDocByOrg" resultMap="countNumMap">
		SELECT ORG_FLOW||TRAINING_SPE_ID KEY,COUNT(*) NUM
        FROM RES_DOCTOR rd
		WHERE RECORD_STATUS = 'Y'
		AND exists	(
        SELECT null FROM SYS_ORG so
			WHERE so.RECORD_STATUS = 'Y'
			AND so.ORG_TYPE_ID = 'Hospital'
			and so.org_flow=rd.org_flow
			<if test='orgName!=null and orgName!=""'>
				<bind name="orgName" value="'%'+orgName+'%'"/>
				and so.org_name like #{orgName}
			</if>
			)
		<if test='doctor!=null'>
			<if test='doctor.sessionNumber != null and doctor.sessionNumber != ""'>
				AND SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId != null and doctor.trainingSpeId != ""'>
				AND TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorStatusId != null and doctor.doctorStatusId != ""'>
				AND DOCTOR_STATUS_ID = #{doctor.doctorStatusId}
			</if>
		</if>
		GROUP BY ORG_FLOW,TRAINING_SPE_ID
	</select>
	
	<select id="countGroupDoc" resultMap="countNumMap">
		SELECT GROUP_ID KEY,COUNT(*) NUM
        FROM RES_DOCTOR
		WHERE RECORD_STATUS = 'Y'
		<if test='doctor!=null'>
			<if test='doctor.sessionNumber != null and doctor.sessionNumber != ""'>
				AND SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId != null and doctor.trainingSpeId != ""'>
				AND TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorStatusId != null and doctor.doctorStatusId != ""'>
				AND DOCTOR_STATUS_ID = #{doctor.doctorStatusId}
			</if>
			<if test='doctor.doctorCategoryId != null and doctor.doctorCategoryId != ""'>
				AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test='doctor.orgFlow != null and doctor.orgFlow != ""'>
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
		</if>
		GROUP BY GROUP_ID
	</select>
	
	
	<select id="searchDoctorAccountList" parameterType="java.util.Map" resultMap="ResDoctorExt">
        select * from RES_DOCTOR d
        inner join SYS_USER u on d.DOCTOR_FLOW = u.USER_FLOW
		and u.RECORD_STATUS = 'Y' and d.RECORD_STATUS = 'Y'
		AND d.OSCA_STUDENT_SUBMIT is null
		<if test="sysOrg!=null">
   			<if test="sysOrg.orgFlow!=null and sysOrg.orgFlow!=''">
		    	 AND (d.ORG_FLOW = #{sysOrg.orgFlow} or d.SECOND_ORG_FLOW = #{sysOrg.orgFlow})
		    </if>

   			<if test="sysOrg.orgProvId!=null and sysOrg.orgProvId!=''">
		    	 AND exists (
		    	 	select org_flow from sys_org where RECORD_STATUS = 'Y' and d.ORG_FLOW =sys_org.org_flow
		    		 	AND sys_org.org_prov_id = #{sysOrg.orgProvId} 
		    	 	<if test="sysOrg.orgTypeId!=null and sysOrg.orgTypeId!=''">
		    		 	AND sys_org.org_type_id = #{sysOrg.orgTypeId} 
		    		</if>
		    	 	<if test="sysOrg.orgCityId!=null and sysOrg.orgCityId!=''">
		    		 	AND sys_org.org_city_id = #{sysOrg.orgCityId} 
		    		</if>
		    	 )
		    </if>
   		</if>
    	<if test="sysUser!=null">

   			<if test="sysUser.userName!=null and sysUser.userName!=''">
   				<bind name="userName" value="'%'+sysUser.userName+'%'"/>
   				and u.USER_NAME like #{userName} 
   			</if>
   			<if test="sysUser.idNo!=null and sysUser.idNo!=''">
   				<bind name="idNo" value="'%'+sysUser.idNo+'%'"/>
   				and u.ID_NO like #{idNo} 
   			</if>
   			<if test="sysUser.userCode!=null and sysUser.userCode!=''">
   				<bind name="userCode" value="'%'+sysUser.userCode+'%'"/>
   				and u.USER_CODE like #{userCode}
   			</if>
   			<if test="sysUser.statusId!=null and sysUser.statusId!=''">
   				and u.status_id = #{sysUser.statusId} 
   			</if>
   			<if test="sysUser.userPhone!=null and sysUser.userPhone!=''">
				<bind name="userPhone" value="'%'+sysUser.userPhone+'%'"/>
				and u.user_phone like #{userPhone}
			</if>
   		</if>
		<if test="baseFlag!=null and baseFlag != '' and orgFlow != null">
			AND D.SECOND_ORG_FLOW = #{orgFlow}
		</if>
		<if test="trainingSpeId!=null and trainingSpeId != ''">
			AND D.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test="trainingTypeId!=null and trainingTypeId != ''">
			AND D.TRAINING_TYPE_ID = #{trainingTypeId}
		</if>
		<if test="lockStatus !=null and lockStatus != '' and lockStatus == 'Lock'">
			AND D.LOCK_STATUS = #{lockStatus}
		</if>
		<if test="lockStatus !=null and lockStatus != '' and lockStatus == 'UnLock'">
			AND (D.LOCK_STATUS = #{lockStatus} or LOCK_STATUS is null)
		</if>
		<if test="lockStatus !=null and lockStatus != ''">
			AND u.status_id = #{lockStatus}
		</if>
		ORDER BY NLSSORT(u.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M')
	</select>
	<select id="statisticYearCondocCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    		select count(distinct DOCTOR_FLOW) 
    		from RES_DOCTOR
			where RECORD_STATUS = 'Y'
			<if test="orgFlowList!=null and orgFlowList.size>0">
				and RES_DOCTOR.ORG_FLOW  in 
    		<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
    		</if>
    		<if test="doctor!=null">
	    		<if test="doctor.sessionNumber!=null and doctor.sessionNumber!=''">
	   				and RES_DOCTOR.SESSION_NUMBER = #{ doctor.sessionNumber} 
	   			</if>
   			</if>
    </select> 
   	<resultMap type="HashMap" id="signInfo">
		<result property="speId" column="spe_id" javaType="string"/>
		<result property="speName" column="spe_name" javaType="string"/>
		<result property="userFlow" column="user_flow" javaType="string"/>
		<result property="userName" column="user_name" javaType="string"/>
		<result property="maxDate" column="max_date" javaType="string"/>
		<result property="orgFlow" column="org_flow" javaType="string"/>
		<result property="orgName" column="org_name" javaType="string"/>
		<result property="sessionNumber" column="session_number" javaType="string"/>
		<result property="sigininCount" column="siginin_count" javaType="java.math.BigDecimal"/>
	</resultMap>
	<select id="searchSignInfo"  parameterType="java.util.Map"  resultMap="signInfo">
		select si.ORG_FLOW org_flow,
		si.ORG_NAME org_name,
		su.USER_FLOW user_flow,
		su.user_name user_name,
		res.TRAINING_SPE_ID spe_id,
		res.TRAINING_SPE_NAME spe_name,
		res.session_number session_number,
		max(si.SIGN_DATE) max_date,
		count(*) siginin_count
		from 
		RES_SIGNIN si,res_doctor res,SYS_USER su 
		where si.RECORD_STATUS='Y'and res.RECORD_STATUS='Y'and su.RECORD_STATUS='Y'
		and res.DOCTOR_FLOW = su.USER_FLOW and res.DOCTOR_FLOW = si.USER_FLOW
		<if test="signin!=null">
   			<if test="signin.orgName!=null and signin.orgName!=''">
   				<bind name="orgName" value="'%'+signin.orgName+'%'"/>
   				and si.ORG_NAME like #{orgName} 
   			</if>
   		</if>
   		<if test='signDate!=null and signDate!=""'>
   			<bind name="signDate" value="signDate+'%'"/>
   			and si.SIGN_DATE like #{signDate}
   		</if>
   		<if test='medicineTypeId!=null and medicineTypeId!=""'>
   			and instr(#{medicineTypeId},su.medicine_Type_Id)>0
   		</if>
		group by su.user_name,si.ORG_FLOW,si.ORG_NAME,su.USER_FLOW,res.TRAINING_SPE_ID,res.TRAINING_SPE_NAME,res.session_number
		ORDER BY si.ORG_FLOW,si.ORG_NAME,su.user_name,su.USER_FLOW,max_date,siginin_count
    </select> 
    
    
	<resultMap type="HashMap" id="signUserInfo">
		<result property="userName" column="user_name" javaType="string"/>
		<result property="signDate" column="sign_date" javaType="string"/>
		<result property="schDeptName" column="sch_dept_name" javaType="string"/>
		<result property="userHeadImg" column="user_head_img" javaType="string"/>
	</resultMap>
    <select id="searchSign" parameterType="java.util.Map" resultMap="signUserInfo">
    	select 
    	su.user_name user_name,
    	rs.sign_date sign_date,
    	rs.sch_dept_name sch_dept_name,
    	su.user_head_img
    	from res_signin rs
    	inner join sys_user su
    	on rs.user_flow = su.user_flow
    	where rs.record_status = 'Y'
    	and su.record_status = 'Y'
    	<if test='signDate!=null and signDate!=""'>
    		<bind name="signDate" value="signDate+'%'"/>
   			and rs.sign_date like #{signDate}
    	</if>
    	<if test='deptFlows!=null'>
    		and rs.dept_flow in
    		<foreach collection="deptFlows" open="(" separator="," close=")" item="deptFlow">
    			#{deptFlow}
    		</foreach>
    	</if>
    </select>
    <select id="searchOrgFlowByhistoryOrgFlow" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResDoctorOrgHistoryMapper.BaseResultMap">
   		SELECT *
        FROM RES_DOCTOR_ORG_HISTORY
		WHERE RECORD_STATUS = 'Y'
		<if test="docOrgHistory!=null">
			<if test="docOrgHistory.orgFlow!=null and docOrgHistory.orgFlow!=''">
				AND ORG_FLOW = #{docOrgHistory.orgFlow} or HISTORY_ORG_FLOW=#{docOrgHistory.orgFlow}
			</if>
			<if test="docOrgHistory.doctorName!=null and docOrgHistory.doctorName!=''">
				<bind name="doctorName" value="'%'+docOrgHistory.doctorName+'%'"/>
				AND DOCTOR_NAME=#{doctorName}
			</if>
			<if test="docOrgHistory.sessionNumber!=null and docOrgHistory.sessionNumber!=''">
				AND SESSION_NUMBER=#{docOrgHistory.sessionNumber}
			</if>
		</if>
	ORDER BY OUT_DATE
    </select>

	<select id="searchRegStuLst" parameterType="java.util.Map" resultMap="StuRegInfo">
		SELECT SU.USER_FLOW,SU.USER_CODE,SU.USER_NAME,SU.SEX_NAME,SU.STATUS_DESC,SU.USER_PHONE,SU.USER_EMAIL,
			SU.ID_NO,SU.DEGREE_NAME,SU.EDUCATION_NAME,DOC.DOCTOR_TYPE_NAME,DOC.ORG_NAME,DOC.SESSION_NUMBER,DOC.TRAINING_SPE_NAME,
			DOC.ROTATION_NAME,DOC.DOCTOR_STATUS_NAME,DOC.DOCTOR_STATUS_ID
			FROM RES_DOCTOR DOC
			INNER JOIN Sys_user su on doc.doctor_flow = su.user_flow and su.ID_NO = #{key}
			WHERE DOC.RECORD_STATUS = 'Y'
	</select>
	<select id="searchDocByDiscipleTea"  resultMap="ResDoctorExt">
		select * from res_doctor ed
        INNER JOIN SYS_USER u ON ED.DOCTOR_FLOW = u.USER_FLOW
		INNER join RES_GRADUATION_ASSESSMENT rga on rga.doctor_flow =ED.DOCTOR_FLOW
		where ed.record_status='Y'
		AND U.RECORD_STATUS='Y'
		AND rga.RECORD_STATUS='Y'
		<if test="docTypeList!=null and docTypeList.size>0">
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="auditId!=null and auditId!=''">
			and rga.audit_status_id=#{auditId}
		</if>
		<if test="docName!=null and docName!=''">
			<bind name="docName" value="'%'+docName+'%'"/>
			and u.USER_NAME like #{docName}
		</if>
		<if test="speId!=null and speId!=''">
			and ed.TRAINING_SPE_ID = #{speId}
		</if>
		<if test="doctorCategoryId!=null and doctorCategoryId!=''">
			and ed.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and ed.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="teacherFlow!=null and teacherFlow!=''">
			and exists (select 1 from RES_STUDENT_DISCIPLE_TEACHER rsdt where
			rsdt.record_status ='Y' and rsdt.TEACHER_FLOW = #{teacherFlow} AND eD.DOCTOR_FLOW =RSDT.DOCTOR_FLOW)
		</if>
	</select>
	<select id="searchDocByDiscipleAdmin"  resultMap="ResDoctorExt">
		select * from res_doctor ed
        INNER JOIN SYS_USER u ON ED.DOCTOR_FLOW = u.USER_FLOW
		INNER join RES_GRADUATION_ASSESSMENT rga on rga.doctor_flow =ED.DOCTOR_FLOW
		LEFT JOIN SYS_USER SU ON ED.DISCIPLE_TEACHER_FLOW=SU.USER_FLOW
		where ed.record_status='Y'
		AND U.RECORD_STATUS='Y'
		AND rga.RECORD_STATUS='Y'
		AND SU.RECORD_STATUS='Y'
		and rga.audit_status_id=#{auditId}
		<if test="docName!=null and docName!=''">
			<bind name="docName" value="'%'+docName+'%'"/>
			and u.USER_NAME like #{docName}
		</if>
		<if test="teacherName!=null and teacherName!=''">
			<bind name="teacherName" value="'%'+teacherName+'%'"/>
			and ED.DISCIPLE_TEACHER_NAME like #{teacherName}
		</if>
		<if test="speId!=null and speId!=''">
			and ed.TRAINING_SPE_ID = #{speId}
		</if>
		<if test="doctorCategoryId!=null and doctorCategoryId!=''">
			and ed.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			and ed.ORG_FLOW = #{orgFlow}
		</if>
		<if test='workOrgId != null  and workOrgId!=""'>
			and ed.work_Org_Id =#{workOrgId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and ed.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='doctorTypeIds != null and doctorTypeIds.size()>0'>
			and ed.DOCTOR_TYPE_ID in
			<foreach collection="doctorTypeIds" item="doctorTypeId" open="(" separator="," close=")">
				#{doctorTypeId}
			</foreach>
		</if>
	</select>
	<resultMap type="HashMap" id="docDiscipleMap">
		<result  column="DOCTOR_FLOW" property="doctorFlow" javaType="string"/>
		<result  column="DOCTOR_NAME" property="doctorName" javaType="string"/>
		<result  column="USER_NAME" property="userName" javaType="string"/>
		<result  column="ORG_NAME" property="orgName" javaType="string"/>
		<result  column="SESSION_NUMBER" property="sessionNumber" javaType="string"/>
		<result  column="DOCTOR_CATEGORY_ID" property="doctorCategoryId" javaType="string"/>
		<result  column="DOCTOR_CATEGORY_NAME" property="doctorCategoryName" javaType="string"/>
		<result  column="TRAINING_SPE_ID" property="speId" javaType="string"/>
		<result  column="TRAINING_SPE_NAME" property="speName" javaType="string"/>
		<result  column="TRAINING_TYPE_ID" property="trainingTypeId" javaType="string"/>
		<result  column="TRAINING_TYPE_NAME" property="trainingTypeName" javaType="string"/>
		<result  column="DISCIPLE_TEACHER_FLOW" property="teacherFlow" javaType="string"/>
		<result  column="DISCIPLE_TEACHER_NAME" property="teacherName" javaType="string"/>
		<result  column="TEACHER_INFO_FLOW" property="infoFlow" javaType="string"/>
		<result  column="RECORD_COUNT" property="recordCount" javaType="string"/>
		<result  column="NOTE_COUNT" property="noteCount" javaType="string"/>
		<result  column="EXPERIENCE_COUNT" property="expCount" javaType="string"/>
		<result  column="BOOK_COUNT" property="bookCount" javaType="string"/>
		<result  column="BOOKEXP_COUNT" property="bookExpCount" javaType="string"/>
		<result  column="CASES_COUNT" property="casesCount" javaType="string"/>
		<result  column="YEAR_COUNT" property="yearCount" javaType="string"/>
		<result  column="GRADUTAION_FLOW" property="gradutationFlow" javaType="string"/>
	</resultMap>
	<select id="teaQueryDocDisciple"  resultMap="docDiscipleMap">
		SELECT RD.DOCTOR_FLOW,
		RD.DOCTOR_NAME,
		U.USER_NAME,
		RD.SESSION_NUMBER,
		RD.TRAINING_SPE_ID,
		RD.TRAINING_SPE_NAME,
		RD.DOCTOR_CATEGORY_ID,
		RD.DOCTOR_CATEGORY_NAME,
		RD.DISCIPLE_TEACHER_FLOW,
		RD.DISCIPLE_TEACHER_NAME,
		(SELECT RDTI.RECORD_FLOW FROM RES_DISCIPLE_TEACHER_INFO RDTI WHERE RDTI.RECORD_STATUS='Y' AND RDTI.DOCTOR_FLOW=RD.DOCTOR_FLOW) TEACHER_INFO_FLOW,
		(SELECT COUNT(1) FROM RES_DISCIPLE_RECORD_INFO RDRI WHERE RDRI.RECORD_STATUS='Y'AND RDRI.DOCTOR_FLOW=RD.DOCTOR_FLOW AND RDRI.AUDIT_STATUS_ID IS NOT NULL AND TEACHER_FLOW=#{teacherFlow} ) RECORD_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Note'  AND AUDIT_STATUS_ID  !='Apply' AND DOCTOR_FLOW = RD.DOCTOR_FLOW   AND TEACHER_FLOW=#{teacherFlow}) AS NOTE_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Experience' AND AUDIT_STATUS_ID  !='Apply' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  AND TEACHER_FLOW=#{teacherFlow} ) AS EXPERIENCE_COUNT,
		(SELECT COUNT(1) FROM RES_BOOK_STUDY_RECORD   WHERE RECORD_STATUS = 'Y' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  AND TEACHER_FLOW=#{teacherFlow} ) AS BOOK_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'BookExperience' AND AUDIT_STATUS_ID  !='Apply' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  AND TEACHER_FLOW=#{teacherFlow} ) AS BOOKEXP_COUNT,
		(SELECT COUNT(1) FROM RES_TYPICAL_CASES   WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID  !='Apply' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  AND TEACHER_FLOW=#{teacherFlow}  ) AS CASES_COUNT,
		(SELECT COUNT(1) FROM RES_ANNUAL_ASSESSMENT WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID  !='Apply'  AND DOCTOR_FLOW = RD.DOCTOR_FLOW  AND TEACHER_FLOW=#{teacherFlow} ) AS YEAR_COUNT,
		(SELECT RECORD_FLOW FROM RES_GRADUATION_ASSESSMENT WHERE RECORD_STATUS='Y' AND AUDIT_STATUS_ID IS NOT NULL  AND DOCTOR_FLOW = RD.DOCTOR_FLOW) GRADUTAION_FLOW
		FROM RES_DOCTOR RD
        LEFT JOIN SYS_USER U ON RD.DOCTOR_FLOW = U.USER_FLOW
		WHERE RD.RECORD_STATUS='Y'
		AND U.RECORD_STATUS='Y'
		<if test="docTypeList!=null and docTypeList.size>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="docName!=null and docName!=''">
			<bind name="docName" value="'%'+docName+'%'"/>
			and u.USER_NAME like #{docName}
		</if>
		<if test="speId!=null and speId!=''">
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test="doctorCategoryId!=null and doctorCategoryId!=''">
			and rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="teacherFlow!=null and teacherFlow!=''">
			and exists (select 1 from RES_STUDENT_DISCIPLE_TEACHER rsdt where
			rsdt.record_status ='Y' and rsdt.TEACHER_FLOW = #{teacherFlow} AND RD.DOCTOR_FLOW =RSDT.DOCTOR_FLOW)
		</if>
	</select>
	<select id="adminQueryDocDisciple"  resultMap="docDiscipleMap">
        <bind name="status_str" value="'Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified'" />
        <bind name="status_str_all" value="'Apply','Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified'" />
		SELECT RD.DOCTOR_FLOW,
		RD.DOCTOR_NAME,
		RD.DOCTOR_NAME USER_NAME,
		RD.SESSION_NUMBER,
		RD.DOCTOR_CATEGORY_ID,
		RD.DOCTOR_CATEGORY_NAME,
		RD.TRAINING_SPE_ID,
		RD.TRAINING_SPE_NAME,
		RD.TRAINING_TYPE_ID,
		RD.TRAINING_TYPE_NAME,
		RD.DISCIPLE_TEACHER_FLOW,
		RD.DISCIPLE_TEACHER_NAME,
		(SELECT RDTI.RECORD_FLOW FROM RES_DISCIPLE_TEACHER_INFO RDTI WHERE RDTI.RECORD_STATUS='Y' AND RDTI.DOCTOR_FLOW=RD.DOCTOR_FLOW) TEACHER_INFO_FLOW,
		(SELECT COUNT(1) FROM RES_DISCIPLE_RECORD_INFO RDRI WHERE RDRI.RECORD_STATUS='Y'AND RDRI.DOCTOR_FLOW=RD.DOCTOR_FLOW AND RDRI.AUDIT_STATUS_ID in('Apply','Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified')) RECORD_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Note'  AND AUDIT_STATUS_ID in('Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified') AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS NOTE_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Experience' AND AUDIT_STATUS_ID in('Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified') AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS EXPERIENCE_COUNT,
		(SELECT COUNT(1) FROM RES_BOOK_STUDY_RECORD   WHERE RECORD_STATUS = 'Y' AND DOCTOR_FLOW = RD.DOCTOR_FLOW   ) AS BOOK_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'BookExperience' AND AUDIT_STATUS_ID in('Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified') AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS BOOKEXP_COUNT,
		(SELECT COUNT(1) FROM RES_TYPICAL_CASES   WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID in('Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified') AND DOCTOR_FLOW = RD.DOCTOR_FLOW   ) AS CASES_COUNT,
		(SELECT COUNT(1) FROM RES_ANNUAL_ASSESSMENT WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID in('Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified')  AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS YEAR_COUNT,
		(SELECT RECORD_FLOW FROM RES_GRADUATION_ASSESSMENT WHERE RECORD_STATUS='Y' AND AUDIT_STATUS_ID in('Apply','Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified')  AND DOCTOR_FLOW = RD.DOCTOR_FLOW) GRADUTAION_FLOW
		FROM RES_DOCTOR RD
		WHERE RD.RECORD_STATUS='Y'
		<if test="docName!=null and docName!=''">
			<bind name="docName" value="'%'+docName+'%'"/>
			and RD.DOCTOR_NAME like #{docName}
		</if>
		<if test="teacherName!=null and teacherName!=''">
			<bind name="teacherName" value="'%'+teacherName+'%'"/>
			and rd.DISCIPLE_TEACHER_NAME like #{teacherName}
		</if>
		<if test="speId!=null and speId!=''">
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test="doctorCategoryId!=null and doctorCategoryId!=''">
			and rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			and rd.ORG_FLOW = #{orgFlow}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='doctorTypeIds != null and doctorTypeIds.size()>0'>
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="doctorTypeIds" item="doctorTypeId" open="(" separator="," close=")">
				#{doctorTypeId}
			</foreach>
		</if>
		and exists (select 1 from sys_user where user_flow =doctor_flow and record_status='Y')
		ORDER BY rd.session_number DESC, nlssort(RD.DOCTOR_NAME, 'NLS_SORT=SCHINESE_PINYIN_M'),  rd.CREATE_TIME
	</select>

    <select id="searchDocSysRecords" parameterType="java.util.HashMap" resultMap="ResDoctorSys">
        select
        a.doctor_flow doctor_flow
        ,a.doctor_name doctor_name
        ,nvl(
        (select count(1)
        from RES_SIGNIN rs
        where rs.record_status = 'Y' and rs.user_flow=a.doctor_flow
        <if test='startDate!=null and startDate!=""'>
            and rs.create_time >= #{startDate}
        </if>
        <if test='endDate!=null and endDate!=""'>
            and rs.create_time <![CDATA[<]]>= #{endDate}
        </if>
        ),0) siginNum,
        <if test="recTypeIds!=null">
            <foreach collection="recTypeIds" item="item" separator=",">
                (select count(1) from res_rec
                where record_status='Y'
                <if test='startDate!=null and startDate!=""'>
                    and create_time >= #{startDate}
                </if>
                <if test='endDate!=null and endDate!=""'>
                    and create_time <![CDATA[<]]>= #{endDate}
                </if>
                and rec_type_id =#{item}
                and res_rec.oper_user_flow = a.doctor_flow) ${item}
            </foreach>
        </if>
        FROM RES_DOCTOR a
        WHERE record_status = 'Y'
        <if test='sessionNumber!=null and sessionNumber!=""'>
            and a.session_number=#{sessionNumber}
        </if>
        <if test='orgFlow!=null and orgFlow!=""'>
            and a.ORG_FLOW=#{orgFlow}
        </if>
    </select>
	<select id="searchDoctorExt" parameterType="list" resultMap="ResDoctorExt">
		select * from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
		AND RES_DOCTOR.org_flow is not null
		AND RES_DOCTOR.doctor_flow in
		<foreach collection="list" item="doctorFlow" index="index"
				 open="(" close=")" separator=",">
			#{doctorFlow}
		</foreach>
		ORDER BY res_doctor.session_number desc, sys_user.user_code,res_doctor.CREATE_TIME
	</select>
	<select id="searchDoctorExt4Back" parameterType="list" resultMap="ResDoctorExt">
		select * from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
		AND RES_DOCTOR.doctor_flow in
		<foreach collection="list" item="doctorFlow" index="index"
				 open="(" close=")" separator=",">
			#{doctorFlow}
		</foreach>
		ORDER BY res_doctor.session_number desc, sys_user.user_code,res_doctor.CREATE_TIME
	</select>
	<resultMap id="resDoctorClob" type="com.pinde.core.common.form.ResDoctorClobForm">
		<id column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
		<result column="DOCTOR_NAME" property="doctorName" jdbcType="VARCHAR" />
		<result column="USER_RESUME" property="userResume" jdbcType="CLOB" />
	</resultMap>
	<select id="searchClobInfoDoc" parameterType="string" resultMap="resDoctorClob">
		select a.doctor_flow,a.doctor_name,b.user_resume from res_doctor a,pub_user_resume b
		where a.doctor_flow=b.user_flow
			and a.record_status='Y'
			and a.session_number=#{year}
			and b.user_resume is not null
	</select>
	<select id="querySpeLineScore" parameterType="string" resultType="map">
		select grade_borderline from res_grade_borderline
		 	where record_status='Y'
		 		and exam_flow=(select exam_flow from res_exam where record_status='Y' and exam_year=#{year})
				and spe_id=(select distinct a.specialized from res_doctor a,sys_user b
								where a.doctor_flow = b.user_flow
									and a.record_status='Y'
									and b.record_status='Y'
				  					and b.id_no=#{idNo})
	</select>
    <select id="searchDoctor4Kq" resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap"
            parameterType="java.util.Map">
		select DISTINCT rd.* from res_doctor rd
		left join RES_DOCTOR_SCH_PROCESS rdsp on rdsp.USER_FLOW = rd.doctor_flow
		where rd.record_status='Y' and rdsp.record_status='Y'
		<if test='doctorFlow!=null and doctorFlow!=""'>
			and rd.doctor_flow = #{doctorFlow}
		</if>
		<if test='doctorName!=null and doctorName!=""'>
			and rd.doctor_name like CONCAT(CONCAT('%', #{doctorName}),'%')
		</if>
		<if test='trainingSpeId!=null and trainingSpeId!=""'>
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test='sessionNumber!=null and sessionNumber!=""'>
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test='trainingYears!=null and trainingYears!=""'>
			and rd.training_Years = #{trainingYears}
		</if>
		<if test='graduationYear!=null and graduationYear!=""'>
			and rd.graduation_Year = #{graduationYear}
		</if>
		<if test='inHosDate!=null and inHosDate!=""'>
			and rd.in_Hos_Date like CONCAT(CONCAT('%', #{inHosDate}),'%')
		</if>
		<if test='teacherUserFlow!=null and teacherUserFlow!=""'>
			and rdsp.teacher_User_Flow = #{teacherUserFlow}
		</if>
		<if test="schDeptList!=null and schDeptList.size()>0">
			and rdsp.sch_dept_flow in
			<foreach collection="schDeptList" item="item" open="(" close=")" separator="," >
				#{item.schDeptFlow}
			</foreach>
		</if>
		<if test='speId!=null and speId!=""'>
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test='orgFlow!=null and orgFlow!=""'>
			and rd.org_Flow = #{orgFlow}
		</if>
		<if test="deptFlow!=null and deptFlow!=''">
			and rd.depart_ment_flow = #{deptFlow}
		</if>
		<if test='doctorTypeIdList != null and doctorTypeIdList.size()>0'>
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
				#{doctorTypeId}
			</foreach>
		</if>
	</select>
	<resultMap type="HashMap" id="jszyStudentStatisticsMap">
		<result  property="cityId" column="ORG_CITY_ID" javaType="string"/>
		<result property="jointOrgFlow" column="JOINT_ORG_FLOW" javaType="string"/>
		<result property="jointOrgName" column="JOINT_ORG_NAME" javaType="string"/>
		<result property="orgFlow" column="ORG_FLOW" javaType="string"/>
		<result property="orgName" column="ORG_NAME" javaType="string"/>
		<result property="sessionNumber" column="SESSION_NUMBER" javaType="string"/>
		<result property="trainingTypeId" column="TRAINING_TYPE_ID" javaType="string"/>
		<result property="doctorCategoryId" column="DOCTOR_CATEGORY_ID" javaType="string"/>
		<result property="doctorTypeId" column="DOCTOR_TYPE_ID" javaType="string"/>
		<result property="num" column="num" javaType="integer"/>
	</resultMap>
	<select id="jszyStudentStatistics"  resultMap="jszyStudentStatisticsMap">
		select  org_city_id,
		JOINT_ORG_FLOW,JOINT_ORG_NAME,
		ORG_FLOW, ORG_NAME,
		session_number,
		COUNT(1) AS NUM
		from ( SELECT   ORG.JOINT_ORG_FLOW,ORG.JOINT_ORG_NAME,
		ORG.ORG_FLOW,ORG.ORG_NAME,
		org.org_city_id,
		t.session_number,
		t.doctor_flow
		FROM RES_DOCTOR T
		left join ( SELECT JIORG.JOINT_ORG_FLOW,JIORG.JOINT_ORG_NAME,
		ORG.ORG_FLOW,ORG.ORG_NAME,
		ORG.ORG_CITY_ID,
		ORG.ORG_CITY_NAME
		FROM SYS_ORG ORG
		LEFT JOIN RES_JOINT_ORG JIORG
		ON ORG.ORG_FLOW = JIORG.ORG_FLOW
		WHERE 1 = 1
		AND JIORG.RECORD_STATUS = 'Y'
		and org.org_level_id = 'CountryOrg'
		AND ORG.RECORD_STATUS = 'Y'
		AND ORG.ORG_FLOW!='00000000000000000000000000000000'
		UNION
		SELECT ORG.ORG_FLOW JOINT_ORG_FLOW,ORG.ORG_NAME JOINT_ORG_NAME,
		ORG.ORG_FLOW,ORG.ORG_NAME,
		ORG.ORG_CITY_ID,
		ORG.ORG_CITY_NAME
		FROM SYS_ORG ORG
		where org.org_level_id = 'CountryOrg'
		AND ORG.RECORD_STATUS = 'Y'
		AND ORG.ORG_FLOW!='00000000000000000000000000000000') ORG
		on t.org_flow = org.JOINT_ORG_FLOW
		LEFT JOIN SYS_USER u
		ON t.DOCTOR_FLOW = u.USER_FLOW
		WHERE T.RECORD_STATUS = 'Y'
		and t.DOCTOR_STATUS_ID = '20'
		AND ORG.org_flow IN
		(SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS = 'Y'
		AND ORG_PROV_ID = '320000'
		<if test="orgFlow!=null and orgFlow!=''">
			and org_Flow=#{orgFlow}
		</if>
		)
		AND u.RECORD_STATUS = 'Y'
		and t.session_number is not null
		<if test="docTypeList!=null and docTypeList.size>0">
			and t.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and  t.session_number in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctorCategoryIdList!=null and doctorCategoryIdList.size>0">
			and t.DOCTOR_CATEGORY_ID in
			<foreach collection="doctorCategoryIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		) t
		group by org_city_id,JOINT_ORG_FLOW,JOINT_ORG_Name,ORG_FLOW,org_name,session_number
		order by org_city_id,ORG_FLOW,session_number
	</select>
	<select id="jszySpeStatistics"  resultMap="jszyStudentStatisticsMap">
		select   org_city_id, JOINT_ORG_FLOW, DOCTOR_CATEGORY_ID, session_number, COUNT(1) AS NUM
		from ( SELECT   ORG.JOINT_ORG_FLOW, ORG.JOINT_ORG_NAME, ORG.ORG_FLOW, ORG.ORG_NAME, org.org_city_id
		, t.DOCTOR_CATEGORY_ID, T.session_number session_number,  t.doctor_flow
		FROM RES_DOCTOR T
		left join ( SELECT JIORG.JOINT_ORG_FLOW,JIORG.JOINT_ORG_NAME,
		ORG.ORG_FLOW,ORG.ORG_NAME,
		ORG.ORG_CITY_ID,
		ORG.ORG_CITY_NAME
		FROM SYS_ORG ORG
		LEFT JOIN RES_JOINT_ORG JIORG
		ON ORG.ORG_FLOW = JIORG.ORG_FLOW
		WHERE 1 = 1
		AND JIORG.RECORD_STATUS = 'Y'
		and org.org_level_id = 'CountryOrg'
		AND ORG.RECORD_STATUS = 'Y'
		AND ORG.ORG_FLOW!='00000000000000000000000000000000'
		UNION
		SELECT ORG.ORG_FLOW JOINT_ORG_FLOW,ORG.ORG_NAME JOINT_ORG_NAME,
		ORG.ORG_FLOW,ORG.ORG_NAME,
		ORG.ORG_CITY_ID,
		ORG.ORG_CITY_NAME
		FROM SYS_ORG ORG
		where org.org_level_id = 'CountryOrg'
		AND ORG.RECORD_STATUS = 'Y'
		AND ORG.ORG_FLOW!='00000000000000000000000000000000') ORG
		on t.org_flow = org.JOINT_ORG_FLOW
		LEFT JOIN SYS_USER u
		ON t.DOCTOR_FLOW = u.USER_FLOW
		WHERE T.RECORD_STATUS = 'Y'
		and t.DOCTOR_STATUS_ID = '20'
		AND ORG.org_flow IN
		(SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS = 'Y'
		AND ORG_PROV_ID = '320000'
		<if test="orgFlow!=null and orgFlow!=''">
			and org_Flow=#{orgFlow}
		</if>
		)
		AND u.RECORD_STATUS = 'Y'
		and t.session_number is not null
		<if test="docTypeList!=null and docTypeList.size>0">
			and t.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="sessionNumbers!=null and sessionNumbers.size>0">
			and  t.session_number in
			<foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctorCategoryIdList!=null and doctorCategoryIdList.size>0">
			and t.DOCTOR_CATEGORY_ID in
			<foreach collection="doctorCategoryIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		) t
		GROUP BY org_city_id, JOINT_ORG_FLOW, DOCTOR_CATEGORY_ID, session_number
		ORDER BY org_city_id, JOINT_ORG_FLOW, DOCTOR_CATEGORY_ID, session_number
	</select>
	<select id="showOrgDoctorType"  resultMap="jszyStudentStatisticsMap">
		SELECT session_number, DOCTOR_TYPE_ID, COUNT(1) AS NUM
		FROM (
		SELECT T.session_number AS session_number,T.DOCTOR_TYPE_ID DOCTOR_TYPE_ID, T.doctor_flow
		FROM RES_DOCTOR T
		LEFT JOIN SYS_USER u ON t.DOCTOR_FLOW = u.USER_FLOW
		WHERE T.RECORD_STATUS = 'Y'
		AND t.DOCTOR_STATUS_ID = '20'
		<if test="orgFlow!=null and orgFlow!=''">
			AND T.org_flow = #{orgFlow}
		</if>
		AND u.RECORD_STATUS = 'Y'
		AND t.session_number IS NOT NULL
		<if test="docTypeList!=null and docTypeList.size>0">
			and t.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test="doctorCategoryIdList!=null and doctorCategoryIdList.size>0">
			and t.DOCTOR_CATEGORY_ID in
			<foreach collection="doctorCategoryIdList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		) t
		GROUP BY session_number, DOCTOR_TYPE_ID
		ORDER BY session_number, DOCTOR_TYPE_ID
	</select>

    <select id="searchDocByteacher2" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		select * from res_doctor where RECORD_STATUS = 'Y'
		<if test='doctor != null'>
			<if test='doctor.orgFlow!=null and doctor.orgFlow!=""'>
				AND ORG_FLOW = #{doctor.orgFlow}
			</if>
			<if test='doctor.sessionNumber != null and doctor.sessionNumber != ""'>
				AND SESSION_NUMBER = #{doctor.sessionNumber}
			</if>
			<if test='doctor.trainingSpeId != null and doctor.trainingSpeId != ""'>
				AND TRAINING_SPE_ID = #{doctor.trainingSpeId}
			</if>
			<if test='doctor.doctorCategoryId != null and doctor.doctorCategoryId != ""'>
				AND DOCTOR_CATEGORY_ID = #{doctor.doctorCategoryId}
			</if>
			<if test="doctor.doctorName != null and doctor.doctorName != ''">
				AND doctor_Name = #{doctor.doctorName}
			</if>

		</if>
		<if test='teacherUserFlow != null and teacherUserFlow != ""'>
			AND doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and teacher_user_flow = #{teacherUserFlow})
		</if>
		<if test='headUserFlow != null and headUserFlow != ""'>
			AND doctor_flow in (select user_flow from res_doctor_sch_process where RECORD_STATUS = 'Y' and head_user_flow = #{headUserFlow})
		</if>
		ORDER BY res_doctor.DOCTOR_CODE
	</select>
	<select id="searchResDoctor2" parameterType="java.util.Map"
            resultMap="com.pinde.core.common.sci.dao.ResDoctorMapper.BaseResultMap">
		select * from res_doctor rd where RECORD_STATUS = 'Y'

		<if test='orgFlow!=null and orgFlow!=""'>
			AND ORG_FLOW = #{orgFlow}
		</if>
		<if test="docTypeList!=null and docTypeList.size()>0">
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
		</if>
		<if test='workOrgId!=null and workOrgId!=""'>
			AND rd.work_Org_Id = #{workOrgId}
		</if>
		AND (rd.DOCTOR_STATUS_ID NOT IN ('UnPassed', 'Passed', 'UnSubmit')
		OR rd.DOCTOR_STATUS_ID IS NULL)
		AND rd.org_flow IS NOT NULL
		AND rd.org_flow != '20160914888888'
		AND rd.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND rd.org_flow != '00000000000000000000000000000000'
		<if test='medicineTypeId!=null and medicineTypeId!=""'>
			and exists (select 1 from sys_user su where su.user_flow=doctor_flow
			and instr(#{medicineTypeId},su.medicine_Type_Id)>0)
		</if>
		<if test='doctorSearchForm != null'>
			<if test='doctorSearchForm.sessionNumber != null and doctorSearchForm.sessionNumber != ""'>
				AND SESSION_NUMBER = #{doctorSearchForm.sessionNumber}
			</if>
			<if test='doctorSearchForm.trainingSpeId != null and doctorSearchForm.trainingSpeId != ""'>
				AND TRAINING_SPE_ID = #{doctorSearchForm.trainingSpeId}
			</if>
			<if test='doctorSearchForm.doctorCategoryId != null and doctorSearchForm.doctorCategoryId != ""'>
				AND DOCTOR_CATEGORY_ID = #{doctorSearchForm.doctorCategoryId}
			</if>
			<if test='doctorSearchForm.graduatedId != null and doctorSearchForm.graduatedId != ""'>
				AND GRADUATED_ID = #{doctorSearchForm.graduatedId}
			</if>
			<if test='doctorSearchForm.rotationFlow != null and doctorSearchForm.rotationFlow != ""'>
				AND ROTATION_FLOW = #{doctorSearchForm.rotationFlow}
			</if>
			<if test="doctorSearchForm.doctorName != null and doctorSearchForm.doctorName != ''">
				AND doctor_Name like CONCAT(CONCAT('%', #{doctorSearchForm.doctorName}),'%')
			</if>
			<if test='doctorSearchForm.doctorFlows!=null and doctorSearchForm.doctorFlows.size()>0'>
				and DOCTOR_FLOW IN
				<foreach collection="doctorSearchForm.doctorFlows" close=")" item="flow" open="(" separator=",">
					#{flow}
				</foreach>
			</if>

		</if>
		ORDER BY SESSION_NUMBER DESC,DOCTOR_FLOW
	</select>
	<select id="getStudents" resultMap="ResDoctorExt">
		select * from res_doctor INNER JOIN  sys_user on  res_doctor.DOCTOR_FLOW = sys_user.USER_FLOW
		where  sys_user.RECORD_STATUS = 'Y'
		and res_doctor.record_status='Y'
		<if test='userName != null and userName != ""'>
			AND sys_user.user_name like CONCAT(CONCAT('%', #{userName}),'%')
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			AND res_doctor.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='trainingSpeId != null and trainingSpeId != ""'>
			AND res_doctor.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test='trainingYears != null and trainingYears != ""'>
			AND res_doctor.TRAINING_years = #{trainingYears}
		</if>
		<if test='rotationFlow != null and rotationFlow != ""'>
			AND res_doctor.rotation_Flow = #{rotationFlow}
		</if>
		<if test='doctorCategoryId != null and doctorCategoryId != ""'>
			AND res_doctor.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test='orgFlow != null and orgFlow != ""'>
			AND RES_DOCTOR.org_flow = #{orgFlow}
		</if>
		AND (res_doctor.DOCTOR_STATUS_ID not in( 'UnPassed','Passed','UnSubmit')
		or res_doctor.DOCTOR_STATUS_ID is null)
		AND res_doctor.org_flow is not null
		AND res_doctor.org_flow != '20160914888888'
		AND res_doctor.org_flow != '566c9f36cf014f63a569b453efa284d7'
		AND res_doctor.org_flow != '00000000000000000000000000000000'
		ORDER BY res_doctor.session_number desc, sys_user.user_code,res_doctor.CREATE_TIME
	</select>

	<resultMap id="resultMap" type="java.util.Map">
		<result column="EXT_SCORE" javaType="String" jdbcType="CLOB" property="EXT_SCORE" />
	</resultMap>
	<select id="searchOsceScoreList" resultMap="resultMap" parameterType="java.util.Map">
		select su.user_name,
				rs.score_type_id,
				rs.score_type_name,
				su.id_no,
				rd.session_number,
				rd.training_Spe_Name,
			    rs.ext_score,
				rs.score_flow
		from
		res_score rs
		left join sys_user su on su.user_flow=rs.doctor_flow
		left join res_doctor rd on rd.doctor_flow=rs.doctor_flow
		where rs.record_status = 'Y' and su.record_status = 'Y'  and rd.record_status = 'Y' and rs.result_flow='osce'
		<if test='userName != null and userName != ""'>
			and su.user_name like CONCAT(CONCAT('%', #{userName}),'%')
		</if>
		<if test='trainingSpeId != null and trainingSpeId != ""'>
			and rd.training_Spe_Id = #{trainingSpeId}
		</if>
		<if test='sessionNumber != null and sessionNumber != ""'>
			and rd.session_Number = #{sessionNumber}
		</if>
		<if test='scoreYear != null and scoreYear != ""'>
			and rs.score_type_id = #{scoreYear}
		</if>
		<if test='idNo != null and idNo != ""'>
			and su.id_no like CONCAT(CONCAT('%', #{idNo}),'%')
		</if>
	</select>

	<select id="globalQueryDocDisciple"  resultMap="docDiscipleMap">
		<bind name="status_str" value="'Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified'" />
		<bind name="status_str_all" value="'Apply','Submit','DiscipleAudit','DiscipleBack','AdminAudit','AdminBack','PendingAudit','Qualified','UnQualified'" />
		SELECT RD.DOCTOR_FLOW,
		RD.DOCTOR_NAME,
		RD.DOCTOR_NAME USER_NAME,
		RD.SESSION_NUMBER,
		RD.DOCTOR_CATEGORY_ID,
		RD.DOCTOR_CATEGORY_NAME,
		RD.TRAINING_SPE_ID,
		RD.TRAINING_SPE_NAME,
		RD.TRAINING_TYPE_ID,
		RD.TRAINING_TYPE_NAME,
		RD.DISCIPLE_TEACHER_FLOW,
		RD.DISCIPLE_TEACHER_NAME,
		RD.ORG_NAME,
		(SELECT RDTI.RECORD_FLOW FROM RES_DISCIPLE_TEACHER_INFO RDTI WHERE RDTI.RECORD_STATUS='Y' AND RDTI.DOCTOR_FLOW=RD.DOCTOR_FLOW) TEACHER_INFO_FLOW,
		(SELECT COUNT(1) FROM RES_DISCIPLE_RECORD_INFO RDRI WHERE RDRI.RECORD_STATUS='Y'AND RDRI.DOCTOR_FLOW=RD.DOCTOR_FLOW AND RDRI.AUDIT_STATUS_ID ='Qualified') RECORD_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Note'  AND AUDIT_STATUS_ID ='Qualified' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS NOTE_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'Experience' AND AUDIT_STATUS_ID ='Qualified' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS EXPERIENCE_COUNT,
		(SELECT COUNT(1) FROM RES_BOOK_STUDY_RECORD   WHERE RECORD_STATUS = 'Y' AND DOCTOR_FLOW = RD.DOCTOR_FLOW   ) AS BOOK_COUNT,
		(SELECT COUNT(1) FROM RES_DISCIPLE_NOTE_INFO  WHERE RECORD_STATUS = 'Y' AND NOTE_TYPE_ID = 'BookExperience' AND AUDIT_STATUS_ID ='Qualified' AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS BOOKEXP_COUNT,
		(SELECT COUNT(1) FROM RES_TYPICAL_CASES   WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID ='Qualified' AND DOCTOR_FLOW = RD.DOCTOR_FLOW   ) AS CASES_COUNT,
		(SELECT COUNT(1) FROM RES_ANNUAL_ASSESSMENT WHERE RECORD_STATUS = 'Y' AND AUDIT_STATUS_ID ='AdminAudit'  AND DOCTOR_FLOW = RD.DOCTOR_FLOW  ) AS YEAR_COUNT,
		(SELECT RECORD_FLOW FROM RES_GRADUATION_ASSESSMENT WHERE RECORD_STATUS='Y' AND AUDIT_STATUS_ID ='AdminAudit' AND DOCTOR_FLOW = RD.DOCTOR_FLOW) GRADUTAION_FLOW
		FROM RES_DOCTOR RD
		WHERE RD.RECORD_STATUS='Y'
		and rd.SESSION_NUMBER is not null
		and rd.org_flow is not null
		<if test="docName!=null and docName!=''">
			<bind name="docName" value="'%'+docName+'%'"/>
			and RD.DOCTOR_NAME like #{docName}
		</if>
		<if test="teacherName!=null and teacherName!=''">
			<bind name="teacherName" value="'%'+teacherName+'%'"/>
			and rd.DISCIPLE_TEACHER_NAME like #{teacherName}
		</if>
		<if test="speId!=null and speId!=''">
			and rd.TRAINING_SPE_ID = #{speId}
		</if>
		<if test="doctorCategoryId!=null and doctorCategoryId!=''">
			and rd.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="orgFlow!=null and orgFlow!=''">
			and rd.ORG_FLOW = #{orgFlow}
		</if>
		<if test="workOrgId!=null and workOrgId!=''">
			and rd.work_Org_Id = #{workOrgId}
		</if>
		<if test="sessionNumber!=null and sessionNumber!=''">
			and rd.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test='doctorTypeIds != null and doctorTypeIds.size()>0'>
			and rd.DOCTOR_TYPE_ID in
			<foreach collection="doctorTypeIds" item="doctorTypeId" open="(" separator="," close=")">
				#{doctorTypeId}
			</foreach>
		</if>
		and exists (select 1 from sys_user where user_flow =doctor_flow and record_status='Y')
		ORDER BY rd.session_number DESC, nlssort(RD.DOCTOR_NAME, 'NLS_SORT=SCHINESE_PINYIN_M'),  rd.CREATE_TIME
	</select>

	<!-- 查询学员出科成绩和技能成绩 -->
	<select id="searchDoctorRecruitResultList" parameterType="com.pinde.core.model.ResDoctorExt" resultType="map">
		SELECT
			D.DOCTOR_FLOW,
			D.DOCTOR_NAME,
			D.TRAINING_TYPE_NAME,
			D.SESSION_NUMBER,
			S.DEPT_NAME,
			S.SCH_DEPT_FLOW,
			S.SCH_DEPT_NAME,
			S.SCH_START_DATE,
			S.SCH_END_DATE,
			CONCAT(
				CONCAT(S.SCH_START_DATE, '~'),S.SCH_END_DATE
			) AS SCH_DATE,
			S.TEACHER_USER_FLOW,
			S.TEACHER_USER_NAME,
			CASE WHEN F.THEORERESULT IS NULL
				THEN TO_CHAR(S.SCH_SCORE)
				ELSE F.THEORERESULT
			END AS SCH_SCORE,
			DOPS.STUDENTSKILLNUM,
			DOPS.SKILLCOMPLEXDEGREE,
			DOPS.SKILLLEVEL,
			DOPS.CONSENTFORM,
			DOPS.READYTOWORK,
			DOPS.PAINANDSTABILIZATION,
			DOPS.SKILLABILITY,
			DOPS.ASEPTICTECHNIQUE,
			DOPS.SEEKASSISTANCE,
			DOPS.RELATEDDISPOSAL,
			DOPS.COMMUNICATIONSKILLS,
			DOPS.FEELPROFESSIONALDEGREE,
			DOPS.OVERALLPERFORMANCE,
			DOPS.DEGREESATISFACTION,
			DOPS.TEACHERCOMMENT,
			CEX.SEVERITY,
			CEX.DIAGNOSISKEYNOTE,
			CEX.MEDICALINTERVIEW,
			CEX.PHYSICALEXAMINATION,
			CEX.HUMANISTICCARE,
			CEX.CLINICALJUDGMENT,
			CEX.COMMUNICATIONSKILLS,
			CEX.ORGANIZATION,
			CEX.HOLISTICCARE,
			CEX.DEGREESATISFACTION,
			CEX.TEACHERCOMMENT,
			CASE
				WHEN R.HAVE_AFTER_PIC = 'Y' THEN
					'已上传'
				ELSE
					'未上传'
			END AS FILE_UPLOAD,
			R.RESULT_FLOW,
			S.PROCESS_FLOW,
			F.SKILLNAME,
			F.SCORE
		FROM
			SCH_ARRANGE_RESULT R ,
		RES_DOCTOR_SCH_PROCESS S LEFT JOIN
		(
			SELECT
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//studentSkillNum/text()'
				) AS STUDENTSKILLNUM,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//skillComplexDegree/text()'
				) AS SKILLCOMPLEXDEGREE,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//skillLevel/text()'
				) AS SKILLLEVEL,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//consentForm/text()'
				) AS CONSENTFORM,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//readyToWork/text()'
				) AS READYTOWORK,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//painAndStabilization/text()'
				) AS PAINANDSTABILIZATION,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//SkillAbility/text()'
				) AS SKILLABILITY,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//asepticTechnique/text()'
				) AS ASEPTICTECHNIQUE,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//seekAssistance/text()'
				) AS SEEKASSISTANCE,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//relatedDisposal/text()'
				) AS RELATEDDISPOSAL,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//communicationSkills/text()'
				) AS COMMUNICATIONSKILLS,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//feelProfessionalDegree/text()'
				) AS FEELPROFESSIONALDEGREE,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//overallPerformance/text()'
				) AS OVERALLPERFORMANCE,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//degreeSatisfaction/text()'
				) AS DEGREESATISFACTION,
				EXTRACTVALUE (
					XMLTYPE (PR.rec_content),
					'//teacherComment/text()'
				) AS TEACHERCOMMENT,
				PR.PROCESS_FLOW
			FROM
				RES_SCH_PROCESS_EXPRESS PR,
			(
				SELECT
					MAX (CREATE_TIME) AS CREATE_TIME,
					PROCESS_FLOW
				FROM
					RES_SCH_PROCESS_EXPRESS
				WHERE
					RECORD_STATUS = 'Y'
				AND REC_TYPE_ID = 'DOPS'
				GROUP BY
					PROCESS_FLOW
			) PT
			WHERE
				PR.PROCESS_FLOW = PT.PROCESS_FLOW
			AND PR.CREATE_TIME = PT.CREATE_TIME
			AND PR.RECORD_STATUS = 'Y'
			AND PR.REC_TYPE_ID = 'DOPS'
		) DOPS ON S.PROCESS_FLOW = DOPS.PROCESS_FLOW
		LEFT JOIN
		(
			SELECT
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//severity/text()'
				) AS SEVERITY,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//diagnosisKeynote/text()'
				) AS DIAGNOSISKEYNOTE,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//medicalInterview/text()'
				) AS MEDICALINTERVIEW,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//physicalExamination/text()'
				) AS PHYSICALEXAMINATION,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//humanisticCare/text()'
				) AS HUMANISTICCARE,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//clinicalJudgment/text()'
				) AS CLINICALJUDGMENT,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//communicationSkills/text()'
				) AS COMMUNICATIONSKILLS,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//organization/text()'
				) AS ORGANIZATION,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//holisticCare/text()'
				) AS HOLISTICCARE,
				EXTRACTVALUE (
					XMLTYPE (x.rec_content),
					'//degreeSatisfaction/text()'
				) AS DEGREESATISFACTION,
				EXTRACTVALUE (
					XMLTYPE (X.rec_content),
					'//teacherComment/text()'
				) AS TEACHERCOMMENT,
				X.PROCESS_FLOW
			FROM
				RES_SCH_PROCESS_EXPRESS X,
			(
				SELECT
					MAX(CREATE_TIME) AS CREATE_TIME,
					PROCESS_FLOW
				FROM
					RES_SCH_PROCESS_EXPRESS
				WHERE
					RECORD_STATUS = 'Y'
				AND REC_TYPE_ID = 'Mini_CEX'
				GROUP BY
					PROCESS_FLOW
			) P
			WHERE
				X.PROCESS_FLOW = P.PROCESS_FLOW
			AND X.CREATE_TIME = P.CREATE_TIME
			AND X.RECORD_STATUS = 'Y'
			AND X.REC_TYPE_ID = 'Mini_CEX'
		) CEX ON S.PROCESS_FLOW = CEX.PROCESS_FLOW
		LEFT JOIN (
			SELECT DISTINCT
				EXTRACTVALUE (
					XMLTYPE (AF.rec_content),
					'//theoreResult/text()'
				) AS THEORERESULT,
				EXTRACTVALUE (
					XMLTYPE (AF.rec_content),
					'//skillName/text()'
				) AS SKILLNAME,
				EXTRACTVALUE (
					XMLTYPE (AF.rec_content),
					'//score/text()'
				) AS SCORE,
				AF.PROCESS_FLOW
			FROM
				RES_SCH_PROCESS_EXPRESS AF,
			(
				SELECT
					MAX (CREATE_TIME) AS CREATE_TIME,
					PROCESS_FLOW
				FROM
					RES_SCH_PROCESS_EXPRESS
				WHERE
					RECORD_STATUS = 'Y'
				AND REC_TYPE_ID = 'AfterEvaluation'
				GROUP BY
					PROCESS_FLOW
			) PS
			WHERE
				AF.PROCESS_FLOW = PS.PROCESS_FLOW
			AND AF.CREATE_TIME = PS.CREATE_TIME
			AND AF.RECORD_STATUS = 'Y'
			AND AF.REC_TYPE_ID = 'AfterEvaluation'
		) F ON F.PROCESS_FLOW = S.PROCESS_FLOW,
			RES_DOCTOR D
		WHERE
			R.RESULT_FLOW = S.SCH_RESULT_FLOW
		AND R.DOCTOR_FLOW = D.DOCTOR_FLOW
		AND R.RECORD_STATUS = 'Y'
		AND S.RECORD_STATUS = 'Y'
		AND D.RECORD_STATUS = 'Y'
		AND D.DOCTOR_STATUS_ID = '20'
		<if test="currOrgFlow != null and currOrgFlow != ''">
			AND (
				D.ORG_FLOW = #{currOrgFlow}
				OR D.ORG_FLOW IN
				(
					SELECT
						ORG_FLOW
					FROM
						RES_JOINT_ORG
					WHERE
						RECORD_STATUS = 'Y'
					AND JOINT_ORG_FLOW = #{currOrgFlow}
				)
				OR D.ORG_FLOW IN
				(
					SELECT
						JOINT_ORG_FLOW
					FROM
						RES_JOINT_ORG
					WHERE
						RECORD_STATUS = 'Y'
					AND ORG_FLOW = #{currOrgFlow}
				)
			)
		</if>
		<if test="orgFlow != null and orgFlow != ''">
			AND D.ORG_FLOW = #{orgFlow}
		</if>
		<if test="sessionNumber != null and sessionNumber != ''">
			AND D.SESSION_NUMBER = #{sessionNumber}
		</if>
		<if test="graduationYear != null and graduationYear != ''">
			AND D.GRADUATION_YEAR = #{graduationYear}
		</if>
		<if test="trainingSpeId != null and trainingSpeId != ''">
			AND D.TRAINING_SPE_ID = #{trainingSpeId}
		</if>
		<if test="doctorTypeIdList != null and doctorTypeIdList.size() > 0">
			AND D.DOCTOR_TYPE_ID IN
			<foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
				#{doctorTypeId}
			</foreach>
		</if>
		<if test="doctorCategoryId != null and doctorCategoryId != ''">
			AND D.DOCTOR_CATEGORY_ID = #{doctorCategoryId}
		</if>
		<if test="doctorName != null and doctorName != ''">
			AND D.DOCTOR_NAME LIKE CONCAT(CONCAT('%',#{doctorName}),'%')
		</if>
		<if test="doctorFlow != null and doctorFlow != ''">
			AND D.DOCTOR_FLOW = #{doctorFlow}
		</if>
		<if test="schStart != null and schStart != ''">
			AND S.SCH_END_DATE >= #{schStart}
		</if>
		<if test="schEnd != null and schEnd != ''">
			AND S.SCH_END_DATE &lt;= #{schEnd}
		</if>
        <if test="deptFlow != null and deptFlow != ''">
            AND (
              EXISTS
                (
                    SELECT 1
                    FROM SYS_USER_DEPT D
                    WHERE
                        D.RECORD_STATUS = 'Y'
                    AND D.DEPT_FLOW = R.DEPT_FLOW
                    AND D.USER_FLOW = #{kzrFlow}
                )
              OR R.DEPT_FLOW = #{deptFlow}
            )
        </if>
		ORDER BY D.DOCTOR_FLOW, S.SCH_START_DATE
	</select>

	<!-- 查询学员出科成绩试卷信息 -->
	<select id="getDoctorScoreAndPaper" parameterType="String" resultType="map">
		SELECT
			R.RESULTS_ID,
			U.USER_CODE,
			U.USER_NAME,
			R.WORD_URL
		FROM
			RES_SCORE S,
			EXAM_RESULTS R,
			RES_SCH_PROCESS_EXPRESS C,
			SYS_USER U
		WHERE
		 	S.PROCESS_FLOW = R.PROCESS_FLOW
		AND S.THEORY_SCORE = R.THEORY_SCORE
		AND S.PROCESS_FLOW = C.PROCESS_FLOW
		AND C.REC_TYPE_ID = 'AfterEvaluation'
		AND C.AUDIT_STATUS_ID = 'TeacherAuditY'
		AND C.HEAD_AUDIT_STATUS_ID = 'HeadAuditY'
		AND S.DOCTOR_FLOW = U.USER_FLOW
		AND S.RECORD_STATUS = 'Y'
		AND R.RECORD_STATUS = 'Y'
		AND C.RECORD_STATUS = 'Y'
		AND U.RECORD_STATUS = 'Y'
		AND R.RESULTS_ID IS NOT NULL
		AND S.PROCESS_FLOW = #{processFlow}
		AND R.EXAM_TIME = (
			SELECT
				MAX (EXAM_TIME)
			FROM
				EXAM_RESULTS
			WHERE
				RECORD_STATUS = 'Y'
			AND THEORY_SCORE = S.THEORY_SCORE
			AND PROCESS_FLOW = #{processFlow}
		)
	</select>
	<select id="selectDoctorFlow" parameterType="list" resultType="java.lang.String">
		select distinct doctor_Flow from RES_SCORE where score_flow in
		<foreach collection="scoreFlow"  item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<update id="updateSubmitAll" parameterType="list">
		update res_doctor
		set is_submit_id = 'Submit',is_submit_name = '已提交'
		    , check_status_id = 'Passing',check_status_name = '待审核'
			, submit_time = #{submitTime}
		where doctor_flow in 
		<foreach collection="list"  item="userFlow" open="(" separator="," close=")">
			#{userFlow}
		</foreach>
	</update>

	<update id="saveSubmitAll" parameterType="list">
		update res_doctor
		set is_submit_id = 'NotSubmit',is_submit_name = '未提交'
		, check_status_id = '',check_status_name = ''
		where doctor_flow in
		<foreach collection="list"  item="userFlow" open="(" separator="," close=")">
			#{userFlow}
		</foreach>
	</update>

	<update id="updateCheckAll" parameterType="map">
		update res_doctor
		<if test="flag != null and flag == 'Y'.toString()">
			set check_status_id = 'Passed',check_status_name = '审核通过'
		</if>
		<if test="flag != null and flag == 'N'.toString()">
			set check_status_id = 'UnPassed',check_status_name = '审核不通过'
		</if>
		<if test="checkReason != null and checkReason != ''">
			,check_reason = #{checkReason}
		</if>
        , check_time = #{checkTime}
		where doctor_flow in
		<foreach collection="list"  item="userFlow" open="(" separator="," close=")">
			#{userFlow}
		</foreach>
	</update>

	<update id="updatePowerCfg" parameterType="map">
        <!-- 审核通过 根据勾选的状态判断 -->
        <if test="flag != null and flag == 'Y'.toString()">
            update JSRES_POWER_CFG  set
                check_status_id = (case CFG_VALUE when 'Y' then 'Passed' else 'UnPassed' end),
                check_status_name = (case CFG_VALUE when 'Y' then '审核通过' else '审核不通过' end)
            where RECORD_STATUS = 'Y'
            <bind name="name" value="'%'+userFlow"/>
            and CFG_CODE like #{name}
        </if>
        <!-- 审核不通过 -->
        <if test="flag != null and flag == 'N'.toString()">
            update JSRES_POWER_CFG
            set check_status_id = 'UnPassed',check_status_name = '审核不通过'
            where RECORD_STATUS = 'Y'
            <bind name="name" value="'%'+userFlow"/>
            and CFG_CODE like #{name}
        </if>

	</update>
	
	<update id="updateAffirm" parameterType="list">
		update res_score
		set is_affirm_id = 'Y',is_affirm_name = '已确认'
		where score_flow in
		<foreach collection="list"  item="scoreFlow" open="(" separator="," close=")">
			#{scoreFlow}
		</foreach>
	</update>

	<update id="updateNotAffirm" parameterType="list">
		update res_score
		set is_affirm_id = 'N',is_affirm_name = '未确认'
		where score_flow in
		<foreach collection="list"  item="scoreFlow" open="(" separator="," close=")">
			#{scoreFlow}
		</foreach>
	</update>

	<resultMap id="resDoctorMap" type="HashMap">
		<result  property="teacherUserFlow" column="TEACHER_USER_FLOW" javaType="String"/>
		<result  property="doctorNameStr" column="DOCTOR_NAME_STR" javaType="String"/>
	</resultMap>

	<!-- 查询带教学员名单 -->
	<select id="searchSchDoctorList" resultMap="resDoctorMap">
		SELECT
			P.TEACHER_USER_FLOW,
			CONCAT (
				CONCAT (
					'[',
					wm_concat (DISTINCT RD.DOCTOR_NAME)
					),
				']'
			) AS DOCTOR_NAME_STR
		FROM
			res_doctor_sch_process P,
			res_doctor rd
		LEFT JOIN jsres_power_cfg pf ON pf.record_status = 'Y'
			AND pf.cfg_code = (
				'jsres_doctor_data_time_' || rd.doctor_flow
			)
		LEFT JOIN jsres_power_cfg pg ON pg.record_status = 'Y'
			AND pg.cfg_code = (
				'jsres_doctor_app_menu_' || rd.doctor_flow
			)
		WHERE
			P.user_flow = rd.doctor_flow
		AND P.record_status = 'Y'
		AND rd.record_status = 'Y'
		<if test="typeList!=null and typeList.size()>0">
			and rd.doctor_Type_Id in
			<foreach collection="typeList" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test="workOrgId != null and workOrgId != ''">
			AND RD.WORK_ORG_ID = #{workOrgId}
		</if>
		AND PG.CFG_VALUE = 'Y'
		AND	((P.SCH_START_DATE <![CDATA[ <= ]]> nvl(pf.power_start_time,'0000-00-00') AND P.SCH_END_DATE >= nvl(pf.power_end_time, '9999-99-99'))
		OR (P.SCH_START_DATE <![CDATA[ >= ]]> nvl(pf.power_start_time,'0000-00-00') AND P.SCH_START_DATE <![CDATA[ <= ]]> nvl(pf.power_end_time, '9999-99-99'))
		OR (P.SCH_END_DATE <![CDATA[ >= ]]> nvl(pf.power_start_time,'0000-00-00') AND P.SCH_END_DATE <![CDATA[ <= ]]> nvl(pf.power_end_time, '9999-99-99')))
		<if test="schStartDate != null and schStartDate != '' and schEndDate != null and schEndDate != ''">
			AND((P.SCH_START_DATE <![CDATA[ <= ]]> #{schStartDate} AND P.SCH_END_DATE >= #{schEndDate})
			OR (P.SCH_START_DATE <![CDATA[ >= ]]> #{schStartDate} AND P.SCH_START_DATE <![CDATA[ <= ]]>#{schEndDate})
			OR (P.SCH_END_DATE <![CDATA[ >= ]]> #{schStartDate} AND P.SCH_END_DATE <![CDATA[ <= ]]>#{schEndDate}))
		</if>
		<if test="teacherUserFlows != null and teacherUserFlows.size() > 0">
			<choose>
				<when test="teacherUserFlows.size() >= 1000">
					AND EXISTS(
						SELECT
							1
						FROM
							sys_user su
						WHERE
							su.user_flow = p.TEACHER_USER_FLOW
						AND	su.record_status = 'Y'
						AND su.IS_EXAM_TEA IS NULL
						<if test='orgFlowList != null and orgFlowList.size > 0'>
							and su.ORG_FLOW in
							<foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
						</if>
						<if test="orgFlow != null and orgFlow != ''">
							and su.org_flow = #{orgFlow}
						</if>
						AND EXISTS (
							SELECT
								1
							FROM
								sys_user_role sur
							WHERE
								sur.user_flow = su.user_flow
							AND sur.record_status = 'Y'
							<if test='roleFlow != null and roleFlow != ""'>
								and sur.ROLE_FLOW = #{roleFlow}
							</if>
						)
						AND NOT EXISTS (
							SELECT
								1
							FROM
								res_doctor rd
							WHERE
								su.user_flow = rd.doctor_flow
							AND rd.RECORD_STATUS = 'Y'
						)
						<if test="sysUser != null">
							<if test='sysUser.deptFlow != null and sysUser.deptFlow != "" '>
								and su.DEPT_FLOW = #{sysUser.deptFlow}
							</if>
							<if test='sysUser.userName != null and sysUser.userName != ""'>
								<bind name="userName" value="'%' + sysUser.userName + '%'"/>
								and su.USER_NAME like #{userName}
							</if>
						</if>
					)
				</when>
				<otherwise>
					and p.TEACHER_USER_FLOW in
					<foreach collection="teacherUserFlows" item="item" open="(" close=")" separator="," >
						#{item}
					</foreach>
				</otherwise>
			</choose>
		</if>
		GROUP BY
			P.TEACHER_USER_FLOW
	</select>
	
	<select id="searchDoctorSpe" resultType="map">
		select jds.id_no,rd.doctor_type_id
		from jsres_doctor_spe jds
		left join sys_user su on su.id_no = jds.id_no
		inner join res_doctor rd on rd.doctor_flow = su.user_flow
		where jds.record_status = 'Y'
		and su.record_status = 'Y'
		and rd.record_status = 'Y'
	</select>

	<resultMap id="sessionNumberMap" type="map">
		<result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
		<result column="COUNT_NUMBER" property="countNumber" jdbcType="VARCHAR" />
	</resultMap>
    <select id="getCountBySessionNumber" resultMap="sessionNumberMap">
        SELECT SESSION_NUMBER,COUNT(1) as COUNT_NUMBER
        FROM RES_DOCTOR
        WHERE RECORD_STATUS = 'Y'
        AND DOCTOR_FLOW IN
        <foreach collection="list"  item="userFlow" open="(" separator="," close=")">
            #{userFlow}
        </foreach>
        GROUP BY SESSION_NUMBER
        ORDER BY SESSION_NUMBER
    </select>

	<select id="searchRecruitListByOrgFlow" resultType="string">
		SELECT RD.DOCTOR_FLOW
		FROM RES_DOCTOR RD
		JOIN SYS_USER SU ON RD.DOCTOR_FLOW = SU.USER_FLOW
		LEFT JOIN (
			SELECT a.*, ROW_NUMBER() OVER (PARTITION BY doctor_flow ORDER BY create_time DESC) AS rn
			FROM RES_DOCTOR_RECRUIT a
			WHERE AUDIT_STATUS_ID = 'Passed'
			AND RECORD_STATUS = 'Y'
		) re ON re.DOCTOR_FLOW = SU.USER_FLOW
		AND rn = 1
		WHERE RD.RECORD_STATUS = 'Y'
		AND SU.RECORD_STATUS = 'Y'
		AND re.RECORD_STATUS = 'Y'
		AND re.DOCTOR_STATUS_ID != '21'
		AND RD.TRAINING_TYPE_ID = 'DoctorTrainingSpe'
		AND RD.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social')
		AND RD.ORG_FLOW = #{orgFlow}
	</select>

	<select id="getSchools" resultType="string">
		SELECT DISTINCT SCHOOL FROM RES_DOCTOR WHERE SCHOOL IS NOT NULL
	</select>
    <select id="listDoctorResult" resultType="com.pinde.core.model.SchArrangeResult">
		SELECT RESULT_FLOW,DOCTOR_FLOW,DOCTOR_NAME,STANDARD_DEPT_ID,STANDARD_DEPT_NAME,SCH_START_DATE,SCH_END_DATE,SCH_DEPT_FLOW,SCH_DEPT_NAME,SCH_MONTH,RECORD_STATUS
		FROM SCH_ARRANGE_RESULT
		WHERE RECORD_STATUS = 'Y'
		<choose>
			<when test="null != userIds and userIds.size() &gt; 0 ">
				AND DOCTOR_FLOW in
				<foreach collection="userIds" item="userId" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</when>
		    <otherwise>
				AND 1 &lt;&gt; 1
			</otherwise>
		</choose>
	</select>
    <select id="resRecCount" resultType="com.pinde.sci.excelListens.model.ResRecItem">
		SELECT count(r.REC_FLOW) COUNT_NUM,re.RESULT_FLOW RESULT_FLOW FROM RES_REC r
		LEFT JOIN RES_DOCTOR_SCH_PROCESS p on r.PROCESS_FLOW = p.PROCESS_FLOW
		LEFT JOIN SCH_ARRANGE_RESULT re on p.SCH_RESULT_FLOW = re.RESULT_FLOW
		WHERE r.RECORD_STATUS = 'Y'
		  AND p.RECORD_STATUS = 'Y'
		  <choose>
			  <when test="null != resultFlowList and resultFlowList.size() &gt;0">
				  AND re.RESULT_FLOW IN
				  <foreach collection="resultFlowList" item="id" open="(" separator="," close=")">
					  #{id}
				  </foreach>
			  </when>
		      <otherwise>
				  AND 1 &lt;&gt; 1
			  </otherwise>
		  </choose>
		GROUP BY re.RESULT_FLOW
	</select>

</mapper>