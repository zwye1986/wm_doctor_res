<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.jsres.JsresGraduationApplyExtMapper">
    <resultMap id="chargeQueryMap" type="java.util.HashMap" >
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="RECRUIT_FLOW" property="recruitFlow" jdbcType="VARCHAR" />
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="JOINT_ORG_FLOW" property="jointOrgFlow" jdbcType="VARCHAR" />
        <result column="JOINT_ORG_NAME" property="jointOrgName" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="EDUCATION_ID" property="educationId" jdbcType="VARCHAR" />
        <result column="EDUCATION_NAME" property="educationName" jdbcType="VARCHAR" />
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="CHANGE_SPE_ID" property="changeSpeId" jdbcType="VARCHAR" />
        <result column="CHANGE_SPE_NAME" property="changeSpeName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAIN_YEAR" property="trainYear" jdbcType="VARCHAR" />
        <result column="PRACTICING_SCOPE_NAME" property="practicingScopeName" jdbcType="VARCHAR" />
        <result column="MATERIAL_ID" property="qualificationMaterialId" jdbcType="VARCHAR" />
        <result column="MATERIAL_NAME" property="qualificationMaterialName" jdbcType="VARCHAR" />
        <result column="CERTIFICATE_URI" property="certificateUri" jdbcType="VARCHAR" />
        <result column="CERTIFICATE_NO" property="certificateNo" jdbcType="VARCHAR" />
        <result column="QUALIFICATION_MATERIAL_URI" property="qualificationMaterialUri" jdbcType="VARCHAR" />
        <result column="QUALIFICATION_MATERIAL_CODE" property="qualificationMaterialCode" jdbcType="VARCHAR" />
        <result column="SPECIAL_CERTIFICATION_URI" property="specialCertificationUri" jdbcType="VARCHAR" />
        <result column="IS_PASS" property="isPass" jdbcType="VARCHAR" />
        <result column="SCORE_FLOW" property="scoreFlow" jdbcType="VARCHAR" />
        <result column="AVG_COMPLETE" property="avgComplete" jdbcType="VARCHAR" />
        <result column="AVG_AUDIT" property="avgAudit" jdbcType="VARCHAR" />
        <result column="AUDIT_STATUS_ID" jdbcType="VARCHAR" property="auditStatusId" />
        <result column="AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="auditStatusName" />
        <result column="LOCAL_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="localAuditStatusId" />
        <result column="LOCAL_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="localAuditStatusName" />
        <result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason" />
        <result column="CITY_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="cityAuditStatusId" />
        <result column="CITY_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="cityAuditStatusName" />
        <result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason" />
        <result column="GLOBAL_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="globalAuditStatusId" />
        <result column="GLOBAL_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="globalAuditStatusName" />
        <result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason" />
        <result column="AUDIT_REASON" jdbcType="VARCHAR" property="auditReason" />
        <result column="RECRUIT_DATE" jdbcType="VARCHAR" property="startDate" />
        <result column="END_DATE" jdbcType="VARCHAR" property="endDate" />
        <result column="APPLY_FLOW" jdbcType="VARCHAR" property="applyFlow" />
        <result column="APPLY_YEAR" jdbcType="VARCHAR" property="applyYear" />
        <result column="ORG_CITY_ID" jdbcType="VARCHAR" property="orgCityId" />
        <result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName" />
        <result column="TEST_ID" jdbcType="VARCHAR" property="testId" />
        <result column="TEMP_DOCTOR_FLAG" property="tempDoctorFlag" jdbcType="VARCHAR" />
    </resultMap>

    <select id="chargeQueryList" resultMap="chargeQueryMap">
        SELECT RD.DOCTOR_FLOW,
            DR.RECRUIT_FLOW,
            DR.ORG_NAME,
            DR.ORG_FLOW,
            SU.USER_NAME,
            SU.EDUCATION_ID,
            SU.EDUCATION_NAME,
            DR.SPE_ID,
            DR.SPE_NAME,
            nvl(DR.CHANGE_SPE_ID,DR.SPE_ID) CHANGE_SPE_ID,
            nvl(DR.CHANGE_SPE_NAME,DR.SPE_NAME) CHANGE_SPE_NAME,
            DR.SESSION_NUMBER,
            DR.TRAIN_YEAR,
            CASE
            WHEN DR.TRAIN_YEAR='OneYear' THEN '一年'
            WHEN DR.TRAIN_YEAR='TwoYear' THEN  '两年'
            WHEN DR.TRAIN_YEAR='ThreeYear' THEN   '三年'
            ELSE ''
            END TRAIN_YEAR_NAME,
            DR.PRACTICING_SCOPE_NAME,
            DR.MATERIAL_ID,
            CASE
            WHEN DR.MATERIAL_ID = '176' THEN
            '医师执业证书'
            WHEN DR.MATERIAL_ID = '177' THEN
            '医师资格证书'
            WHEN DR.MATERIAL_ID = '178' THEN
            '已通过国家执业医师考试的成绩单'
            WHEN DR.MATERIAL_ID = '200' THEN
            '助理执业医师证书（定向大专）'
            WHEN DR.MATERIAL_ID = '201' THEN
            '已通过国家助理执业医师考试的成绩单（定向大专）'
            WHEN DR.MATERIAL_ID = '202' THEN
            '无'
            ELSE
            ''
            END MATERIAL_NAME,
            DR.CERTIFICATE_URI,
            RD.CERTIFICATE_NO,
            DR.QUALIFICATION_MATERIAL_URI,
            DR.QUALIFICATION_MATERIAL_CODE,
            DR.SPECIAL_CERTIFICATION_URI,
            CASE
            WHEN SCORE.SKILL_SCORE = '1' THEN
            '合格'
            WHEN SCORE.SKILL_SCORE = '0' THEN
            '不合格'
            ELSE
            ''
            END IS_PASS,
            SCORE.SCORE_FLOW,
            JGA.APPLY_FLOW,
            JGA.AUDIT_STATUS_ID,
            JGA.AUDIT_STATUS_NAME,
            JGA.LOCAL_AUDIT_STATUS_ID,
            JGA.LOCAL_AUDIT_STATUS_NAME,
            JGA.LOCAL_REASON,
            JGA.CITY_AUDIT_STATUS_ID,
            JGA.CITY_AUDIT_STATUS_NAME,
            JGA.CITY_REASON,
            JGA.GLOBAL_AUDIT_STATUS_ID,
            JGA.GLOBAL_AUDIT_STATUS_NAME,
            JGA.GLOBAL_REASON,
        CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON
        WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON
        WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON
        ELSE '' END AUDIT_REASON,
            JGA.APPLY_YEAR,
            NVL(DR.AVG_COMPLETE,0) AVG_COMPLETE,
            NVL(DR.AVG_AUDIT,0) AVG_AUDIT,DR.RECRUIT_DATE,
        CASE
        WHEN DR.GRADUATION_YEAR IS NOT NULL
        AND DR.RECRUIT_DATE IS NOT NULL
        AND to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))!=0
        THEN
        to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*(to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))))-1, 'yyyy-mm-dd')
        ELSE
            CASE
            WHEN DR.TRAIN_YEAR='OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12)-1, 'yyyy-mm-dd')
            WHEN DR.TRAIN_YEAR='TwoYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*2)-1, 'yyyy-mm-dd')
            WHEN DR.TRAIN_YEAR='ThreeYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*3)-1, 'yyyy-mm-dd')
            ELSE ''
            END
        END END_DATE
        FROM JSRES_GRADUATION_APPLY JGA
        left join res_doctor_recruit dr
        ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
        LEFT JOIN RES_DOCTOR RD
        ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
        INNER JOIN SYS_USER SU
        ON RD.DOCTOR_FLOW = SU.USER_FLOW
        LEFT JOIN RES_SCORE SCORE
        ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW
        AND SCORE.SCORE_TYPE_ID = 'PublicScore'
        AND SCORE.RECORD_STATUS='Y'
        WHERE RD.RECORD_STATUS = 'Y'
        AND JGA.RECORD_STATUS = 'Y'
        AND DR.RECORD_STATUS = 'Y'
        AND SU.RECORD_STATUS = 'Y'
        and DR.org_flow in(
            SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS='Y'
            <if test="org!=null">
                    <if test="org.orgProvId!=null and org.orgProvId!=''">AND ORG_PROV_ID = #{org.orgProvId}
                    </if>
                    <if test="org.orgCityId!=null and org.orgCityId!=''">
                        AND ORG_CITY_ID = #{org.orgCityId}
                    </if>
                    <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                        AND ORG_LEVEL_ID = #{org.orgLevelId}
                    </if>
                    <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                        AND ORG_TYPE_ID = #{org.orgTypeId}
                    </if>
                </if>
        )
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
            SELECT 1 FROM
            JSRES_SPE_CONTRAST_PRACTICE T
            WHERE T.RECORD_STATUS='Y'
            AND T.SPE_ID=DR.SPE_ID
            AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
            AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
            )
        </if>
        <if test="isNotEqual!=null and isNotEqual!='' and isNotEqual =='Y'.toString()">

            and ( case when dr.session_number <![CDATA[ < ]]>'2015' then              NVL((
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT
            WHERE record_status = 'Y'
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND ORG_FLOW IS NULL),
            0)),0)
            else
            NVL((CASE
            WHEN dr.cat_spe_id = 'DoctorTrainingSpe' AND
            dr.session_number >= '2015' AND
            (dr.train_year = 'OneYear' OR
            dr.train_year = 'TwoYear') AND
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow) > 0 THEN
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=sdd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=sdd.group_flow
            and t.rotation_flow=sdd.rotation_flow
            )
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow)
            ELSE
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT srd
            WHERE srd.record_status = 'Y'
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=srd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=srd.group_flow
            and t.rotation_flow=srd.rotation_flow
            )
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND srd.ORG_FLOW IS NULL),
            0)
            END),
            0)

            end )

            !=nvl( (select count(1) from sch_rotation_dept where record_status='Y' and org_flow is null
            and rotation_flow=(case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end ) and
            exists ( select 1 from sch_rotation_dept_after where
            record_status='Y'and SCH_ROTATION_DEPT_FLOW=sch_rotation_dept.record_flow and doctor_flow=dr.doctor_flow)),0)
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            AND DR.org_flow = #{orgFlow}
        </if>
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and DR.org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="speIds!=null and speIds.size>0">
            and dr.SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and dr.CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and dr.SPE_ID = #{trainingSpeId}
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and dr.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and dr.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="qualificationMaterialId!=null and qualificationMaterialId!=''">
            and JGA.MATERIAL_ID = #{qualificationMaterialId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and SCORE.SKILL_SCORE = #{passFlag}
        </if>
        <if test="completeBi!=null and completeBi!=''">
            and to_number(NVL(JGA.AVG_COMPLETE,0))   <![CDATA[<=]]> #{completeBi}
        </if>
        <if test="auditBi!=null and auditBi!=''">
            and to_number(NVL(JGA.AVG_AUDIT,0))  <![CDATA[<=]]> #{auditBi}
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and Su.USER_NAME like #{userName}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and Su.ID_NO like #{idNo}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
             AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
        </if>
        order by
            DR.SPE_ID,
            DR.SESSION_NUMBER,
            NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
    </select>

    <select id="chargeQueryApplyList" resultMap="chargeQueryMap">
        SELECT RD.DOCTOR_FLOW,JGA.TEST_ID,
        DR.RECRUIT_FLOW,
        DR.ORG_NAME,
        DR.ORG_FLOW,
        DR.JOINT_ORG_FLOW,
        DR.JOINT_ORG_NAME,
        SU.USER_NAME,
        SU.EDUCATION_ID,
        SU.EDUCATION_NAME,
        DR.SPE_ID,
        DR.SPE_NAME,
        SO.ORG_CITY_ID,
        SO.ORG_CITY_NAME,
        nvl(DR.CHANGE_SPE_ID,DR.SPE_ID) CHANGE_SPE_ID,
        nvl(DR.CHANGE_SPE_NAME,DR.SPE_NAME) CHANGE_SPE_NAME,
        DR.SESSION_NUMBER,
        DR.TRAIN_YEAR,
        JGA.GRADUATION_SCOPE_NAME PRACTICING_SCOPE_NAME,
        JGA.GRADUATION_MATERIAL_ID MATERIAL_ID,
        JGA.GRADUATION_MATERIAL_NAME MATERIAL_NAME,
        JGA.CERTIFICATE_URI,
        RD.CERTIFICATE_NO,
        JGA.GRADUATION_MATERIAL_URI QUALIFICATION_MATERIAL_URI,
        JGA.GRADUATION_MATERIAL_CODE QUALIFICATION_MATERIAL_CODE,
        JGA.SPECIAL_CERTIFICATION_URI,
        CASE
        WHEN SCORE.SKILL_SCORE = '1' THEN
        '合格'
        WHEN SCORE.SKILL_SCORE = '0' THEN
        '不合格'
        ELSE
        ''
        END IS_PASS,
        SCORE.SCORE_FLOW,
        JGA.APPLY_FLOW,
        JGA.AUDIT_STATUS_ID,
        JGA.AUDIT_STATUS_NAME,
        JGA.LOCAL_AUDIT_STATUS_ID,
        JGA.LOCAL_AUDIT_STATUS_NAME,
        JGA.LOCAL_REASON,
        JGA.CITY_AUDIT_STATUS_ID,
        JGA.CITY_AUDIT_STATUS_NAME,
        JGA.CITY_REASON,
        JGA.GLOBAL_AUDIT_STATUS_ID,
        JGA.GLOBAL_AUDIT_STATUS_NAME,
        JGA.GLOBAL_REASON,
        <!--  SS.SCH_MONTH, -->
        CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON
        WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON
        WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON
        ELSE '' END AUDIT_REASON,
        JGA.APPLY_YEAR,
        NVL(JGA.AVG_COMPLETE,0) AVG_COMPLETE,
        NVL(JGA.AVG_AUDIT,0) AVG_AUDIT,
        NVL(JGA.AVG_IN_COMPLETE,0)     AVG_IN_COMPLETE,
        NVL(JGA.AVG_OUT_COMPLETE,0)            AVG_OUT_COMPLETE,
        DR.RECRUIT_DATE,
        CASE
        WHEN DR.GRADUATION_YEAR IS NOT NULL
        AND DR.RECRUIT_DATE IS NOT NULL
        AND to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))!=0
        THEN
        to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*(to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))))-1, 'yyyy-mm-dd')
        ELSE
        CASE
        WHEN DR.TRAIN_YEAR='OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12)-1, 'yyyy-mm-dd')
        WHEN DR.TRAIN_YEAR='TwoYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*2)-1, 'yyyy-mm-dd')
        WHEN DR.TRAIN_YEAR='ThreeYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*3)-1, 'yyyy-mm-dd')
        ELSE ''
        END
        END END_DATE,
        CASE WHEN GDT.DOCTOR_FLOW IS NOT NULL THEN '是' ELSE '否' END AS TEMP_DOCTOR_FLAG
        FROM JSRES_GRADUATION_APPLY JGA
        LEFT JOIN RES_DOCTOR_RECRUIT DR
        ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
        LEFT JOIN SYS_USER U
        ON DR.DOCTOR_FLOW = U.USER_FLOW
        LEFT JOIN RES_DOCTOR RD
        ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
        LEFT JOIN SYS_ORG SO
        ON DR.ORG_FLOW = SO.ORG_FLOW
        INNER JOIN SYS_USER SU
        ON RD.DOCTOR_FLOW = SU.USER_FLOW
        LEFT JOIN RES_SCORE SCORE
        ON SCORE.RECRUIT_FLOW = DR.RECRUIT_FLOW
        AND SCORE.DOCTOR_FLOW = DR.DOCTOR_FLOW
        AND SCORE.SCORE_TYPE_ID = 'PublicScore'
        AND SCORE.RECORD_STATUS='Y'
        LEFT JOIN GRADUATION_DOCTOR_TEMP GDT
        ON GDT.DOCTOR_FLOW = RD.DOCTOR_FLOW
        AND GDT.RECORD_STATUS = 'Y'
        AND GDT.EXAM_TYPE = 'firstExam'
<!--         LEFT JOIN (
             SELECT R.DOCTOR_FLOW, CASE  WHEN SUM (R.SCH_MONTH) > 33 THEN 33 ELSE SUM (R.SCH_MONTH) END AS SCH_MONTH
             FROM SCH_ARRANGE_RESULT R
             WHERE R.RECORD_STATUS = 'Y'
             AND EXISTS (
                 SELECT 1 FROM SCH_ROTATION_DEPT D
                 WHERE D.RECORD_STATUS = 'Y'
                 AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
                 AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
                 AND D.ORG_FLOW IS NULL
             )
             GROUP BY R.DOCTOR_FLOW
         ) SS ON SS.DOCTOR_FLOW = RD.DOCTOR_FLOW -->
        WHERE RD.RECORD_STATUS = 'Y'
        AND JGA.RECORD_STATUS = 'Y'
        AND DR.RECORD_STATUS = 'Y'
        AND SU.RECORD_STATUS = 'Y'
        <if test="isPostpone != null and isPostpone != ''">
            <if test="isPostpone == 'Y'.toString()">
                AND EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
            <if test="isPostpone == 'N'.toString()">
                AND NOT EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
        </if>
        <!--and DR.org_flow in(
            SELECT ORG_FLOW
            FROM  SYS_ORG
            WHERE  SYS_ORG.RECORD_STATUS='Y'
            <if test="org!=null">
                <if test="org.orgProvId!=null and org.orgProvId!=''">
                    AND ORG_PROV_ID = #{org.orgProvId}
                </if>
                <if test="org.orgCityId!=null and org.orgCityId!=''">
                    AND ORG_CITY_ID = #{org.orgCityId}
                </if>
                <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                    AND ORG_LEVEL_ID = #{org.orgLevelId}
                </if>
                <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                    AND ORG_TYPE_ID = #{org.orgTypeId}
                </if>
            </if>
        )-->
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
            SELECT 1 FROM
            JSRES_SPE_CONTRAST_PRACTICE T
            WHERE T.RECORD_STATUS='Y'
            AND T.SPE_ID=DR.SPE_ID
            AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
            AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
            )
        </if>
        <if test="isNotEqual!=null and isNotEqual!='' and isNotEqual =='Y'.toString()">

            and ( case when dr.session_number <![CDATA[ < ]]>'2015' then              NVL((
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT
            WHERE record_status = 'Y'
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND ORG_FLOW IS NULL),
            0)),0)
            else
            NVL((CASE
            WHEN dr.cat_spe_id = 'DoctorTrainingSpe' AND
            dr.session_number >= '2015' AND
            (dr.train_year = 'OneYear' OR
            dr.train_year = 'TwoYear') AND
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow) > 0 THEN
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=sdd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=sdd.group_flow
            and t.rotation_flow=sdd.rotation_flow
            )
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow)
            ELSE
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT srd
            WHERE srd.record_status = 'Y'
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=srd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=srd.group_flow
            and t.rotation_flow=srd.rotation_flow
            )
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND srd.ORG_FLOW IS NULL),
            0)
            END),
            0)

            end )

            !=nvl( (select count(1) from sch_rotation_dept where record_status='Y' and org_flow is null
            and rotation_flow=(case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end ) and
            exists ( select 1 from sch_rotation_dept_after where
            record_status='Y'and SCH_ROTATION_DEPT_FLOW=sch_rotation_dept.record_flow and doctor_flow=dr.doctor_flow)),0)
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            AND DR.org_flow = #{orgFlow}
        </if>
        <if test="jointOrgFlow!=null and jointOrgFlow!=''">
            AND DR.joint_org_flow = #{jointOrgFlow}
        </if>
        <if test="jointOrgFlows!=null and jointOrgFlows.size>0">
            and DR.org_flow in
            <foreach collection="jointOrgFlows" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and DR.org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="speIds!=null and speIds.size>0">
            and dr.SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and dr.CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and dr.SPE_ID = #{trainingSpeId}
        </if>
        <if test="sessionNumbers!=null and sessionNumbers.size>0">
            and dr.SESSION_NUMBER in
            <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and dr.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and dr.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="trainYear!=null and trainYear!=''">
            and dr.TRAIN_YEAR = #{trainYear}
        </if>
        <if test="qualificationMaterialId!=null and qualificationMaterialId!=''">
            and JGA.GRADUATION_MATERIAL_ID = #{qualificationMaterialId}
        </if>
        <if test="graduationMaterialName !=null and graduationMaterialName !=''">
            and JGA.graduation_Material_Name = #{graduationMaterialName}
        </if>
        <if test="testId!=null and testId!=''">
            and JGA.TEST_ID = #{testId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and SCORE.SKILL_SCORE = #{passFlag}
        </if>
        <if test="completeBi!=null and completeBi!=''">
            and to_number(NVL(JGA.AVG_COMPLETE,0))   <![CDATA[<=]]> #{completeBi}
        </if>
        <if test="auditBi!=null and auditBi!=''">
            and to_number(NVL(JGA.AVG_AUDIT,0))  <![CDATA[<=]]> #{auditBi}
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and Su.USER_NAME like #{userName}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and Su.ID_NO like #{idNo}
        </if>
        <if test="educationId!=null and educationId!=''">
            and Su.EDUCATION_ID = #{educationId}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
            <if test="auditStatusId == 'Wait'">
                AND JGA.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
            </if>
            <if test="auditStatusId != 'Wait'">
                AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
            </if>
        </if>
        <!--<if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'global'.toString()">-->
            <!--AND JGA.AUDIT_STATUS_ID != 'WaitGlobalPass'-->
        <!--</if>-->
        <if test="org != null">
            <if test="org.orgProvId != null and org.orgProvId != ''">
                AND SO.ORG_PROV_ID = #{org.orgProvId}
            </if>
            <if test="org.orgCityId != null and org.orgCityId != ''">
                AND SO.ORG_CITY_ID = #{org.orgCityId}
            </if>
            <if test="org.orgLevelId != null and org.orgLevelId != ''">
                AND SO.ORG_LEVEL_ID = #{org.orgLevelId}
            </if>
            <if test="org.orgTypeId != null and org.orgTypeId != ''">
                AND SO.ORG_TYPE_ID = #{org.orgTypeId}
            </if>
        </if>
        <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'charge'.toString()">
            AND JGA.AUDIT_STATUS_ID != 'WaitChargePass'
        </if>
        <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'local'.toString()">
            AND JGA.AUDIT_STATUS_ID != 'Auditing'
        </if>
        <if test="applyYear!=null and applyYear!=''">
         AND JGA.APPLY_YEAR = #{applyYear}
        </if>
        <if test="schMonthSearch!=null and schMonthSearch!=''">
            AND RD.DOCTOR_FLOW IN (
                SELECT DOCTOR_FLOW FROM (
                    SELECT R.DOCTOR_FLOW, CASE WHEN SUM(R.SCH_MONTH) > 33 THEN 33 ELSE SUM(R.SCH_MONTH) END AS SCH_MONTH
                    FROM SCH_ARRANGE_RESULT R
                    WHERE R.RECORD_STATUS = 'Y'
                    AND EXISTS (SELECT 1
                        FROM SCH_ROTATION_DEPT D
                        WHERE D.RECORD_STATUS = 'Y'
                        AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
                        AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
                        AND D.ORG_FLOW IS NULL)
                    GROUP BY R.DOCTOR_FLOW
                ) SS
                WHERE 1 = 1
                <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
                    and to_number(ss.sch_month) > #{schMonth}
                </if>
                <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
                    and to_number(ss.sch_month) = #{schMonth}
                </if>
                <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
                    and to_number(ss.sch_month) <![CDATA[<]]> #{schMonth}
                </if>
            )
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
            and exists (
                select 1 from res_doctor_recruit
                where record_status = 'Y'
                and prove_file_url is not null
                and recruit_flow = jga.recruit_flow
            )
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
            and exists (
                select 1 from res_doctor_recruit
                where record_status = 'Y'
                and prove_file_url is null
                and recruit_flow = jga.recruit_flow
            )
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
            and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and doctor_flow = rd.doctor_flow
                and image_count != 0
            )
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
            and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and doctor_flow = rd.doctor_flow
                and image_count = 0
            )
        </if>
        <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
            <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and image_all_count != 0
                    and doctor_flow = rd.doctor_flow
                    and to_number(avg_image_count) > #{AfterEvaluationScale}
                )
            </if>
            <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and image_all_count != 0
                and doctor_flow = rd.doctor_flow
                and to_number(avg_image_count) = #{AfterEvaluationScale}
                )
            </if>
            <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and image_all_count != 0
                and doctor_flow = rd.doctor_flow
                and to_number(avg_image_count) <![CDATA[<]]> #{AfterEvaluationScale}
                )
            </if>
        </if>
        <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
            and exists (
                select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>
        <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
            and not exists (
                select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>
        <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
            <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count > data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count > data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count <![CDATA[<]]> data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
        </if>
        <if test="avgAuditSearch!=null and avgAuditSearch!=''">
            <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JGA.avg_audit) > #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JGA.avg_audit) = #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
                and (to_number(JGA.avg_audit) <![CDATA[<]]> #{avgAudit} or jga.avg_audit is null)
            </if>
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
            and exists (
                select
                   1
                from Pub_User_Resume
                where record_status = 'Y'
                and user_flow = dr.doctor_flow
                and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') = 'Y'
            )
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
            and not exists (
                select 1 from Pub_User_Resume
                where record_status = 'Y'
                and user_flow = dr.doctor_flow
                and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') != 'Y'
            )
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='Y'.toString()">
            and exists (
                select 1 from Pub_User_Resume
                where record_status = 'Y'
                and user_flow = dr.doctor_flow
                and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is not null
            )
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='N'.toString()">
            and not exists (
                select 1 from Pub_User_Resume
                where record_status = 'Y'
                and user_flow = dr.doctor_flow
                and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is null
            )
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
            and exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is not null
            )
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
            and not exists (
                select 1 from Pub_User_Resume
                where record_status = 'Y'
                and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is null
            )
        </if>
        <if test="isPostpone != null and isPostpone != ''">
            <if test="isPostpone == 'Y'.toString()">
                AND EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
            <if test="isPostpone == 'N'.toString()">
                AND NOT EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
        </if>
        <if test="tempDoctorFlag != null and tempDoctorFlag != ''">
            <if test="tempDoctorFlag == 'Y'.toString()">
                AND GDT.DOCTOR_FLOW IS NOT NULL
            </if>
            <if test="tempDoctorFlag == 'N'.toString()">
                AND GDT.DOCTOR_FLOW IS NULL
            </if>
        </if>
        order by
        NLSSORT(dr.org_name,'NLS_SORT = SCHINESE_PINYIN_M'),
        DR.SPE_ID,
        NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),
        DR.SESSION_NUMBER
    </select>

    <select id="chargeQueryApplyList2" resultMap="chargeQueryMap">
        SELECT RD.DOCTOR_FLOW,JGA.TEST_ID,
        DR.RECRUIT_FLOW,
        DR.ORG_NAME,
        DR.ORG_FLOW,
        DR.JOINT_ORG_NAME,
        SU.USER_NAME,
        SU.EDUCATION_ID,
        SU.EDUCATION_NAME,
        DR.SPE_ID,
        DR.SPE_NAME,
        SO.ORG_CITY_ID,
        SO.ORG_CITY_NAME,
        nvl(DR.CHANGE_SPE_ID,DR.SPE_ID) CHANGE_SPE_ID,
        nvl(DR.CHANGE_SPE_NAME,DR.SPE_NAME) CHANGE_SPE_NAME,
        DR.SESSION_NUMBER,
        DR.TRAIN_YEAR,
        JGA.GRADUATION_SCOPE_NAME PRACTICING_SCOPE_NAME,
        JGA.GRADUATION_MATERIAL_ID MATERIAL_ID,
        JGA.GRADUATION_MATERIAL_NAME MATERIAL_NAME,
        JGA.CERTIFICATE_URI,
        RD.CERTIFICATE_NO,
        JGA.GRADUATION_MATERIAL_URI QUALIFICATION_MATERIAL_URI,
        JGA.GRADUATION_MATERIAL_CODE QUALIFICATION_MATERIAL_CODE,
        JGA.SPECIAL_CERTIFICATION_URI,
        CASE
        WHEN SCORE.SKILL_SCORE = '1' THEN
        '合格'
        WHEN SCORE.SKILL_SCORE = '0' THEN
        '不合格'
        ELSE
        ''
        END IS_PASS,
        SCORE.SCORE_FLOW,
        JGA.APPLY_FLOW,
        JGA.AUDIT_STATUS_ID,
        JGA.AUDIT_STATUS_NAME,
        JGA.LOCAL_AUDIT_STATUS_ID,
        JGA.LOCAL_AUDIT_STATUS_NAME,
        JGA.LOCAL_REASON,
        JGA.CITY_AUDIT_STATUS_ID,
        JGA.CITY_AUDIT_STATUS_NAME,
        JGA.CITY_REASON,
        JGA.GLOBAL_AUDIT_STATUS_ID,
        JGA.GLOBAL_AUDIT_STATUS_NAME,
        JGA.GLOBAL_REASON,
        <!--  SS.SCH_MONTH, -->
        CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON
        WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON
        WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON
        ELSE '' END AUDIT_REASON,
        JGA.APPLY_YEAR,
        NVL(JGA.AVG_COMPLETE,0) AVG_COMPLETE,
        NVL(JGA.AVG_AUDIT,0) AVG_AUDIT,
        NVL(JGA.AVG_IN_COMPLETE,0)     AVG_IN_COMPLETE,
        NVL(JGA.AVG_OUT_COMPLETE,0)            AVG_OUT_COMPLETE,
        DR.RECRUIT_DATE,
        CASE
        WHEN DR.GRADUATION_YEAR IS NOT NULL
        AND DR.RECRUIT_DATE IS NOT NULL
        AND to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))!=0
        THEN
        to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*(to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))))-1, 'yyyy-mm-dd')
        ELSE
        CASE
        WHEN DR.TRAIN_YEAR='OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12)-1, 'yyyy-mm-dd')
        WHEN DR.TRAIN_YEAR='TwoYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*2)-1, 'yyyy-mm-dd')
        WHEN DR.TRAIN_YEAR='ThreeYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*3)-1, 'yyyy-mm-dd')
        ELSE ''
        END
        END END_DATE,
        CASE WHEN GDT.DOCTOR_FLOW IS NOT NULL THEN '是' ELSE '否' END AS TEMP_DOCTOR_FLAG
        FROM JSRES_GRADUATION_APPLY JGA
        LEFT JOIN RES_DOCTOR_RECRUIT DR
        ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
        LEFT JOIN SYS_USER U
        ON DR.DOCTOR_FLOW = U.USER_FLOW
        LEFT JOIN RES_DOCTOR RD
        ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
        LEFT JOIN SYS_ORG SO
        ON DR.ORG_FLOW = SO.ORG_FLOW
        INNER JOIN SYS_USER SU
        ON RD.DOCTOR_FLOW = SU.USER_FLOW
        LEFT JOIN RES_SCORE SCORE
        ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW
        AND SCORE.SCORE_TYPE_ID = 'PublicScore'
        AND SCORE.RECORD_STATUS='Y'
        LEFT JOIN GRADUATION_DOCTOR_TEMP GDT
        ON GDT.DOCTOR_FLOW = RD.DOCTOR_FLOW
        AND GDT.RECORD_STATUS = 'Y'
        AND GDT.EXAM_TYPE = 'firstExam'
        <!--         LEFT JOIN (
                     SELECT R.DOCTOR_FLOW, CASE  WHEN SUM (R.SCH_MONTH) > 33 THEN 33 ELSE SUM (R.SCH_MONTH) END AS SCH_MONTH
                     FROM SCH_ARRANGE_RESULT R
                     WHERE R.RECORD_STATUS = 'Y'
                     AND EXISTS (
                         SELECT 1 FROM SCH_ROTATION_DEPT D
                         WHERE D.RECORD_STATUS = 'Y'
                         AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
                         AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
                         AND D.ORG_FLOW IS NULL
                     )
                     GROUP BY R.DOCTOR_FLOW
                 ) SS ON SS.DOCTOR_FLOW = RD.DOCTOR_FLOW -->
        WHERE RD.RECORD_STATUS = 'Y'
        AND JGA.RECORD_STATUS = 'Y'
        AND DR.RECORD_STATUS = 'Y'
        AND SU.RECORD_STATUS = 'Y'
        <if test="org!=null">
            <if test="org.orgProvId!=null and org.orgProvId!=''">
                AND SO.ORG_PROV_ID = #{org.orgProvId}
            </if>
            <if test="org.orgCityId!=null and org.orgCityId!=''">
                AND SO.ORG_CITY_ID = #{org.orgCityId}
            </if>
            <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                AND SO.ORG_LEVEL_ID = #{org.orgLevelId}
            </if>
            <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                AND SO.ORG_TYPE_ID = #{org.orgTypeId}
            </if>
        </if>
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
            SELECT 1 FROM
            JSRES_SPE_CONTRAST_PRACTICE T
            WHERE T.RECORD_STATUS='Y'
            AND T.SPE_ID=DR.SPE_ID
            AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
            AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
            )
        </if>
        <if test="isNotEqual!=null and isNotEqual!='' and isNotEqual =='Y'.toString()">

            and ( case when dr.session_number <![CDATA[ < ]]>'2015' then              NVL((
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT
            WHERE record_status = 'Y'
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND ORG_FLOW IS NULL),
            0)),0)
            else
            NVL((CASE
            WHEN dr.cat_spe_id = 'DoctorTrainingSpe' AND
            dr.session_number >= '2015' AND
            (dr.train_year = 'OneYear' OR
            dr.train_year = 'TwoYear') AND
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow) > 0 THEN
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=sdd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=sdd.group_flow
            and t.rotation_flow=sdd.rotation_flow
            )
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow)
            ELSE
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT srd
            WHERE srd.record_status = 'Y'
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=srd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=srd.group_flow
            and t.rotation_flow=srd.rotation_flow
            )
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND srd.ORG_FLOW IS NULL),
            0)
            END),
            0)

            end )

            !=nvl( (select count(1) from sch_rotation_dept where record_status='Y' and org_flow is null
            and rotation_flow=(case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end ) and
            exists ( select 1 from sch_rotation_dept_after where
            record_status='Y'and SCH_ROTATION_DEPT_FLOW=sch_rotation_dept.record_flow and doctor_flow=dr.doctor_flow)),0)
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            AND DR.org_flow = #{orgFlow}
        </if>
        <if test="jointOrgFlow!=null and jointOrgFlow!='' and jointOrgFlow != 'isNull'.toString()">
            AND DR.joint_org_flow = #{jointOrgFlow}
        </if>
        <if test="jointOrgFlow!=null and jointOrgFlow!='' and jointOrgFlow == 'isNull'.toString()">
            AND DR.joint_org_flow is null
        </if>
        <!--<if test="orgFlowList!=null and orgFlowList.size>0 and isJointOrg == 'Y'.toString()">
            and DR.joint_org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>-->
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and DR.org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <!-- <if test="jointOrgFlowList!=null and jointOrgFlowList.size>0 and isJointOrg == 'N'.toString()">
            and DR.doctor_flow not in(
                select doctor_flow
                from res_doctor_recruit
                where record_status = 'Y'
                and DR.org_flow in
                <foreach collection="jointOrgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
                and cat_spe_id = 'AssiGeneral'
            )
        </if> -->
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="speIds!=null and speIds.size>0">
            and dr.SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and dr.CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and dr.SPE_ID = #{trainingSpeId}
        </if>
        <if test="sessionNumbers!=null and sessionNumbers.size>0">
            and dr.SESSION_NUMBER in
            <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and dr.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and dr.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="trainYear!=null and trainYear!=''">
            and dr.TRAIN_YEAR = #{trainYear}
        </if>
        <if test="qualificationMaterialId!=null and qualificationMaterialId!=''">
            and JGA.GRADUATION_MATERIAL_ID = #{qualificationMaterialId}
        </if>
        <if test="graduationMaterialName !=null and graduationMaterialName !=''">
            and JGA.graduation_Material_Name = #{graduationMaterialName}
        </if>
        <if test="testId!=null and testId!=''">
            and JGA.TEST_ID = #{testId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and SCORE.SKILL_SCORE = #{passFlag}
        </if>
        <if test="completeBi!=null and completeBi!=''">
            and to_number(NVL(JGA.AVG_COMPLETE,0))   <![CDATA[<=]]> #{completeBi}
        </if>
        <if test="auditBi!=null and auditBi!=''">
            and to_number(NVL(JGA.AVG_AUDIT,0))  <![CDATA[<=]]> #{auditBi}
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and Su.USER_NAME like #{userName}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and Su.ID_NO like #{idNo}
        </if>
        <if test="educationId!=null and educationId!=''">
            and Su.EDUCATION_ID = #{educationId}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
            <!--<if test="auditStatusId == 'Wait'">-->
                <!--AND JGA.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')-->
            <!--</if>-->
            <!--<if test="auditStatusId != 'Wait'">-->
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'DoctorTrainingSpe'.toString()">
                <if test="auditStatusId == 'Auditing'.toString()">
                    AND JGA.AUDIT_STATUS_ID = 'JointAuditing'
                </if>
                <if test="auditStatusId != 'Auditing'.toString()">
                    AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
                </if>
            </if>
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'AssiGeneral'.toString()">
                AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
            </if>
            <if test="isJointOrg == 'N'.toString()">
                    AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
            </if>
            <!--</if>-->
        </if>
        <if test="(tabTag == 'FristWait'.toString() or tabTag == 'FristWait2'.toString()) and roleFlag == 'local'">
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'DoctorTrainingSpe'.toString()">
                AND JGA.AUDIT_STATUS_ID = 'JointAuditing'
            </if>
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'AssiGeneral'.toString()">
                AND JGA.AUDIT_STATUS_ID = 'Auditing'
            </if>
            <if test="isJointOrg == 'N'.toString()">
                AND JGA.AUDIT_STATUS_ID = 'Auditing'
            </if>
        </if>
        <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'local'">
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'DoctorTrainingSpe'.toString()">
                AND JGA.AUDIT_STATUS_ID != 'JointAuditing'
            </if>
            <if test="isJointOrg == 'Y'.toString() and trainingTypeId == 'AssiGeneral'.toString()">
                AND JGA.AUDIT_STATUS_ID != 'Auditing'
            </if>
            <if test="isJointOrg == 'N'.toString()">
                AND JGA.AUDIT_STATUS_ID != 'Auditing'
            </if>
        </if>
        <if test="applyYear!=null and applyYear!=''">
            AND JGA.APPLY_YEAR = #{applyYear}
        </if>
        <if test="schMonthSearch!=null and schMonthSearch!=''">
            AND RD.DOCTOR_FLOW IN (
            SELECT DOCTOR_FLOW FROM (
            SELECT R.DOCTOR_FLOW, CASE WHEN SUM(R.SCH_MONTH) > 33 THEN 33 ELSE SUM(R.SCH_MONTH) END AS SCH_MONTH
            FROM SCH_ARRANGE_RESULT R
            WHERE R.RECORD_STATUS = 'Y'
            AND EXISTS (SELECT 1
            FROM SCH_ROTATION_DEPT D
            WHERE D.RECORD_STATUS = 'Y'
            AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
            AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
            AND D.ORG_FLOW IS NULL)
            GROUP BY R.DOCTOR_FLOW
            ) SS
            WHERE 1 = 1
            <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(ss.sch_month) > #{schMonth}
            </if>
            <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
                and to_number(ss.sch_month) = #{schMonth}
            </if>
            <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(ss.sch_month) <![CDATA[<]]> #{schMonth}
            </if>
            )
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
            and exists (
            select 1 from res_doctor_recruit
            where record_status = 'Y'
            and prove_file_url is not null
            and recruit_flow = jga.recruit_flow
            )
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
            and exists (
            select 1 from res_doctor_recruit
            where record_status = 'Y'
            and prove_file_url is null
            and recruit_flow = jga.recruit_flow
            )
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
            and exists (
            select 1 from jsres_doctor_graduation_info
            where record_status = 'Y'
            and doctor_flow = rd.doctor_flow
            and image_count != 0
            )
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
            and exists (
            select 1 from jsres_doctor_graduation_info
            where record_status = 'Y'
            and doctor_flow = rd.doctor_flow
            and image_count = 0
            )
        </if>
        <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
            <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and image_all_count != 0
                and doctor_flow = rd.doctor_flow
                and to_number(avg_image_count) > #{AfterEvaluationScale}
                )
            </if>
            <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and image_all_count != 0
                and doctor_flow = rd.doctor_flow
                and to_number(avg_image_count) = #{AfterEvaluationScale}
                )
            </if>
            <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                select 1 from jsres_doctor_graduation_info
                where record_status = 'Y'
                and image_all_count != 0
                and doctor_flow = rd.doctor_flow
                and to_number(avg_image_count) <![CDATA[<]]> #{AfterEvaluationScale}
                )
            </if>
        </if>
        <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
            and exists (
            select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>
        <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
            and not exists (
            select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>
        <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
            <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count > data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count > data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count = data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and data_All_Count != 0
                    and doctor_flow = rd.doctor_flow
                    and data_Count <![CDATA[<]]> data_All_Count * ${avgComplete}/100
                    and LENGTH(data_time) = 8
                    )
                </if>
            </if>
        </if>
        <if test="avgAuditSearch!=null and avgAuditSearch!=''">
            <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JGA.avg_audit) > #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JGA.avg_audit) = #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
                and (to_number(JGA.avg_audit) <![CDATA[<]]> #{avgAudit} or jga.avg_audit is null)
            </if>
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
            and exists (
            select
            1
            from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') = 'Y'
            )
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
            and not exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') != 'Y'
            )
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='Y'.toString()">
            and exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is not null
            )
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='N'.toString()">
            and not exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is null
            )
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
            and exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is not null
            )
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
            and not exists (
            select 1 from Pub_User_Resume
            where record_status = 'Y'
            and user_flow = dr.doctor_flow
            and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is null
            )
        </if>
        <if test="isPostpone != null and isPostpone != ''">
            <if test="isPostpone == 'Y'.toString()">
                AND EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
            <if test="isPostpone == 'N'.toString()">
                AND NOT EXISTS (SELECT 1
                FROM RES_DOCOTR_DELAY_TETURN T
                WHERE T.RECORD_STATUS = 'Y'
                AND T.TYPE_ID = 'Delay'
                AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
            </if>
        </if>
        <if test="tempDoctorFlag != null and tempDoctorFlag != ''">
            <if test="tempDoctorFlag == 'Y'.toString()">
                AND GDT.DOCTOR_FLOW IS NOT NULL
            </if>
            <if test="tempDoctorFlag == 'N'.toString()">
                AND GDT.DOCTOR_FLOW IS NULL
            </if>
        </if>
        order by
        NLSSORT(dr.org_name,'NLS_SORT = SCHINESE_PINYIN_M'),
        DR.SPE_ID,
        NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),
        DR.SESSION_NUMBER
    </select>

    <select id="queryGraduationInfoList" parameterType="map" resultMap="com.pinde.core.common.sci.dao.JsresGraduationInfoMapper.BaseResultMap">
        SELECT JG.INFO_FLOW, JG.RECRUIT_FLOW, JG.APPLY_FLOW, JG.DOCTOR_FLOW, JG.TEST_ID, JG.SCORE_FLOW, JG.ORG_FLOW,
        JG.AUDIT_STATUS_ID, JG.AUDIT_STATUS_NAME, JG.DOCTOR_NAME, JG.ORG_CITY_ID, JG.ORG_CITY_NAME, JG.ORG_NAME,
        JG.SPE_ID, JG.SPE_NAME, JG.CHANGE_SPE_ID, JG.CHANGE_SPE_NAME, JG.SESSION_NUMBER, JG.TRAIN_YEAR, JG.START_DATE,
        JG.END_DATE, JG.EDUCATION_ID, JG.EDUCATION_NAME, JG.CERTIFICATE_NO, JG.CERTIFICATE_URL, JG.MATERIAL_NAME,
        JG.QUALIFICATION_MATERIAL_URL, JG.QUALIFICATION_MATERIAL_CODE, JG.PRACTICING_SCOPE_NAME, JG.PRACTICING_CATEGORY_CODE,
        JG.PRACTICING_CATEGORY_URL, JG.SPECIAL_CERTIFICATION_URL, JG.IS_PASS, JG.LOCAL_AUDIT_STATUS_ID,
        JG.LOCAL_AUDIT_STATUS_NAME, JG.LOCAL_REASON, JG.CITY_AUDIT_STATUS_ID, JG.CITY_AUDIT_STATUS_NAME,
        JG.CITY_REASON, JG.GLOBAL_AUDIT_STATUS_ID, JG.GLOBAL_AUDIT_STATUS_NAME, JG.GLOBAL_REASON, JG.AUDIT_REASON,
        JG.APPLY_YEAR, JG.AVG_COMPLETE, JG.AVG_AUDIT, JG.AVG_IN_COMPLETE, JG.AVG_OUT_COMPLETE, JG.SCH_MONTH,
        JG.PROVE_FILE_URL, JG.DOCTOR_TYPE_ID, JG.TRAINING_TYPE_ID, JG.GRADUATION_YEAR, JG.ORG_PROV_ID, JG.ORG_LEVEL_ID,
        JG.ORG_TYPE_ID, JG.GRADUATION_CATEGORY_ID, JG.GRADUATION_SCOPE_ID, JG.SKILL_SCORE, JG.ID_NO, JG.RECORD_STATUS,
        JG.CREATE_USER_FLOW, JG.CREATE_TIME, JG.MIDIFY_USER_FLOW, JG.MODIFY_TIME,nvl(aa.imageCount,0) imageCount, nvl(bb.allCount,0) allCount,
        nvl(aa.imageCount,0)/nvl(bb.allCount,1)*100 as avgCount,  nvl(dd.dataCount,0) dataCount, nvl(ee.dataAllCount,0) dataAllCount,
        nvl(dd.dataCount,0)/nvl(ee.dataAllCount,1)*100 as avgDataCount,dd.maxTime, dd.minTime
        FROM JSRES_GRADUATION_INFO JG

        LEFT JOIN (
            SELECT
            oper_user_flow,count(1) AS imageCount
            FROM
            RES_SCH_PROCESS_EXPRESS
            WHERE
            rec_type_id = 'AfterSummary'
            AND record_status = 'Y'
            and rec_content like '%imageUrl%'
            group by oper_user_flow
        ) aa on aa.oper_user_flow = jg.doctor_flow
        left join (
            select
            rdsp.user_flow,rdsp.org_flow,count(rdsp.user_flow) as allCount
            from
            res_doctor_sch_process rdsp
            where
            rdsp.record_status = 'Y'
            group by user_flow,org_flow
        ) bb on bb.user_flow = jg.doctor_flow
        and bb.org_flow = jg.org_flow
        left join (
            SELECT oper_user_flow,count(1) as dataCount,max(create_time) maxTime,min(create_time) minTime
            FROM   res_rec
            where record_status = 'Y'
            <if test="completeTime != null and completeTime!=''">
                <bind name="completeTime" value="completeTime+'%'"/>
                and create_time like #{completeTime}
            </if>
            and rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
            group by oper_user_flow
        )dd on dd.oper_user_flow = jg.doctor_Flow
        left join (
            SELECT srdr.rotation_flow, sum(srdr.req_num) as dataAllCount
            FROM  Sch_Rotation_Dept_Req srdr
            where srdr.record_status = 'Y'
            group by srdr.rotation_flow
        ) ee on ee.rotation_flow = jg.rotation_flow
        WHERE JG.RECORD_STATUS = 'Y'
        <if test="orgFlow!=null and orgFlow!=''">
            AND org_flow = #{orgFlow}
        </if>
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="speIds!=null and speIds.size>0">
            and SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and SPE_ID = #{trainingSpeId}
        </if>
        <if test="sessionNumbers!=null and sessionNumbers.size>0">
            and SESSION_NUMBER in
            <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="trainYear!=null and trainYear!=''">
            and TRAIN_YEAR = #{trainYear}
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
            AND QUALIFICATION_MATERIAL_URL IS NOT NULL AND QUALIFICATION_MATERIAL_CODE IS NOT NULL
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
            AND QUALIFICATION_MATERIAL_URL IS NULL and QUALIFICATION_MATERIAL_CODE IS NULL
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' ">
            and QUALIFICATION_MATERIAL_CODE = #{qualificationMaterialCode}
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
            and QUALIFICATION_MATERIAL_URL IS NOT NULL
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
            and QUALIFICATION_MATERIAL_URL IS NULL
        </if>

        <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'Y'.toString() == practicingCategoryCode">
            and PRACTICING_CATEGORY_CODE IS NOT NULL
        </if>
        <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'N'.toString() == practicingCategoryCode">
            and PRACTICING_CATEGORY_CODE IS NULL
        </if>
        <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'Y'.toString() == practicingCategoryUrL">
            and PRACTICING_CATEGORY_URL IS NOT NULL
        </if>
        <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'N'.toString() == practicingCategoryUrL">
            and PRACTICING_CATEGORY_URL IS NULL
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
            and imageCount IS NOT NULL
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
            and imageCount IS NULL
        </if>
        <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
            <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and to_number(avgCount) > #{AfterEvaluationScale}
            </if>
            <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and to_number(avgCount) = #{AfterEvaluationScale}
            </if>
            <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and to_number(avgCount) <![CDATA[<]]> #{AfterEvaluationScale}
            </if>
        </if>

        <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
            and PROVE_FILE_URL IS NOT NULL
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
            and PROVE_FILE_URL IS NULL
        </if>

        <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
            and PF.FILE_FLOW IS NOT NULL
        </if>
        <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
            and PF.FILE_FLOW IS NULL
        </if>

        <if test="graduationMaterialName !=null and graduationMaterialName !=''">
            and Material_Name = #{graduationMaterialName}
        </if>
        <if test="testId!=null and testId!=''">
            and TEST_ID = #{testId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and SKILL_SCORE = #{passFlag}
        </if>
        <if test="schMonthSearch!=null and schMonthSearch!=''">
            <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(sch_month) > #{schMonth}
            </if>
            <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
                and to_number(sch_month) = #{schMonth}
            </if>
            <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(sch_month) <![CDATA[<]]> #{schMonth}
            </if>
        </if>
        <if test="skillScoreSearch!=null and skillScoreSearch!=''">
            <if test="skillScoreSearch == 'GreaterThan'.toString() and skillScore !=null and skillScore !=''">
                and to_number(skill_score) > #{skillScore}
            </if>
            <if test="skillScoreSearch == 'Equal'.toString() and skillScore !=null and skillScore !=''">
                and to_number(skill_score) = #{skillScore}
            </if>
            <if test="skillScoreSearch == 'LessThan'.toString() and skillScore !=null and skillScore !=''">
                and to_number(skill_score) <![CDATA[<]]> #{skillScore}
            </if>
        </if>
        <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
            <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
                and nvl(dataCount,0) > dataAllCount * ${avgComplete}/100
            </if>
            <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
                and nvl(dataCount,0) = dataAllCount * ${avgComplete}/100
            </if>
            <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
                and nvl(dataCount,0) <![CDATA[<]]> dataAllCount * ${avgComplete}/100
            </if>
        </if>
        <if test="avgAuditSearch!=null and avgAuditSearch!=''">
            <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(avg_audit) > #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(avg_audit) = #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(avg_audit) <![CDATA[<]]> #{avgAudit}
            </if>
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and DOCTOR_NAME like #{userName}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and ID_NO like #{idNo}
        </if>
        <if test="educationId!=null and educationId!=''">
            and EDUCATION_ID = #{educationId}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
            <if test="auditStatusId == 'Wait'">
                AND AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
            </if>
            <if test="auditStatusId != 'Wait'">
                AND AUDIT_STATUS_ID =#{auditStatusId}
            </if>
        </if>
        <if test="applyYear!=null and applyYear!=''">
            AND APPLY_YEAR = #{applyYear}
        </if>
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
                SELECT 1 FROM
                JSRES_SPE_CONTRAST_PRACTICE T
                WHERE T.RECORD_STATUS='Y'
                AND T.SPE_ID=SPE_ID
                AND T.TYPE_ID=GRADUATION_CATEGORY_ID
                AND T.PRACTICE_ID=GRADUATION_SCOPE_ID
            )
        </if>
        and jg.org_flow in(
            SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS='Y'
            <if test="org!=null">
                <if test="org.orgProvId!=null and org.orgProvId!=''">AND ORG_PROV_ID = #{org.orgProvId}
                </if>
                <if test="org.orgCityId!=null and org.orgCityId!=''">
                    AND ORG_CITY_ID = #{org.orgCityId}
                </if>
                <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                    AND ORG_LEVEL_ID = #{org.orgLevelId}
                </if>
                <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                    AND ORG_TYPE_ID = #{org.orgTypeId}
                </if>
            </if>
        )
        order by SPE_ID,SESSION_NUMBER,NLSSORT(DOCTOR_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
    </select>

    <select id="queryGraduationInfoListNew" parameterType="map" resultMap="com.pinde.core.common.sci.dao.JsresGraduationInfoMapper.BaseResultMap">
        SELECT JG.INFO_FLOW, JG.RECRUIT_FLOW, JG.APPLY_FLOW, JG.DOCTOR_FLOW, JG.TEST_ID, JG.SCORE_FLOW, JG.ORG_FLOW,
        JG.AUDIT_STATUS_ID, JG.AUDIT_STATUS_NAME, JG.DOCTOR_NAME, JG.ORG_CITY_ID, JG.ORG_CITY_NAME, JG.ORG_NAME,
        JG.SPE_ID, JG.SPE_NAME, JG.CHANGE_SPE_ID, JG.CHANGE_SPE_NAME, JG.SESSION_NUMBER, JG.TRAIN_YEAR, JG.START_DATE,
        JG.END_DATE, JG.EDUCATION_ID, JG.EDUCATION_NAME, JG.CERTIFICATE_NO, JG.CERTIFICATE_URL, JG.MATERIAL_NAME,
        JG.QUALIFICATION_MATERIAL_URL, JG.QUALIFICATION_MATERIAL_CODE, JG.PRACTICING_SCOPE_NAME, JG.PRACTICING_CATEGORY_CODE,
        JG.PRACTICING_CATEGORY_URL, JG.SPECIAL_CERTIFICATION_URL, JG.IS_PASS, JG.LOCAL_AUDIT_STATUS_ID,
        JG.LOCAL_AUDIT_STATUS_NAME, JG.LOCAL_REASON, JG.CITY_AUDIT_STATUS_ID, JG.CITY_AUDIT_STATUS_NAME,
        JG.CITY_REASON, JG.GLOBAL_AUDIT_STATUS_ID, JG.GLOBAL_AUDIT_STATUS_NAME, JG.GLOBAL_REASON, JG.AUDIT_REASON,
        JG.APPLY_YEAR, JG.AVG_COMPLETE, JG.AVG_AUDIT, JG.AVG_IN_COMPLETE, JG.AVG_OUT_COMPLETE, JG.SCH_MONTH,
        JG.PROVE_FILE_URL, JG.DOCTOR_TYPE_ID, JG.TRAINING_TYPE_ID, JG.GRADUATION_YEAR, JG.ORG_PROV_ID, JG.ORG_LEVEL_ID,
        JG.ORG_TYPE_ID, JG.GRADUATION_CATEGORY_ID, JG.GRADUATION_SCOPE_ID, JG.SKILL_SCORE, JG.ID_NO, JG.RECORD_STATUS,
        JG.CREATE_USER_FLOW, JG.CREATE_TIME, JG.MIDIFY_USER_FLOW, JG.MODIFY_TIME
        FROM JSRES_GRADUATION_INFO JG
        WHERE JG.RECORD_STATUS = 'Y'
        <if test="orgFlow!=null and orgFlow!=''">
            AND JG.org_flow = #{orgFlow}
        </if>
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and JG.org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and JG.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="speIds!=null and speIds.size>0">
            and JG.SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and JG.CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and JG.SPE_ID = #{trainingSpeId}
        </if>
        <if test="sessionNumbers!=null and sessionNumbers.size>0">
            and JG.SESSION_NUMBER in
            <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and JG.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and JG.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="trainYear!=null and trainYear!=''">
            and JG.TRAIN_YEAR = #{trainYear}
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
            AND JG.QUALIFICATION_MATERIAL_URL IS NOT NULL AND QUALIFICATION_MATERIAL_CODE IS NOT NULL
        </if>
        <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
            AND JG.QUALIFICATION_MATERIAL_URL IS NULL and QUALIFICATION_MATERIAL_CODE IS NULL
        </if>
        <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' ">
            and JG.QUALIFICATION_MATERIAL_CODE = #{qualificationMaterialCode}
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
            and JG.QUALIFICATION_MATERIAL_URL IS NOT NULL
        </if>
        <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
            and JG.QUALIFICATION_MATERIAL_URL IS NULL
        </if>

        <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'Y'.toString() == practicingCategoryCode">
            and JG.PRACTICING_CATEGORY_CODE IS NOT NULL
        </if>
        <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'N'.toString() == practicingCategoryCode">
            and JG.PRACTICING_CATEGORY_CODE IS NULL
        </if>
        <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'Y'.toString() == practicingCategoryUrL">
            and JG.PRACTICING_CATEGORY_URL IS NOT NULL
        </if>
        <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'N'.toString() == practicingCategoryUrL">
            and JG.PRACTICING_CATEGORY_URL IS NULL
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
                and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and image_count != 0
                )
        </if>
        <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
                and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and image_count = 0
                )
        </if>
        <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
            <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and avg_image_count > #{AfterEvaluationScale}
                    )
            </if>
            <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and avg_image_count = #{AfterEvaluationScale}
                    )
            </if>
            <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
                and exists (
                    select 1 from jsres_doctor_graduation_info
                    where record_status = 'Y'
                    and avg_image_count <![CDATA[<]]> #{AfterEvaluationScale}
                )
            </if>
        </if>

        <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
            and JG.PROVE_FILE_URL IS NOT NULL
        </if>
        <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
            and JG.PROVE_FILE_URL IS NULL
        </if>

        <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
            and exists (
                select 1 from pub_file where record_status = 'Y' and JG.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>
        <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
            and not exists (
                select 1 from pub_file where record_status = 'Y' and JG.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
            )
        </if>

        <if test="graduationMaterialName !=null and graduationMaterialName !=''">
            and JG.Material_Name = #{graduationMaterialName}
        </if>
        <if test="testId!=null and testId!=''">
            and JG.TEST_ID = #{testId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and JG.SKILL_SCORE = #{passFlag}
        </if>
        <if test="schMonthSearch!=null and schMonthSearch!=''">
            <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(JG.sch_month) > #{schMonth}
            </if>
            <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
                and to_number(JG.sch_month) = #{schMonth}
            </if>
            <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
                and to_number(JG.sch_month) <![CDATA[<]]> #{schMonth}
            </if>
        </if>
        <if test="skillScoreSearch!=null and skillScoreSearch!=''">
            <if test="skillScoreSearch == 'GreaterThan'.toString() and skillScore !=null and skillScore !=''">
                and to_number(JG.skill_score) > #{skillScore}
            </if>
            <if test="skillScoreSearch == 'Equal'.toString() and skillScore !=null and skillScore !=''">
                and to_number(JG.skill_score) = #{skillScore}
            </if>
            <if test="skillScoreSearch == 'LessThan'.toString() and skillScore !=null and skillScore !=''">
                and to_number(JG.skill_score) <![CDATA[<]]> #{skillScore}
            </if>
        </if>
        <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
            <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count > data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count > data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count = data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count = data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 8
                    )
                </if>
            </if>
            <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count = data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 10
                    )
                </if>
                <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                    and exists (
                        select 1 from jsres_doctor_graduation_info
                        where record_status = 'Y'
                        and data_All_Count != 0
                        and doctor_flow = jg.doctor_flow
                        and data_Count <![CDATA[<]]> data_All_Count * ${avgComplete}/100
                        and LENGTH(data_time) = 8
                    )
                </if>
            </if>
        </if>
        <if test="avgAuditSearch!=null and avgAuditSearch!=''">
            <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JG.avg_audit) > #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
                and to_number(JG.avg_audit) = #{avgAudit}
            </if>
            <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
                and (to_number(JG.avg_audit) <![CDATA[<]]> #{avgAudit} or jg.avg_audit is null)
            </if>
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and JG.DOCTOR_NAME like #{userName}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and JG.ID_NO like #{idNo}
        </if>
        <if test="educationId!=null and educationId!=''">
            and JG.EDUCATION_ID = #{educationId}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
            <if test="auditStatusId == 'Wait'">
                AND JG.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
            </if>
            <if test="auditStatusId != 'Wait'">
                AND JG.AUDIT_STATUS_ID =#{auditStatusId}
            </if>
        </if>
        <if test="applyYear!=null and applyYear!=''">
            AND JG.APPLY_YEAR = #{applyYear}
        </if>
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
            SELECT 1 FROM
            JSRES_SPE_CONTRAST_PRACTICE T
            WHERE T.RECORD_STATUS='Y'
            AND T.SPE_ID=JG.SPE_ID
            AND T.TYPE_ID=JG.GRADUATION_CATEGORY_ID
            AND T.PRACTICE_ID=JG.GRADUATION_SCOPE_ID
            )
        </if>
        and jg.org_flow in(
        SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS='Y'
        <if test="org!=null">
            <if test="org.orgProvId!=null and org.orgProvId!=''">
                AND ORG_PROV_ID = #{org.orgProvId}
            </if>
            <if test="org.orgCityId!=null and org.orgCityId!=''">
                AND ORG_CITY_ID = #{org.orgCityId}
            </if>
            <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                AND ORG_LEVEL_ID = #{org.orgLevelId}
            </if>
            <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                AND ORG_TYPE_ID = #{org.orgTypeId}
            </if>
        </if>
        )
        order by SPE_ID,SESSION_NUMBER,NLSSORT(DOCTOR_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
    </select>

    <resultMap id="chargeQueryExportMap" type="java.util.HashMap"
               extends="com.pinde.core.common.sci.dao.PubUserResumeMapper.ResultMapWithBLOBs">
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
        <result column="RECRUIT_FLOW" property="recruitFlow" jdbcType="VARCHAR" />
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="COUNTRY_ORG_FLOW" property="countryOrgFlow" jdbcType="VARCHAR" />
        <result column="COUNTRY_ORG_NAME" property="countryOrgName" jdbcType="VARCHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <result column="ID_NO" property="idNo" jdbcType="VARCHAR" />
        <result column="USER_PHONE" property="userPhone" jdbcType="VARCHAR" />
        <result column="EDUCATION_ID" property="educationId" jdbcType="VARCHAR" />
        <result column="EDUCATION_NAME" property="educationName" jdbcType="VARCHAR" />
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="CHANGE_SPE_ID" property="changeSpeId" jdbcType="VARCHAR" />
        <result column="CHANGE_SPE_NAME" property="changeSpeName" jdbcType="VARCHAR" />
        <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
        <result column="TRAIN_YEAR" property="trainYear" jdbcType="VARCHAR" />
        <result column="TRAIN_YEAR_NAME" property="trainYearName" jdbcType="VARCHAR" />
        <result column="PRACTICING_SCOPE_NAME" property="practicingScopeName" jdbcType="VARCHAR" />
        <result column="MATERIAL_ID" property="qualificationMaterialId" jdbcType="VARCHAR" />
        <result column="MATERIAL_NAME" property="qualificationMaterialName" jdbcType="VARCHAR" />
        <result column="CERTIFICATE_URI" property="certificateUri" jdbcType="VARCHAR" />
        <result column="CERTIFICATE_NO" property="certificateNo" jdbcType="VARCHAR" />
        <result column="QUALIFICATION_MATERIAL_URI" property="qualificationMaterialUri" jdbcType="VARCHAR" />
        <result column="QUALIFICATION_MATERIAL_CODE" property="qualificationMaterialCode" jdbcType="VARCHAR" />
        <result column="SPECIAL_CERTIFICATION_URI" property="specialCertificationUri" jdbcType="VARCHAR" />
        <result column="IS_PASS" property="isPass" jdbcType="VARCHAR" />
        <result column="SCORE_FLOW" property="scoreFlow" jdbcType="VARCHAR" />
        <result column="AVG_COMPLETE" property="avgComplete" jdbcType="VARCHAR" />
        <result column="AVG_IN_COMPLETE" property="avgInComplete" jdbcType="VARCHAR" />
        <result column="AVG_OUT_COMPLETE" property="avgOutComplete" jdbcType="VARCHAR" />
        <result column="AVG_AUDIT" property="avgAudit" jdbcType="VARCHAR" />
        <result column="AUDIT_STATUS_ID" jdbcType="VARCHAR" property="auditStatusId" />
        <result column="AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="auditStatusName" />
        <result column="LOCAL_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="localAuditStatusId" />
        <result column="LOCAL_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="localAuditStatusName" />
        <result column="LOCAL_REASON" jdbcType="VARCHAR" property="localReason" />
        <result column="CITY_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="cityAuditStatusId" />
        <result column="CITY_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="cityAuditStatusName" />
        <result column="CITY_REASON" jdbcType="VARCHAR" property="cityReason" />
        <result column="GLOBAL_AUDIT_STATUS_ID" jdbcType="VARCHAR" property="globalAuditStatusId" />
        <result column="GLOBAL_AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="globalAuditStatusName" />
        <result column="GLOBAL_REASON" jdbcType="VARCHAR" property="globalReason" />
        <result column="AUDIT_REASON" jdbcType="VARCHAR" property="auditReason" />
        <result column="RECRUIT_DATE" jdbcType="VARCHAR" property="startDate" />
        <result column="END_DATE" jdbcType="VARCHAR" property="endDate" />
        <result column="APPLY_FLOW" jdbcType="VARCHAR" property="applyFlow" />
        <result column="APPLY_YEAR" jdbcType="VARCHAR" property="applyYear" />
        <result column="REGISTE_MANUA" jdbcType="VARCHAR" property="registeManua" />
        <result column="SEX_NAME" jdbcType="VARCHAR" property="sexName" />
        <result column="WORK_ORG_NAME" jdbcType="VARCHAR" property="workOrgName" />
        <result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName" />
        <result column="ALL_NUM" jdbcType="VARCHAR" property="allNum" />
        <result column="UP_NUM" jdbcType="VARCHAR" property="upNum" />
        <result column="ALL_SCH_MONTH" jdbcType="VARCHAR" property="allSchMonth" />
        <result column="CRET_TYPE_NAME" jdbcType="VARCHAR" property="cretTypeName" />
        <result column="NATION_NAME" jdbcType="VARCHAR" property="nationName" />
        <result column="TRAINING_TYPE_NAME" jdbcType="VARCHAR" property="trainingTypeName" />
        <result column="GRADUATED_NAME" jdbcType="VARCHAR" property="graduatedName" />
        <result column="GRADUATION_TIME" jdbcType="VARCHAR" property="graduationTime" />
        <result column="SPECIALIZED" jdbcType="VARCHAR" property="specialized" />
        <result column="DEGREE_CATEGORY_NAME" jdbcType="VARCHAR" property="degreeCategoryName" />
        <result column="USER_ADDRESS" jdbcType="VARCHAR" property="userAddress" />
    </resultMap>

    <select id="chargeQueryListForExport" resultMap="chargeQueryExportMap">
        SELECT RD.DOCTOR_FLOW,
            DR.RECRUIT_FLOW,
            DR.ORG_NAME,
            DR.ORG_FLOW,
            rjo.ORG_FLOW country_Org_flow,
            rjo.ORG_NAME country_Org_Name,
            SO.ORG_CITY_NAME,
            SU.USER_NAME,
            RD.DOCTOR_TYPE_NAME,
            SU.ID_NO,
            SU.SEX_NAME,
            SU.EDUCATION_ID,
            SU.EDUCATION_NAME,
            SU.CRET_TYPE_NAME,
            SU.NATION_NAME,
            SU.USER_ADDRESS,
            SU.USER_PHONE,
            RD.TRAINING_TYPE_NAME,
            RD.GRADUATED_NAME,
            RD.GRADUATION_TIME,
            RD.SPECIALIZED,
            RD.DEGREE_CATEGORY_NAME,
            PUR.USER_FLOW,
            PUR.USER_NAME,
            PUR.RECORD_STATUS,
            PUR.CREATE_TIME,
            PUR.CREATE_USER_FLOW,
            PUR.MODIFY_TIME,
            PUR.MODIFY_USER_FLOW,
            DR.SPE_ID,
            DR.SPE_NAME,
            nvl(DR.CHANGE_SPE_ID,DR.SPE_ID) CHANGE_SPE_ID,
            nvl(DR.CHANGE_SPE_NAME,DR.SPE_NAME) CHANGE_SPE_NAME,
            DR.SESSION_NUMBER,
            DR.TRAIN_YEAR,
            CASE
            WHEN DR.TRAIN_YEAR='OneYear' THEN '一年'
            WHEN DR.TRAIN_YEAR='TwoYear' THEN  '两年'
            WHEN DR.TRAIN_YEAR='ThreeYear' THEN   '三年'
            ELSE ''
            END TRAIN_YEAR_NAME,
            RD.WORK_ORG_NAME,
            JGA.GRADUATION_SCOPE_NAME PRACTICING_SCOPE_NAME,
            JGA.GRADUATION_MATERIAL_ID MATERIAL_ID,
            JGA.GRADUATION_MATERIAL_NAME MATERIAL_NAME,
            JGA.AUDIT_STATUS_NAME,
            JGA.CERTIFICATE_URI,
            RD.CERTIFICATE_NO,
            JGA.GRADUATION_MATERIAL_URI QUALIFICATION_MATERIAL_URI,
            JGA.GRADUATION_MATERIAL_CODE QUALIFICATION_MATERIAL_CODE,
            JGA.SPECIAL_CERTIFICATION_URI,
            CASE
            WHEN JGA.REGISTE_MANUA = '1' THEN
            '已完成'
            WHEN JGA.REGISTE_MANUA = '0' THEN
            '未完成'
            ELSE
            ''
            END REGISTE_MANUA,
            CASE
            WHEN SCORE.SKILL_SCORE = '1' THEN
            '合格'
            WHEN SCORE.SKILL_SCORE = '0' THEN
            '不合格'
            ELSE
            ''
            END IS_PASS,
            SCORE.SCORE_FLOW,
            JGA.APPLY_FLOW,
            JGA.AUDIT_STATUS_ID,
            JGA.AUDIT_STATUS_NAME,
            JGA.LOCAL_AUDIT_STATUS_ID,
            JGA.LOCAL_AUDIT_STATUS_NAME,
            JGA.LOCAL_REASON,
            JGA.CITY_AUDIT_STATUS_ID,
            JGA.CITY_AUDIT_STATUS_NAME,
            JGA.CITY_REASON,
            JGA.GLOBAL_AUDIT_STATUS_ID,
            JGA.GLOBAL_AUDIT_STATUS_NAME,
            JGA.GLOBAL_REASON,
        CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON
        WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON
        WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON
        ELSE '' END AUDIT_REASON,
        JGA.APPLY_YEAR,
        NVL(JGA.AVG_COMPLETE,0) AVG_COMPLETE,
        NVL(JGA.AVG_AUDIT,0) AVG_AUDIT,
        NVL(JGA.AVG_IN_COMPLETE,0)     AVG_IN_COMPLETE,
        NVL(JGA.AVG_OUT_COMPLETE,0)            AVG_OUT_COMPLETE,
        DR.RECRUIT_DATE,
        CASE
        WHEN DR.GRADUATION_YEAR IS NOT NULL
        AND DR.RECRUIT_DATE IS NOT NULL
        AND to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))!=0
        THEN
        to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*(to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))))-1, 'yyyy-mm-dd')
        ELSE
            CASE
            WHEN DR.TRAIN_YEAR='OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12)-1, 'yyyy-mm-dd')
            WHEN DR.TRAIN_YEAR='TwoYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*2)-1, 'yyyy-mm-dd')
            WHEN DR.TRAIN_YEAR='ThreeYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*3)-1, 'yyyy-mm-dd')
            ELSE ''
            END
        END END_DATE,
        to_char(nvl((
            select sum(sch_month) from sch_arrange_result sar where sar.record_status='Y'
            and sar.doctor_flow=dr.doctor_flow and
            exists(
             select 1 from sch_rotation_dept sr where sr.record_status='Y'
             and sar.standard_group_flow=sr.group_flow and sar.standard_dept_id=sr.standard_dept_id
             and sr.org_flow is null and sr.rotation_flow=JGA.rotation_flow
            )
        ),0)) ALL_SCH_MONTH,
        to_char(nvl((
        select count(1) from sch_rotation_dept sr where sr.record_status='Y'
        and sr.org_flow is null and sr.rotation_flow=JGA.rotation_flow
        and exists(select 1 from sch_arrange_result sar where sar.record_status='Y'
        and sar.standard_group_flow=sr.group_flow and sar.standard_dept_id=sr.standard_dept_id
        and sar.doctor_flow=dr.doctor_flow)
        ),0)) ALL_NUM,
        to_char(nvl((select count(1) from sch_rotation_dept_after sr where sr.record_status='Y'
        and sr.image_urls is not null and sr.doctor_flow=dr.doctor_flow
        and sr.apply_year=JGA.apply_Year),0)) UP_NUM
        FROM JSRES_GRADUATION_APPLY JGA
        left join res_doctor_recruit dr
        ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
        LEFT JOIN RES_DOCTOR RD
        ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
        INNER JOIN SYS_USER SU
        ON RD.DOCTOR_FLOW = SU.USER_FLOW
        LEFT JOIN PUB_USER_RESUME PUR
        ON RD.DOCTOR_FLOW = PUR.USER_FLOW
        LEFT JOIN RES_SCORE SCORE
        ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW
        AND SCORE.SCORE_TYPE_ID = 'PublicScore'
        AND SCORE.RECORD_STATUS='Y'
        LEFT JOIN SYS_ORG SO
        ON SO.ORG_FLOW=DR.ORG_FLOW
        left join res_joint_org rjo
        on rjo.joint_org_flow = DR.org_flow and rjo.record_status = 'Y'
        LEFT JOIN (
            SELECT R.DOCTOR_FLOW, CASE  WHEN SUM (R.SCH_MONTH) > 33 THEN 33 ELSE SUM (R.SCH_MONTH) END AS SCH_MONTH
            FROM SCH_ARRANGE_RESULT R
            WHERE R.RECORD_STATUS = 'Y'
            AND EXISTS (
                SELECT 1 FROM SCH_ROTATION_DEPT D
                WHERE D.RECORD_STATUS = 'Y'
                AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
                AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
                AND D.ORG_FLOW IS NULL
            )
            GROUP BY R.DOCTOR_FLOW
        ) SS ON SS.DOCTOR_FLOW = RD.DOCTOR_FLOW
        WHERE RD.RECORD_STATUS = 'Y'
        AND JGA.RECORD_STATUS = 'Y'
        AND DR.RECORD_STATUS = 'Y'
        AND SU.RECORD_STATUS = 'Y'
        AND SO.RECORD_STATUS = 'Y'
        <!--and DR.org_flow in(
            SELECT ORG_FLOW
            FROM  SYS_ORG
            WHERE  SYS_ORG.RECORD_STATUS='Y'
            <if test="org!=null">
                    <if test="org.orgProvId!=null and org.orgProvId!=''">AND ORG_PROV_ID = #{org.orgProvId}
                    </if>
                    <if test="org.orgCityId!=null and org.orgCityId!=''">
                        AND ORG_CITY_ID = #{org.orgCityId}
                    </if>
                    <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                        AND ORG_LEVEL_ID = #{org.orgLevelId}
                    </if>
                    <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                        AND ORG_TYPE_ID = #{org.orgTypeId}
                    </if>
                </if>
        )-->
        <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
            AND not exists(
                SELECT 1 FROM
                  JSRES_SPE_CONTRAST_PRACTICE T
                WHERE T.RECORD_STATUS='Y'
            AND T.SPE_ID=DR.SPE_ID
            AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
            AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
            )
        </if>
        <if test="isNotEqual!=null and isNotEqual!='' and isNotEqual =='Y'.toString()">

            and ( case when dr.session_number <![CDATA[ < ]]>'2015' then              NVL((
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT
            WHERE record_status = 'Y'
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND ORG_FLOW IS NULL),
            0)),0)
            else
            NVL((CASE
            WHEN dr.cat_spe_id = 'DoctorTrainingSpe' AND
            dr.session_number >= '2015' AND
            (dr.train_year = 'OneYear' OR
            dr.train_year = 'TwoYear') AND
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow) > 0 THEN
            (SELECT COUNT(1)
            FROM sch_doctor_dept sdd
            WHERE sdd.record_status = 'Y'
            AND sdd.doctor_flow = dr.doctor_flow
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=sdd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=sdd.group_flow
            and t.rotation_flow=sdd.rotation_flow
            )
            AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND sdd.org_flow = dr.org_flow)
            ELSE
            nvl((SELECT COUNT(1)
            FROM SCH_ROTATION_DEPT srd
            WHERE srd.record_status = 'Y'
            and exists (
            select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
            and t.record_status='Y' and t.STANDARD_DEPT_ID=srd.STANDARD_DEPT_ID
            and t.STANDARD_GROUP_FLOW=srd.group_flow
            and t.rotation_flow=srd.rotation_flow
            )
            AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end )
            AND srd.ORG_FLOW IS NULL),
            0)
            END),
            0)

            end )

            !=nvl( (select count(1) from sch_rotation_dept where record_status='Y' and org_flow is null
            and rotation_flow=(case when cat_spe_id = 'DoctorTrainingSpe' then
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = 'Doctor'
            and spe_id = dr.spe_id)
            else
            (select rotation_flow
            from (select rotation_flow,
            spe_id,
            Doctor_Category_Id
            from sch_rotation
            where record_status = 'Y'
            and Publish_Flag = 'Y'
            order by create_time desc) b
            where rownum = 1
            and Doctor_Category_Id = cat_spe_id
            and spe_id = dr.spe_id)
            end ) and
            exists ( select 1 from sch_rotation_dept_after where
            record_status='Y'and SCH_ROTATION_DEPT_FLOW=sch_rotation_dept.record_flow and doctor_flow=dr.doctor_flow)),0)
        </if>
        <if test="orgFlow!=null and orgFlow!=''">
            AND DR.org_flow = #{orgFlow}
        </if>
        <if test="jointOrgFlow!=null and jointOrgFlow!='' and jointOrgFlow != 'isNull'.toString()">
            AND DR.joint_org_flow = #{jointOrgFlow}
        </if>
        <if test="jointOrgFlow!=null and jointOrgFlow!='' and jointOrgFlow == 'isNull'.toString()">
            AND DR.joint_org_flow is null
        </if>
        <if test="orgFlowList!=null and orgFlowList.size>0">
            and DR.org_flow in
            <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="docTypeList!=null and docTypeList.size>0">
            and RD.DOCTOR_TYPE_ID in
            <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="trainingTypeId!=null and trainingTypeId!=''">
            and dr.CAT_SPE_ID = #{trainingTypeId}
        </if>
        <if test="trainingSpeId!=null and trainingSpeId!=''">
            and dr.SPE_ID = #{trainingSpeId}
        </if>
        <if test="speIds!=null and speIds.size>0">
            and dr.SPE_ID in
            <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="sessionNumber!=null and sessionNumber!=''">
            and dr.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="graduationYear!=null and graduationYear!=''">
            and dr.GRADUATION_YEAR = #{graduationYear}
        </if>
        <if test="trainYear!=null and trainYear!=''">
            and dr.TRAIN_YEAR = #{trainYear}
        </if>
        <if test="qualificationMaterialId!=null and qualificationMaterialId!=''">
            and JGA.GRADUATION_MATERIAL_ID = #{qualificationMaterialId}
        </if>
        <if test="graduationMaterialName !=null and graduationMaterialName !=''">
            and JGA.graduation_Material_Name = #{graduationMaterialName}
        </if>
        <if test="testId!=null and testId!=''">
            and JGA.TEST_ID = #{testId}
        </if>
        <if test="passFlag!=null and passFlag!=''">
            and SCORE.SKILL_SCORE = #{passFlag}
        </if>
        <if test="completeBi!=null and completeBi!=''">
            and to_number(NVL(JGA.AVG_COMPLETE,0))   <![CDATA[<=]]> #{completeBi}
        </if>
        <if test="auditBi!=null and auditBi!=''">
            and to_number(NVL(JGA.AVG_AUDIT,0))  <![CDATA[<=]]> #{auditBi}
        </if>
        <if test="userName!=null and userName!=''">
            <bind name="userName" value="'%'+userName+'%'"/>
            and Su.USER_NAME like #{userName}
        </if>
        <if test="educationId!=null and educationId!=''">
         and Su.EDUCATION_ID = #{educationId}
        </if>
        <if test="idNo!=null and idNo!=''">
            <bind name="idNo" value="'%'+idNo+'%'"/>
            and Su.ID_NO like #{idNo}
        </if>
        <if test="auditStatusId !='' and  auditStatusId!=null">
            <if test="auditStatusId == 'Wait'">
                AND JGA.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
            </if>
            <if test="auditStatusId != 'Wait'">
                AND JGA.AUDIT_STATUS_ID = #{auditStatusId}
            </if>
            <if test="isJointOrg == 'Y'.toString()">
                <if test="auditStatusId == 'Auditing'.toString()">
                    AND JGA.AUDIT_STATUS_ID = 'JointAuditing'
                </if>
                <if test="auditStatusId != 'Auditing'.toString()">
                    AND JGA.AUDIT_STATUS_ID = #{auditStatusId}
                </if>
            </if>
            <if test="isJointOrg == 'N'.toString()">
                AND JGA.AUDIT_STATUS_ID = #{auditStatusId}
            </if>
        </if>
        <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'global'.toString()">
            AND JGA.AUDIT_STATUS_ID != 'WaitGlobalPass'
        </if>
        <if test="roleFlag != 'charge'.toString()">
            and ((DR.org_flow in(
            SELECT ORG_FLOW
            FROM SYS_ORG
            WHERE SYS_ORG.RECORD_STATUS='Y'
            <if test="org!=null">
                <if test="org.orgProvId!=null and org.orgProvId!=''">
                    AND ORG_PROV_ID = #{org.orgProvId}
                </if>
                <if test="org.orgCityId!=null and org.orgCityId!=''">
                    AND ORG_CITY_ID = #{org.orgCityId}
                </if>
                <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                    AND ORG_LEVEL_ID = #{org.orgLevelId}
                </if>
                <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                    AND ORG_TYPE_ID = #{org.orgTypeId}
                </if>
            </if>
            )
            AND DR.JOINT_ORG_FLOW IS NULL)
            OR DR.JOINT_ORG_FLOW IN (
            SELECT ORG_FLOW FROM SYS_ORG
            WHERE RECORD_STATUS = 'Y'
            <if test="org!=null">
                <if test="org.orgProvId!=null and org.orgProvId!=''">
                    AND ORG_PROV_ID = #{org.orgProvId}
                </if>
                <if test="org.orgCityId!=null and org.orgCityId!=''">
                    AND ORG_CITY_ID = #{org.orgCityId}
                </if>
            </if>
            )
            )
        </if>
       <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'charge'.toString()">
           AND JGA.AUDIT_STATUS_ID != 'WaitChargePass'
           and ((DR.org_flow in(
           SELECT ORG_FLOW
           FROM SYS_ORG
           WHERE SYS_ORG.RECORD_STATUS='Y'
           <if test="org!=null">
               <if test="org.orgProvId!=null and org.orgProvId!=''">
                   AND ORG_PROV_ID = #{org.orgProvId}
               </if>
               <if test="org.orgCityId!=null and org.orgCityId!=''">
                   AND ORG_CITY_ID = #{org.orgCityId}
               </if>
               <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                   AND ORG_LEVEL_ID = #{org.orgLevelId}
               </if>
               <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                   AND ORG_TYPE_ID = #{org.orgTypeId}
               </if>
           </if>
           )
           AND DR.JOINT_ORG_FLOW IS NULL)
           OR DR.JOINT_ORG_FLOW IN (
           SELECT ORG_FLOW FROM SYS_ORG
           WHERE RECORD_STATUS = 'Y'
           <if test="org!=null">
               <if test="org.orgProvId!=null and org.orgProvId!=''">
                   AND ORG_PROV_ID = #{org.orgProvId}
               </if>
               <if test="org.orgCityId!=null and org.orgCityId!=''">
                   AND ORG_CITY_ID = #{org.orgCityId}
               </if>
           </if>
           )
           )
       </if>
       <if test="(tabTag == 'FristList'.toString() or tabTag == 'FristList2'.toString()) and roleFlag == 'local'.toString()">
           <if test="isJointOrg == 'Y'.toString()">
               AND JGA.AUDIT_STATUS_ID != 'JointAuditing'
           </if>
           <if test="isJointOrg == 'N'.toString()">
               AND JGA.AUDIT_STATUS_ID != 'Auditing'
           </if>
       </if>
       <if test="applyYear!=null and applyYear!=''">
           AND JGA.APPLY_YEAR = #{applyYear}
       </if>
       <if test="schMonthSearch!=null and schMonthSearch!=''">
           <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) > #{schMonth}
           </if>
           <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) = #{schMonth}
           </if>
           <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) <![CDATA[<]]> #{schMonth}
           </if>
       </if>
       <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
           and exists (
           select 1 from res_doctor_recruit
           where record_status = 'Y'
           and prove_file_url is not null
           and recruit_flow = jga.recruit_flow
           )
       </if>
       <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
           and exists (
           select 1 from res_doctor_recruit
           where record_status = 'Y'
           and prove_file_url is null
           and recruit_flow = jga.recruit_flow
           )
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
           and exists (
           select 1 from jsres_doctor_graduation_info
           where record_status = 'Y'
           and doctor_flow = rd.doctor_flow
           and image_count != 0
           )
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
           and exists (
           select 1 from jsres_doctor_graduation_info
           where record_status = 'Y'
           and doctor_flow = rd.doctor_flow
           and image_count = 0
           )
       </if>
       <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
           <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) > #{AfterEvaluationScale}
               )
           </if>
           <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) = #{AfterEvaluationScale}
               )
           </if>
           <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) <![CDATA[<]]> #{AfterEvaluationScale}
               )
           </if>
       </if>
       <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
           and exists (
           select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
           )
       </if>
       <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
           and not exists (
           select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
           )
       </if>
       <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
           <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count > data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count > data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
           <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
           <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count <![CDATA[<]]> data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
       </if>
       <if test="avgAuditSearch!=null and avgAuditSearch!=''">
           <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(JGA.avg_audit) > #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(JGA.avg_audit) = #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
               and (to_number(JGA.avg_audit) <![CDATA[<]]> #{avgAudit} or jga.avg_audit is null)
           </if>
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
           and exists (
           select
           1
           from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') = 'Y'
           )
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') != 'Y'
           )
       </if>
       <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='Y'.toString()">
           and exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is not null
           )
       </if>
       <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='N'.toString()">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is null
           )
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
           and exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is not null
           )
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is null
           )
       </if>
       <if test="isPostpone != null and isPostpone != ''">
           <if test="isPostpone == 'Y'.toString()">
               AND EXISTS (SELECT 1
               FROM RES_DOCOTR_DELAY_TETURN T
               WHERE T.RECORD_STATUS = 'Y'
               AND T.TYPE_ID = 'Delay'
               AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
           </if>
           <if test="isPostpone == 'N'.toString()">
               AND NOT EXISTS (SELECT 1
               FROM RES_DOCOTR_DELAY_TETURN T
               WHERE T.RECORD_STATUS = 'Y'
               AND T.TYPE_ID = 'Delay'
               AND T.DOCTOR_FLOW = DR.DOCTOR_FLOW)
           </if>
       </if>
       order by
       NLSSORT(dr.org_name,'NLS_SORT = SCHINESE_PINYIN_M'),
       DR.SPE_ID,
       NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M'),
       DR.SESSION_NUMBER
   </select>

   <select id="queryGraduationInfoListExport" resultMap="chargeQueryExportMap">
       SELECT RD.DOCTOR_FLOW, DR.RECRUIT_FLOW, DR.ORG_NAME, DR.ORG_FLOW, rjo.ORG_FLOW AS country_Org_flow
       , rjo.ORG_NAME AS country_Org_Name, SO.ORG_CITY_NAME, SU.USER_NAME, SU.ID_NO, SU.SEX_NAME
       , SU.EDUCATION_ID, SU.EDUCATION_NAME, SU.CRET_TYPE_NAME, SU.NATION_NAME, SU.USER_ADDRESS
       , RD.TRAINING_TYPE_NAME, RD.GRADUATED_NAME, RD.GRADUATION_TIME, RD.SPECIALIZED, RD.DEGREE_CATEGORY_NAME
       , PUR.USER_FLOW, PUR.USER_NAME, PUR.RECORD_STATUS, PUR.CREATE_TIME, PUR.CREATE_USER_FLOW
       , CASE WHEN JGA.REGISTE_MANUA = '1' THEN '已完成' WHEN JGA.REGISTE_MANUA = '0' THEN '未完成' ELSE NULL END AS REGISTE_MANUA,JGA.rotation_flow
       , PUR.MODIFY_TIME, PUR.MODIFY_USER_FLOW, DR.SPE_ID, DR.SPE_NAME, nvl(DR.CHANGE_SPE_ID, DR.SPE_ID) AS CHANGE_SPE_ID
       , nvl(DR.CHANGE_SPE_NAME, DR.SPE_NAME) AS CHANGE_SPE_NAME, DR.SESSION_NUMBER, DR.TRAIN_YEAR, CASE WHEN DR.TRAIN_YEAR = 'OneYear' THEN '一年' WHEN DR.TRAIN_YEAR = 'TwoYear' THEN '两年' WHEN DR.TRAIN_YEAR = 'ThreeYear' THEN '三年' ELSE NULL END AS TRAIN_YEAR_NAME, RD.WORK_ORG_NAME
       , JGA.PRACTICING_SCOPE_NAME, JGA.MATERIAL_NAME, JGA.CERTIFICATE_URL, RD.CERTIFICATE_NO
       , JGA.QUALIFICATION_MATERIAL_URL, JGA.QUALIFICATION_MATERIAL_CODE,  CASE WHEN SCORE.SKILL_SCORE = '1' THEN '合格' WHEN SCORE.SKILL_SCORE = '0' THEN '不合格' ELSE NULL END AS IS_PASS
       , SCORE.SCORE_FLOW, JGA.APPLY_FLOW, JGA.AUDIT_STATUS_ID, JGA.AUDIT_STATUS_NAME, JGA.LOCAL_AUDIT_STATUS_ID
       , JGA.LOCAL_AUDIT_STATUS_NAME, JGA.LOCAL_REASON, JGA.CITY_AUDIT_STATUS_ID, JGA.CITY_AUDIT_STATUS_NAME, JGA.CITY_REASON
       , JGA.GLOBAL_AUDIT_STATUS_ID, JGA.GLOBAL_AUDIT_STATUS_NAME, JGA.GLOBAL_REASON, CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON ELSE NULL END AS AUDIT_REASON, JGA.APPLY_YEAR
       , NVL(JGA.AVG_COMPLETE, 0) AS AVG_COMPLETE, NVL(JGA.AVG_AUDIT, 0) AS AVG_AUDIT, NVL(JGA.AVG_IN_COMPLETE, 0) AS AVG_IN_COMPLETE, NVL(JGA.AVG_OUT_COMPLETE, 0) AS AVG_OUT_COMPLETE, DR.RECRUIT_DATE
       ,nvl(C.imageCount,0) imageCount, nvl(C.allCount,0) allCount,nvl(C.avgCount,0) avgCount, PF.FILE_FLOW
       , nvl(ff.dataCount,0) dataCount, nvl(ff.dataAllCount,0) dataAllCount,nvl(ff.avgDataCount,0) avgDataCount, ff.maxTime, ff.minTime
       , CASE WHEN DR.GRADUATION_YEAR IS NOT NULL
       AND DR.RECRUIT_DATE IS NOT NULL
       AND to_numbeR(DR.GRADUATION_YEAR) - to_numbeR(substr(DR.RECRUIT_DATE, 1, 4)) != 0 THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'), 12 * (to_numbeR(DR.GRADUATION_YEAR) - to_numbeR(substr(DR.RECRUIT_DATE, 1, 4)))) - 1, 'yyyy-mm-dd') ELSE CASE WHEN DR.TRAIN_YEAR = 'OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'), 12) - 1, 'yyyy-mm-dd') WHEN DR.TRAIN_YEAR = 'TwoYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'), 12 * 2) - 1, 'yyyy-mm-dd') WHEN DR.TRAIN_YEAR = 'ThreeYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'), 12 * 3) - 1, 'yyyy-mm-dd') ELSE NULL END END AS END_DATE, to_char(nvl((
       SELECT SUM(sch_month)
       FROM sch_arrange_result sar
       WHERE sar.record_status = 'Y'
       AND sar.doctor_flow = dr.doctor_flow
       AND EXISTS (SELECT 1
       FROM sch_rotation_dept sr
       WHERE sr.record_status = 'Y'
       AND sar.standard_group_flow = sr.group_flow
       AND sar.standard_dept_id = sr.standard_dept_id
       AND sr.org_flow IS NULL
       AND sr.rotation_flow = JGA.rotation_flow)
       ), 0)) AS ALL_SCH_MONTH, to_char(nvl((
       SELECT COUNT(1)
       FROM sch_rotation_dept sr
       WHERE sr.record_status = 'Y'
       AND sr.org_flow IS NULL
       AND sr.rotation_flow = JGA.rotation_flow
       AND EXISTS (SELECT 1
       FROM sch_arrange_result sar
       WHERE sar.record_status = 'Y'
       AND sar.standard_group_flow = sr.group_flow
       AND sar.standard_dept_id = sr.standard_dept_id
       AND sar.doctor_flow = dr.doctor_flow)
       ), 0)) AS ALL_NUM, to_char(nvl((
       SELECT COUNT(1)
       FROM sch_rotation_dept_after sr
       WHERE sr.record_status = 'Y'
       AND sr.image_urls IS NOT NULL
       AND sr.doctor_flow = dr.doctor_flow
       AND sr.apply_year = JGA.apply_Year
       ), 0)) AS UP_NUM
       FROM JSRES_GRADUATION_INFO JGA
       left join res_doctor_recruit dr
       ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
       LEFT JOIN RES_DOCTOR RD
       ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
       INNER JOIN SYS_USER SU
       ON RD.DOCTOR_FLOW = SU.USER_FLOW
       LEFT JOIN PUB_USER_RESUME PUR
       ON RD.DOCTOR_FLOW = PUR.USER_FLOW
       LEFT JOIN RES_SCORE SCORE
       ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW
       AND SCORE.SCORE_TYPE_ID = 'PublicScore'
       AND SCORE.RECORD_STATUS='Y'
       LEFT JOIN SYS_ORG SO
       ON SO.ORG_FLOW=DR.ORG_FLOW
       left join res_joint_org rjo
       on rjo.joint_org_flow = DR.org_flow and rjo.record_status = 'Y'
       LEFT JOIN PUB_FILE PF ON JGA.RECRUIT_FLOW = PF.PRODUCT_FLOW AND PF.PRODUCT_TYPE = 'asseApplication' AND PF.RECORD_STATUS = 'Y'
       LEFT JOIN (
       SELECT JGI.INFO_FLOW,aa.imageCount,bb.allCount,nvl(aa.imageCount,0)/bb.allCount * 100 as avgCount FROM  jsres_graduation_info JGI
       left join (
           SELECT
           oper_user_flow,count(1) AS imageCount
           FROM
           RES_SCH_PROCESS_EXPRESS
           WHERE
           rec_type_id = 'AfterSummary'
           AND record_status = 'Y'
           and rec_content like '%imageUrl%'
           group by oper_user_flow
       ) aa on aa.oper_user_flow = jgi.doctor_flow
       left join (
           select
           rdsp.user_flow,rdsp.org_flow,count(rdsp.user_flow) as allCount
           from
           res_doctor_sch_process rdsp
           where
           rdsp.record_status = 'Y'
           group by user_flow,org_flow
       ) bb on bb.user_flow = jgi.doctor_flow
       and bb.org_flow = jgi.org_flow
       where jgi.record_status = 'Y'
       ) C ON C.INFO_FLOW = JGA.INFO_FLOW
       left join (
           SELECT ji.info_flow,dd.dataCount,ee.dataAllCount,nvl(dd.dataCount,0)/ee.dataAllCount * 100 as avgDataCount,
           dd.maxTime,dd.minTime
           FROM  jsres_graduation_info ji
           left join (
               SELECT oper_user_flow,count(1) as dataCount,max(create_time) maxTime,min(create_time) minTime
               FROM   res_rec
               where record_status = 'Y'
               <if test="completeTime != null and completeTime!=''">
                   <bind name="completeTime" value="completeTime+'%'"/>
                   and create_time like #{completeTime}
               </if>
               and rec_type_id in ('CaseRegistry','DiseaseRegistry','SkillRegistry','OperationRegistry','CampaignRegistry')
               group by oper_user_flow
           )dd on dd.oper_user_flow = ji.doctor_Flow
           left join (
               SELECT srdr.rotation_flow, sum(srdr.req_num) as dataAllCount
               FROM  Sch_Rotation_Dept_Req srdr
               where srdr.record_status = 'Y'
               group by srdr.rotation_flow
           ) ee on ee.rotation_flow = ji.rotation_flow
           where ji.record_status = 'Y'
       ) ff on ff.info_flow = JGA.INFO_FLOW
       WHERE RD.RECORD_STATUS = 'Y'
       AND JGA.RECORD_STATUS = 'Y'
       AND DR.RECORD_STATUS = 'Y'
       AND SU.RECORD_STATUS = 'Y'
       AND SO.RECORD_STATUS = 'Y'
       <if test="orgFlow!=null and orgFlow!=''">
           AND JGA.org_flow = #{orgFlow}
       </if>
       <if test="orgFlowList!=null and orgFlowList.size>0">
           and JGA.org_flow in
           <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="docTypeList!=null and docTypeList.size>0">
           and JGA.DOCTOR_TYPE_ID in
           <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="speIds!=null and speIds.size>0">
           and JGA.SPE_ID in
           <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="trainingTypeId!=null and trainingTypeId!=''">
           and JGA.CAT_SPE_ID = #{trainingTypeId}
       </if>
       <if test="trainingSpeId!=null and trainingSpeId!=''">
           and JGA.SPE_ID = #{trainingSpeId}
       </if>
       <if test="sessionNumbers!=null and sessionNumbers.size>0">
           and JGA.SESSION_NUMBER in
           <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="sessionNumber!=null and sessionNumber!=''">
           and JGA.SESSION_NUMBER = #{sessionNumber}
       </if>
       <if test="graduationYear!=null and graduationYear!=''">
           and JGA.GRADUATION_YEAR = #{graduationYear}
       </if>
       <if test="trainYear!=null and trainYear!=''">
           and JGA.TRAIN_YEAR = #{trainYear}
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
           AND JGA.QUALIFICATION_MATERIAL_URL IS NOT NULL AND JGA.QUALIFICATION_MATERIAL_CODE IS NOT NULL
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
           AND JGA.QUALIFICATION_MATERIAL_URL IS NULL and JGA.QUALIFICATION_MATERIAL_CODE IS NULL
       </if>
       <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' ">
           and JGA.QUALIFICATION_MATERIAL_CODE = #{qualificationMaterialCode}
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
           and JGA.QUALIFICATION_MATERIAL_URL IS NOT NULL
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
           and JGA.QUALIFICATION_MATERIAL_URL IS NULL
       </if>

       <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'Y'.toString() == practicingCategoryCode">
           and JGA.PRACTICING_CATEGORY_CODE IS NOT NULL
       </if>
       <if test="practicingCategoryCode!=null and practicingCategoryCode!='' and 'N'.toString() == practicingCategoryCode">
           and JGA.PRACTICING_CATEGORY_CODE IS NULL
       </if>
       <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'Y'.toString() == practicingCategoryUrL">
           and JGA.PRACTICING_CATEGORY_URL IS NOT NULL
       </if>
       <if test="practicingCategoryUrL!=null and practicingCategoryUrL!='' and 'N'.toString() == practicingCategoryUrL">
           and JGA.PRACTICING_CATEGORY_URL IS NULL
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
           and imageCount IS NOT NULL
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
           and imageCount IS NULL
       </if>
       <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
           <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and to_number(C.avgCount) > #{AfterEvaluationScale}
           </if>
           <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and to_number(C.avgCount) = #{AfterEvaluationScale}
           </if>
           <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and to_number(C.avgCount) <![CDATA[<]]> #{AfterEvaluationScale}
           </if>
       </if>

       <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
           and JGA.PROVE_FILE_URL IS NOT NULL
       </if>
       <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
           and JGA.PROVE_FILE_URL IS NULL
       </if>

       <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
           and PF.FILE_FLOW IS NOT NULL
       </if>
       <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
           and PF.FILE_FLOW IS NULL
       </if>

       <if test="graduationMaterialName !=null and graduationMaterialName !=''">
           and JGA.Material_Name = #{graduationMaterialName}
       </if>
       <if test="testId!=null and testId!=''">
           and JGA.TEST_ID = #{testId}
       </if>
       <if test="passFlag!=null and passFlag!=''">
           and JGA.SKILL_SCORE = #{passFlag}
       </if>
       <if test="schMonthSearch!=null and schMonthSearch!=''">
           <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(JGA.sch_month) > #{schMonth}
           </if>
           <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
               and to_number(JGA.sch_month) = #{schMonth}
           </if>
           <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(JGA.sch_month) <![CDATA[<]]> #{schMonth}
           </if>
       </if>
       <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
           <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
               and nvl(ff.dataCount,0) > ff.dataAllCount * ${avgComplete}/100
           </if>
           <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
               and nvl(ff.dataCount,0) = ff.dataAllCount * ${avgComplete}/100
           </if>
           <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
               and nvl(ff.dataCount,0) <![CDATA[<]]> ff.dataAllCount * ${avgComplete}/100
           </if>
       </if>
       <if test="avgAuditSearch!=null and avgAuditSearch!=''">
           <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(avg_audit) > #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(avg_audit) = #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(avg_audit) <![CDATA[<]]> #{avgAudit}
           </if>
       </if>
       <if test="userName!=null and userName!=''">
           <bind name="userName" value="'%'+userName+'%'"/>
           and JGA.DOCTOR_NAME like #{userName}
       </if>
       <if test="idNo!=null and idNo!=''">
           <bind name="idNo" value="'%'+idNo+'%'"/>
           and JGA.ID_NO like #{idNo}
       </if>
       <if test="educationId!=null and educationId!=''">
           and JGA.EDUCATION_ID = #{educationId}
       </if>
       <if test="auditStatusId !='' and  auditStatusId!=null">
           <if test="auditStatusId == 'Wait'">
               AND JGA.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
           </if>
           <if test="auditStatusId != 'Wait'">
               AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
           </if>
       </if>
       <if test="applyYear!=null and applyYear!=''">
           AND JGA.APPLY_YEAR = #{applyYear}
       </if>
       <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
           AND not exists(
               SELECT 1 FROM
               JSRES_SPE_CONTRAST_PRACTICE T
               WHERE T.RECORD_STATUS='Y'
               AND T.SPE_ID=JGA.SPE_ID
               AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
               AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
           )
       </if>
       and so.org_flow in(
       SELECT ORG_FLOW
       FROM SYS_ORG
       WHERE SYS_ORG.RECORD_STATUS='Y'
       <if test="org!=null">
           <if test="org.orgProvId!=null and org.orgProvId!=''">
               AND ORG_PROV_ID = #{org.orgProvId}
           </if>
           <if test="org.orgCityId!=null and org.orgCityId!=''">
               AND ORG_CITY_ID = #{org.orgCityId}
           </if>
           <if test="org.orgLevelId!=null and org.orgLevelId!=''">
               AND ORG_LEVEL_ID = #{org.orgLevelId}
           </if>
           <if test="org.orgTypeId!=null and org.orgTypeId!=''">
               AND ORG_TYPE_ID = #{org.orgTypeId}
           </if>
       </if>
       )
       order by
       DR.SPE_ID,
       DR.SESSION_NUMBER,
       NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
   </select>

   <select id="chargeQueryApplyListNew" resultMap="chargeQueryMap">
       SELECT RD.DOCTOR_FLOW,JGA.TEST_ID,
       DR.RECRUIT_FLOW,
       DR.ORG_NAME,
       DR.ORG_FLOW,
       SU.USER_NAME,
       SU.EDUCATION_ID,
       SU.EDUCATION_NAME,
       DR.SPE_ID,
       DR.SPE_NAME,
       SO.ORG_CITY_ID,
       SO.ORG_CITY_NAME,
       nvl(DR.CHANGE_SPE_ID,DR.SPE_ID) CHANGE_SPE_ID,
       nvl(DR.CHANGE_SPE_NAME,DR.SPE_NAME) CHANGE_SPE_NAME,
       DR.SESSION_NUMBER,
       DR.TRAIN_YEAR,
       JGA.GRADUATION_SCOPE_NAME PRACTICING_SCOPE_NAME,
       JGA.GRADUATION_MATERIAL_ID MATERIAL_ID,
       JGA.GRADUATION_MATERIAL_NAME MATERIAL_NAME,
       JGA.CERTIFICATE_URI,
       RD.CERTIFICATE_NO,
       JGA.GRADUATION_MATERIAL_URI QUALIFICATION_MATERIAL_URI,
       JGA.GRADUATION_MATERIAL_CODE QUALIFICATION_MATERIAL_CODE,
       JGA.SPECIAL_CERTIFICATION_URI,
       CASE
       WHEN SCORE.SKILL_SCORE = '1' THEN
       '合格'
       WHEN SCORE.SKILL_SCORE = '0' THEN
       '不合格'
       ELSE
       ''
       END IS_PASS,
       SCORE.SCORE_FLOW,
       JGA.APPLY_FLOW,
       JGA.AUDIT_STATUS_ID,
       JGA.AUDIT_STATUS_NAME,
       JGA.LOCAL_AUDIT_STATUS_ID,
       JGA.LOCAL_AUDIT_STATUS_NAME,
       JGA.LOCAL_REASON,
       JGA.CITY_AUDIT_STATUS_ID,
       JGA.CITY_AUDIT_STATUS_NAME,
       JGA.CITY_REASON,
       JGA.GLOBAL_AUDIT_STATUS_ID,
       JGA.GLOBAL_AUDIT_STATUS_NAME,
       JGA.GLOBAL_REASON,
       SS.SCH_MONTH,
       CASE WHEN JGA.GLOBAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.GLOBAL_REASON
       WHEN JGA.CITY_AUDIT_STATUS_ID IS NOT NULL THEN JGA.CITY_REASON
       WHEN JGA.LOCAL_AUDIT_STATUS_ID IS NOT NULL THEN JGA.LOCAL_REASON
       ELSE '' END AUDIT_REASON,
       JGA.APPLY_YEAR,
       NVL(JGA.AVG_COMPLETE,0) AVG_COMPLETE,
       NVL(JGA.AVG_AUDIT,0) AVG_AUDIT,
       NVL(JGA.AVG_IN_COMPLETE,0)     AVG_IN_COMPLETE,
       NVL(JGA.AVG_OUT_COMPLETE,0)            AVG_OUT_COMPLETE,
       DR.RECRUIT_DATE,
       CASE
       WHEN DR.GRADUATION_YEAR IS NOT NULL
       AND DR.RECRUIT_DATE IS NOT NULL
       AND to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))!=0
       THEN
       to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*(to_numbeR(DR.GRADUATION_YEAR)-to_numbeR(substr(DR.RECRUIT_DATE,1,4))))-1, 'yyyy-mm-dd')
       ELSE
       CASE
       WHEN DR.TRAIN_YEAR='OneYear' THEN to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12)-1, 'yyyy-mm-dd')
       WHEN DR.TRAIN_YEAR='TwoYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*2)-1, 'yyyy-mm-dd')
       WHEN DR.TRAIN_YEAR='ThreeYear' THEN  to_char(add_months(to_date(DR.RECRUIT_DATE, 'yyyy-mm-dd'),12*3)-1, 'yyyy-mm-dd')
       ELSE ''
       END
       END END_DATE
       FROM JSRES_GRADUATION_APPLY JGA
       left join res_doctor_recruit dr
       ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
       left join SYS_USER u
       on dr.DOCTOR_FLOW =  u.USER_FLOW
       LEFT JOIN RES_DOCTOR RD
       ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
       LEFT join SYS_ORG SO
       ON RD.ORG_FLOW = SO.ORG_FLOW
       INNER JOIN SYS_USER SU
       ON RD.DOCTOR_FLOW = SU.USER_FLOW
       LEFT JOIN RES_SCORE SCORE
       ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW
       AND SCORE.SCORE_TYPE_ID = 'PublicScore'
       AND SCORE.RECORD_STATUS='Y'
       LEFT JOIN (
       SELECT R.DOCTOR_FLOW, CASE  WHEN SUM (R.SCH_MONTH) > 33 THEN 33 ELSE SUM (R.SCH_MONTH) END AS SCH_MONTH
       FROM SCH_ARRANGE_RESULT R
       WHERE R.RECORD_STATUS = 'Y'
       AND EXISTS (
       SELECT 1 FROM SCH_ROTATION_DEPT D
       WHERE D.RECORD_STATUS = 'Y'
       AND R.STANDARD_GROUP_FLOW = D.GROUP_FLOW
       AND R.STANDARD_DEPT_ID = D.STANDARD_DEPT_ID
       AND D.ORG_FLOW IS NULL
       )
       GROUP BY R.DOCTOR_FLOW
       ) SS ON SS.DOCTOR_FLOW = RD.DOCTOR_FLOW
       WHERE RD.RECORD_STATUS = 'Y'
       AND JGA.RECORD_STATUS = 'Y'
       AND DR.RECORD_STATUS = 'Y'
       AND SU.RECORD_STATUS = 'Y'
       and DR.org_flow in(
       SELECT ORG_FLOW
       FROM SYS_ORG
       WHERE SYS_ORG.RECORD_STATUS='Y'
       <if test="org!=null">
           <if test="org.orgProvId!=null and org.orgProvId!=''">AND ORG_PROV_ID = #{org.orgProvId}
           </if>
           <if test="org.orgCityId!=null and org.orgCityId!=''">
               AND ORG_CITY_ID = #{org.orgCityId}
           </if>
           <if test="org.orgLevelId!=null and org.orgLevelId!=''">
               AND ORG_LEVEL_ID = #{org.orgLevelId}
           </if>
           <if test="org.orgTypeId!=null and org.orgTypeId!=''">
               AND ORG_TYPE_ID = #{org.orgTypeId}
           </if>
       </if>
       )
       <if test="isNotMatch!=null and isNotMatch!='' and isNotMatch =='Y'.toString()">
           AND not exists(
           SELECT 1 FROM
           JSRES_SPE_CONTRAST_PRACTICE T
           WHERE T.RECORD_STATUS='Y'
           AND T.SPE_ID=DR.SPE_ID
           AND T.TYPE_ID=JGA.GRADUATION_CATEGORY_ID
           AND T.PRACTICE_ID=JGA.GRADUATION_SCOPE_ID
           )
       </if>
       <if test="isNotEqual!=null and isNotEqual!='' and isNotEqual =='Y'.toString()">

           and ( case when dr.session_number <![CDATA[ < ]]>'2015' then              NVL((
           nvl((SELECT COUNT(1)
           FROM SCH_ROTATION_DEPT
           WHERE record_status = 'Y'
           AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = 'Doctor'
           and spe_id = dr.spe_id)
           else
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = cat_spe_id
           and spe_id = dr.spe_id)
           end )
           AND ORG_FLOW IS NULL),
           0)),0)
           else
           NVL((CASE
           WHEN dr.cat_spe_id = 'DoctorTrainingSpe' AND
           dr.session_number >= '2015' AND
           (dr.train_year = 'OneYear' OR
           dr.train_year = 'TwoYear') AND
           (SELECT COUNT(1)
           FROM sch_doctor_dept sdd
           WHERE sdd.record_status = 'Y'
           AND sdd.doctor_flow = dr.doctor_flow
           AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = 'Doctor'
           and spe_id = dr.spe_id)
           else
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = cat_spe_id
           and spe_id = dr.spe_id)
           end )
           AND sdd.org_flow = dr.org_flow) > 0 THEN
           (SELECT COUNT(1)
           FROM sch_doctor_dept sdd
           WHERE sdd.record_status = 'Y'
           AND sdd.doctor_flow = dr.doctor_flow
           and exists (
           select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
           and t.record_status='Y' and t.STANDARD_DEPT_ID=sdd.STANDARD_DEPT_ID
           and t.STANDARD_GROUP_FLOW=sdd.group_flow
           and t.rotation_flow=sdd.rotation_flow
           )
           AND sdd.rotation_flow = (case when cat_spe_id = 'DoctorTrainingSpe' then
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = 'Doctor'
           and spe_id = dr.spe_id)
           else
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = cat_spe_id
           and spe_id = dr.spe_id)
           end )
           AND sdd.org_flow = dr.org_flow)
           ELSE
           nvl((SELECT COUNT(1)
           FROM SCH_ROTATION_DEPT srd
           WHERE srd.record_status = 'Y'
           and exists (
           select 1 from sch_arrange_result t where t.doctor_flow=dr.doctor_flow
           and t.record_status='Y' and t.STANDARD_DEPT_ID=srd.STANDARD_DEPT_ID
           and t.STANDARD_GROUP_FLOW=srd.group_flow
           and t.rotation_flow=srd.rotation_flow
           )
           AND ROTATION_FLOW = (case when cat_spe_id = 'DoctorTrainingSpe' then
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = 'Doctor'
           and spe_id = dr.spe_id)
           else
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = cat_spe_id
           and spe_id = dr.spe_id)
           end )
           AND srd.ORG_FLOW IS NULL),
           0)
           END),
           0)

           end )

           !=nvl( (select count(1) from sch_rotation_dept where record_status='Y' and org_flow is null
           and rotation_flow=(case when cat_spe_id = 'DoctorTrainingSpe' then
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = 'Doctor'
           and spe_id = dr.spe_id)
           else
           (select rotation_flow
           from (select rotation_flow,
           spe_id,
           Doctor_Category_Id
           from sch_rotation
           where record_status = 'Y'
           and Publish_Flag = 'Y'
           order by create_time desc) b
           where rownum = 1
           and Doctor_Category_Id = cat_spe_id
           and spe_id = dr.spe_id)
           end ) and
           exists ( select 1 from sch_rotation_dept_after where
           record_status='Y'and SCH_ROTATION_DEPT_FLOW=sch_rotation_dept.record_flow and doctor_flow=dr.doctor_flow)),0)
       </if>
       <if test="orgFlow!=null and orgFlow!=''">
           AND DR.org_flow = #{orgFlow}
       </if>
       <if test="orgFlowList!=null and orgFlowList.size>0">
           and DR.org_flow in
           <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="roleFlag == 'local'.toString()">
           and dr.doctor_flow not in (
               select doctor_flow
               from res_doctor_recruit
               where record_status = 'Y'
               and DR.org_flow in
               <foreach collection="orgFlowList" open="(" separator="," close=")" item="item">#{item}</foreach>
               and cat_spe_id = 'AssiGeneral'
           )
       </if>
       <if test="docTypeList!=null and docTypeList.size>0">
           and RD.DOCTOR_TYPE_ID in
           <foreach collection="docTypeList" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="speIds!=null and speIds.size>0">
           and dr.SPE_ID in
           <foreach collection="speIds" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="trainingTypeId!=null and trainingTypeId!=''">
           and dr.CAT_SPE_ID = #{trainingTypeId}
       </if>
       <if test="trainingSpeId!=null and trainingSpeId!=''">
           and dr.SPE_ID = #{trainingSpeId}
       </if>
       <if test="sessionNumbers!=null and sessionNumbers.size>0">
           and dr.SESSION_NUMBER in
           <foreach collection="sessionNumbers" open="(" separator="," close=")" item="item">#{item}</foreach>
       </if>
       <if test="sessionNumber!=null and sessionNumber!=''">
           and dr.SESSION_NUMBER = #{sessionNumber}
       </if>
       <if test="graduationYear!=null and graduationYear!=''">
           and dr.GRADUATION_YEAR = #{graduationYear}
       </if>
       <if test="trainYear!=null and trainYear!=''">
           and dr.TRAIN_YEAR = #{trainYear}
       </if>
       <if test="qualificationMaterialId!=null and qualificationMaterialId!=''">
           and JGA.GRADUATION_MATERIAL_ID = #{qualificationMaterialId}
       </if>
       <if test="graduationMaterialName !=null and graduationMaterialName !=''">
           and JGA.graduation_Material_Name = #{graduationMaterialName}
       </if>
       <if test="testId!=null and testId!=''">
           and JGA.TEST_ID = #{testId}
       </if>
       <if test="passFlag!=null and passFlag!=''">
           and SCORE.SKILL_SCORE = #{passFlag}
       </if>
       <if test="completeBi!=null and completeBi!=''">
           and to_number(NVL(JGA.AVG_COMPLETE,0))   <![CDATA[<=]]> #{completeBi}
       </if>
       <if test="auditBi!=null and auditBi!=''">
           and to_number(NVL(JGA.AVG_AUDIT,0))  <![CDATA[<=]]> #{auditBi}
       </if>
       <if test="userName!=null and userName!=''">
           <bind name="userName" value="'%'+userName+'%'"/>
           and Su.USER_NAME like #{userName}
       </if>
       <if test="idNo!=null and idNo!=''">
           <bind name="idNo" value="'%'+idNo+'%'"/>
           and Su.ID_NO like #{idNo}
       </if>
       <if test="educationId!=null and educationId!=''">
           and Su.EDUCATION_ID = #{educationId}
       </if>
       <if test="auditStatusId !='' and  auditStatusId!=null">
           <if test="auditStatusId == 'Wait'">
               AND JGA.AUDIT_STATUS_ID in ( 'WaitChargePass','ChargeNotPassed','WaitGlobalPass','GlobalNotPassed','GlobalPassed')
           </if>
           <if test="auditStatusId != 'Wait'">
               AND JGA.AUDIT_STATUS_ID =#{auditStatusId}
           </if>
       </if>
       <if test="applyYear!=null and applyYear!=''">
           AND JGA.APPLY_YEAR = #{applyYear}
       </if>
       <if test="schMonthSearch!=null and schMonthSearch!=''">
           <if test="schMonthSearch == 'GreaterThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) > #{schMonth}
           </if>
           <if test="schMonthSearch == 'Equal'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) = #{schMonth}
           </if>
           <if test="schMonthSearch == 'LessThan'.toString() and schMonth !=null and schMonth !=''">
               and to_number(ss.sch_month) <![CDATA[<]]> #{schMonth}
           </if>
       </if>
       <if test="proveFileUrl!=null and proveFileUrl!='' and 'Y'.toString() == proveFileUrl">
           and exists (
           select 1 from res_doctor_recruit
           where record_status = 'Y'
           and prove_file_url is not null
           and recruit_flow = jga.recruit_flow
           )
       </if>
       <if test="proveFileUrl!=null and proveFileUrl!='' and 'N'.toString() == proveFileUrl">
           and exists (
           select 1 from res_doctor_recruit
           where record_status = 'Y'
           and prove_file_url is null
           and recruit_flow = jga.recruit_flow
           )
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'Y'.toString() == AfterEvaluation">
           and exists (
           select 1 from jsres_doctor_graduation_info
           where record_status = 'Y'
           and doctor_flow = rd.doctor_flow
           and image_count != 0
           )
       </if>
       <if test="AfterEvaluation !=null and AfterEvaluation !='' and 'N'.toString() == AfterEvaluation">
           and exists (
           select 1 from jsres_doctor_graduation_info
           where record_status = 'Y'
           and doctor_flow = rd.doctor_flow
           and image_count = 0
           )
       </if>
       <if test="AfterEvaluationSearch!=null and AfterEvaluationSearch!=''">
           <if test="AfterEvaluationSearch == 'GreaterThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) > #{AfterEvaluationScale}
               )
           </if>
           <if test="AfterEvaluationSearch == 'Equal'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) = #{AfterEvaluationScale}
               )
           </if>
           <if test="AfterEvaluationSearch == 'LessThan'.toString() and AfterEvaluationScale !=null and AfterEvaluationScale !=''">
               and exists (
               select 1 from jsres_doctor_graduation_info
               where record_status = 'Y'
               and image_all_count != 0
               and doctor_flow = rd.doctor_flow
               and to_number(avg_image_count) <![CDATA[<]]> #{AfterEvaluationScale}
               )
           </if>
       </if>
       <if test="passFile!=null and passFile!='' and 'Y'.toString() == passFile">
           and exists (
           select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
           )
       </if>
       <if test="passFile!=null and passFile!='' and 'N'.toString() == passFile">
           and not exists (
           select 1 from pub_file where record_status = 'Y' and JGA.RECRUIT_FLOW = PRODUCT_FLOW AND PRODUCT_TYPE = 'asseApplication'
           )
       </if>
       <if test="avgCompleteSearch!=null and avgCompleteSearch!=''">
           <if test="avgCompleteSearch == 'GreaterThan'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count > data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count > data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
           <if test="avgCompleteSearch == 'Equal'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
           <if test="avgCompleteSearch == 'LessThan'.toString() and avgComplete !=null and avgComplete !=''">
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneHour'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count = data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 10
                   )
               </if>
               <if test="completeTime != null and completeTime != '' and completeTime == 'oneDay'.toString()">
                   and exists (
                   select 1 from jsres_doctor_graduation_info
                   where record_status = 'Y'
                   and data_All_Count != 0
                   and doctor_flow = rd.doctor_flow
                   and data_Count <![CDATA[<]]> data_All_Count * ${avgComplete}/100
                   and LENGTH(data_time) = 8
                   )
               </if>
           </if>
       </if>
       <if test="avgAuditSearch!=null and avgAuditSearch!=''">
           <if test="avgAuditSearch == 'GreaterThan'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(JGA.avg_audit) > #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'Equal'.toString() and avgAudit !=null and avgAudit !=''">
               and to_number(JGA.avg_audit) = #{avgAudit}
           </if>
           <if test="avgAuditSearch == 'LessThan'.toString() and avgAudit !=null and avgAudit !=''">
               and (to_number(JGA.avg_audit) <![CDATA[<]]> #{avgAudit} or jga.avg_audit is null)
           </if>
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'Y'.toString() == qualificationName">
           and exists (
           select
           1
           from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') = 'Y'
           )
       </if>
       <if test="qualificationName!=null and qualificationName!='' and 'N'.toString() == qualificationName">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//isHaveQualificationCertificate') != 'Y'
           )
       </if>
       <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='Y'.toString()">
           and exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is not null
           )
       </if>
       <if test="qualificationMaterialCode!=null and qualificationMaterialCode!='' and qualificationMaterialCode=='N'.toString()">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateCode') is null
           )
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'Y'.toString() == qualificationMaterialUrl">
           and exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is not null
           )
       </if>
       <if test="qualificationMaterialUrl!=null and qualificationMaterialUrl!='' and 'N'.toString() == qualificationMaterialUrl">
           and not exists (
           select 1 from Pub_User_Resume
           where record_status = 'Y'
           and user_flow = dr.doctor_flow
           and extractvalue(XMLTYPE(user_resume),'//doctorQualificationCertificateUrl') is null
           )
       </if>
       order by
       DR.SPE_ID,
       DR.SESSION_NUMBER,
       NLSSORT(su.USER_NAME,'NLS_SORT = SCHINESE_PINYIN_M')
   </select>

    <resultMap id="chargeQueryExportMap2" type="java.util.HashMap"
               extends="com.pinde.core.common.sci.dao.PubUserResumeMapper.ResultMapWithBLOBs">
       <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
       <result column="RECRUIT_FLOW" property="recruitFlow" jdbcType="VARCHAR" />
       <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
       <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
       <result column="COUNTRY_ORG_FLOW" property="countryOrgFlow" jdbcType="VARCHAR" />
       <result column="COUNTRY_ORG_NAME" property="countryOrgName" jdbcType="VARCHAR" />
       <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
       <result column="ID_NO" property="idNo" jdbcType="VARCHAR" />
       <result column="EDUCATION_ID" property="educationId" jdbcType="VARCHAR" />
       <result column="EDUCATION_NAME" property="educationName" jdbcType="VARCHAR" />
       <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
       <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
       <result column="CHANGE_SPE_ID" property="changeSpeId" jdbcType="VARCHAR" />
       <result column="CHANGE_SPE_NAME" property="changeSpeName" jdbcType="VARCHAR" />
       <result column="SESSION_NUMBER" property="sessionNumber" jdbcType="VARCHAR" />
       <result column="TRAIN_YEAR" property="trainYear" jdbcType="VARCHAR" />
       <result column="TRAIN_YEAR_NAME" property="trainYearName" jdbcType="VARCHAR" />
       <result column="RECRUIT_DATE" jdbcType="VARCHAR" property="startDate" />
       <result column="END_DATE" jdbcType="VARCHAR" property="endDate" />
       <result column="APPLY_FLOW" jdbcType="VARCHAR" property="applyFlow" />
       <result column="APPLY_YEAR" jdbcType="VARCHAR" property="applyYear" />
       <result column="REGISTE_MANUA" jdbcType="VARCHAR" property="registeManua" />
       <result column="SEX_NAME" jdbcType="VARCHAR" property="sexName" />
       <result column="WORK_ORG_NAME" jdbcType="VARCHAR" property="workOrgName" />
       <result column="ORG_CITY_NAME" jdbcType="VARCHAR" property="orgCityName" />
       <result column="CRET_TYPE_NAME" jdbcType="VARCHAR" property="cretTypeName" />
       <result column="NATION_NAME" jdbcType="VARCHAR" property="nationName" />
       <result column="TRAINING_TYPE_NAME" jdbcType="VARCHAR" property="trainingTypeName" />
       <result column="GRADUATED_NAME" jdbcType="VARCHAR" property="graduatedName" />
       <result column="GRADUATION_TIME" jdbcType="VARCHAR" property="graduationTime" />
       <result column="SPECIALIZED" jdbcType="VARCHAR" property="specialized" />
       <result column="DEGREE_CATEGORY_NAME" jdbcType="VARCHAR" property="degreeCategoryName" />
       <result column="USER_ADDRESS" jdbcType="VARCHAR" property="userAddress" />
       <result column="USER_BIRTHDAY" jdbcType="VARCHAR" property="userBirthday" />
       <result column="DOCTOR_TYPE_ID" jdbcType="VARCHAR" property="doctorTypeId" />
       <result column="SIGNUP_STATUS" jdbcType="VARCHAR" property="signupStatus" />
       <result column="IS_JOINT_ORG" jdbcType="VARCHAR" property="isJointOrg" />
   </resultMap>

   <select id="chargeQueryListForExport2" resultMap="chargeQueryExportMap2">
       SELECT RD.DOCTOR_FLOW, JGA.TEST_ID, DR.RECRUIT_FLOW, DR.ORG_NAME, DR.ORG_FLOW
           , SU.USER_NAME,SU.SEX_NAME,SU.CRET_TYPE_NAME,SU.ID_NO,SU.USER_BIRTHDAY,SU.NATION_NAME, SU.EDUCATION_ID, SU.EDUCATION_NAME
           , DR.SPE_ID, DR.SPE_NAME, RD.TRAINING_TYPE_NAME, RD.DOCTOR_TYPE_ID, CASE WHEN JES.SIGNUP_FLOW IS NULL THEN '是' ELSE '否' END AS SIGNUP_STATUS
           ,RD.DEGREE_CATEGORY_NAME, RD.GRADUATED_NAME, RD.SPECIALIZED
           , to_char(to_date(DR.RECRUIT_DATE,'yyyy-mm-dd'),'yyyy-mm') RECRUIT_DATE
           , to_char(to_date(RD.GRADUATION_TIME,'yyyy-mm-dd'),'yyyy-mm') GRADUATION_TIME
           , case when (select 1 from res_joint_org where dr.org_flow = joint_org_flow and record_status = 'Y') = 1 then '是' else '否' end as is_joint_org
           , SO.ORG_CITY_ID, SO.ORG_CITY_NAME, nvl(DR.CHANGE_SPE_ID, DR.SPE_ID) AS CHANGE_SPE_ID, nvl(DR.CHANGE_SPE_NAME, DR.SPE_NAME) AS CHANGE_SPE_NAME, DR.SESSION_NUMBER
           , DR.TRAIN_YEAR, JGA.GRADUATION_SCOPE_NAME AS PRACTICING_SCOPE_NAME, RD.CERTIFICATE_NO, SCORE.SCORE_FLOW, JGA.APPLY_FLOW
       FROM JSRES_GRADUATION_APPLY JGA
       LEFT JOIN res_doctor_recruit dr ON JGA.RECRUIT_FLOW = DR.RECRUIT_FLOW
       LEFT JOIN SYS_USER u ON dr.DOCTOR_FLOW = u.USER_FLOW
       LEFT JOIN RES_DOCTOR RD ON DR.DOCTOR_FLOW = RD.DOCTOR_FLOW
       LEFT JOIN SYS_ORG SO ON RD.ORG_FLOW = SO.ORG_FLOW
       LEFT JOIN jsres_exam_signup JES ON JES.DOCTOR_FLOW = RD.DOCTOR_FLOW AND JES.RECORD_STATUS = 'Y'
       INNER JOIN SYS_USER SU ON RD.DOCTOR_FLOW = SU.USER_FLOW
       LEFT JOIN RES_SCORE SCORE ON SCORE.Recruit_Flow = DR.RECRUIT_FLOW AND SCORE.SCORE_TYPE_ID = 'PublicScore' AND SCORE.RECORD_STATUS = 'Y'
       WHERE RD.RECORD_STATUS = 'Y'
       AND JGA.RECORD_STATUS = 'Y'
       AND DR.RECORD_STATUS = 'Y'
       AND SU.RECORD_STATUS = 'Y'
       AND DR.org_flow IN (SELECT ORG_FLOW
       FROM SYS_ORG
       WHERE SYS_ORG.RECORD_STATUS = 'Y'
           <if test="org!=null">
               <if test="org.orgProvId!=null and org.orgProvId!=''">
                   AND ORG_PROV_ID = #{org.orgProvId}
               </if>
               <if test="org.orgCityId!=null and org.orgCityId!=''">
                   AND ORG_CITY_ID = #{org.orgCityId}
               </if>
               <if test="org.orgLevelId!=null and org.orgLevelId!=''">
                   AND ORG_LEVEL_ID = #{org.orgLevelId}
               </if>
               <if test="org.orgTypeId!=null and org.orgTypeId!=''">
                   AND ORG_TYPE_ID = #{org.orgTypeId}
               </if>
           </if>
       )
       AND RD.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social', 'Graduate')
       AND JGA.AUDIT_STATUS_ID = 'GlobalPassed'
       <if test="applyYear!=null and applyYear!=''">
           AND JGA.APPLY_YEAR = #{applyYear}
       </if>
   ORDER BY NLSSORT(dr.org_name, 'NLS_SORT = SCHINESE_PINYIN_M'), DR.SPE_ID, NLSSORT(su.USER_NAME, 'NLS_SORT = SCHINESE_PINYIN_M'), DR.SESSION_NUMBER
   </select>


</mapper>