<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.EduCourseMaterialMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.EduCourseMaterial" >
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="COURSE_FLOW" property="courseFlow" jdbcType="VARCHAR" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_NAME_EN" property="courseNameEn" jdbcType="VARCHAR" />
    <result column="COURSE_CREDIT" property="courseCredit" jdbcType="VARCHAR" />
    <result column="COURSE_PERIOD" property="coursePeriod" jdbcType="VARCHAR" />
    <result column="GRADATION_ID" property="gradationId" jdbcType="VARCHAR" />
    <result column="GRADATION_NAME" property="gradationName" jdbcType="VARCHAR" />
    <result column="ASSUME_ORG_FLOW" property="assumeOrgFlow" jdbcType="VARCHAR" />
    <result column="ASSUME_ORG_NAME" property="assumeOrgName" jdbcType="VARCHAR" />
    <result column="SCHOOL_YEAR_DESC" property="schoolYearDesc" jdbcType="VARCHAR" />
    <result column="GRADE_DESC" property="gradeDesc" jdbcType="VARCHAR" />
    <result column="TERM_DESC" property="termDesc" jdbcType="VARCHAR" />
    <result column="TEACHING_PLACE" property="teachingPlace" jdbcType="VARCHAR" />
    <result column="FORM_TYPE" property="formType" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pinde.sci.model.mo.EduCourseMaterial" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, COURSE_FLOW, COURSE_NAME, COURSE_NAME_EN, COURSE_CREDIT, COURSE_PERIOD, 
    GRADATION_ID, GRADATION_NAME, ASSUME_ORG_FLOW, ASSUME_ORG_NAME, SCHOOL_YEAR_DESC, 
    GRADE_DESC, TERM_DESC, TEACHING_PLACE, FORM_TYPE, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pinde.sci.model.mo.EduCourseMaterialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.EDU_COURSE_MATERIAL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.EduCourseMaterialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EDU_COURSE_MATERIAL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.EDU_COURSE_MATERIAL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.EDU_COURSE_MATERIAL
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.EduCourseMaterialExample" >
    delete from PDSCI.EDU_COURSE_MATERIAL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.EduCourseMaterial" >
    insert into PDSCI.EDU_COURSE_MATERIAL (RECORD_FLOW, COURSE_FLOW, COURSE_NAME, 
      COURSE_NAME_EN, COURSE_CREDIT, COURSE_PERIOD, 
      GRADATION_ID, GRADATION_NAME, ASSUME_ORG_FLOW, 
      ASSUME_ORG_NAME, SCHOOL_YEAR_DESC, GRADE_DESC, 
      TERM_DESC, TEACHING_PLACE, FORM_TYPE, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW, CONTENT
      )
    values (#{recordFlow,jdbcType=VARCHAR}, #{courseFlow,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseNameEn,jdbcType=VARCHAR}, #{courseCredit,jdbcType=VARCHAR}, #{coursePeriod,jdbcType=VARCHAR}, 
      #{gradationId,jdbcType=VARCHAR}, #{gradationName,jdbcType=VARCHAR}, #{assumeOrgFlow,jdbcType=VARCHAR}, 
      #{assumeOrgName,jdbcType=VARCHAR}, #{schoolYearDesc,jdbcType=VARCHAR}, #{gradeDesc,jdbcType=VARCHAR}, 
      #{termDesc,jdbcType=VARCHAR}, #{teachingPlace,jdbcType=VARCHAR}, #{formType,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, #{content,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.EduCourseMaterial" >
    insert into PDSCI.EDU_COURSE_MATERIAL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="courseFlow != null" >
        COURSE_FLOW,
      </if>
      <if test="courseName != null" >
        COURSE_NAME,
      </if>
      <if test="courseNameEn != null" >
        COURSE_NAME_EN,
      </if>
      <if test="courseCredit != null" >
        COURSE_CREDIT,
      </if>
      <if test="coursePeriod != null" >
        COURSE_PERIOD,
      </if>
      <if test="gradationId != null" >
        GRADATION_ID,
      </if>
      <if test="gradationName != null" >
        GRADATION_NAME,
      </if>
      <if test="assumeOrgFlow != null" >
        ASSUME_ORG_FLOW,
      </if>
      <if test="assumeOrgName != null" >
        ASSUME_ORG_NAME,
      </if>
      <if test="schoolYearDesc != null" >
        SCHOOL_YEAR_DESC,
      </if>
      <if test="gradeDesc != null" >
        GRADE_DESC,
      </if>
      <if test="termDesc != null" >
        TERM_DESC,
      </if>
      <if test="teachingPlace != null" >
        TEACHING_PLACE,
      </if>
      <if test="formType != null" >
        FORM_TYPE,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="courseFlow != null" >
        #{courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNameEn != null" >
        #{courseNameEn,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null" >
        #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="coursePeriod != null" >
        #{coursePeriod,jdbcType=VARCHAR},
      </if>
      <if test="gradationId != null" >
        #{gradationId,jdbcType=VARCHAR},
      </if>
      <if test="gradationName != null" >
        #{gradationName,jdbcType=VARCHAR},
      </if>
      <if test="assumeOrgFlow != null" >
        #{assumeOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="assumeOrgName != null" >
        #{assumeOrgName,jdbcType=VARCHAR},
      </if>
      <if test="schoolYearDesc != null" >
        #{schoolYearDesc,jdbcType=VARCHAR},
      </if>
      <if test="gradeDesc != null" >
        #{gradeDesc,jdbcType=VARCHAR},
      </if>
      <if test="termDesc != null" >
        #{termDesc,jdbcType=VARCHAR},
      </if>
      <if test="teachingPlace != null" >
        #{teachingPlace,jdbcType=VARCHAR},
      </if>
      <if test="formType != null" >
        #{formType,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.EduCourseMaterialExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.EDU_COURSE_MATERIAL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.EDU_COURSE_MATERIAL
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.courseFlow != null" >
        COURSE_FLOW = #{record.courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null" >
        COURSE_NAME = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNameEn != null" >
        COURSE_NAME_EN = #{record.courseNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCredit != null" >
        COURSE_CREDIT = #{record.courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="record.coursePeriod != null" >
        COURSE_PERIOD = #{record.coursePeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.gradationId != null" >
        GRADATION_ID = #{record.gradationId,jdbcType=VARCHAR},
      </if>
      <if test="record.gradationName != null" >
        GRADATION_NAME = #{record.gradationName,jdbcType=VARCHAR},
      </if>
      <if test="record.assumeOrgFlow != null" >
        ASSUME_ORG_FLOW = #{record.assumeOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.assumeOrgName != null" >
        ASSUME_ORG_NAME = #{record.assumeOrgName,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolYearDesc != null" >
        SCHOOL_YEAR_DESC = #{record.schoolYearDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeDesc != null" >
        GRADE_DESC = #{record.gradeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.termDesc != null" >
        TERM_DESC = #{record.termDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingPlace != null" >
        TEACHING_PLACE = #{record.teachingPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.formType != null" >
        FORM_TYPE = #{record.formType,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update PDSCI.EDU_COURSE_MATERIAL
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      COURSE_FLOW = #{record.courseFlow,jdbcType=VARCHAR},
      COURSE_NAME = #{record.courseName,jdbcType=VARCHAR},
      COURSE_NAME_EN = #{record.courseNameEn,jdbcType=VARCHAR},
      COURSE_CREDIT = #{record.courseCredit,jdbcType=VARCHAR},
      COURSE_PERIOD = #{record.coursePeriod,jdbcType=VARCHAR},
      GRADATION_ID = #{record.gradationId,jdbcType=VARCHAR},
      GRADATION_NAME = #{record.gradationName,jdbcType=VARCHAR},
      ASSUME_ORG_FLOW = #{record.assumeOrgFlow,jdbcType=VARCHAR},
      ASSUME_ORG_NAME = #{record.assumeOrgName,jdbcType=VARCHAR},
      SCHOOL_YEAR_DESC = #{record.schoolYearDesc,jdbcType=VARCHAR},
      GRADE_DESC = #{record.gradeDesc,jdbcType=VARCHAR},
      TERM_DESC = #{record.termDesc,jdbcType=VARCHAR},
      TEACHING_PLACE = #{record.teachingPlace,jdbcType=VARCHAR},
      FORM_TYPE = #{record.formType,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.EDU_COURSE_MATERIAL
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      COURSE_FLOW = #{record.courseFlow,jdbcType=VARCHAR},
      COURSE_NAME = #{record.courseName,jdbcType=VARCHAR},
      COURSE_NAME_EN = #{record.courseNameEn,jdbcType=VARCHAR},
      COURSE_CREDIT = #{record.courseCredit,jdbcType=VARCHAR},
      COURSE_PERIOD = #{record.coursePeriod,jdbcType=VARCHAR},
      GRADATION_ID = #{record.gradationId,jdbcType=VARCHAR},
      GRADATION_NAME = #{record.gradationName,jdbcType=VARCHAR},
      ASSUME_ORG_FLOW = #{record.assumeOrgFlow,jdbcType=VARCHAR},
      ASSUME_ORG_NAME = #{record.assumeOrgName,jdbcType=VARCHAR},
      SCHOOL_YEAR_DESC = #{record.schoolYearDesc,jdbcType=VARCHAR},
      GRADE_DESC = #{record.gradeDesc,jdbcType=VARCHAR},
      TERM_DESC = #{record.termDesc,jdbcType=VARCHAR},
      TEACHING_PLACE = #{record.teachingPlace,jdbcType=VARCHAR},
      FORM_TYPE = #{record.formType,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.EduCourseMaterial" >
    update PDSCI.EDU_COURSE_MATERIAL
    <set >
      <if test="courseFlow != null" >
        COURSE_FLOW = #{courseFlow,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNameEn != null" >
        COURSE_NAME_EN = #{courseNameEn,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null" >
        COURSE_CREDIT = #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="coursePeriod != null" >
        COURSE_PERIOD = #{coursePeriod,jdbcType=VARCHAR},
      </if>
      <if test="gradationId != null" >
        GRADATION_ID = #{gradationId,jdbcType=VARCHAR},
      </if>
      <if test="gradationName != null" >
        GRADATION_NAME = #{gradationName,jdbcType=VARCHAR},
      </if>
      <if test="assumeOrgFlow != null" >
        ASSUME_ORG_FLOW = #{assumeOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="assumeOrgName != null" >
        ASSUME_ORG_NAME = #{assumeOrgName,jdbcType=VARCHAR},
      </if>
      <if test="schoolYearDesc != null" >
        SCHOOL_YEAR_DESC = #{schoolYearDesc,jdbcType=VARCHAR},
      </if>
      <if test="gradeDesc != null" >
        GRADE_DESC = #{gradeDesc,jdbcType=VARCHAR},
      </if>
      <if test="termDesc != null" >
        TERM_DESC = #{termDesc,jdbcType=VARCHAR},
      </if>
      <if test="teachingPlace != null" >
        TEACHING_PLACE = #{teachingPlace,jdbcType=VARCHAR},
      </if>
      <if test="formType != null" >
        FORM_TYPE = #{formType,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=CLOB},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.sci.model.mo.EduCourseMaterial" >
    update PDSCI.EDU_COURSE_MATERIAL
    set COURSE_FLOW = #{courseFlow,jdbcType=VARCHAR},
      COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      COURSE_NAME_EN = #{courseNameEn,jdbcType=VARCHAR},
      COURSE_CREDIT = #{courseCredit,jdbcType=VARCHAR},
      COURSE_PERIOD = #{coursePeriod,jdbcType=VARCHAR},
      GRADATION_ID = #{gradationId,jdbcType=VARCHAR},
      GRADATION_NAME = #{gradationName,jdbcType=VARCHAR},
      ASSUME_ORG_FLOW = #{assumeOrgFlow,jdbcType=VARCHAR},
      ASSUME_ORG_NAME = #{assumeOrgName,jdbcType=VARCHAR},
      SCHOOL_YEAR_DESC = #{schoolYearDesc,jdbcType=VARCHAR},
      GRADE_DESC = #{gradeDesc,jdbcType=VARCHAR},
      TERM_DESC = #{termDesc,jdbcType=VARCHAR},
      TEACHING_PLACE = #{teachingPlace,jdbcType=VARCHAR},
      FORM_TYPE = #{formType,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=CLOB}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.EduCourseMaterial" >
    update PDSCI.EDU_COURSE_MATERIAL
    set COURSE_FLOW = #{courseFlow,jdbcType=VARCHAR},
      COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      COURSE_NAME_EN = #{courseNameEn,jdbcType=VARCHAR},
      COURSE_CREDIT = #{courseCredit,jdbcType=VARCHAR},
      COURSE_PERIOD = #{coursePeriod,jdbcType=VARCHAR},
      GRADATION_ID = #{gradationId,jdbcType=VARCHAR},
      GRADATION_NAME = #{gradationName,jdbcType=VARCHAR},
      ASSUME_ORG_FLOW = #{assumeOrgFlow,jdbcType=VARCHAR},
      ASSUME_ORG_NAME = #{assumeOrgName,jdbcType=VARCHAR},
      SCHOOL_YEAR_DESC = #{schoolYearDesc,jdbcType=VARCHAR},
      GRADE_DESC = #{gradeDesc,jdbcType=VARCHAR},
      TERM_DESC = #{termDesc,jdbcType=VARCHAR},
      TEACHING_PLACE = #{teachingPlace,jdbcType=VARCHAR},
      FORM_TYPE = #{formType,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>