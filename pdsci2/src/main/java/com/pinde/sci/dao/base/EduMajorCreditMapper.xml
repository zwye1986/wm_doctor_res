<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.EduMajorCreditMapper">
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.EduMajorCredit">
    <id column="RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow" />
    <result column="MAJOR_ID" jdbcType="VARCHAR" property="majorId" />
    <result column="MAJOR_NAME" jdbcType="VARCHAR" property="majorName" />
    <result column="CREDIT" jdbcType="VARCHAR" property="credit" />
    <result column="DEGREE_CREDIT" jdbcType="VARCHAR" property="degreeCredit" />
    <result column="TRAIN_TYPE_ID" jdbcType="VARCHAR" property="trainTypeId" />
    <result column="TRAIN_TYPE_NAME" jdbcType="VARCHAR" property="trainTypeName" />
    <result column="TRAIN_CATEGORY_ID" jdbcType="VARCHAR" property="trainCategoryId" />
    <result column="TRAIN_CATEGORY_NAME" jdbcType="VARCHAR" property="trainCategoryName" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RECORD_FLOW, MAJOR_ID, MAJOR_NAME, CREDIT, DEGREE_CREDIT, TRAIN_TYPE_ID, TRAIN_TYPE_NAME, 
    TRAIN_CATEGORY_ID, TRAIN_CATEGORY_NAME, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
    MODIFY_TIME, MODIFY_USER_FLOW
  </sql>
  <select id="selectByExample" parameterType="com.pinde.sci.model.mo.EduMajorCreditExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.EDU_MAJOR_CREDIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PDSCI.EDU_MAJOR_CREDIT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PDSCI.EDU_MAJOR_CREDIT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.EduMajorCreditExample">
    delete from PDSCI.EDU_MAJOR_CREDIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.EduMajorCredit">
    insert into PDSCI.EDU_MAJOR_CREDIT (RECORD_FLOW, MAJOR_ID, MAJOR_NAME, 
      CREDIT, DEGREE_CREDIT, TRAIN_TYPE_ID, 
      TRAIN_TYPE_NAME, TRAIN_CATEGORY_ID, TRAIN_CATEGORY_NAME, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW)
    values (#{recordFlow,jdbcType=VARCHAR}, #{majorId,jdbcType=VARCHAR}, #{majorName,jdbcType=VARCHAR}, 
      #{credit,jdbcType=VARCHAR}, #{degreeCredit,jdbcType=VARCHAR}, #{trainTypeId,jdbcType=VARCHAR}, 
      #{trainTypeName,jdbcType=VARCHAR}, #{trainCategoryId,jdbcType=VARCHAR}, #{trainCategoryName,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.EduMajorCredit">
    insert into PDSCI.EDU_MAJOR_CREDIT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        RECORD_FLOW,
      </if>
      <if test="majorId != null">
        MAJOR_ID,
      </if>
      <if test="majorName != null">
        MAJOR_NAME,
      </if>
      <if test="credit != null">
        CREDIT,
      </if>
      <if test="degreeCredit != null">
        DEGREE_CREDIT,
      </if>
      <if test="trainTypeId != null">
        TRAIN_TYPE_ID,
      </if>
      <if test="trainTypeName != null">
        TRAIN_TYPE_NAME,
      </if>
      <if test="trainCategoryId != null">
        TRAIN_CATEGORY_ID,
      </if>
      <if test="trainCategoryName != null">
        TRAIN_CATEGORY_NAME,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null">
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="degreeCredit != null">
        #{degreeCredit,jdbcType=VARCHAR},
      </if>
      <if test="trainTypeId != null">
        #{trainTypeId,jdbcType=VARCHAR},
      </if>
      <if test="trainTypeName != null">
        #{trainTypeName,jdbcType=VARCHAR},
      </if>
      <if test="trainCategoryId != null">
        #{trainCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="trainCategoryName != null">
        #{trainCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.EduMajorCreditExample" resultType="java.lang.Integer">
    select count(*) from PDSCI.EDU_MAJOR_CREDIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PDSCI.EDU_MAJOR_CREDIT
    <set>
      <if test="record.recordFlow != null">
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null">
        MAJOR_ID = #{record.majorId,jdbcType=VARCHAR},
      </if>
      <if test="record.majorName != null">
        MAJOR_NAME = #{record.majorName,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        CREDIT = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeCredit != null">
        DEGREE_CREDIT = #{record.degreeCredit,jdbcType=VARCHAR},
      </if>
      <if test="record.trainTypeId != null">
        TRAIN_TYPE_ID = #{record.trainTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainTypeName != null">
        TRAIN_TYPE_NAME = #{record.trainTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.trainCategoryId != null">
        TRAIN_CATEGORY_ID = #{record.trainCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainCategoryName != null">
        TRAIN_CATEGORY_NAME = #{record.trainCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PDSCI.EDU_MAJOR_CREDIT
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      MAJOR_ID = #{record.majorId,jdbcType=VARCHAR},
      MAJOR_NAME = #{record.majorName,jdbcType=VARCHAR},
      CREDIT = #{record.credit,jdbcType=VARCHAR},
      DEGREE_CREDIT = #{record.degreeCredit,jdbcType=VARCHAR},
      TRAIN_TYPE_ID = #{record.trainTypeId,jdbcType=VARCHAR},
      TRAIN_TYPE_NAME = #{record.trainTypeName,jdbcType=VARCHAR},
      TRAIN_CATEGORY_ID = #{record.trainCategoryId,jdbcType=VARCHAR},
      TRAIN_CATEGORY_NAME = #{record.trainCategoryName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.EduMajorCredit">
    update PDSCI.EDU_MAJOR_CREDIT
    <set>
      <if test="majorId != null">
        MAJOR_ID = #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null">
        MAJOR_NAME = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        CREDIT = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="degreeCredit != null">
        DEGREE_CREDIT = #{degreeCredit,jdbcType=VARCHAR},
      </if>
      <if test="trainTypeId != null">
        TRAIN_TYPE_ID = #{trainTypeId,jdbcType=VARCHAR},
      </if>
      <if test="trainTypeName != null">
        TRAIN_TYPE_NAME = #{trainTypeName,jdbcType=VARCHAR},
      </if>
      <if test="trainCategoryId != null">
        TRAIN_CATEGORY_ID = #{trainCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="trainCategoryName != null">
        TRAIN_CATEGORY_NAME = #{trainCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.EduMajorCredit">
    update PDSCI.EDU_MAJOR_CREDIT
    set MAJOR_ID = #{majorId,jdbcType=VARCHAR},
      MAJOR_NAME = #{majorName,jdbcType=VARCHAR},
      CREDIT = #{credit,jdbcType=VARCHAR},
      DEGREE_CREDIT = #{degreeCredit,jdbcType=VARCHAR},
      TRAIN_TYPE_ID = #{trainTypeId,jdbcType=VARCHAR},
      TRAIN_TYPE_NAME = #{trainTypeName,jdbcType=VARCHAR},
      TRAIN_CATEGORY_ID = #{trainCategoryId,jdbcType=VARCHAR},
      TRAIN_CATEGORY_NAME = #{trainCategoryName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>