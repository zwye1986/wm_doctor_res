<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.jsres.GraduationDoctorStatisticsMapper">

    <!-- 学员统计信息 -->
    <resultMap id="graduationDoctorMap" type="com.pinde.sci.form.jsres.GraduationDoctorStatisticsInfo">
        <result property="speId" column="SPE_ID" jdbcType="VARCHAR" />
        <result property="speName" column="SPE_NAME" jdbcType="VARCHAR" />
        <result property="orgFlow" column="ORG_FLOW" jdbcType="VARCHAR" />
        <result property="orgCode" column="ORG_CODE" jdbcType="VARCHAR" />
        <result property="orgName" column="ORG_NAME" jdbcType="VARCHAR" />
        <result property="graduationNum" column="GRADUATION_NUM" jdbcType="VARCHAR" />
        <result property="applyNum" column="APPLY_NUM" jdbcType="VARCHAR" />
        <result property="localAuditNum" column="LOCAL_AUDIT_NUM" jdbcType="VARCHAR" />
        <result property="cityAuditNum" column="CITY_AUDIT_NUM" jdbcType="VARCHAR" />
        <result property="globalAuditNum" column="GLOBAL_AUDIT_NUM" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 按专业统计应结业学员信息-首考 -->
    <select id="searchFirstGraduationStatisticsBySpe" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            R.SPE_ID,
            R.SPE_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            COUNT (A.APPLY_FLOW) AS APPLY_NUM,
            COUNT (
                CASE
                WHEN A.LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS LOCAL_AUDIT_NUM,
            COUNT (
                CASE
                WHEN A.CITY_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS CITY_AUDIT_NUM,
            COUNT (
                CASE
                WHEN A.GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN JSRES_GRADUATION_APPLY A ON A.RECRUIT_FLOW = R.RECRUIT_FLOW
            AND A.RECORD_STATUS = 'Y'
            AND A.APPLY_YEAR = #{applyYear},
            RES_DOCTOR D
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="testId != null and testId != ''">
            AND A.TEST_ID = #{testId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND EXISTS (
                SELECT
                    1
                FROM
                    SYS_ORG O
                WHERE
                    O.RECORD_STATUS = 'Y'
                AND O.ORG_FLOW = R.ORG_FLOW
                AND O.ORG_CITY_ID = #{orgCityId}
            )
        </if>
        AND (
            (
                R.GRADUATION_YEAR = #{applyYear}
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    AND R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    AND R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        RES_SCORE S
                    WHERE
                        S.RECORD_STATUS = 'Y'
                    AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                    AND (
                        S.SCORE_PHASE_ID != #{applyYear}
                        OR S.TEST_ID = A.TEST_ID
                    )
                    AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                    AND (
                        S.THEORY_SCORE != '2'
                        OR S.SKILL_SCORE != '2'
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
                AND GT.EXAM_TYPE = 'firstExam'
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            R.SPE_ID,
            R.SPE_NAME
        ORDER BY
            R.SPE_ID
    </select>

    <!-- 按专业统计应结业学员信息-补考 -->
    <select id="searchReExamGraduationStatisticsBySpe" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            R.SPE_ID,
            R.SPE_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            COUNT (A.DOCTOR_FLOW) AS APPLY_NUM,
            COUNT (A.LOCAL_AUDIT_NUM) AS LOCAL_AUDIT_NUM,
            COUNT (A.CITY_AUDIT_NUM) AS CITY_AUDIT_NUM,
            COUNT (A.GLOBAL_AUDIT_NUM) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN (
            SELECT
                DOCTOR_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (
                    DISTINCT CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_EXAM_SIGNUP
            WHERE
                RECORD_STATUS = 'Y'
            AND SIGNUP_YEAR = #{applyYear}
            <if test="testId != null and testId != ''">
                AND TEST_ID = #{testId}
            </if>
            GROUP BY
                DOCTOR_FLOW
        ) A ON A.DOCTOR_FLOW = R.DOCTOR_FLOW,
            RES_DOCTOR D
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="testId != null and testId != ''">
            AND A.TEST_ID = #{testId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND EXISTS (
                SELECT
                    1
                FROM
                    SYS_ORG O
                WHERE
                    O.RECORD_STATUS = 'Y'
                AND O.ORG_FLOW = R.ORG_FLOW
                AND O.ORG_CITY_ID = #{orgCityId}
            )
        </if>
        AND (
            (
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND EXISTS (
                    SELECT
                        1
                    FROM
                        RES_SCORE S
                    WHERE
                        S.RECORD_STATUS = 'Y'
                    AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                    AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                    AND (
                        S.SCORE_PHASE_ID != #{applyYear}
                        OR EXISTS (
                            SELECT
                                1
                            FROM
                                JSRES_GRADUATION_APPLY G
                            WHERE
                                G.RECORD_STATUS = 'Y'
                            AND G.RECRUIT_FLOW = R.RECRUIT_FLOW
                            AND G.TEST_ID = S.TEST_ID
                        )
                    )
                    AND (
                        S.THEORY_SCORE != '2'
                        OR S.SKILL_SCORE != '2'
                    )
                    AND S.SCORE_PHASE_ID > TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 36),
                        'YYYY'
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
                AND GT.EXAM_TYPE = 'reExam'
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            R.SPE_ID,
            R.SPE_NAME
        ORDER BY
            R.SPE_ID
    </select>

    <!-- 按专业统计应结业学员信息-包含补考和首考 -->
    <select id="searchGraduationStatisticsBySpe" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            R.SPE_ID,
            R.SPE_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            SUM (
                NVL (A.APPLY_NUM, 0) + NVL (S.APPLY_NUM, 0)
            ) AS APPLY_NUM,
            SUM (
                NVL (A.LOCAL_AUDIT_NUM, 0) + NVL (S.LOCAL_AUDIT_NUM, 0)
            ) AS LOCAL_AUDIT_NUM,
            SUM (
                NVL (A.CITY_AUDIT_NUM, 0) + NVL (S.CITY_AUDIT_NUM, 0)
            ) AS CITY_AUDIT_NUM,
            SUM (
                NVL (A.GLOBAL_AUDIT_NUM, 0) + NVL (S.GLOBAL_AUDIT_NUM, 0)
            ) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN (
            SELECT
                RECRUIT_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (1) AS APPLY_NUM,
                COUNT (
                    CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_GRADUATION_APPLY
            WHERE
                RECORD_STATUS = 'Y'
            AND APPLY_YEAR = #{applyYear}
            <if test="testId != null and testId != ''">
                AND TEST_ID = #{testId}
            </if>
            GROUP BY
                RECRUIT_FLOW
        ) A ON A.RECRUIT_FLOW = R.RECRUIT_FLOW
        LEFT JOIN (
            SELECT
                DOCTOR_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (1) AS APPLY_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_EXAM_SIGNUP
            WHERE
                RECORD_STATUS = 'Y'
              AND SIGNUP_YEAR = #{applyYear}
            <if test="testId != null and testId != ''">
                AND TEST_ID = #{testId}
            </if>
            GROUP BY
                DOCTOR_FLOW
        ) S ON S.DOCTOR_FLOW = R.DOCTOR_FLOW,
            RES_DOCTOR D
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND EXISTS (
                SELECT
                    1
                FROM
                    SYS_ORG O
                WHERE
                    O.RECORD_STATUS = 'Y'
                AND O.ORG_FLOW = R.ORG_FLOW
                AND O.ORG_CITY_ID = #{orgCityId}
            )
        </if>
        <if test="testId != null and testId != ''">
            AND (
                A.TEST_ID = #{testId}
                OR S.TEST_ID = #{testId}
            )
        </if>
        AND (
            (
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND (
                    (
                        R.GRADUATION_YEAR = #{applyYear}
                        AND NOT EXISTS (
                            SELECT
                                1
                            FROM
                                RES_SCORE S
                            WHERE
                                S.RECORD_STATUS = 'Y'
                            AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                            AND (
                                S.SCORE_PHASE_ID != #{applyYear}
                                OR S.TEST_ID = A.TEST_ID
                            )
                            AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                            AND (
                                S.THEORY_SCORE != '2'
                                OR S.SKILL_SCORE != '2'
                            )
                        )
                    )
                    OR EXISTS (
                        SELECT
                            1
                        FROM
                            RES_SCORE S
                        WHERE
                            S.RECORD_STATUS = 'Y'
                        AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                        AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                        AND (
                            S.SCORE_PHASE_ID != #{applyYear}
                            OR S.TEST_ID = A.TEST_ID
                        )
                        AND (
                            S.THEORY_SCORE != '2'
                            OR S.SKILL_SCORE != '2'
                        )
                        AND S.SCORE_PHASE_ID > TO_CHAR (
                            ADD_MONTHS (SYSDATE, - 36),
                            'YYYY'
                        )
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            R.SPE_ID,
            R.SPE_NAME
        ORDER BY
            R.SPE_ID
    </select>

    <!-- 按基地统计应结业学员信息-首考 -->
    <select id="searchFirstGraduationStatisticsByOrg" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            O.ORG_CODE,
            O.ORG_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            COUNT (A.APPLY_FLOW) AS APPLY_NUM,
            COUNT (
                CASE
                WHEN A.LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS LOCAL_AUDIT_NUM,
            COUNT (
                CASE
                WHEN A.CITY_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS CITY_AUDIT_NUM,
            COUNT (
                CASE
                WHEN A.GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                    1
                ELSE
                    NULL
                END
            ) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN JSRES_GRADUATION_APPLY A ON A.RECRUIT_FLOW = R.RECRUIT_FLOW
        AND A.RECORD_STATUS = 'Y'
        AND A.APPLY_YEAR = #{applyYear},
            RES_DOCTOR D,
            SYS_ORG O
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.ORG_FLOW = O.ORG_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND O.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="testId != null and testId != ''">
            AND A.TEST_ID = #{testId}
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND O.ORG_CITY_ID = #{orgCityId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        AND (
            (
                R.GRADUATION_YEAR = #{applyYear}
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    AND R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    AND R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        RES_SCORE S
                    WHERE
                        S.RECORD_STATUS = 'Y'
                    AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                    AND (
                        S.SCORE_PHASE_ID != #{applyYear}
                        OR S.TEST_ID = A.TEST_ID
                    )
                    AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                    AND (
                        S.THEORY_SCORE != '2'
                        OR S.SKILL_SCORE != '2'
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
                AND GT.EXAM_TYPE = 'firstExam'
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            O.ORG_CODE,
            O.ORG_NAME
        ORDER BY
            O.ORG_CODE
    </select>

    <!-- 按基地统计应结业学员信息-补考 -->
    <select id="searchReExamGraduationStatisticsByOrg" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            O.ORG_CODE,
            O.ORG_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            COUNT (A.DOCTOR_FLOW) AS APPLY_NUM,
            COUNT (A.LOCAL_AUDIT_NUM) AS LOCAL_AUDIT_NUM,
            COUNT (A.CITY_AUDIT_NUM) AS CITY_AUDIT_NUM,
            COUNT (A.GLOBAL_AUDIT_NUM) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN (
            SELECT
                DOCTOR_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (
                    DISTINCT CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_EXAM_SIGNUP
            WHERE
                RECORD_STATUS = 'Y'
            AND SIGNUP_YEAR = #{applyYear}
            GROUP BY
                DOCTOR_FLOW
        ) A ON A.DOCTOR_FLOW = R.DOCTOR_FLOW,
            RES_DOCTOR D,
            SYS_ORG O
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.ORG_FLOW = O.ORG_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND O.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="testId != null and testId != ''">
            AND S.TEST_ID = #{testId}
            )
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND O.ORG_CITY_ID = #{orgCityId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        AND (
            (
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND EXISTS (
                    SELECT
                        1
                    FROM
                        RES_SCORE S
                    WHERE
                        S.RECORD_STATUS = 'Y'
                    AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                    AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                    AND (
                        S.SCORE_PHASE_ID != #{applyYear}
                        OR EXISTS (
                            SELECT
                                1
                            FROM
                                JSRES_GRADUATION_APPLY G
                            WHERE
                                G.RECORD_STATUS = 'Y'
                            AND G.RECRUIT_FLOW = R.RECRUIT_FLOW
                            AND G.TEST_ID = S.TEST_ID
                        )
                    )
                    AND (
                        S.THEORY_SCORE != '2'
                        OR S.SKILL_SCORE != '2'
                    )
                    AND S.SCORE_PHASE_ID > TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 36),
                        'YYYY'
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
                AND GT.EXAM_TYPE = 'reExam'
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            O.ORG_CODE,
            O.ORG_NAME
        ORDER BY
            O.ORG_CODE
    </select>

    <!-- 按基地统计应结业学员信息-包含补考和首考 -->
    <select id="searchGraduationStatisticsByOrg" parameterType="map" resultMap="graduationDoctorMap">
        SELECT
            O.ORG_CODE,
            O.ORG_NAME,
            COUNT (DISTINCT R.DOCTOR_FLOW) AS GRADUATION_NUM,
            SUM (
                NVL (A.APPLY_NUM, 0) + NVL (S.APPLY_NUM, 0)
            ) AS APPLY_NUM,
            SUM (
                NVL (A.LOCAL_AUDIT_NUM, 0) + NVL (S.LOCAL_AUDIT_NUM, 0)
            ) AS LOCAL_AUDIT_NUM,
            SUM (
                NVL (A.CITY_AUDIT_NUM, 0) + NVL (S.CITY_AUDIT_NUM, 0)
            ) AS CITY_AUDIT_NUM,
            SUM (
                NVL (A.GLOBAL_AUDIT_NUM, 0) + NVL (S.GLOBAL_AUDIT_NUM, 0)
            ) AS GLOBAL_AUDIT_NUM
        FROM
            RES_DOCTOR_RECRUIT R
        LEFT JOIN (
            SELECT
                RECRUIT_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (1) AS APPLY_NUM,
                COUNT (
                    CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        1
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_GRADUATION_APPLY
            WHERE
                RECORD_STATUS = 'Y'
            AND APPLY_YEAR = #{applyYear}
            <if test="testId != null and testId != ''">
                AND TEST_ID = #{testId}
            </if>
            GROUP BY
                RECRUIT_FLOW
        ) A ON A.RECRUIT_FLOW = R.RECRUIT_FLOW
        LEFT JOIN (
            SELECT
                DOCTOR_FLOW,
                MAX(TEST_ID) AS TEST_ID,
                COUNT (1) AS APPLY_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN LOCAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS LOCAL_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN CITY_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS CITY_AUDIT_NUM,
                COUNT (
                    DISTINCT CASE
                    WHEN GLOBAL_AUDIT_STATUS_ID = 'Passed' THEN
                        DOCTOR_FLOW
                    ELSE
                        NULL
                    END
                ) AS GLOBAL_AUDIT_NUM
            FROM
                JSRES_EXAM_SIGNUP
            WHERE
                RECORD_STATUS = 'Y'
            AND SIGNUP_YEAR = #{applyYear}
            <if test="testId != null and testId != ''">
                AND TEST_ID = #{testId}
            </if>
            GROUP BY
                DOCTOR_FLOW
        ) S ON S.DOCTOR_FLOW = R.DOCTOR_FLOW,
            RES_DOCTOR D,
            SYS_ORG O
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.ORG_FLOW = O.ORG_FLOW
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND O.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND O.ORG_CITY_ID = #{orgCityId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        <if test="testId != null and testId != ''">
            AND (
                A.TEST_ID = #{testId}
                OR S.TEST_ID = #{testId}
            )
        </if>
        AND (
            (
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND (
                    (
                        R.GRADUATION_YEAR = #{applyYear}
                        AND NOT EXISTS (
                            SELECT
                                1
                            FROM
                                RES_SCORE S
                            WHERE
                                S.RECORD_STATUS = 'Y'
                            AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                            AND (
                                S.SCORE_PHASE_ID != #{applyYear}
                                OR S.TEST_ID = A.TEST_ID
                            )
                            AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                            AND (
                                S.THEORY_SCORE != '2'
                                OR S.SKILL_SCORE != '2'
                            )
                        )
                    )
                    OR EXISTS (
                        SELECT
                            1
                        FROM
                            RES_SCORE S
                        WHERE
                            S.RECORD_STATUS = 'Y'
                        AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                        AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                        AND (
                            S.SCORE_PHASE_ID != #{applyYear}
                            OR S.TEST_ID = A.TEST_ID
                        )
                        AND (
                            S.THEORY_SCORE != '2'
                            OR S.SKILL_SCORE != '2'
                        )
                        AND S.SCORE_PHASE_ID > TO_CHAR (
                            ADD_MONTHS (SYSDATE, - 36),
                            'YYYY'
                        )
                    )
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        GROUP BY
            O.ORG_CODE,
            O.ORG_NAME
        ORDER BY
            O.ORG_CODE
    </select>

    <!-- 应结业学员信息 -->
    <resultMap id="doctorMap" type="map">
        <result property="recruitFlow" column="RECRUIT_FLOW" jdbcType="VARCHAR" />
        <result property="doctorFlow" column="DOCTOR_FLOW" jdbcType="VARCHAR" />
        <result property="userName" column="USER_NAME" jdbcType="VARCHAR" />
        <result property="cretTypeName" column="CRET_TYPE_NAME" jdbcType="VARCHAR" />
        <result property="idNo" column="ID_NO" jdbcType="VARCHAR" />
        <result property="sexName" column="SEX_NAME" jdbcType="VARCHAR" />
        <result property="orgFlow" column="ORG_FLOW" jdbcType="VARCHAR" />
        <result property="orgName" column="ORG_NAME" jdbcType="VARCHAR" />
        <result property="workOrgName" column="WORK_ORG_NAME" jdbcType="VARCHAR" />
        <result property="speName" column="SPE_NAME" jdbcType="VARCHAR" />
        <result property="speId" column="SPE_ID" jdbcType="VARCHAR" />
        <result property="sessionNumber" column="SESSION_NUMBER" jdbcType="VARCHAR" />
        <result property="trainingDate" column="TRAINING_DATE" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 查询应结业学员列表信息 -->
    <select id="searchGraduationDoctorList" parameterType="map" resultMap="doctorMap">
        SELECT
            R.RECRUIT_FLOW,
            R.DOCTOR_FLOW,
            U.USER_NAME,
            U.CRET_TYPE_NAME,
            U.ID_NO,
            U.SEX_NAME,
            R.ORG_FLOW,
            R.ORG_NAME,
            D.WORK_ORG_NAME,
            R.SPE_NAME,
            R.SPE_ID,
            R.SESSION_NUMBER,
            CONCAT (
                CONCAT (R.RECRUIT_DATE, '~'),
                CASE
                WHEN R.GRADUATION_YEAR IS NOT NULL
                    AND R.RECRUIT_DATE IS NOT NULL
                    AND TO_NUMBER (R.GRADUATION_YEAR) - TO_NUMBER (SUBSTR(R.RECRUIT_DATE, 1, 4)) != 0 THEN
                    TO_CHAR (
                        ADD_MONTHS (
                            TO_DATE (
                                R.RECRUIT_DATE,
                                'YYYY-MM-DD'
                            ),
                            12 * (
                                TO_NUMBER (R.GRADUATION_YEAR) - TO_NUMBER (SUBSTR(R.RECRUIT_DATE, 1, 4))
                            )
                        ) - 1,
                        'YYYY-MM-DD'
                    )
                ELSE
                    CASE
                    WHEN R.TRAIN_YEAR = 'OneYear' THEN
                        TO_CHAR (
                            ADD_MONTHS (
                                TO_DATE (
                                    R.RECRUIT_DATE,
                                    'YYYY-MM-DD'
                                ),
                                12
                            ) - 1,
                            'YYYY-MM-DD'
                        )
                    WHEN R.TRAIN_YEAR = 'TwoYear' THEN
                        TO_CHAR (
                            ADD_MONTHS (
                                TO_DATE (
                                    R.RECRUIT_DATE,
                                    'YYYY-MM-DD'
                                ),
                                12 * 2
                            ) - 1,
                            'YYYY-MM-DD'
                        )
                    WHEN R.TRAIN_YEAR = 'ThreeYear' THEN
                        TO_CHAR (
                            ADD_MONTHS (
                                TO_DATE (
                                    R.RECRUIT_DATE,
                                    'YYYY-MM-DD'
                                ),
                                12 * 3
                            ) - 1,
                            'YYYY-MM-DD'
                        )
                    ELSE
                        ''
                    END
                END
            ) AS TRAINING_DATE
        FROM
            RES_DOCTOR_RECRUIT R,
            RES_DOCTOR D
        LEFT JOIN SYS_USER U ON D.DOCTOR_FLOW = U.USER_FLOW
        AND U.RECORD_STATUS = 'Y',
            SYS_ORG O
        WHERE
            R.DOCTOR_FLOW = D.DOCTOR_FLOW
        AND R.ORG_FLOW = O.ORG_FLOW
        AND O.RECORD_STATUS = 'Y'
        AND R.RECORD_STATUS = 'Y'
        AND D.RECORD_STATUS = 'Y'
        AND R.DOCTOR_STATUS_ID = '20'
        AND R.CAT_SPE_ID = #{catSpeId}
        AND R.AUDIT_STATUS_ID = 'Passed'
        <if test="sessionNumber != null and sessionNumber != ''">
            AND D.SESSION_NUMBER = #{sessionNumber}
        </if>
        <if test="doctorTypeId != null and doctorTypeId != ''">
            AND D.DOCTOR_TYPE_ID = #{doctorTypeId}
        </if>
        <if test="orgFlow != null and orgFlow != ''">
            AND R.ORG_FLOW = #{orgFlow}
        </if>
        <if test="orgCityId != null and orgCityId != ''">
            AND O.ORG_CITY_ID = #{orgCityId}
        </if>
        <if test="speIdArr != null and speIdArr.length > 0">
            AND R.SPE_ID IN
            <foreach collection="speIdArr" item="speId" open="(" close=")" separator=",">
                #{speId}
            </foreach>
        </if>
        AND (
            (
                <if test="catSpeId == 'DoctorTrainingSpe'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 72),
                        'YYYY'
                    )
                </if>
                <if test="catSpeId == 'AssiGeneral'">
                    R.SESSION_NUMBER >= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 60),
                        'YYYY'
                    )
                    AND R.SESSION_NUMBER &lt;= TO_CHAR (
                        ADD_MONTHS (SYSDATE, - 24),
                        'YYYY'
                    )
                </if>
                AND (
                    <if test="examType == null or examType == '' or examType == 'firstExam'">
                        (
                            R.GRADUATION_YEAR = #{applyYear}
                            AND NOT EXISTS (
                                SELECT
                                    1
                                FROM
                                    RES_SCORE S
                                WHERE
                                    S.RECORD_STATUS = 'Y'
                                AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                                AND (
                                    S.SCORE_PHASE_ID != #{applyYear}
                                    OR EXISTS (
                                        SELECT
                                            1
                                        FROM
                                            JSRES_GRADUATION_APPLY G
                                        WHERE
                                            G.RECORD_STATUS = 'Y'
                                        AND G.RECRUIT_FLOW = R.RECRUIT_FLOW
                                        AND G.TEST_ID = S.TEST_ID
                                    )
                                )
                                AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                                AND (
                                    S.THEORY_SCORE != '2'
                                    OR S.SKILL_SCORE != '2'
                                )
                            )
                        )
                    </if>
                    <if test="examType == null or examType == ''">
                        OR
                    </if>
                    <if test="examType == null or examType == '' or examType == 'reExam'">
                        EXISTS (
                            SELECT
                                1
                            FROM
                                RES_SCORE S
                            WHERE
                                S.RECORD_STATUS = 'Y'
                            AND S.DOCTOR_FLOW = D.DOCTOR_FLOW
                            AND S.SCORE_TYPE_ID IN ('SkillScore', 'TheoryScore')
                            AND (
                                S.SCORE_PHASE_ID != #{applyYear}
                                OR EXISTS (
                                    SELECT
                                        1
                                    FROM
                                        JSRES_GRADUATION_APPLY G
                                    WHERE
                                        G.RECORD_STATUS = 'Y'
                                    AND G.RECRUIT_FLOW = R.RECRUIT_FLOW
                                    AND G.TEST_ID = S.TEST_ID
                                )
                            )
                            AND (
                                S.THEORY_SCORE != '2'
                                OR S.SKILL_SCORE != '2'
                            )
                            AND S.SCORE_PHASE_ID > TO_CHAR (
                                ADD_MONTHS (SYSDATE, - 36),
                                'YYYY'
                            )
                        )
                    </if>
                )
            )
            OR EXISTS (
                SELECT
                    1
                FROM
                    GRADUATION_DOCTOR_TEMP GT
                WHERE
                    GT.RECORD_STATUS = 'Y'
                AND GT.DOCTOR_FLOW = R.DOCTOR_FLOW
            )
        )
        AND NOT EXISTS (
            SELECT
                1
            FROM
                RES_DOCOTR_DELAY_TETURN DT
            WHERE
                DT.RECORD_STATUS = 'Y'
            AND DT.DOCTOR_FLOW = D.DOCTOR_FLOW
            AND DT.TYPE_ID = 'ReturnTraining'
        )
        ORDER BY
            O.ORG_CODE,
            R.SPE_ID,
            R.SESSION_NUMBER DESC,
            U.USER_NAME,
            R.RECRUIT_FLOW
    </select>
</mapper>