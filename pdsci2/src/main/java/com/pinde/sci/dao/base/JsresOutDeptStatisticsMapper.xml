<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.JsresOutDeptStatisticsMapper" >
    <resultMap id="BaseResultMap" type="com.pinde.core.model.JsresOutDeptStatistics">
    <id column="RECORD_FLOW" property="recordFlow" jdbcType="VARCHAR" />
    <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
    <result column="PARENT_ORG_FLOW" property="parentOrgFlow" jdbcType="VARCHAR" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="MONTH_DATE" property="monthDate" jdbcType="VARCHAR" />
    <result column="OUT_DEPT_NUM" property="outDeptNum" jdbcType="VARCHAR" />
    <result column="REAL_NUM" property="realNum" jdbcType="VARCHAR" />
    <result column="NOT_NUM" property="notNum" jdbcType="VARCHAR" />
    <result column="NOT_NUM_SCALE" property="notNumScale" jdbcType="VARCHAR" />
    <result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RECORD_FLOW, ORG_CODE, PARENT_ORG_FLOW, ORG_FLOW, ORG_NAME, MONTH_DATE, OUT_DEPT_NUM, 
    REAL_NUM, NOT_NUM, NOT_NUM_SCALE, DOCTOR_TYPE_ID, CREATE_TIME
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.pinde.core.model.JsresOutDeptStatisticsExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.JSRES_OUT_DEPT_STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PDSCI.JSRES_OUT_DEPT_STATISTICS
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.JSRES_OUT_DEPT_STATISTICS
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.pinde.core.model.JsresOutDeptStatisticsExample">
    delete from PDSCI.JSRES_OUT_DEPT_STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.pinde.core.model.JsresOutDeptStatistics">
    insert into PDSCI.JSRES_OUT_DEPT_STATISTICS (RECORD_FLOW, ORG_CODE, PARENT_ORG_FLOW, 
      ORG_FLOW, ORG_NAME, MONTH_DATE, 
      OUT_DEPT_NUM, REAL_NUM, NOT_NUM, 
      NOT_NUM_SCALE, DOCTOR_TYPE_ID, CREATE_TIME
      )
    values (#{recordFlow,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, #{parentOrgFlow,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{monthDate,jdbcType=VARCHAR}, 
      #{outDeptNum,jdbcType=VARCHAR}, #{realNum,jdbcType=VARCHAR}, #{notNum,jdbcType=VARCHAR}, 
      #{notNumScale,jdbcType=VARCHAR}, #{doctorTypeId,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.pinde.core.model.JsresOutDeptStatistics">
    insert into PDSCI.JSRES_OUT_DEPT_STATISTICS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        RECORD_FLOW,
      </if>
      <if test="orgCode != null" >
        ORG_CODE,
      </if>
      <if test="parentOrgFlow != null" >
        PARENT_ORG_FLOW,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="monthDate != null" >
        MONTH_DATE,
      </if>
      <if test="outDeptNum != null" >
        OUT_DEPT_NUM,
      </if>
      <if test="realNum != null" >
        REAL_NUM,
      </if>
      <if test="notNum != null" >
        NOT_NUM,
      </if>
      <if test="notNumScale != null" >
        NOT_NUM_SCALE,
      </if>
      <if test="doctorTypeId != null" >
        DOCTOR_TYPE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordFlow != null" >
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="parentOrgFlow != null" >
        #{parentOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="monthDate != null" >
        #{monthDate,jdbcType=VARCHAR},
      </if>
      <if test="outDeptNum != null" >
        #{outDeptNum,jdbcType=VARCHAR},
      </if>
      <if test="realNum != null" >
        #{realNum,jdbcType=VARCHAR},
      </if>
      <if test="notNum != null" >
        #{notNum,jdbcType=VARCHAR},
      </if>
      <if test="notNumScale != null" >
        #{notNumScale,jdbcType=VARCHAR},
      </if>
      <if test="doctorTypeId != null" >
        #{doctorTypeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.pinde.core.model.JsresOutDeptStatisticsExample"
            resultType="java.lang.Integer">
    select count(*) from PDSCI.JSRES_OUT_DEPT_STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.JSRES_OUT_DEPT_STATISTICS
    <set >
      <if test="record.recordFlow != null" >
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null" >
        ORG_CODE = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentOrgFlow != null" >
        PARENT_ORG_FLOW = #{record.parentOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.monthDate != null" >
        MONTH_DATE = #{record.monthDate,jdbcType=VARCHAR},
      </if>
      <if test="record.outDeptNum != null" >
        OUT_DEPT_NUM = #{record.outDeptNum,jdbcType=VARCHAR},
      </if>
      <if test="record.realNum != null" >
        REAL_NUM = #{record.realNum,jdbcType=VARCHAR},
      </if>
      <if test="record.notNum != null" >
        NOT_NUM = #{record.notNum,jdbcType=VARCHAR},
      </if>
      <if test="record.notNumScale != null" >
        NOT_NUM_SCALE = #{record.notNumScale,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorTypeId != null" >
        DOCTOR_TYPE_ID = #{record.doctorTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.JSRES_OUT_DEPT_STATISTICS
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      ORG_CODE = #{record.orgCode,jdbcType=VARCHAR},
      PARENT_ORG_FLOW = #{record.parentOrgFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      MONTH_DATE = #{record.monthDate,jdbcType=VARCHAR},
      OUT_DEPT_NUM = #{record.outDeptNum,jdbcType=VARCHAR},
      REAL_NUM = #{record.realNum,jdbcType=VARCHAR},
      NOT_NUM = #{record.notNum,jdbcType=VARCHAR},
      NOT_NUM_SCALE = #{record.notNumScale,jdbcType=VARCHAR},
      DOCTOR_TYPE_ID = #{record.doctorTypeId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.JsresOutDeptStatistics">
    update PDSCI.JSRES_OUT_DEPT_STATISTICS
    <set >
      <if test="orgCode != null" >
        ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="parentOrgFlow != null" >
        PARENT_ORG_FLOW = #{parentOrgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="monthDate != null" >
        MONTH_DATE = #{monthDate,jdbcType=VARCHAR},
      </if>
      <if test="outDeptNum != null" >
        OUT_DEPT_NUM = #{outDeptNum,jdbcType=VARCHAR},
      </if>
      <if test="realNum != null" >
        REAL_NUM = #{realNum,jdbcType=VARCHAR},
      </if>
      <if test="notNum != null" >
        NOT_NUM = #{notNum,jdbcType=VARCHAR},
      </if>
      <if test="notNumScale != null" >
        NOT_NUM_SCALE = #{notNumScale,jdbcType=VARCHAR},
      </if>
      <if test="doctorTypeId != null" >
        DOCTOR_TYPE_ID = #{doctorTypeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.JsresOutDeptStatistics">
    update PDSCI.JSRES_OUT_DEPT_STATISTICS
    set ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      PARENT_ORG_FLOW = #{parentOrgFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      MONTH_DATE = #{monthDate,jdbcType=VARCHAR},
      OUT_DEPT_NUM = #{outDeptNum,jdbcType=VARCHAR},
      REAL_NUM = #{realNum,jdbcType=VARCHAR},
      NOT_NUM = #{notNum,jdbcType=VARCHAR},
      NOT_NUM_SCALE = #{notNumScale,jdbcType=VARCHAR},
      DOCTOR_TYPE_ID = #{doctorTypeId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>