<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.jsres.ChartExtMapper">
    <resultMap id="CountryDocCountMap" type="java.util.HashMap" >
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>

    <select id="findCountryDocCount" resultMap="CountryDocCountMap">
        SELECT ORG.ORG_NAME, ORG.ORG_FLOW,ORG.ORG_CODE,DOCTOR_TYPE_ID,DOCTOR_TYPE_NAME,COUNT(DOCTOR.DOCTOR_FLOW) DOCNUM
        FROM
        (SELECT ORG.ORG_NAME, ORG.ORG_FLOW, J.JOINT_ORG_FLOW, J.JOINT_ORG_NAME,ORG.ORG_CODE
        FROM SYS_ORG ORG
        JOIN RES_JOINT_ORG J
        ON J.ORG_FLOW = ORG.ORG_FLOW
        AND J.RECORD_STATUS = 'Y'
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        AND ORG.ORG_LEVEL_ID = 'CountryOrg'
        UNION ALL
        SELECT ORG.ORG_NAME, ORG.ORG_FLOW, ORG.ORG_FLOW JOINT_ORG_FLOW, ORG.ORG_NAME JOINT_ORG_NAME,ORG.ORG_CODE
        FROM SYS_ORG ORG
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        AND ORG.ORG_LEVEL_ID = 'CountryOrg') ORG
        left join (
        SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
        RES_DOCTOR_RECRUIT.ORG_NAME,
        RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
        RES_DOCTOR_RECRUIT.SESSION_NUMBER,
        CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Company' THEN 'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Social' THEN 'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Graduate' THEN 'Graduate'
        ELSE ''
        END DOCTOR_TYPE_ID
        ,
        CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Company' THEN '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Social' THEN '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Graduate' THEN '在校专硕'
        ELSE ''
        END DOCTOR_TYPE_NAME
        FROM RES_DOCTOR_RECRUIT
        join RES_DOCTOR
        on RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
        WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.RECORD_STATUS='Y'
        AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
        AND RES_DOCTOR.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
        ) DOCTOR
        ON DOCTOR.ORG_FLOW=ORG.JOINT_ORG_FLOW
        WHERE 1=1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>

        GROUP BY ORG.ORG_NAME, ORG.ORG_FLOW,ORG.ORG_CODE,DOCTOR_TYPE_ID,DOCTOR_TYPE_NAME
        ORDER BY ORG.ORG_CODE ASC
    </select>
    <select id="findProDocCount" resultMap="CountryDocCountMap">
        SELECT ORG.ORG_NAME, ORG.ORG_FLOW,ORG.ORG_CODE,DOCTOR_TYPE_ID,DOCTOR_TYPE_NAME,COUNT(DOCTOR.DOCTOR_FLOW) DOCNUM
        FROM (
            SELECT ORG.*
            FROM SYS_ORG ORG
            WHERE ORG.RECORD_STATUS = 'Y'
            AND ORG.ORG_PROV_ID = '320000'
            AND ORG.ORG_TYPE_ID = 'Hospital'
            AND ORG.ORG_LEVEL_ID = 'ProvinceOrg'
        ) ORG
        left join (
            SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
            RES_DOCTOR_RECRUIT.ORG_NAME,
            RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
            RES_DOCTOR_RECRUIT.SESSION_NUMBER,
            CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Company' THEN 'NoGraduate'
            WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Social' THEN 'NoGraduate'
            WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Graduate' THEN 'Graduate'
            ELSE ''
            END DOCTOR_TYPE_ID
            ,
            CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Company' THEN '非在校专硕'
            WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Social' THEN '非在校专硕'
            WHEN RES_DOCTOR.DOCTOR_TYPE_ID='Graduate' THEN '在校专硕'
            ELSE ''
            END DOCTOR_TYPE_NAME
            FROM RES_DOCTOR_RECRUIT
            join RES_DOCTOR
            on RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
            WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
            AND RES_DOCTOR_RECRUIT.RECORD_STATUS='Y'
            AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
            AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
            AND RES_DOCTOR.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
            ) DOCTOR
        ON DOCTOR.ORG_FLOW=ORG.ORG_FLOW
        WHERE 1=1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY ORG.ORG_NAME, ORG.ORG_FLOW,ORG.ORG_CODE,DOCTOR_TYPE_ID,DOCTOR_TYPE_NAME
        ORDER BY ORG.ORG_CODE ASC
    </select>
    <resultMap id="CountrySpeDocCountMap" type="java.util.HashMap" >
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>

    <select id="findCountrySpeDocCount" resultMap="CountrySpeDocCountMap">
        SELECT SPE_ID,
        SPE_NAME,
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT ORG.ORG_NAME,
        ORG.ORG_FLOW,
        J.JOINT_ORG_FLOW,
        J.JOINT_ORG_NAME,
        ORG.ORG_CODE
        FROM SYS_ORG ORG
        JOIN RES_JOINT_ORG J
        ON J.ORG_FLOW = ORG.ORG_FLOW
        AND J.RECORD_STATUS = 'Y'
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        AND ORG.ORG_LEVEL_ID = 'CountryOrg'
        UNION ALL
        SELECT ORG.ORG_NAME,
        ORG.ORG_FLOW,
        ORG.ORG_FLOW AS JOINT_ORG_FLOW,
        ORG.ORG_NAME AS JOINT_ORG_NAME,
        ORG.ORG_CODE
        FROM SYS_ORG ORG
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        AND ORG.ORG_LEVEL_ID = 'CountryOrg') ORG
        JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
        RES_DOCTOR_RECRUIT.ORG_NAME,
        RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
        RES_DOCTOR_RECRUIT.SESSION_NUMBER,
        RES_DOCTOR_RECRUIT.SPE_ID,
        RES_DOCTOR_RECRUIT.SPE_NAME,
        CASE
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
        'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
        'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
        'Graduate'
        ELSE
        NULL
        END AS DOCTOR_TYPE_ID,
        CASE
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
        '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
        '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
        '在校专硕'
        ELSE
        NULL
        END AS DOCTOR_TYPE_NAME
        FROM RES_DOCTOR_RECRUIT
        JOIN RES_DOCTOR
        ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
        WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
        AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
        AND RES_DOCTOR.DOCTOR_TYPE_ID IN
        ('Company', 'Social', 'Graduate')) DOCTOR
        ON DOCTOR.ORG_FLOW = ORG.JOINT_ORG_FLOW
        WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY SPE_ID,
        SPE_NAME,
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME
        ORDER BY SPE_ID
    </select>
    <select id="findProSpeDocCount" resultMap="CountrySpeDocCountMap">
        SELECT SPE_ID,
        SPE_NAME,
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT ORG.*
        FROM SYS_ORG ORG
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        AND ORG.ORG_LEVEL_ID = 'ProvinceOrg') ORG
        JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
        RES_DOCTOR_RECRUIT.ORG_NAME,
        RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
        RES_DOCTOR_RECRUIT.SESSION_NUMBER,
        RES_DOCTOR_RECRUIT.SPE_ID,
        RES_DOCTOR_RECRUIT.SPE_NAME,
        CASE
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
        'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
        'NoGraduate'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
        'Graduate'
        ELSE
        NULL
        END AS DOCTOR_TYPE_ID,
        CASE
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
        '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
        '非在校专硕'
        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
        '在校专硕'
        ELSE
        NULL
        END AS DOCTOR_TYPE_NAME
        FROM RES_DOCTOR_RECRUIT
        JOIN RES_DOCTOR
        ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
        WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
        AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
        AND RES_DOCTOR.DOCTOR_TYPE_ID IN
        ('Company', 'Social', 'Graduate')) DOCTOR
        ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
        WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY SPE_ID,
        SPE_NAME,
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME
        ORDER BY SPE_ID
    </select>

    <resultMap id="DocTypeCountMap" type="java.util.HashMap" >
        <result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findDocTypeCount" resultMap="DocTypeCountMap">
        SELECT
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT ORG.*
        FROM SYS_ORG ORG
        WHERE ORG.RECORD_STATUS = 'Y'
        AND ORG.ORG_PROV_ID = '320000'
        AND ORG.ORG_TYPE_ID = 'Hospital'
        and (org.org_level_id in ('CountryOrg','ProvinceOrg')
        or (org.org_flow in (select j.joint_org_flow from res_joint_org j where j.record_status='Y')))
        ) ORG
        JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
        RES_DOCTOR_RECRUIT.ORG_NAME,
        RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
        RES_DOCTOR_RECRUIT.SESSION_NUMBER,
        RES_DOCTOR_RECRUIT.SPE_ID,
        RES_DOCTOR_RECRUIT.SPE_NAME,
        RES_DOCTOR.DOCTOR_TYPE_ID,
        RES_DOCTOR.DOCTOR_TYPE_NAME
        FROM RES_DOCTOR_RECRUIT
        JOIN RES_DOCTOR
        ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
        WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
        AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
        AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
        AND RES_DOCTOR.DOCTOR_TYPE_ID IN
        ('Company', 'Social', 'Graduate')) DOCTOR
        ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
        WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME
    </select>
    <resultMap id="OrgTypeCountMap" type="java.util.HashMap" >
        <result column="ORG_LEVEL_ID" property="orgLevelId" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findOrgTypeCount" resultMap="OrgTypeCountMap">
        SELECT ORG_LEVEL_ID, COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
          FROM (SELECT case
                         when org.org_level_id = 'CountryOrg' then
                          org.org_level_id
                         when org.org_level_id = 'ProvinceOrg' then
                          org.org_level_id
                         when 1 = (select 1
                                     from res_joint_org j
                                    where j.record_status = 'Y'
                                      and j.joint_org_flow = org.org_flow
                                      and rownum = 1) then
                          'CountryOrg'
                       end org_level_id,
                       ORG.ORG_FLOW
                  FROM SYS_ORG ORG
                 WHERE ORG.RECORD_STATUS = 'Y'
                   AND ORG.ORG_PROV_ID = '320000'
                   AND ORG.ORG_TYPE_ID = 'Hospital'
                   and (org.org_level_id in ('CountryOrg', 'ProvinceOrg') or
                       (org.org_flow in
                       (select j.joint_org_flow
                            from res_joint_org j
                           where j.record_status = 'Y')))) ORG
          JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                       RES_DOCTOR_RECRUIT.ORG_NAME,
                       RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                       RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                       RES_DOCTOR_RECRUIT.SPE_ID,
                       RES_DOCTOR_RECRUIT.SPE_NAME,
                       RES_DOCTOR.DOCTOR_TYPE_ID,
                       RES_DOCTOR.DOCTOR_TYPE_NAME
                  FROM RES_DOCTOR_RECRUIT
                  JOIN RES_DOCTOR
                    ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                 WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                   AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                   AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                   AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
                   AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                   AND RES_DOCTOR.DOCTOR_TYPE_ID IN
                       ('Company', 'Social')) DOCTOR
            ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
         WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY ORG_LEVEL_ID
    </select>
    <resultMap id="CityDocCountMap" type="java.util.HashMap" >
        <result column="ORG_CITY_ID" property="orgCityId" jdbcType="VARCHAR" />
        <result column="ORG_CITY_NAME" property="orgCityName" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_ID" property="doctorTypeId" jdbcType="VARCHAR" />
        <result column="DOCTOR_TYPE_NAME" property="doctorTypeName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findCityDocCount" resultMap="CityDocCountMap">
        SELECT ORG.ORG_CITY_ID,
               ORG.ORG_CITY_NAME,
                DOCTOR_TYPE_ID,
                DOCTOR_TYPE_NAME,
               COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
          FROM (SELECT ORG.ORG_CITY_ID, ORG.ORG_CITY_NAME, ORG.ORG_FLOW
                  FROM SYS_ORG ORG
                 WHERE ORG.RECORD_STATUS = 'Y'
                   AND ORG.ORG_PROV_ID = '320000'
                   AND ORG.ORG_TYPE_ID = 'Hospital'
                   and (org.org_level_id in ('CountryOrg', 'ProvinceOrg') or
                       (org.org_flow in
                       (select j.joint_org_flow
                            from res_joint_org j
                           where j.record_status = 'Y')))) ORG
          JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                       RES_DOCTOR_RECRUIT.ORG_NAME,
                       RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                       RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                       RES_DOCTOR_RECRUIT.SPE_ID,
                       RES_DOCTOR_RECRUIT.SPE_NAME,
                        CASE
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
                        'NoGraduate'
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
                        'NoGraduate'
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
                        'Graduate'
                        ELSE
                        NULL
                        END AS DOCTOR_TYPE_ID,
                        CASE
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN
                        '非在校专硕'
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN
                        '非在校专硕'
                        WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN
                        '在校专硕'
                        ELSE
                        NULL
                        END AS DOCTOR_TYPE_NAME
                  FROM RES_DOCTOR_RECRUIT
                  JOIN RES_DOCTOR
                    ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                 WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                   AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                   AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                   AND RES_DOCTOR_RECRUIT.cat_spe_id = 'DoctorTrainingSpe'
                   AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                   AND RES_DOCTOR.DOCTOR_TYPE_ID IN
                       ('Company', 'Social', 'Graduate')) DOCTOR
            ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
         WHERE 1 = 1
            <if test="sessionNumber != null and sessionNumber!=''" >
                AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
            </if>
         GROUP BY ORG.ORG_CITY_ID, ORG.ORG_CITY_NAME,
        DOCTOR_TYPE_ID,
        DOCTOR_TYPE_NAME
         ORDER BY ORG.ORG_CITY_ID
    </select>
    <resultMap id="OrgAssiCountMap" type="java.util.HashMap" >
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findOrgAssiCount" resultMap="OrgAssiCountMap">
        SELECT ORG.ORG_FLOW, ORG.ORG_NAME,ORG.ORG_CODE, COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (
          SELECT ORG.ORG_FLOW,ORG.ORG_CODE,ORG.ORG_NAME
          FROM SYS_ORG ORG
          WHERE ORG.RECORD_STATUS = 'Y'
            AND ORG.ORG_PROV_ID = '320000'
            AND ORG.ORG_TYPE_ID = 'Hospital'
            AND (org.org_level_id IN ('CountryOrg', 'ProvinceOrg')
              OR org.org_flow IN (SELECT j.joint_org_flow
                FROM res_joint_org j
                WHERE j.record_status = 'Y'))
        ) ORG
          JOIN (
            SELECT RES_DOCTOR_RECRUIT.ORG_FLOW, RES_DOCTOR_RECRUIT.ORG_NAME,
                    RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                    RES_DOCTOR_RECRUIT.SESSION_NUMBER, RES_DOCTOR_RECRUIT.SPE_ID
              , RES_DOCTOR_RECRUIT.SPE_NAME, CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN 'NoGraduate' WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN 'NoGraduate' WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN 'Graduate' ELSE NULL END AS DOCTOR_TYPE_ID, CASE WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Company' THEN '非在校专硕' WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Social' THEN '非在校专硕' WHEN RES_DOCTOR.DOCTOR_TYPE_ID = 'Graduate' THEN '在校专硕' ELSE NULL END AS DOCTOR_TYPE_NAME
            FROM RES_DOCTOR_RECRUIT
              JOIN RES_DOCTOR ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
            WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
              AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
              AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
              AND RES_DOCTOR_RECRUIT.cat_spe_id = 'AssiGeneral'
              AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
              AND RES_DOCTOR.DOCTOR_TYPE_ID IN ('Company', 'Social', 'Graduate')
          ) DOCTOR ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
        WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY  ORG.ORG_FLOW, ORG.ORG_NAME,ORG.ORG_CODE
        ORDER BY ORG.ORG_CODE
    </select>
    <resultMap id="SpeGraduateMap" type="java.util.HashMap" >
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findSpeGraduateCount" resultMap="SpeGraduateMap">
        SELECT SPE_ID,
               SPE_NAME,
               COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
          FROM (SELECT ORG.*
                  FROM SYS_ORG ORG
                 WHERE ORG.RECORD_STATUS = 'Y'
                   AND ORG.ORG_PROV_ID = '320000'
                   AND ORG.ORG_TYPE_ID = 'Hospital'
        ) ORG
           JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                            RES_DOCTOR_RECRUIT.ORG_NAME,
                            RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                            RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                            RES_DOCTOR_RECRUIT.SPE_ID,
                            RES_DOCTOR_RECRUIT.SPE_NAME
                       FROM RES_DOCTOR_RECRUIT
                       JOIN RES_DOCTOR
                         ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                      WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                        AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                        AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                        AND RES_DOCTOR_RECRUIT.cat_spe_id in( 'DoctorTrainingSpe','AssiGeneral')
                        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                        AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate') DOCTOR
            ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
         WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
         GROUP BY SPE_ID,
                  SPE_NAME
         ORDER BY SPE_ID
    </select>
    <resultMap id="OrgGraduateMap" type="java.util.HashMap" >
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findOrgGraduateCount" resultMap="OrgGraduateMap">
        SELECT ORG.ORG_FLOW, ORG.ORG_NAME,ORG.ORG_CODE,
               COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
          FROM (SELECT ORG.*
                  FROM SYS_ORG ORG
                 WHERE ORG.RECORD_STATUS = 'Y'
                   AND ORG.ORG_PROV_ID = '320000'
                   AND ORG.ORG_TYPE_ID = 'Hospital'
          ) ORG
           JOIN (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                            RES_DOCTOR_RECRUIT.ORG_NAME,
                            RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                            RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                            RES_DOCTOR_RECRUIT.SPE_ID,
                            RES_DOCTOR_RECRUIT.SPE_NAME
                       FROM RES_DOCTOR_RECRUIT
                       JOIN RES_DOCTOR
                         ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                      WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                        AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                        AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                        AND RES_DOCTOR_RECRUIT.cat_spe_id in( 'DoctorTrainingSpe','AssiGeneral')
                        AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                        AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate') DOCTOR
            ON DOCTOR.ORG_FLOW = ORG.ORG_FLOW
         WHERE 1 = 1
        <if test="sessionNumber != null and sessionNumber!=''" >
            AND DOCTOR.SESSION_NUMBER = #{sessionNumber}
        </if>
        GROUP BY  ORG.ORG_FLOW, ORG.ORG_NAME,ORG.ORG_CODE
        ORDER BY ORG.ORG_CODE
    </select>

    <resultMap id="doctorNumForUni1Map" type="java.util.HashMap" >
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="doctorNumForUni1" resultMap="doctorNumForUni1Map">
        SELECT SPE_ID,
        SPE_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                RES_DOCTOR_RECRUIT.ORG_NAME,
                RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                RES_DOCTOR_RECRUIT.SPE_ID,
                RES_DOCTOR_RECRUIT.SPE_NAME
                FROM RES_DOCTOR_RECRUIT
                JOIN RES_DOCTOR
                ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate'
                <if test="recruit !=null">
                    <if test="recruit.sessionNumber != null and recruit.sessionNumber!=''" >
                        AND RES_DOCTOR_RECRUIT.SESSION_NUMBER = #{recruit.sessionNumber}
                    </if>
                    <if test="recruit.orgFlow != null and recruit.orgFlow!=''" >
                        AND RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow}
                    </if>
                    <if test="recruit.catSpeId != null and recruit.catSpeId!=''" >
                        AND RES_DOCTOR_RECRUIT.CAT_SPE_ID = #{recruit.catSpeId}
                    </if>
                </if>
                AND (
                <trim prefix="" prefixOverrides="OR">
                    <if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR RES_DOCTOR.work_org_id = #{org.sendSchoolId}</if>
                    <if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR RES_DOCTOR.work_org_name = #{org.sendSchoolName}</if>
                </trim>
                )
        ) DOCTOR
        WHERE 1 = 1
        GROUP BY SPE_ID,SPE_NAME
        ORDER BY SPE_ID
    </select>
    <resultMap id="doctorNumForUni1DaoChuMap" type="java.util.HashMap" >
        <result column="CAT_SPE_ID" property="catSpeId" jdbcType="VARCHAR" />
        <result column="CAT_SPE_NAME" property="catSpeName" jdbcType="VARCHAR" />
        <result column="SPE_ID" property="speId" jdbcType="VARCHAR" />
        <result column="SPE_NAME" property="speName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="doctorNumForUni1DaoChu" resultMap="doctorNumForUni1DaoChuMap">
        SELECT CAT_SPE_ID,
        CAT_SPE_NAME,SPE_ID,
        SPE_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                RES_DOCTOR_RECRUIT.ORG_NAME,
                RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                RES_DOCTOR_RECRUIT.CAT_SPE_ID,
                RES_DOCTOR_RECRUIT.CAT_SPE_NAME,
                RES_DOCTOR_RECRUIT.SPE_ID,
                RES_DOCTOR_RECRUIT.SPE_NAME
                FROM RES_DOCTOR_RECRUIT
                JOIN RES_DOCTOR
                ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate'
                <if test="recruit !=null">
                    <if test="recruit.sessionNumber != null and recruit.sessionNumber!=''" >
                        AND RES_DOCTOR_RECRUIT.SESSION_NUMBER = #{recruit.sessionNumber}
                    </if>
                    <if test="recruit.orgFlow != null and recruit.orgFlow!=''" >
                        AND RES_DOCTOR_RECRUIT.ORG_FLOW = #{recruit.orgFlow}
                    </if>
                    <if test="recruit.catSpeId != null and recruit.catSpeId!=''" >
                        AND RES_DOCTOR_RECRUIT.CAT_SPE_ID = #{recruit.catSpeId}
                    </if>
                </if>
                AND (
                <trim prefix="" prefixOverrides="OR">
                    <if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR RES_DOCTOR.work_org_id = #{org.sendSchoolId}</if>
                    <if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR RES_DOCTOR.work_org_name = #{org.sendSchoolName}</if>
                </trim>
                )
        ) DOCTOR
        WHERE 1 = 1
        GROUP BY CAT_SPE_ID,
                  CAT_SPE_NAME,SPE_ID,SPE_NAME
        ORDER BY CAT_SPE_ID,SPE_ID
    </select>
    <resultMap id="doctorNumForUni2Map" type="java.util.HashMap" >
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="doctorNumForUni2" resultMap="doctorNumForUni2Map">
        SELECT ORG_FLOW,
        ORG_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                RES_DOCTOR_RECRUIT.ORG_NAME,
                RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                RES_DOCTOR_RECRUIT.SPE_ID,
                RES_DOCTOR_RECRUIT.SPE_NAME
                FROM RES_DOCTOR_RECRUIT
                JOIN RES_DOCTOR
                ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate'
                <if test="recruit !=null">
                    <if test="recruit.sessionNumber != null and recruit.sessionNumber!=''" >
                        AND RES_DOCTOR_RECRUIT.SESSION_NUMBER = #{recruit.sessionNumber}
                    </if>
                    <if test="recruit.catSpeId != null and recruit.catSpeId!=''" >
                        AND RES_DOCTOR_RECRUIT.CAT_SPE_ID = #{recruit.catSpeId}
                    </if>
                </if>

                <if test="orgFlows != null">
                    AND RES_DOCTOR_RECRUIT.ORG_FLOW IN
                    <foreach collection="orgFlows" item="orgFlow" open="(" separator="," close=")">
                        #{orgFlow}
                    </foreach>
                </if>
                AND (
                <trim prefix="" prefixOverrides="OR">
                    <if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR RES_DOCTOR.work_org_id = #{org.sendSchoolId}</if>
                    <if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR RES_DOCTOR.work_org_name = #{org.sendSchoolName}</if>
                </trim>
                )
        ) DOCTOR
        WHERE 1 = 1
        GROUP BY ORG_FLOW,
                  ORG_NAME
        ORDER BY ORG_FLOW
    </select>
    <resultMap id="doctorNumForUni2DaoChuMap" type="java.util.HashMap" >
        <result column="CAT_SPE_ID" property="catSpeId" jdbcType="VARCHAR" />
        <result column="CAT_SPE_NAME" property="catSpeName" jdbcType="VARCHAR" />
        <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
        <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
        <result column="DOCNUM" property="docNum" jdbcType="VARCHAR" />
    </resultMap>
    <select id="doctorNumForUni2DaoChu" resultMap="doctorNumForUni2DaoChuMap">
        SELECT CAT_SPE_ID,
        CAT_SPE_NAME,ORG_FLOW,
        ORG_NAME,
        COUNT(DOCTOR.DOCTOR_FLOW) AS DOCNUM
        FROM (SELECT RES_DOCTOR_RECRUIT.ORG_FLOW,
                RES_DOCTOR_RECRUIT.ORG_NAME,
                RES_DOCTOR_RECRUIT.DOCTOR_FLOW,
                RES_DOCTOR_RECRUIT.SESSION_NUMBER,
                RES_DOCTOR_RECRUIT.CAT_SPE_ID,
                RES_DOCTOR_RECRUIT.CAT_SPE_NAME,
                RES_DOCTOR_RECRUIT.SPE_ID,
                RES_DOCTOR_RECRUIT.SPE_NAME
                FROM RES_DOCTOR_RECRUIT
                JOIN RES_DOCTOR
                ON RES_DOCTOR_RECRUIT.doctor_flow = RES_DOCTOR.doctor_flow
                WHERE RES_DOCTOR.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.RECORD_STATUS = 'Y'
                AND RES_DOCTOR_RECRUIT.SPE_ID IS NOT NULL
                AND RES_DOCTOR_RECRUIT.AUDIT_STATUS_ID = 'Passed'
                AND RES_DOCTOR.DOCTOR_TYPE_ID ='Graduate'
                <if test="recruit !=null">
                    <if test="recruit.sessionNumber != null and recruit.sessionNumber!=''" >
                        AND RES_DOCTOR_RECRUIT.SESSION_NUMBER = #{recruit.sessionNumber}
                    </if>
                    <if test="recruit.catSpeId != null and recruit.catSpeId!=''" >
                        AND RES_DOCTOR_RECRUIT.CAT_SPE_ID = #{recruit.catSpeId}
                    </if>
                </if>
                <if test="orgFlows != null">
                    AND RES_DOCTOR_RECRUIT.ORG_FLOW IN
                    <foreach collection="orgFlows" item="orgFlow" open="(" separator="," close=")">
                        #{orgFlow}
                    </foreach>
                </if>
                AND (
                <trim prefix="" prefixOverrides="OR">
                    <if test="(org.sendSchoolId != null and org.sendSchoolId != '')">OR RES_DOCTOR.work_org_id = #{org.sendSchoolId}</if>
                    <if test="(org.sendSchoolName != null and org.sendSchoolName != '')">OR RES_DOCTOR.work_org_name = #{org.sendSchoolName}</if>
                </trim>
                )
        ) DOCTOR
        WHERE 1 = 1
        GROUP BY CAT_SPE_ID,
        CAT_SPE_NAME,ORG_FLOW,
                  ORG_NAME
        ORDER BY ORG_FLOW,CAT_SPE_ID
    </select>

    <!--获取学员轮转统计数据-->
    <select id="getRotationData" resultType="com.pinde.core.model.SysOrg" parameterType="java.util.Map">
        <!--select aa.trainDoctorTotal,aa.org_flow,aa.org_name,nvl(rr.fillNum,0) fillNum,nvl(rr.auditNum,0) auditNum from
        (SELECT nvl(COUNT(DISTINCT d.doctor_flow), 0) AS trainDoctorTotal,rdr.org_flow,rdr.org_name
        FROM RES_DOCTOR_RECRUIT rdr , res_doctor d WHERE rdr.doctor_flow = d.doctor_flow
        and rdr.RECORD_STATUS = 'Y' AND d.record_status = 'Y' AND rdr.doctor_status_id = '20'
        AND rdr.AUDIT_STATUS_ID = 'Passed' AND rdr.CAT_SPE_ID IN ('DoctorTrainingSpe', 'AssiGeneral')
        <if test='doctorTypeIdList != null and doctorTypeIdList.size()>0'>
            and d.doctor_Type_Id in
            <foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
                #{doctorTypeId}
            </foreach>
        </if>
        group by rdr.org_flow, rdr.org_name) aa left join
        (select org_flow, count(1) fillNum, count(audit_status_id) auditNum
        from res_rec where 1=1 group by org_flow) rr on aa.org_flow = rr.org_flow
        where 1=1
        <if test='allOrgFlow!=null and allOrgFlow.size>0'>
            and aa.ORG_FLOW in
            <foreach collection="allOrgFlow" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test='orgFlow!=null and orgFlow!=""'>
            and aa.ORG_FLOW = #{orgFlow}
        </if>-->
        <!--
        <if test='trainingTypeId!=null and trainingTypeId!=""'>
            and s2.training_Type_Id = #{trainingTypeId}
        </if>
        <if test='trainingSpeId!=null and trainingSpeId!=""'>
            and s2.training_Spe_Id = #{trainingSpeId}
        </if>-->

    SELECT aa.trainDoctorTotal, aa.org_flow, aa.org_name, nvl(rr.fillNum, 0) AS fillNum, nvl(rr.auditNum, 0) AS auditNum
        FROM (


        SELECT nvl(COUNT(DISTINCT d.doctor_flow), 0) AS trainDoctorTotal, rdr.org_flow, rdr.org_name
        FROM RES_DOCTOR_RECRUIT rdr, res_doctor d
        WHERE rdr.doctor_flow = d.doctor_flow
        AND rdr.RECORD_STATUS = 'Y'
        AND d.record_status = 'Y'
        AND rdr.doctor_status_id = '20'
        AND rdr.AUDIT_STATUS_ID = 'Passed'
        AND rdr.CAT_SPE_ID IN ('DoctorTrainingSpe')
            <if test='doctorTypeIdList != null '>
                and d.doctor_Type_Id in
                <foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
                    #{doctorTypeId,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test='allOrgFlow!=null '>
                and rdr.ORG_FLOW in
                <foreach collection="allOrgFlow" open="(" separator="," close=")" item="item">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test='orgFlow!=null and orgFlow!=""'>
                and rdr.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
            </if>
            <if test="universityDoctorFlows!=null ">
                and rdr.doctor_flow in
                <trim suffixOverrides=" OR rdr.doctor_flow IN()">
                    <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                        <if test="index != 0">
                            <choose>
                                <when test="index % 1000 == 999">) OR rdr.doctor_flow IN (</when>
                                <otherwise>,</otherwise>
                            </choose>
                        </if>
                        #{Id}
                    </foreach>
                </trim>
            </if>
            GROUP BY rdr.org_flow, rdr.org_name

        ) aa
        LEFT JOIN (
        SELECT a.org_flow, COUNT(1) AS fillNum, COUNT(a.audit_status_id) AS auditNum
        FROM res_rec a,res_doctor b
        WHERE 1 = 1
        AND a.oper_user_flow=b.doctor_flow
        <if test='doctorTypeIdList != null '>
            and b.doctor_Type_Id IN
            <foreach collection="doctorTypeIdList" item="doctorTypeId" open="(" separator="," close=")">
                #{doctorTypeId,jdbcType=VARCHAR}
            </foreach>
        </if>
        <if test="monthDate!=null and  monthDate!=''">
            AND a.MODIFY_TIME like concat(#{monthDate},'%')
        </if>
        <if test='allOrgFlow!=null '>
            and a.ORG_FLOW in
            <foreach collection="allOrgFlow" open="(" separator="," close=")" item="item">#{item,jdbcType=VARCHAR}</foreach>
        </if>
        <if test='orgFlow!=null and orgFlow!=""'>
            and a.ORG_FLOW = #{orgFlow,jdbcType=VARCHAR}
        </if>
        <if test="universityDoctorFlows!=null ">
            and b.doctor_flow in
            <trim suffixOverrides=" OR b.doctor_flow IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR b.doctor_flow IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
        GROUP BY a.org_flow
        ) rr ON aa.org_flow = rr.org_flow

    </select>


    <select id="getPersonStaticData" resultType="com.pinde.core.model.PersonStaticExample"
            parameterType="java.util.Map">
       <!-- SELECT
        t.org_flow,
        t.org_name,
        t.session_number,
        SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = '2019-09' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) lastResidentNum,
        SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = '2019-10' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentNum,
        SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = '2019-09' and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) lastInSchoolNum,
        SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = '2019-10' and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolNum,
        SUM(CASE WHEN t.DATE_MONTH = '2019-10' and substr(dr.recruit_date,0,7)='2019-10' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentRecruitNum,
        SUM(CASE WHEN t.DATE_MONTH = '2019-10' and substr(dr.recruit_date,0,7)='2019-10' and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolRecruitNum,
        SUM(CASE WHEN t.doctor_Status_Id = '21' and t.DATE_MONTH = '2019-09' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentGraduatNum,
        SUM(CASE WHEN t.doctor_Status_Id = '21' and t.DATE_MONTH = '2019-10' and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolGraduatNum,
        SUM(CASE WHEN t.doctor_Status_Id = '22' and t.DATE_MONTH = '2019-10' and t.doctor_type_id in ('Social','Company','CompanyEntrust')  THEN 1 ELSE 0 END) residentExaminedNum,
        SUM(CASE WHEN t.doctor_Status_Id = '22' and t.DATE_MONTH = '2019-10' and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolExaminedNum,
        SUM(CASE WHEN rddt.type_id = 'ReturnTraining' and rddt.audit_status_id = '1' and t.DATE_MONTH = '2019-10' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentReturnNum,
        SUM(CASE WHEN rddt.type_id = 'ReturnTraining' and rddt.audit_status_id = '1' and t.DATE_MONTH = '2019-10' and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolReturnNum,
        SUM(CASE WHEN doh.history_org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.out_date,0,6)='201910' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentOutNum,
        SUM(CASE WHEN doh.history_org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.out_date,0,6)='201910' and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolOutNum,
        SUM(CASE WHEN doh.org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.in_date,0,6)='201909' and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentInNum,
        SUM(CASE WHEN doh.org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.in_date,0,6)='201910' and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolInNum
        FROM  SYS_MONTHLY_DOCTOR_INFO t
        left join res_docotr_delay_teturn rddt on rddt.doctor_flow = t.doctor_flow
        left join jsres_recruit_doc_info dr on dr.doctor_flow=t.doctor_flow
        left join RES_DOCTOR_ORG_HISTORY doh on doh.doctor_flow=t.doctor_flow
        WHERE t.RECORD_STATUS = 'Y'
        <if test='orgFlow!=null and orgFlow!=""'>
            and t.ORG_FLOW = #{orgFlow}
        </if>
        group by t.session_number,t.org_flow,t.org_name-->
        SELECT
        t.org_flow,
        t.org_name,
        <!--  t.session_number,-->
          SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = #{lastMonthdateStr} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) lastResidentNum,
          SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = #{monthdateStr} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentNum,
          SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH =  #{lastMonthdateStr} and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) lastInSchoolNum,
          SUM(CASE WHEN t.doctor_Status_Id = '20' and t.DATE_MONTH = #{monthdateStr}  and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolNum,
          SUM(CASE WHEN t.DATE_MONTH = '2019-10' and substr(dr.recruit_date,0,7)=#{monthdateStr}  and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentRecruitNum,
          SUM(CASE WHEN t.DATE_MONTH = '2019-10' and substr(dr.recruit_date,0,7)=#{monthdateStr}  and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolRecruitNum,
          SUM(CASE WHEN t.doctor_Status_Id = '21' and t.DATE_MONTH = #{lastMonthdateStr} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentGraduatNum,
          SUM(CASE WHEN t.doctor_Status_Id = '21' and t.DATE_MONTH = #{monthdateStr} and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolGraduatNum,
          SUM(CASE WHEN t.doctor_Status_Id = '22' and t.DATE_MONTH = #{monthdateStr} and t.doctor_type_id in ('Social','Company','CompanyEntrust')  THEN 1 ELSE 0 END) residentExaminedNum,
          SUM(CASE WHEN t.doctor_Status_Id = '22' and t.DATE_MONTH =#{monthdateStr} and t.doctor_type_id = 'Graduate' THEN 1 ELSE 0 END) inSchoolExaminedNum,
          SUM(CASE WHEN rddt.type_id = 'ReturnTraining' and rddt.audit_status_id = '1' and t.DATE_MONTH = #{monthdateStr} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentReturnNum,
          SUM(CASE WHEN rddt.type_id = 'ReturnTraining' and rddt.audit_status_id = '1' and t.DATE_MONTH = #{monthdateStr} and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolReturnNum,
          SUM(CASE WHEN doh.history_org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.out_date,0,6)=#{monthdate} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentOutNum,
          SUM(CASE WHEN doh.history_org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.out_date,0,6)=#{monthdate} and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolOutNum,
          SUM(CASE WHEN doh.org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.in_date,0,6)=#{lastMonthdate} and t.doctor_type_id in ('Social','Company','CompanyEntrust') THEN 1 ELSE 0 END) residentInNum,
          SUM(CASE WHEN doh.org_flow=t.org_flow and doh.RECORD_STATUS = 'Y' AND doh.CHANGE_TYPE_ID = 'BaseChange' AND doh.CHANGE_STATUS_ID = 'GlobalApplyPass' and substr(doh.in_date,0,6)=#{monthdate} and t.doctor_type_id ='Graduate' THEN 1 ELSE 0 END) inSchoolInNum
        FROM SYS_MONTHLY_DOCTOR_INFO t
          left join res_docotr_delay_teturn rddt on rddt.doctor_flow = t.doctor_flow
          left join jsres_recruit_doc_info dr on dr.doctor_flow=t.doctor_flow
          left join RES_DOCTOR_ORG_HISTORY doh on doh.doctor_flow=t.doctor_flow
          WHERE t.RECORD_STATUS = 'Y'
          <if test='orgFlow!=null and orgFlow!=""'>
              and t.ORG_FLOW = #{orgFlow}
          </if>
          <if test="universityDoctorFlows!=null ">
              and t.doctor_flow in
              <trim suffixOverrides=" OR t.doctor_flow IN()">
                  <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                      <if test="index != 0">
                          <choose>
                              <when test="index % 1000 == 999">) OR t.doctor_flow IN (</when>
                              <otherwise>,</otherwise>
                          </choose>
                      </if>
                      #{Id}
                  </foreach>
              </trim>
          </if>
          group by <!--t.session_number,-->t.org_flow,t.org_name
    </select>

    <select id="getPersonStaticDataNEWyuh" resultType="com.pinde.core.model.PersonStaticExample"
            parameterType="java.util.Map">
        WITH aa as(
          SELECT
            T .org_flow,
            T .org_name,
            SUM (	CASE WHEN T .doctor_Status_Id = '20'
           AND T .DATE_MONTH = #{lastMonthdateStr}  AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           AND T .doctor_type_id IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                ) THEN
                    1
                ELSE
                    0
                END
            ) lastResidentNum,
        SUM (
                CASE
                WHEN T .doctor_Status_Id = '20'
                AND T .DATE_MONTH = #{lastMonthdateStr}
        AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
                AND T .doctor_type_id = 'Graduate' THEN
                    1
                ELSE
                    0
                END
            ) lastInSchoolNum,
        SUM (
                CASE
                WHEN T .doctor_Status_Id = '20'
                AND T .DATE_MONTH = #{lastMonthdateStr}
        AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
                 THEN
                    1
                ELSE
                    0
                END
            ) lastBothNum,
            SUM (
                CASE
                WHEN T.doctor_Status_Id = '20'
                AND T.DATE_MONTH = #{monthdateStr}
        AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
                AND T .doctor_type_id IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                ) THEN
                    1
                ELSE
                    0
                END
            ) residentNum,

            SUM (
                CASE
                WHEN T.doctor_Status_Id = '20'
                AND T.DATE_MONTH = #{monthdateStr}
        AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
                AND T.doctor_type_id = 'Graduate' THEN
                    1
                ELSE
                    0
                END
            ) inSchoolNum,

            SUM (
                CASE
                WHEN T.doctor_Status_Id = '20'
                AND T.DATE_MONTH = #{monthdateStr}
        AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           THEN
                    1
                ELSE
                    0
                END
            ) bothNum,
            SUM (
                CASE
                WHEN T.doctor_Status_Id = '21'
                AND T.DATE_MONTH =#{monthdateStr}
           AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           AND T.doctor_type_id  IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                )
           THEN
                    1
                ELSE
                    0
                END
            ) residentGraduatNum,
        SUM (
                CASE
                WHEN T.doctor_Status_Id = '21'
                AND T.DATE_MONTH = #{monthdateStr}
           AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           AND T.doctor_type_id = 'Graduate'
           THEN
                    1
                ELSE
                    0
                END
            ) inSchoolGraduatNum,
        SUM (
                CASE
                WHEN T.doctor_Status_Id = '22'
                AND T.DATE_MONTH = #{monthdateStr}
           AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           AND T.doctor_type_id  IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                )
           THEN
                    1
                ELSE
                    0
                END
            ) residentExaminedNum,
        SUM (
                CASE
                WHEN T.doctor_Status_Id = '22'
                AND T.DATE_MONTH = #{monthdateStr}
           AND t.CHANGE_TYPE_ID='DoctorTrainingSpe'
           AND T.doctor_type_id = 'Graduate'
           THEN
                    1
                ELSE
                    0
                END
            ) inSchoolExaminedNum
        FROM
        SYS_MONTHLY_DOCTOR_INFO T
        WHERE
            T .RECORD_STATUS = 'Y'
        and t.ORG_FLOW=#{orgFlow}
        <if test="universityDoctorFlows!=null ">
            and t.doctor_flow in
            <trim suffixOverrides=" OR t.doctor_flow IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR t.doctor_flow IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
        GROUP BY
            T .org_flow,
            T .org_name
        ),
        <!--line1 -->
        bb as(
        SELECT
            T .org_flow,
            T .org_name,
            SUM (
                CASE
                WHEN T .AUDIT_STATUS_ID = '1'
        and t.TYPE_ID='ReturnTraining'
                AND T .DATE_MONTH = #{monthdateStr}
        AND t.TRAINING_TYPE_ID='DoctorTrainingSpe'
                AND T .doctor_type_id IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                ) THEN
                    1
                ELSE
                    0
                END
            ) ResidentReturnNum,
        SUM (
                CASE
                WHEN T .AUDIT_STATUS_ID = '1'
        and t.TYPE_ID='ReturnTraining'
                AND T .DATE_MONTH = #{monthdateStr}
        AND t.TRAINING_TYPE_ID='DoctorTrainingSpe'
                AND T .doctor_type_id = 'Graduate' THEN
                    1
                ELSE
                    0
                END
            ) InSchoolreturnNum

        FROM
             SYS_MONTHLY_RETURN_DELAY_INFO t
        WHERE
            T .RECORD_STATUS = 'Y'
        and t.ORG_FLOW=#{orgFlow}
        <if test="universityDoctorFlows!=null ">
            and t.doctor_flow in
            <trim suffixOverrides=" OR t.doctor_flow IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR t.doctor_flow IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
        GROUP BY
            T .org_flow,
            T .org_name
        ),
        <!--line 2-->
         cc as(
        SELECT
            T .org_flow,
            T .org_name,
            SUM (
                CASE
                WHEN T .CHANGE_TYPE_ID = 'BaseChange'

                AND T .DATE_MONTH = #{monthdateStr}
        AND t.TRAINING_TYPE_ID='DoctorTrainingSpe'
        and t.ORG_FLOW=#{orgFlow}
                AND T .doctor_type_id IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                ) THEN
                    1
                ELSE
                    0
                END
            ) ResidentInNum,
            SUM (
                CASE
                WHEN T .CHANGE_TYPE_ID = 'BaseChange'
                AND T .DATE_MONTH =#{monthdateStr}
        AND t.HISTORY_TRAINING_TYPE_ID='DoctorTrainingSpe'
        and t.HISTORY_ORG_FLOW=#{orgFlow}
                AND T .doctor_type_id IN (
                    'Social',
                    'Company',
                    'CompanyEntrust'
                ) THEN
                    1
                ELSE
                    0
                END
            ) ResidentoutNum,

        SUM (
                CASE
                WHEN T .CHANGE_TYPE_ID = 'BaseChange'

                AND T .DATE_MONTH = #{monthdateStr}
        AND t.TRAINING_TYPE_ID='DoctorTrainingSpe'
        and t.ORG_FLOW= #{orgFlow}
        AND t.TRAINING_TYPE_ID='DoctorTrainingSpe'
                AND T .doctor_type_id = 'Graduate' THEN
                    1
                ELSE
                    0
                END
            ) InSchoolinNum,
        SUM (
                CASE
                WHEN T .CHANGE_TYPE_ID = 'BaseChange'

                AND T .DATE_MONTH =#{monthdateStr}

        AND t.HISTORY_TRAINING_TYPE_ID='DoctorTrainingSpe'
        and t.HISTORY_ORG_FLOW=#{orgFlow}
                AND T .doctor_type_id = 'Graduate' THEN
                    1
                ELSE
                    0
                END
            ) InSchooloutNum
        FROM
             SYS_MONTHLY_CHANGE_INFO t
        WHERE
            T .RECORD_STATUS = 'Y'
        <if test="universityDoctorFlows!=null ">
            and t.doctor_flow in
            <trim suffixOverrides=" OR t.doctor_flow IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR t.doctor_flow IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
        GROUP BY
            T .org_flow,
            T .org_name
        HAVING
         t.ORG_FLOW=#{orgFlow}
        )

        select AA.*,BB.RESIDENTRETURNNUM,BB.INSCHOOLRETURNNUM ,cc.RESIDENTINNUM,CC.RESIDENTOUTNUM,CC.INSCHOOLINNUM,CC.INSCHOOLOUTNUM
         from aa
        LEFT JOIN bb ON aa.org_flow =bb.org_flow
        LEFT JOIN cc ON cc.org_flow=AA.ORG_FLOW
    </select>

    <select id="residentRecruitCount" resultType="java.lang.Integer" parameterType="java.util.Map">
       select count(1)
from(
		SELECT dr.RECRUIT_FLOW,dr.doctor_flow,DR.org_flow,dr.org_name,
			DR.MODIFY_TIME
        FROM jsres_recruit_doc_info dr
			LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
		AND dr.session_number = ed.session_number
		WHERE dr.RECORD_STATUS = 'Y'
			AND dr.org_flow IN (SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS = 'Y'
					AND ORG_PROV_ID = '320000'
					AND ORG_LEVEL_ID = 'CountryOrg'
					AND ORG_TYPE_ID = 'Hospital')
			AND dr.ORG_FLOW  = #{orgFlow}
			AND ed.DOCTOR_TYPE_ID IN ('Company', 'CompanyEntrust', 'Social')
			AND dr.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')

			AND dr.CAT_SPE_ID = 'DoctorTrainingSpe'
			AND dr.AUDIT_STATUS_ID = 'Passed'
AND SUBSTR(DR.MODIFY_TIME, 0, 6) = #{monthdate}

        <if test="universityDoctorFlows!=null ">
            and DR.DOCTOR_FLOW in
            <trim suffixOverrides=" OR DR.DOCTOR_FLOW IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR DR.DOCTOR_FLOW IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
		ORDER BY dr.session_number DESC, dr.org_flow, dr.spe_id,  dr.doctor_flow, dr.CREATE_TIME DESC
	)a
    </select>
    <select id="inSchoolRecruitCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(1)
        from(
        SELECT dr.RECRUIT_FLOW,dr.doctor_flow,DR.org_flow,dr.org_name,
        DR.MODIFY_TIME
        FROM jsres_recruit_doc_info dr
        LEFT JOIN jsres_recruit_info ed ON dr.doctor_flow = ed.doctor_flow
        AND dr.session_number = ed.session_number
        WHERE dr.RECORD_STATUS = 'Y'
        AND dr.org_flow IN (SELECT ORG_FLOW
        FROM SYS_ORG
        WHERE SYS_ORG.RECORD_STATUS = 'Y'
        AND ORG_PROV_ID = '320000'
        AND ORG_LEVEL_ID = 'CountryOrg'
        AND ORG_TYPE_ID = 'Hospital')
        AND dr.ORG_FLOW  = #{orgFlow}
        AND ed.DOCTOR_TYPE_ID IN ( 'Graduate')
        AND dr.TRAIN_YEAR IN ('OneYear', 'TwoYear', 'ThreeYear')

        AND dr.CAT_SPE_ID = 'DoctorTrainingSpe'
        AND dr.AUDIT_STATUS_ID = 'Passed'
        AND SUBSTR(DR.MODIFY_TIME, 0, 6) = #{monthdate}

        <if test="universityDoctorFlows!=null ">
            and DR.DOCTOR_FLOW in
            <trim suffixOverrides=" OR DR.DOCTOR_FLOW IN()">
                <foreach collection="universityDoctorFlows" item="Id" index="index" open="(" close=")">
                    <if test="index != 0">
                        <choose>
                            <when test="index % 1000 == 999">) OR DR.DOCTOR_FLOW IN (</when>
                            <otherwise>,</otherwise>
                        </choose>
                    </if>
                    #{Id}
                </foreach>
            </trim>
        </if>
        ORDER BY dr.session_number DESC, dr.org_flow, dr.spe_id,  dr.doctor_flow, dr.CREATE_TIME DESC
        )a
    </select>
</mapper>