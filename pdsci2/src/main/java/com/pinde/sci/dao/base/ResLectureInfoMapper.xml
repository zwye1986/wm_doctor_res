<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.ResLectureInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pinde.sci.model.mo.ResLectureInfo" >
    <id column="LECTURE_FLOW" property="lectureFlow" jdbcType="VARCHAR" />
    <result column="LECTURE_TEACHER_FLOW" property="lectureTeacherFlow" jdbcType="VARCHAR" />
    <result column="LECTURE_TEACHER_NAME" property="lectureTeacherName" jdbcType="VARCHAR" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="LECTURE_TRAIN_DATE" property="lectureTrainDate" jdbcType="VARCHAR" />
    <result column="LECTURE_START_TIME" property="lectureStartTime" jdbcType="VARCHAR" />
    <result column="LECTURE_END_TIME" property="lectureEndTime" jdbcType="VARCHAR" />
    <result column="LECTURE_CONTENT" property="lectureContent" jdbcType="VARCHAR" />
    <result column="LECTURE_TRAIN_PLACE" property="lectureTrainPlace" jdbcType="VARCHAR" />
    <result column="LECTURE_DESC" property="lectureDesc" jdbcType="VARCHAR" />
    <result column="LECTURE_EVA_PERIOD" property="lectureEvaPeriod" jdbcType="VARCHAR" />
    <result column="LECTURE_UNIT_ID" property="lectureUnitId" jdbcType="VARCHAR" />
    <result column="LECTURE_UNIT_NAME" property="lectureUnitName" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="LECTURE_TYPE_ID" property="lectureTypeId" jdbcType="VARCHAR" />
    <result column="LECTURE_TYPE_NAME" property="lectureTypeName" jdbcType="VARCHAR" />
    <result column="LECTURE_CODE_URL" property="lectureCodeUrl" jdbcType="VARCHAR" />
    <result column="PARTICIPANTS_ID" property="participantsId" jdbcType="VARCHAR" />
    <result column="PARTICIPANTS_NAME" property="participantsName" jdbcType="VARCHAR" />
    <result column="LIMIT_NUM" property="limitNum" jdbcType="VARCHAR" />
    <result column="LECTURE_DESCRIPTION" property="lectureDescription" jdbcType="VARCHAR" />
    <result column="COURSEWARE_URL" property="coursewareUrl" jdbcType="VARCHAR" />
    <result column="LECTURE_LEVEL_ID" property="lectureLevelId" jdbcType="VARCHAR" />
    <result column="LECTURE_LEVEL_NAME" property="lectureLevelName" jdbcType="VARCHAR" />
    <result column="LECTURE_OUT_URL" property="lectureOutUrl" jdbcType="VARCHAR" />
    <result column="LECTURE_SPEAKER_ROLE_ID" property="lectureSpeakerRoleId" jdbcType="VARCHAR" />
    <result column="LECTURE_SPEAKER_ROLE_NAME" property="lectureSpeakerRoleName" jdbcType="VARCHAR" />
    <result column="RANDOM_SIGN_IN" property="randomSignIn" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pinde.sci.model.mo.ResLectureInfo" extends="BaseResultMap" >
    <result column="EVAL_FORM_CONTENT" property="evalFormContent" jdbcType="CLOB" />
  </resultMap>
  <resultMap id="ParticipateResultMap" type="com.pinde.sci.model.jsres.ParticipateInfoExt" >
    <result column="lectureFlow"     property="lectureFlow" jdbcType="VARCHAR" />
    <result column="scanCodeStudent" property="scanCodeStudent" jdbcType="VARCHAR" />
    <result column="signUpStudent"   property="signUpStudent" jdbcType="VARCHAR" />
    <result column="scanCodeTeacher" property="scanCodeTeacher" jdbcType="VARCHAR" />
    <result column="signUpTeacher"   property="signUpTeacher" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    LECTURE_FLOW, LECTURE_TEACHER_FLOW, LECTURE_TEACHER_NAME, ORG_FLOW, ORG_NAME, LECTURE_TRAIN_DATE, 
    LECTURE_START_TIME, LECTURE_END_TIME, LECTURE_CONTENT, LECTURE_TRAIN_PLACE, LECTURE_DESC, 
    LECTURE_EVA_PERIOD, LECTURE_UNIT_ID, LECTURE_UNIT_NAME, RECORD_STATUS, CREATE_TIME, 
    CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, LECTURE_TYPE_ID, LECTURE_TYPE_NAME, 
    LECTURE_CODE_URL, PARTICIPANTS_ID, PARTICIPANTS_NAME, LIMIT_NUM, LECTURE_DESCRIPTION, 
    COURSEWARE_URL, LECTURE_LEVEL_ID, LECTURE_LEVEL_NAME, LECTURE_OUT_URL, LECTURE_SPEAKER_ROLE_ID, 
    LECTURE_SPEAKER_ROLE_NAME, RANDOM_SIGN_IN
  </sql>
  <sql id="Blob_Column_List" >
    EVAL_FORM_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pinde.sci.model.mo.ResLectureInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.RES_LECTURE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.sci.model.mo.ResLectureInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PDSCI.RES_LECTURE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PDSCI.RES_LECTURE_INFO
    where LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PDSCI.RES_LECTURE_INFO
    where LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pinde.sci.model.mo.ResLectureInfoExample" >
    delete from PDSCI.RES_LECTURE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pinde.sci.model.mo.ResLectureInfo" >
    insert into PDSCI.RES_LECTURE_INFO (LECTURE_FLOW, LECTURE_TEACHER_FLOW, 
      LECTURE_TEACHER_NAME, ORG_FLOW, ORG_NAME, 
      LECTURE_TRAIN_DATE, LECTURE_START_TIME, LECTURE_END_TIME, 
      LECTURE_CONTENT, LECTURE_TRAIN_PLACE, LECTURE_DESC, 
      LECTURE_EVA_PERIOD, LECTURE_UNIT_ID, LECTURE_UNIT_NAME, 
      RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, 
      MODIFY_TIME, MODIFY_USER_FLOW, LECTURE_TYPE_ID, 
      LECTURE_TYPE_NAME, LECTURE_CODE_URL, PARTICIPANTS_ID, 
      PARTICIPANTS_NAME, LIMIT_NUM, LECTURE_DESCRIPTION, 
      COURSEWARE_URL, LECTURE_LEVEL_ID, LECTURE_LEVEL_NAME, 
      LECTURE_OUT_URL, LECTURE_SPEAKER_ROLE_ID, LECTURE_SPEAKER_ROLE_NAME, 
      RANDOM_SIGN_IN, EVAL_FORM_CONTENT)
    values (#{lectureFlow,jdbcType=VARCHAR}, #{lectureTeacherFlow,jdbcType=VARCHAR}, 
      #{lectureTeacherName,jdbcType=VARCHAR}, #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{lectureTrainDate,jdbcType=VARCHAR}, #{lectureStartTime,jdbcType=VARCHAR}, #{lectureEndTime,jdbcType=VARCHAR}, 
      #{lectureContent,jdbcType=VARCHAR}, #{lectureTrainPlace,jdbcType=VARCHAR}, #{lectureDesc,jdbcType=VARCHAR}, 
      #{lectureEvaPeriod,jdbcType=VARCHAR}, #{lectureUnitId,jdbcType=VARCHAR}, #{lectureUnitName,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, #{lectureTypeId,jdbcType=VARCHAR}, 
      #{lectureTypeName,jdbcType=VARCHAR}, #{lectureCodeUrl,jdbcType=VARCHAR}, #{participantsId,jdbcType=VARCHAR}, 
      #{participantsName,jdbcType=VARCHAR}, #{limitNum,jdbcType=VARCHAR}, #{lectureDescription,jdbcType=VARCHAR}, 
      #{coursewareUrl,jdbcType=VARCHAR}, #{lectureLevelId,jdbcType=VARCHAR}, #{lectureLevelName,jdbcType=VARCHAR}, 
      #{lectureOutUrl,jdbcType=VARCHAR}, #{lectureSpeakerRoleId,jdbcType=VARCHAR}, #{lectureSpeakerRoleName,jdbcType=VARCHAR}, 
      #{randomSignIn,jdbcType=VARCHAR}, #{evalFormContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.pinde.sci.model.mo.ResLectureInfo" >
    insert into PDSCI.RES_LECTURE_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lectureFlow != null" >
        LECTURE_FLOW,
      </if>
      <if test="lectureTeacherFlow != null" >
        LECTURE_TEACHER_FLOW,
      </if>
      <if test="lectureTeacherName != null" >
        LECTURE_TEACHER_NAME,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="lectureTrainDate != null" >
        LECTURE_TRAIN_DATE,
      </if>
      <if test="lectureStartTime != null" >
        LECTURE_START_TIME,
      </if>
      <if test="lectureEndTime != null" >
        LECTURE_END_TIME,
      </if>
      <if test="lectureContent != null" >
        LECTURE_CONTENT,
      </if>
      <if test="lectureTrainPlace != null" >
        LECTURE_TRAIN_PLACE,
      </if>
      <if test="lectureDesc != null" >
        LECTURE_DESC,
      </if>
      <if test="lectureEvaPeriod != null" >
        LECTURE_EVA_PERIOD,
      </if>
      <if test="lectureUnitId != null" >
        LECTURE_UNIT_ID,
      </if>
      <if test="lectureUnitName != null" >
        LECTURE_UNIT_NAME,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="lectureTypeId != null" >
        LECTURE_TYPE_ID,
      </if>
      <if test="lectureTypeName != null" >
        LECTURE_TYPE_NAME,
      </if>
      <if test="lectureCodeUrl != null" >
        LECTURE_CODE_URL,
      </if>
      <if test="participantsId != null" >
        PARTICIPANTS_ID,
      </if>
      <if test="participantsName != null" >
        PARTICIPANTS_NAME,
      </if>
      <if test="limitNum != null" >
        LIMIT_NUM,
      </if>
      <if test="lectureDescription != null" >
        LECTURE_DESCRIPTION,
      </if>
      <if test="coursewareUrl != null" >
        COURSEWARE_URL,
      </if>
      <if test="lectureLevelId != null" >
        LECTURE_LEVEL_ID,
      </if>
      <if test="lectureLevelName != null" >
        LECTURE_LEVEL_NAME,
      </if>
      <if test="lectureOutUrl != null" >
        LECTURE_OUT_URL,
      </if>
      <if test="lectureSpeakerRoleId != null" >
        LECTURE_SPEAKER_ROLE_ID,
      </if>
      <if test="lectureSpeakerRoleName != null" >
        LECTURE_SPEAKER_ROLE_NAME,
      </if>
      <if test="randomSignIn != null" >
        RANDOM_SIGN_IN,
      </if>
      <if test="evalFormContent != null" >
        EVAL_FORM_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lectureFlow != null" >
        #{lectureFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureTeacherFlow != null" >
        #{lectureTeacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureTeacherName != null" >
        #{lectureTeacherName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="lectureTrainDate != null" >
        #{lectureTrainDate,jdbcType=VARCHAR},
      </if>
      <if test="lectureStartTime != null" >
        #{lectureStartTime,jdbcType=VARCHAR},
      </if>
      <if test="lectureEndTime != null" >
        #{lectureEndTime,jdbcType=VARCHAR},
      </if>
      <if test="lectureContent != null" >
        #{lectureContent,jdbcType=VARCHAR},
      </if>
      <if test="lectureTrainPlace != null" >
        #{lectureTrainPlace,jdbcType=VARCHAR},
      </if>
      <if test="lectureDesc != null" >
        #{lectureDesc,jdbcType=VARCHAR},
      </if>
      <if test="lectureEvaPeriod != null" >
        #{lectureEvaPeriod,jdbcType=VARCHAR},
      </if>
      <if test="lectureUnitId != null" >
        #{lectureUnitId,jdbcType=VARCHAR},
      </if>
      <if test="lectureUnitName != null" >
        #{lectureUnitName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureTypeId != null" >
        #{lectureTypeId,jdbcType=VARCHAR},
      </if>
      <if test="lectureTypeName != null" >
        #{lectureTypeName,jdbcType=VARCHAR},
      </if>
      <if test="lectureCodeUrl != null" >
        #{lectureCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="participantsId != null" >
        #{participantsId,jdbcType=VARCHAR},
      </if>
      <if test="participantsName != null" >
        #{participantsName,jdbcType=VARCHAR},
      </if>
      <if test="limitNum != null" >
        #{limitNum,jdbcType=VARCHAR},
      </if>
      <if test="lectureDescription != null" >
        #{lectureDescription,jdbcType=VARCHAR},
      </if>
      <if test="coursewareUrl != null" >
        #{coursewareUrl,jdbcType=VARCHAR},
      </if>
      <if test="lectureLevelId != null" >
        #{lectureLevelId,jdbcType=VARCHAR},
      </if>
      <if test="lectureLevelName != null" >
        #{lectureLevelName,jdbcType=VARCHAR},
      </if>
      <if test="lectureOutUrl != null" >
        #{lectureOutUrl,jdbcType=VARCHAR},
      </if>
      <if test="lectureSpeakerRoleId != null" >
        #{lectureSpeakerRoleId,jdbcType=VARCHAR},
      </if>
      <if test="lectureSpeakerRoleName != null" >
        #{lectureSpeakerRoleName,jdbcType=VARCHAR},
      </if>
      <if test="randomSignIn != null" >
        #{randomSignIn,jdbcType=VARCHAR},
      </if>
      <if test="evalFormContent != null" >
        #{evalFormContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pinde.sci.model.mo.ResLectureInfoExample" resultType="java.lang.Integer" >
    select count(*) from PDSCI.RES_LECTURE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PDSCI.RES_LECTURE_INFO
    <set >
      <if test="record.lectureFlow != null" >
        LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTeacherFlow != null" >
        LECTURE_TEACHER_FLOW = #{record.lectureTeacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTeacherName != null" >
        LECTURE_TEACHER_NAME = #{record.lectureTeacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTrainDate != null" >
        LECTURE_TRAIN_DATE = #{record.lectureTrainDate,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureStartTime != null" >
        LECTURE_START_TIME = #{record.lectureStartTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureEndTime != null" >
        LECTURE_END_TIME = #{record.lectureEndTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureContent != null" >
        LECTURE_CONTENT = #{record.lectureContent,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTrainPlace != null" >
        LECTURE_TRAIN_PLACE = #{record.lectureTrainPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureDesc != null" >
        LECTURE_DESC = #{record.lectureDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureEvaPeriod != null" >
        LECTURE_EVA_PERIOD = #{record.lectureEvaPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureUnitId != null" >
        LECTURE_UNIT_ID = #{record.lectureUnitId,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureUnitName != null" >
        LECTURE_UNIT_NAME = #{record.lectureUnitName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTypeId != null" >
        LECTURE_TYPE_ID = #{record.lectureTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureTypeName != null" >
        LECTURE_TYPE_NAME = #{record.lectureTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureCodeUrl != null" >
        LECTURE_CODE_URL = #{record.lectureCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.participantsId != null" >
        PARTICIPANTS_ID = #{record.participantsId,jdbcType=VARCHAR},
      </if>
      <if test="record.participantsName != null" >
        PARTICIPANTS_NAME = #{record.participantsName,jdbcType=VARCHAR},
      </if>
      <if test="record.limitNum != null" >
        LIMIT_NUM = #{record.limitNum,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureDescription != null" >
        LECTURE_DESCRIPTION = #{record.lectureDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.coursewareUrl != null" >
        COURSEWARE_URL = #{record.coursewareUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureLevelId != null" >
        LECTURE_LEVEL_ID = #{record.lectureLevelId,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureLevelName != null" >
        LECTURE_LEVEL_NAME = #{record.lectureLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureOutUrl != null" >
        LECTURE_OUT_URL = #{record.lectureOutUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureSpeakerRoleId != null" >
        LECTURE_SPEAKER_ROLE_ID = #{record.lectureSpeakerRoleId,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureSpeakerRoleName != null" >
        LECTURE_SPEAKER_ROLE_NAME = #{record.lectureSpeakerRoleName,jdbcType=VARCHAR},
      </if>
      <if test="record.randomSignIn != null" >
        RANDOM_SIGN_IN = #{record.randomSignIn,jdbcType=VARCHAR},
      </if>
      <if test="record.evalFormContent != null" >
        EVAL_FORM_CONTENT = #{record.evalFormContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update PDSCI.RES_LECTURE_INFO
    set LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_FLOW = #{record.lectureTeacherFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_NAME = #{record.lectureTeacherName,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      LECTURE_TRAIN_DATE = #{record.lectureTrainDate,jdbcType=VARCHAR},
      LECTURE_START_TIME = #{record.lectureStartTime,jdbcType=VARCHAR},
      LECTURE_END_TIME = #{record.lectureEndTime,jdbcType=VARCHAR},
      LECTURE_CONTENT = #{record.lectureContent,jdbcType=VARCHAR},
      LECTURE_TRAIN_PLACE = #{record.lectureTrainPlace,jdbcType=VARCHAR},
      LECTURE_DESC = #{record.lectureDesc,jdbcType=VARCHAR},
      LECTURE_EVA_PERIOD = #{record.lectureEvaPeriod,jdbcType=VARCHAR},
      LECTURE_UNIT_ID = #{record.lectureUnitId,jdbcType=VARCHAR},
      LECTURE_UNIT_NAME = #{record.lectureUnitName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      LECTURE_TYPE_ID = #{record.lectureTypeId,jdbcType=VARCHAR},
      LECTURE_TYPE_NAME = #{record.lectureTypeName,jdbcType=VARCHAR},
      LECTURE_CODE_URL = #{record.lectureCodeUrl,jdbcType=VARCHAR},
      PARTICIPANTS_ID = #{record.participantsId,jdbcType=VARCHAR},
      PARTICIPANTS_NAME = #{record.participantsName,jdbcType=VARCHAR},
      LIMIT_NUM = #{record.limitNum,jdbcType=VARCHAR},
      LECTURE_DESCRIPTION = #{record.lectureDescription,jdbcType=VARCHAR},
      COURSEWARE_URL = #{record.coursewareUrl,jdbcType=VARCHAR},
      LECTURE_LEVEL_ID = #{record.lectureLevelId,jdbcType=VARCHAR},
      LECTURE_LEVEL_NAME = #{record.lectureLevelName,jdbcType=VARCHAR},
      LECTURE_OUT_URL = #{record.lectureOutUrl,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_ID = #{record.lectureSpeakerRoleId,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_NAME = #{record.lectureSpeakerRoleName,jdbcType=VARCHAR},
      RANDOM_SIGN_IN = #{record.randomSignIn,jdbcType=VARCHAR},
      EVAL_FORM_CONTENT = #{record.evalFormContent,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PDSCI.RES_LECTURE_INFO
    set LECTURE_FLOW = #{record.lectureFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_FLOW = #{record.lectureTeacherFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_NAME = #{record.lectureTeacherName,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      LECTURE_TRAIN_DATE = #{record.lectureTrainDate,jdbcType=VARCHAR},
      LECTURE_START_TIME = #{record.lectureStartTime,jdbcType=VARCHAR},
      LECTURE_END_TIME = #{record.lectureEndTime,jdbcType=VARCHAR},
      LECTURE_CONTENT = #{record.lectureContent,jdbcType=VARCHAR},
      LECTURE_TRAIN_PLACE = #{record.lectureTrainPlace,jdbcType=VARCHAR},
      LECTURE_DESC = #{record.lectureDesc,jdbcType=VARCHAR},
      LECTURE_EVA_PERIOD = #{record.lectureEvaPeriod,jdbcType=VARCHAR},
      LECTURE_UNIT_ID = #{record.lectureUnitId,jdbcType=VARCHAR},
      LECTURE_UNIT_NAME = #{record.lectureUnitName,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      LECTURE_TYPE_ID = #{record.lectureTypeId,jdbcType=VARCHAR},
      LECTURE_TYPE_NAME = #{record.lectureTypeName,jdbcType=VARCHAR},
      LECTURE_CODE_URL = #{record.lectureCodeUrl,jdbcType=VARCHAR},
      PARTICIPANTS_ID = #{record.participantsId,jdbcType=VARCHAR},
      PARTICIPANTS_NAME = #{record.participantsName,jdbcType=VARCHAR},
      LIMIT_NUM = #{record.limitNum,jdbcType=VARCHAR},
      LECTURE_DESCRIPTION = #{record.lectureDescription,jdbcType=VARCHAR},
      COURSEWARE_URL = #{record.coursewareUrl,jdbcType=VARCHAR},
      LECTURE_LEVEL_ID = #{record.lectureLevelId,jdbcType=VARCHAR},
      LECTURE_LEVEL_NAME = #{record.lectureLevelName,jdbcType=VARCHAR},
      LECTURE_OUT_URL = #{record.lectureOutUrl,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_ID = #{record.lectureSpeakerRoleId,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_NAME = #{record.lectureSpeakerRoleName,jdbcType=VARCHAR},
      RANDOM_SIGN_IN = #{record.randomSignIn,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pinde.sci.model.mo.ResLectureInfo" >
    update PDSCI.RES_LECTURE_INFO
    <set >
      <if test="lectureTeacherFlow != null" >
        LECTURE_TEACHER_FLOW = #{lectureTeacherFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureTeacherName != null" >
        LECTURE_TEACHER_NAME = #{lectureTeacherName,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="lectureTrainDate != null" >
        LECTURE_TRAIN_DATE = #{lectureTrainDate,jdbcType=VARCHAR},
      </if>
      <if test="lectureStartTime != null" >
        LECTURE_START_TIME = #{lectureStartTime,jdbcType=VARCHAR},
      </if>
      <if test="lectureEndTime != null" >
        LECTURE_END_TIME = #{lectureEndTime,jdbcType=VARCHAR},
      </if>
      <if test="lectureContent != null" >
        LECTURE_CONTENT = #{lectureContent,jdbcType=VARCHAR},
      </if>
      <if test="lectureTrainPlace != null" >
        LECTURE_TRAIN_PLACE = #{lectureTrainPlace,jdbcType=VARCHAR},
      </if>
      <if test="lectureDesc != null" >
        LECTURE_DESC = #{lectureDesc,jdbcType=VARCHAR},
      </if>
      <if test="lectureEvaPeriod != null" >
        LECTURE_EVA_PERIOD = #{lectureEvaPeriod,jdbcType=VARCHAR},
      </if>
      <if test="lectureUnitId != null" >
        LECTURE_UNIT_ID = #{lectureUnitId,jdbcType=VARCHAR},
      </if>
      <if test="lectureUnitName != null" >
        LECTURE_UNIT_NAME = #{lectureUnitName,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="lectureTypeId != null" >
        LECTURE_TYPE_ID = #{lectureTypeId,jdbcType=VARCHAR},
      </if>
      <if test="lectureTypeName != null" >
        LECTURE_TYPE_NAME = #{lectureTypeName,jdbcType=VARCHAR},
      </if>
      <if test="lectureCodeUrl != null" >
        LECTURE_CODE_URL = #{lectureCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="participantsId != null" >
        PARTICIPANTS_ID = #{participantsId,jdbcType=VARCHAR},
      </if>
      <if test="participantsName != null" >
        PARTICIPANTS_NAME = #{participantsName,jdbcType=VARCHAR},
      </if>
      <if test="limitNum != null" >
        LIMIT_NUM = #{limitNum,jdbcType=VARCHAR},
      </if>
      <if test="lectureDescription != null" >
        LECTURE_DESCRIPTION = #{lectureDescription,jdbcType=VARCHAR},
      </if>
      <if test="coursewareUrl != null" >
        COURSEWARE_URL = #{coursewareUrl,jdbcType=VARCHAR},
      </if>
      <if test="lectureLevelId != null" >
        LECTURE_LEVEL_ID = #{lectureLevelId,jdbcType=VARCHAR},
      </if>
      <if test="lectureLevelName != null" >
        LECTURE_LEVEL_NAME = #{lectureLevelName,jdbcType=VARCHAR},
      </if>
      <if test="lectureOutUrl != null" >
        LECTURE_OUT_URL = #{lectureOutUrl,jdbcType=VARCHAR},
      </if>
      <if test="lectureSpeakerRoleId != null" >
        LECTURE_SPEAKER_ROLE_ID = #{lectureSpeakerRoleId,jdbcType=VARCHAR},
      </if>
      <if test="lectureSpeakerRoleName != null" >
        LECTURE_SPEAKER_ROLE_NAME = #{lectureSpeakerRoleName,jdbcType=VARCHAR},
      </if>
      <if test="randomSignIn != null" >
        RANDOM_SIGN_IN = #{randomSignIn,jdbcType=VARCHAR},
      </if>
      <if test="evalFormContent != null" >
        EVAL_FORM_CONTENT = #{evalFormContent,jdbcType=CLOB},
      </if>
    </set>
    where LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.sci.model.mo.ResLectureInfo" >
    update PDSCI.RES_LECTURE_INFO
    set LECTURE_TEACHER_FLOW = #{lectureTeacherFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_NAME = #{lectureTeacherName,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      LECTURE_TRAIN_DATE = #{lectureTrainDate,jdbcType=VARCHAR},
      LECTURE_START_TIME = #{lectureStartTime,jdbcType=VARCHAR},
      LECTURE_END_TIME = #{lectureEndTime,jdbcType=VARCHAR},
      LECTURE_CONTENT = #{lectureContent,jdbcType=VARCHAR},
      LECTURE_TRAIN_PLACE = #{lectureTrainPlace,jdbcType=VARCHAR},
      LECTURE_DESC = #{lectureDesc,jdbcType=VARCHAR},
      LECTURE_EVA_PERIOD = #{lectureEvaPeriod,jdbcType=VARCHAR},
      LECTURE_UNIT_ID = #{lectureUnitId,jdbcType=VARCHAR},
      LECTURE_UNIT_NAME = #{lectureUnitName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      LECTURE_TYPE_ID = #{lectureTypeId,jdbcType=VARCHAR},
      LECTURE_TYPE_NAME = #{lectureTypeName,jdbcType=VARCHAR},
      LECTURE_CODE_URL = #{lectureCodeUrl,jdbcType=VARCHAR},
      PARTICIPANTS_ID = #{participantsId,jdbcType=VARCHAR},
      PARTICIPANTS_NAME = #{participantsName,jdbcType=VARCHAR},
      LIMIT_NUM = #{limitNum,jdbcType=VARCHAR},
      LECTURE_DESCRIPTION = #{lectureDescription,jdbcType=VARCHAR},
      COURSEWARE_URL = #{coursewareUrl,jdbcType=VARCHAR},
      LECTURE_LEVEL_ID = #{lectureLevelId,jdbcType=VARCHAR},
      LECTURE_LEVEL_NAME = #{lectureLevelName,jdbcType=VARCHAR},
      LECTURE_OUT_URL = #{lectureOutUrl,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_ID = #{lectureSpeakerRoleId,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_NAME = #{lectureSpeakerRoleName,jdbcType=VARCHAR},
      RANDOM_SIGN_IN = #{randomSignIn,jdbcType=VARCHAR},
      EVAL_FORM_CONTENT = #{evalFormContent,jdbcType=CLOB}
    where LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pinde.sci.model.mo.ResLectureInfo" >
    update PDSCI.RES_LECTURE_INFO
    set LECTURE_TEACHER_FLOW = #{lectureTeacherFlow,jdbcType=VARCHAR},
      LECTURE_TEACHER_NAME = #{lectureTeacherName,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      LECTURE_TRAIN_DATE = #{lectureTrainDate,jdbcType=VARCHAR},
      LECTURE_START_TIME = #{lectureStartTime,jdbcType=VARCHAR},
      LECTURE_END_TIME = #{lectureEndTime,jdbcType=VARCHAR},
      LECTURE_CONTENT = #{lectureContent,jdbcType=VARCHAR},
      LECTURE_TRAIN_PLACE = #{lectureTrainPlace,jdbcType=VARCHAR},
      LECTURE_DESC = #{lectureDesc,jdbcType=VARCHAR},
      LECTURE_EVA_PERIOD = #{lectureEvaPeriod,jdbcType=VARCHAR},
      LECTURE_UNIT_ID = #{lectureUnitId,jdbcType=VARCHAR},
      LECTURE_UNIT_NAME = #{lectureUnitName,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      LECTURE_TYPE_ID = #{lectureTypeId,jdbcType=VARCHAR},
      LECTURE_TYPE_NAME = #{lectureTypeName,jdbcType=VARCHAR},
      LECTURE_CODE_URL = #{lectureCodeUrl,jdbcType=VARCHAR},
      PARTICIPANTS_ID = #{participantsId,jdbcType=VARCHAR},
      PARTICIPANTS_NAME = #{participantsName,jdbcType=VARCHAR},
      LIMIT_NUM = #{limitNum,jdbcType=VARCHAR},
      LECTURE_DESCRIPTION = #{lectureDescription,jdbcType=VARCHAR},
      COURSEWARE_URL = #{coursewareUrl,jdbcType=VARCHAR},
      LECTURE_LEVEL_ID = #{lectureLevelId,jdbcType=VARCHAR},
      LECTURE_LEVEL_NAME = #{lectureLevelName,jdbcType=VARCHAR},
      LECTURE_OUT_URL = #{lectureOutUrl,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_ID = #{lectureSpeakerRoleId,jdbcType=VARCHAR},
      LECTURE_SPEAKER_ROLE_NAME = #{lectureSpeakerRoleName,jdbcType=VARCHAR},
      RANDOM_SIGN_IN = #{randomSignIn,jdbcType=VARCHAR}
    where LECTURE_FLOW = #{lectureFlow,jdbcType=VARCHAR}
  </update>

  <select id="queryNotification" resultType="java.util.Map" >
    SELECT
        res.LECTURE_FLOW,wm_concat(SYS.ROLE_NAME) ROLE_NAME
    FROM
        RES_LECTURE_INFO_ROLE res
    LEFT JOIN SYS_ROLE SYS ON res.LECTURE_ROLE = SYS.ROLE_FLOW
    WHERE res.RECORD_STATUS = 'Y'
    GROUP BY LECTURE_FLOW

  </select>

  <select id="queryParticipateList" resultMap="ParticipateResultMap" resultType="com.pinde.sci.model.jsres.ParticipateInfoExt" >
       select i.LECTURE_FLOW lectureFlow,T3.signUpStudent,T3.scanCodeStudent,T3.signUpTeacher,T3.scanCodeTeacher
	from RES_LECTURE_INFO i left join
      (select max(case role_name when 'xy' then bb end) as signUpStudent,
      max(case role_name when 'xy' then qd end) as scanCodeStudent,
      max(case role_name when 'ls' then bb end) as signUpTeacher,
      max(case role_name when 'ls' then qd end) as scanCodeTeacher,
      LECTURE_FLOW
        from
      (select sum(bb) as bb,sum(qd) as qd,role_name,LECTURE_FLOW  from
      (select
      count(case is_regist when 'Y' then 1 else null end) as bb,
      count(case is_scan when 'Y' then 1 else null end) as qd,
      case role_flow when 'eb9fe908bc29455b927a7dc0fc303c1c' then 'xy' else 'ls' end as role_name,
      LECTURE_FLOW
       from
      (select * from RES_LECTURE_SCAN_REGIST where RECORD_STATUS = 'Y'
      ) r,(select * from SYS_USER_ROLE where RECORD_STATUS = 'Y'
       and ROLE_FLOW in ('6dd527778166406e92d64f01d74aed02','eb9fe908bc29455b927a7dc0fc303c1c',
       '8db8893563ad4826b84517d3f06fe118', 'ba41aae526064c748e2be6f327964e5b')) t
      where r.oper_user_flow = t.user_flow group by role_flow,LECTURE_FLOW) t1
      group by role_name,LECTURE_FLOW) t2
      GROUP BY LECTURE_FLOW) t3 on T3.LECTURE_FLOW = i.LECTURE_FLOW
      where
      i.RECORD_STATUS = 'Y'
      and  i.org_flow = #{org_flow}

  </select>
  <select id="queryAssessScoreList" resultType="java.util.Map" >
    SELECT
        LECTURE_FLOW,
        sum(EVA_SCORE) / count(EVA_SCORE) SCORE
    FROM
        PDSCI.RES_LECTURE_EVA_DETAIL
    WHERE
        RECORD_STATUS = 'Y'
    GROUP BY LECTURE_FLOW
  </select>

</mapper>