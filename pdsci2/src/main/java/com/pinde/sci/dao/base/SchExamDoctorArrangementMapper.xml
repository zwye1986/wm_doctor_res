<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pinde.sci.dao.base.SchExamDoctorArrangementMapper">
    <resultMap id="BaseResultMap" type="com.pinde.core.model.SchExamDoctorArrangement">
    <id column="RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow" />
    <result column="ARRANGE_FLOW" jdbcType="VARCHAR" property="arrangeFlow" />
    <result column="ASSESSMENT_YEAR" jdbcType="VARCHAR" property="assessmentYear" />
    <result column="DOCTOR_FLOW" jdbcType="VARCHAR" property="doctorFlow" />
    <result column="DOCTOR_NAME" jdbcType="VARCHAR" property="doctorName" />
    <result column="EXAM_SCORE" jdbcType="DECIMAL" property="examScore" />
    <result column="EXAM_DOWLAND" jdbcType="VARCHAR" property="examDowland" />
    <result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
    <result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
    <result column="MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
    <result column="ORG_FLOW" jdbcType="VARCHAR" property="orgFlow" />
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="SESSION_NUMBER" jdbcType="VARCHAR" property="sessionNumber" />
    <result column="EXAM_RESULT_ID" jdbcType="VARCHAR" property="examResultId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RECORD_FLOW, ARRANGE_FLOW, ASSESSMENT_YEAR, DOCTOR_FLOW, DOCTOR_NAME, EXAM_SCORE, 
    EXAM_DOWLAND, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
    ORG_FLOW, ORG_NAME, SESSION_NUMBER, EXAM_RESULT_ID
  </sql>
    <select id="selectByExample" parameterType="com.pinde.core.model.SchExamDoctorArrangementExample"
            resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
      from SCH_EXAM_DOCTOR_ARRANGEMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
      from SCH_EXAM_DOCTOR_ARRANGEMENT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete from SCH_EXAM_DOCTOR_ARRANGEMENT
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.pinde.core.model.SchExamDoctorArrangementExample">
      delete from SCH_EXAM_DOCTOR_ARRANGEMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.pinde.core.model.SchExamDoctorArrangement">
      insert into SCH_EXAM_DOCTOR_ARRANGEMENT (RECORD_FLOW, ARRANGE_FLOW, ASSESSMENT_YEAR,
      DOCTOR_FLOW, DOCTOR_NAME, EXAM_SCORE, 
      EXAM_DOWLAND, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
      ORG_FLOW, ORG_NAME, SESSION_NUMBER, 
      EXAM_RESULT_ID)
    values (#{recordFlow,jdbcType=VARCHAR}, #{arrangeFlow,jdbcType=VARCHAR}, #{assessmentYear,jdbcType=VARCHAR}, 
      #{doctorFlow,jdbcType=VARCHAR}, #{doctorName,jdbcType=VARCHAR}, #{examScore,jdbcType=DECIMAL}, 
      #{examDowland,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{sessionNumber,jdbcType=VARCHAR}, 
      #{examResultId,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.pinde.core.model.SchExamDoctorArrangement">
      insert into SCH_EXAM_DOCTOR_ARRANGEMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        RECORD_FLOW,
      </if>
      <if test="arrangeFlow != null">
        ARRANGE_FLOW,
      </if>
      <if test="assessmentYear != null">
        ASSESSMENT_YEAR,
      </if>
      <if test="doctorFlow != null">
        DOCTOR_FLOW,
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME,
      </if>
      <if test="examScore != null">
        EXAM_SCORE,
      </if>
      <if test="examDowland != null">
        EXAM_DOWLAND,
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW,
      </if>
      <if test="orgFlow != null">
        ORG_FLOW,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER,
      </if>
      <if test="examResultId != null">
        EXAM_RESULT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordFlow != null">
        #{recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="arrangeFlow != null">
        #{arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="assessmentYear != null">
        #{assessmentYear,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null">
        #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="examScore != null">
        #{examScore,jdbcType=DECIMAL},
      </if>
      <if test="examDowland != null">
        #{examDowland,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="examResultId != null">
        #{examResultId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.pinde.core.model.SchExamDoctorArrangementExample"
            resultType="java.lang.Integer">
      select count(*) from SCH_EXAM_DOCTOR_ARRANGEMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
      update SCH_EXAM_DOCTOR_ARRANGEMENT
    <set>
      <if test="record.recordFlow != null">
        RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangeFlow != null">
        ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentYear != null">
        ASSESSMENT_YEAR = #{record.assessmentYear,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorFlow != null">
        DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorName != null">
        DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.examScore != null">
        EXAM_SCORE = #{record.examScore,jdbcType=DECIMAL},
      </if>
      <if test="record.examDowland != null">
        EXAM_DOWLAND = #{record.examDowland,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null">
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null">
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null">
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionNumber != null">
        SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.examResultId != null">
        EXAM_RESULT_ID = #{record.examResultId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
      update SCH_EXAM_DOCTOR_ARRANGEMENT
    set RECORD_FLOW = #{record.recordFlow,jdbcType=VARCHAR},
      ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      ASSESSMENT_YEAR = #{record.assessmentYear,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{record.doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{record.doctorName,jdbcType=VARCHAR},
      EXAM_SCORE = #{record.examScore,jdbcType=DECIMAL},
      EXAM_DOWLAND = #{record.examDowland,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{record.sessionNumber,jdbcType=VARCHAR},
      EXAM_RESULT_ID = #{record.examResultId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.SchExamDoctorArrangement">
      update SCH_EXAM_DOCTOR_ARRANGEMENT
    <set>
      <if test="arrangeFlow != null">
        ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="assessmentYear != null">
        ASSESSMENT_YEAR = #{assessmentYear,jdbcType=VARCHAR},
      </if>
      <if test="doctorFlow != null">
        DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="examScore != null">
        EXAM_SCORE = #{examScore,jdbcType=DECIMAL},
      </if>
      <if test="examDowland != null">
        EXAM_DOWLAND = #{examDowland,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null">
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null">
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null">
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="sessionNumber != null">
        SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      </if>
      <if test="examResultId != null">
        EXAM_RESULT_ID = #{examResultId,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.SchExamDoctorArrangement">
      update SCH_EXAM_DOCTOR_ARRANGEMENT
    set ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR},
      ASSESSMENT_YEAR = #{assessmentYear,jdbcType=VARCHAR},
      DOCTOR_FLOW = #{doctorFlow,jdbcType=VARCHAR},
      DOCTOR_NAME = #{doctorName,jdbcType=VARCHAR},
      EXAM_SCORE = #{examScore,jdbcType=DECIMAL},
      EXAM_DOWLAND = #{examDowland,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      SESSION_NUMBER = #{sessionNumber,jdbcType=VARCHAR},
      EXAM_RESULT_ID = #{examResultId,jdbcType=VARCHAR}
    where RECORD_FLOW = #{recordFlow,jdbcType=VARCHAR}
  </update>
</mapper>