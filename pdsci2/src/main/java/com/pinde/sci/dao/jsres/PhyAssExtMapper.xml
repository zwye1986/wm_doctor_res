<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.jsres.PhyAssExtMapper">

    <resultMap type="HashMap" id="planInfoList">
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="introduce" column="INTRODUCE" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="enrollStartTime" column="ENROLL_START_TIME" javaType="string"/>
        <result property="enrollEndTime" column="ENROLL_END_TIME" javaType="string"/>
        <result property="planStartTime" column="PLAN_START_TIME" javaType="string"/>
        <result property="planEndTime" column="PLAN_END_TIME" javaType="string"/>
        <result property="askContent" column="ASK_CONTENT" javaType="string"/>
        <result property="planStatusId" column="PLAN_STATUS_ID" javaType="string"/>
        <result property="planStatusName" column="PLAN_STATUS_NAME" javaType="string"/>
    </resultMap>
    <select id="searchPlanInfoList" parameterType="java.util.Map" resultMap="planInfoList">
        SELECT PL.PLAN_FLOW,A.SPE_NAME,PL.INTRODUCE,PL.PLAN_CONTENT,PL.ENROLL_START_TIME,PL.ENROLL_END_TIME,
        PL.PLAN_START_TIME,PL.PLAN_END_TIME,PL.ASK_CONTENT,PL.PLAN_STATUS_ID,PL.PLAN_STATUS_NAME
        FROM RES_TEACH_QUALIFIED_PLAN PL
        LEFT JOIN (
        SELECT WM_CONCAT(M.SPE_NAME) AS SPE_NAME, M.PLAN_FLOW
        FROM RES_QUALIFIED_PLAN_MSG M
        LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW=M.PLAN_FLOW
        WHERE M.RECORD_STATUS='Y' AND P.RECORD_STATUS='Y'
        GROUP BY M.PLAN_FLOW) A
        ON A.PLAN_FLOW=PL.PLAN_FLOW
        WHERE PL.RECORD_STATUS='Y'
        <if test="planFlow!=null and planFlow!=''">
            AND PL.PLAN_FLOW= #{planFlow}
        </if>
        <if test="speName!=null and speName!=''">
            AND A.SPE_NAME LIKE  '%${speName}%'
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Staging'">
            AND PL.PLAN_STATUS_ID= 'Staging'
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='NotStarted'">
            AND PL.ENROLL_START_TIME <![CDATA[ > ]]> #{nowData}
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Enrolling'">
            AND PL.ENROLL_START_TIME <![CDATA[ < ]]> #{nowData}
            AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{nowData}
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='RegistrationEnded'">
            AND PL.ENROLL_END_TIME <![CDATA[ < ]]> #{nowData}
            AND PL.PLAN_START_TIME <![CDATA[ > ]]> #{nowData}
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Intraining'">
            AND PL.PLAN_START_TIME <![CDATA[ < ]]> #{nowData}
            AND PL.PLAN_END_TIME <![CDATA[ > ]]> #{nowData}
        </if>
        <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Intraining'">
            AND PL.PLAN_END_TIME <![CDATA[ < ]]> #{nowData}
        </if>
        <if test="enrollStartTime!=null and enrollStartTime!=''">
            AND PL.ENROLL_START_TIME <![CDATA[ < ]]> #{enrollStartTime}
        </if>
        <if test="enrollEndTime!=null and enrollEndTime!=''">
            AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{enrollEndTime}
        </if>
        ORDER BY ENROLL_START_TIME DESC
    </select>


    <resultMap type="HashMap" id="searchOrgPlanInfo">
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="entryNum" column="ENTRY_NUM" javaType="string"/>
        <result property="affirmNum" column="AFFIRM_NUM" javaType="string"/>
        <result property="appearNum" column="APPEAR_NUM" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="introduce" column="INTRODUCE" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="enrollStartTime" column="ENROLL_START_TIME" javaType="string"/>
        <result property="enrollEndTime" column="ENROLL_END_TIME" javaType="string"/>
        <result property="planStartTime" column="PLAN_START_TIME" javaType="string"/>
        <result property="planEndTime" column="PLAN_END_TIME" javaType="string"/>
        <result property="askContent" column="ASK_CONTENT" javaType="string"/>
        <result property="planStatusId" column="PLAN_STATUS_ID" javaType="string"/>
        <result property="planStatusName" column="PLAN_STATUS_NAME" javaType="string"/>
    </resultMap>
    <select id="searchOrgPlanInfoList" parameterType="java.util.Map" resultMap="searchOrgPlanInfo">
        SELECT
            NVL(P.ENTRY_NUM, '0') AS ENTRY_NUM ,
            NVL(A.AFFIRM_NUM, '0') AS AFFIRM_NUM,
            NVL(E.APPEAR_NUM, '0') AS APPEAR_NUM ,
            S.*
        FROM (
            SELECT PL.PLAN_FLOW,A.SPE_NAME,PL.INTRODUCE,PL.PLAN_CONTENT,PL.ENROLL_START_TIME,PL.ENROLL_END_TIME,
            PL.PLAN_START_TIME,PL.PLAN_END_TIME,PL.ASK_CONTENT,PL.PLAN_STATUS_ID,PL.PLAN_STATUS_NAME
            FROM RES_TEACH_QUALIFIED_PLAN PL
            LEFT JOIN (
            SELECT WM_CONCAT(M.SPE_NAME) AS SPE_NAME, M.PLAN_FLOW
            FROM RES_QUALIFIED_PLAN_MSG M
            LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW=M.PLAN_FLOW
            WHERE M.RECORD_STATUS='Y' AND P.RECORD_STATUS='Y'
            GROUP BY M.PLAN_FLOW) A
            ON A.PLAN_FLOW=PL.PLAN_FLOW
            WHERE PL.RECORD_STATUS='Y'
            <if test="planFlow!=null and planFlow!=''">
                AND PL.PLAN_FLOW= #{planFlow}
            </if>
            <if test="speName!=null and speName!=''">
                AND A.SPE_NAME LIKE  '%${speName}%'
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Staging'">
                AND PL.PLAN_STATUS_ID= 'Staging'
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='NotStarted'">
                AND PL.ENROLL_START_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Enrolling'">
                AND PL.ENROLL_START_TIME <![CDATA[ < ]]> #{nowData}
                AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='RegistrationEnded'">
                AND PL.ENROLL_END_TIME <![CDATA[ < ]]> #{nowData}
                AND PL.PLAN_START_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Intraining'">
                AND PL.PLAN_START_TIME <![CDATA[ < ]]> #{nowData}
                AND PL.PLAN_END_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="planStatusId!=null and planStatusId!='' and planStatusId=='Intraining'">
                AND PL.PLAN_END_TIME <![CDATA[ < ]]> #{nowData}
            </if>
            <if test="enrollStartTime!=null and enrollStartTime!=''">
                AND PL.ENROLL_START_TIME <![CDATA[ < ]]> #{nowData}
            </if>
            <if test="enrollEndTime!=null and enrollEndTime!=''">
                AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="importPlan!=null and importPlan!=''">
                AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{nowData}
            </if>
            <if test="local!=null and local!=''">
                AND PL.PLAN_STATUS_ID != 'Staging'
            </if>

        ) S
        LEFT JOIN (
            SELECT PLAN_FLOW, COUNT(*) ENTRY_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE RECORD_STATUS = 'Y' AND ORG_FLOW= #{orgFlow}
            GROUP BY PLAN_FLOW ) P
        ON P.PLAN_FLOW=S.PLAN_FLOW
        LEFT JOIN (
            SELECT PLAN_FLOW, COUNT(*) APPEAR_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE APPEAR_FLAG ='Y' AND RECORD_STATUS = 'Y' AND ORG_FLOW= #{orgFlow}
            GROUP BY PLAN_FLOW ) E
        ON E.PLAN_FLOW=S.PLAN_FLOW
        LEFT JOIN (
            SELECT PLAN_FLOW, COUNT(*) AFFIRM_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE AFFIRM_FLAG ='Y' AND RECORD_STATUS = 'Y' AND ORG_FLOW= #{orgFlow}
            GROUP BY PLAN_FLOW ) A
        ON A.PLAN_FLOW=S.PLAN_FLOW
        ORDER BY ENROLL_START_TIME DESC
    </select>


    <resultMap type="HashMap" id="planIntroduceList">
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
    </resultMap>
    <select id="searchAllIntroduce"  resultMap="planIntroduceList">
        SELECT PLAN_FLOW,PLAN_CONTENT
        FROM RES_TEACH_QUALIFIED_PLAN
        WHERE RECORD_STATUS='Y'
    </select>

    <select id="searchAllByTime"  resultMap="planIntroduceList">
        SELECT PLAN_FLOW,PLAN_CONTENT
        FROM RES_TEACH_QUALIFIED_PLAN
        WHERE RECORD_STATUS='Y'
        AND PLAN_STATUS_ID != 'Staging'
        <if test="nowData!=null and nowData!=''">
            AND ENROLL_END_TIME <![CDATA[ > ]]> #{nowData}
        </if>
        ORDER BY ENROLL_START_TIME DESC

    </select>


    <resultMap type="HashMap" id="seachUser">
        <result property="userFlow" column="USER_FLOW" javaType="string"/>
        <result property="userCode" column="USER_CODE" javaType="string"/>
        <result property="userName" column="USER_NAME" javaType="string"/>
        <result property="roleFlow" column="role_flow" javaType="string"/>
        <result property="roleName" column="ROLE_NAME" javaType="string"/>
    </resultMap>
    <select id="seachUser" resultMap="seachUser" parameterType="java.lang.String">
        SELECT USER_FLOW,USER_CODE,USER_NAME, WM_CONCAT(ROLE_FLOW) ROLE_FLOW,WM_CONCAT(ROLE_NAME) ROLE_NAME FROM (
            SELECT DISTINCT SU.USER_FLOW,SU.USER_CODE,SU.USER_NAME,SUR.ROLE_FLOW,SR.ROLE_NAME
            FROM SYS_USER SU
            LEFT JOIN SYS_USER_ROLE SUR ON SU.USER_FLOW = SUR.USER_FLOW
            LEFT JOIN SYS_ROLE SR ON SR.ROLE_FLOW = SUR.ROLE_FLOW
            WHERE SU.RECORD_STATUS = 'Y'
            AND SUR.ROLE_FLOW IN(SELECT ROLE_FLOW  FROM SYS_ROLE WHERE ROLE_NAME IN ('带教老师','科主任','科秘') AND RECORD_STATUS='Y')
            AND SUR.WS_ID = 'res'
            AND SU.ORG_FLOW= #{orgFlow}
            AND SUR.RECORD_STATUS = 'Y'
            AND SU.RECORD_STATUS = 'Y'
        )
        WHERE USER_FLOW NOT IN (
            SELECT DOCTOR_FLOW FROM RES_TEACH_PLAN_DOCTOR WHERE PLAN_FLOW= #{planFlow}  AND RECORD_STATUS='Y'
        )
        GROUP BY USER_NAME,USER_FLOW,USER_CODE
        ORDER BY NLSSORT(USER_NAME, 'NLS_SORT=SCHINESE_PINYIN_M')
    </select>

    <update id="delBaseListEntryUser"  parameterType="java.lang.String">
        UPDATE RES_TEACH_PLAN_DOCTOR
        SET RECORD_STATUS='N'
        WHERE PLAN_FLOW= #{planFlow}
        AND SPE_ID= #{speId}
        AND ORG_FLOW= #{orgFlow}
        AND RECORD_STATUS='Y'
    </update>


    <resultMap type="HashMap" id="searchSpeNum">
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="speNum" column="SPE_NUM" javaType="string"/>
    </resultMap>
    <select id="searchSpeNum" resultMap="searchSpeNum" parameterType="java.lang.String">
        SELECT
        A.SPE_NAME,NVL(B.SPE_NUM, '0') SPE_NUM
        FROM (
            SELECT SPE_ID,SPE_NAME
            FROM RES_QUALIFIED_PLAN_MSG
            WHERE PLAN_FLOW = #{planFlow} AND RECORD_STATUS = 'Y'
        )A
        LEFT JOIN (
            SELECT SPE_ID,COUNT(*) SPE_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE PLAN_FLOW = #{planFlow} AND RECORD_STATUS = 'Y' AND ORG_FLOW= #{orgFlow}
            GROUP BY SPE_ID
        )B
        ON A.SPE_ID=B.SPE_ID
        ORDER BY A.SPE_ID
    </select>


    <update id="appearUser"  parameterType="java.lang.String" >
        UPDATE RES_TEACH_PLAN_DOCTOR
        SET APPEAR_FLAG='Y'
        WHERE PLAN_FLOW= #{planFlow} AND RECORD_STATUS='Y' AND ORG_FLOW= #{orgFlow}
    </update>



    <resultMap type="HashMap" id="searchPlanUserList">
        <result property="recordFlow" column="RECORD_FLOW" javaType="string"/>
        <result property="doctorCode" column="DOCTOR_CODE" javaType="string"/>
        <result property="doctorName" column="DOCTOR_NAME" javaType="string"/>
        <result property="sexName" column="SEX_NAME" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="deptFlow" column="DEPT_FLOW" javaType="string"/>
        <result property="deptName" column="DEPT_NAME" javaType="string"/>
        <result property="doctorRoleName" column="DOCTOR_ROLE_NAME" javaType="string"/>
        <result property="userPhone" column="USER_PHONE" javaType="string"/>
        <result property="idNo" column="ID_NO" javaType="string"/>
        <result property="userEmail" column="USER_EMAIL" javaType="string"/>
    </resultMap>
    <select id="searchPlanUserList" resultMap="searchPlanUserList" parameterType="java.lang.String">
        SELECT * FROM (
            SELECT R.RECORD_FLOW,R.DOCTOR_CODE,R.DOCTOR_NAME,S.SEX_NAME,R.SPE_NAME,R.DOCTOR_ROLE_NAME,S.USER_PHONE,S.ID_NO,S.USER_EMAIL
            FROM RES_TEACH_PLAN_DOCTOR  R
            LEFT JOIN SYS_USER S ON S.USER_FLOW=R.DOCTOR_FLOW
            LEFT JOIN RES_DOCTOR D ON D.DOCTOR_FLOW=R.DOCTOR_FLOW
            WHERE  R.ORG_FLOW= #{orgFlow}
            AND R.PLAN_FLOW= #{planFlow}
            AND R.RECORD_STATUS='Y'
            AND S.RECORD_STATUS='Y'
            <if test="type!=null and type!='' and type=='affirm'">
                AND R.AFFIRM_FLAG='Y'
            </if>
        ) A
        LEFT JOIN (
            SELECT
                RD.RECORD_FLOW,
                WM_CONCAT(SUD.DEPT_FLOW) DEPT_FLOW,
                WM_CONCAT(SUD.DEPT_NAME) DEPT_NAME
            FROM RES_TEACH_PLAN_DOCTOR RD
            LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW=RD.DOCTOR_FLOW
            WHERE RD.RECORD_STATUS = 'Y'
            AND SUD.RECORD_STATUS = 'Y'
            AND RD.PLAN_FLOW= #{planFlow}
            <if test="orgFlow!=null and orgFlow!=''">
                AND RD.ORG_FLOW = #{orgFlow}
            </if>
            <if test="planFlow!=null and planFlow!=''">
                AND RD.PLAN_FLOW = #{planFlow}
            </if>
            <if test="type!=null and type!='' and type=='affirm'">
                AND RD.AFFIRM_FLAG='Y'
            </if>
            GROUP BY RD.RECORD_FLOW
        )B
        ON A.RECORD_FLOW=B.RECORD_FLOW

    </select>


    <resultMap type="HashMap" id="plannedMaintainList">
        <result property="recordFlow" column="RECORD_FLOW" javaType="string"/>
        <result property="doctorFlow" column="DOCTOR_FLOW" javaType="string"/>
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="orgFlow" column="ORG_FLOW" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="doctorCode" column="DOCTOR_CODE" javaType="string"/>
        <result property="doctorName" column="DOCTOR_NAME" javaType="string"/>
        <result property="sexId" column="SEX_ID" javaType="string"/>
        <result property="sexName" column="SEX_NAME" javaType="string"/>
        <result property="idNo" column="ID_NO" javaType="string"/>
        <result property="userPhone" column="USER_PHONE" javaType="string"/>
        <result property="userEmail" column="USER_EMAIL" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="deptFlow" column="DEPT_FLOW" javaType="string"/>
        <result property="deptName" column="DEPT_NAME" javaType="string"/>
        <result property="roleName" column="DOCTOR_ROLE_NAME" javaType="string"/>
        <result property="appearFlag" column="APPEAR_FLAG" javaType="string"/>
    </resultMap>
    <select id="plannedMaintainList" parameterType="java.util.Map" resultMap="plannedMaintainList">
        SELECT * FROM (
            SELECT
                R.RECORD_FLOW,R.DOCTOR_FLOW,R.PLAN_FLOW,R.ORG_FLOW,R.ORG_NAME,R.DOCTOR_CODE,R.DOCTOR_NAME,S.SEX_ID,S.SEX_NAME,
                S.ID_NO,S.USER_EMAIL,S.USER_PHONE,Q.PLAN_CONTENT,R.SPE_NAME,R.DOCTOR_ROLE_NAME,R.APPEAR_FLAG
            FROM RES_TEACH_PLAN_DOCTOR R
            LEFT JOIN SYS_USER S ON S.USER_FLOW=R.DOCTOR_FLOW
            LEFT JOIN RES_TEACH_QUALIFIED_PLAN Q ON R.PLAN_FLOW=Q.PLAN_FLOW
            LEFT JOIN RES_DOCTOR D ON D.DOCTOR_FLOW=R.DOCTOR_FLOW
            WHERE R.RECORD_STATUS='Y'
            AND S.RECORD_STATUS='Y'
            AND Q.RECORD_STATUS='Y'
            <if test="orgFlow!=null and orgFlow!=''">
                AND R.ORG_FLOW = #{orgFlow}
            </if>
            <if test="planFlow!=null and planFlow!=''">
                AND R.PLAN_FLOW = #{planFlow}
            </if>
            <if test="speId!=null and speId!=''">
                AND R.SPE_ID = #{speId}
            </if>
            <if test="deptFlow!=null and deptFlow!=''">
                AND D.DEPT_FLOW = #{deptFlow}
            </if>
            <if test="doctorName!=null and doctorName!=''">
                AND R.DOCTOR_NAME LIKE  '%${doctorName}%'
            </if>
            <if test="type!=null and type!=''and type=='N'">
                AND R.APPEAR_FLAG IS NULL
            </if>
            <if test="type!=null and type!=''and type=='Y'">
                AND R.APPEAR_FLAG IS NOT NULL
            </if>
            <if test="recordFlow!=null and recordFlow!=''">
                AND R.RECORD_FLOW = #{recordFlow}
            </if>
        ) A
        LEFT JOIN (
        SELECT RD.RECORD_FLOW,WM_CONCAT(SUD.DEPT_FLOW) DEPT_FLOW, WM_CONCAT(SUD.DEPT_NAME) DEPT_NAME FROM RES_TEACH_PLAN_DOCTOR RD
        LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW=RD.DOCTOR_FLOW
        WHERE RD.RECORD_STATUS = 'Y'
        AND SUD.RECORD_STATUS = 'Y'
        <if test="orgFlow!=null and orgFlow!=''">
            AND RD.ORG_FLOW = #{orgFlow}
        </if>
        <if test="planFlow!=null and planFlow!=''">
            AND RD.PLAN_FLOW = #{planFlow}
        </if>
        <if test="doctorName!=null and doctorName!=''">
            AND RD.DOCTOR_NAME LIKE  '%${doctorName}%'
        </if>
        <if test="type!=null and type!=''and type=='N'">
            AND RD.APPEAR_FLAG IS NULL
        </if>
        <if test="type!=null and type!=''and type=='Y'">
            AND RD.APPEAR_FLAG IS NOT NULL
        </if>
        <if test="recordFlow!=null and recordFlow!=''">
            AND RD.RECORD_FLOW = #{recordFlow}
        </if>
        GROUP BY RD.RECORD_FLOW
        )B
        ON A.RECORD_FLOW=B.RECORD_FLOW
    </select>


    <update id="delUserDept"  parameterType="java.lang.String">
        UPDATE SYS_USER_DEPT
        SET RECORD_STATUS = 'N'
        WHERE RECORD_STATUS = 'Y'
	    AND USER_FLOW = #{userFlow}
    </update>


    <resultMap type="HashMap" id="searchSysUserRoleName">
        <result property="roleFlow" column="role_flow" javaType="string"/>
        <result property="roleName" column="ROLE_NAME" javaType="string"/>
    </resultMap>
    <select id="searchSysUserRoleName" resultMap="searchSysUserRoleName" parameterType="java.lang.String">
        SELECT
            WM_CONCAT(SR.ROLE_FLOW) ROLE_FLOW,
            WM_CONCAT(SR.ROLE_NAME) ROLE_NAME
        FROM SYS_USER SU
        LEFT JOIN SYS_USER_ROLE SUR ON SU.USER_FLOW=SUR.USER_FLOW
        LEFT JOIN SYS_ROLE SR ON SUR.ROLE_FLOW=SR.ROLE_FLOW
        WHERE SU.USER_FLOW= #{userFlow}
        AND SU.RECORD_STATUS = 'Y'
        AND SUR.RECORD_STATUS = 'Y'
        AND SR.RECORD_STATUS = 'Y'
    </select>


    <update id="delplanDoctor" parameterType="java.util.Map">
        UPDATE RES_TEACH_PLAN_DOCTOR
        SET RECORD_STATUS='N',MODIFY_TIME= #{modifyTime},MODIFY_USER_FLOW=#{modifyUserFlow}
        WHERE PLAN_FLOW= #{planFlow}
        AND SPE_ID= #{speId}
        AND ORG_FLOW= #{orgFlow}
        AND DOCTOR_FLOW= #{doctorFlow}
        AND RECORD_STATUS='Y'
    </update>


    <resultMap type="HashMap" id="searchPlanScoreList">
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="introduce" column="INTRODUCE" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="enrollStartTime" column="ENROLL_START_TIME" javaType="string"/>
        <result property="enrollEndTime" column="ENROLL_END_TIME" javaType="string"/>
        <result property="planStartTime" column="PLAN_START_TIME" javaType="string"/>
        <result property="planEndTime" column="PLAN_END_TIME" javaType="string"/>
        <result property="askContent" column="ASK_CONTENT" javaType="string"/>
        <result property="planStatusId" column="PLAN_STATUS_ID" javaType="string"/>
        <result property="planStatusName" column="PLAN_STATUS_NAME" javaType="string"/>
        <result property="appearNum" column="APPEAR_NUM" javaType="string"/>
        <result property="affirmNum" column="AFFIRM_NUM" javaType="string"/>
        <result property="removeNum" column="REMOVE_NUM" javaType="string"/>
        <result property="toAffirmNum" column="TO_AFFIRM_NUM" javaType="string"/>
        <result property="orgNum" column="ORG_NUM" javaType="string"/>
    </resultMap>
    <select id="searchPlanScoreList" parameterType="java.util.Map" resultMap="searchPlanScoreList">
        SELECT
            NVL(P.APPEAR_NUM, '0') AS APPEAR_NUM,
            NVL(E.AFFIRM_NUM, '0') AS AFFIRM_NUM,
            NVL(G.REMOVE_NUM, '0') AS REMOVE_NUM,
            NVL(F.F_NUM, '0') AS ORG_NUM,
            NVL(M.TO_AFFIRM_NUM, '0') AS TO_AFFIRM_NUM,
            S.*
		FROM (
			SELECT PL.PLAN_FLOW, A.SPE_NAME, PL.INTRODUCE, PL.PLAN_CONTENT, PL.ENROLL_START_TIME
				, PL.ENROLL_END_TIME, PL.PLAN_START_TIME, PL.PLAN_END_TIME, PL.ASK_CONTENT, PL.PLAN_STATUS_ID
				, PL.PLAN_STATUS_NAME
			FROM RES_TEACH_QUALIFIED_PLAN PL
				LEFT JOIN (
					SELECT WM_CONCAT(M.SPE_NAME) AS SPE_NAME, M.PLAN_FLOW
					FROM RES_QUALIFIED_PLAN_MSG M
						LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW = M.PLAN_FLOW
					WHERE M.RECORD_STATUS = 'Y'
						AND P.RECORD_STATUS = 'Y'
					GROUP BY M.PLAN_FLOW
				) A ON A.PLAN_FLOW = PL.PLAN_FLOW
			WHERE PL.RECORD_STATUS = 'Y'  AND PL. PLAN_STATUS_ID != 'Staging'
                <if test="planFlow!=null and planFlow!=''">
                    AND PL.PLAN_FLOW= #{planFlow}
                </if>
                <if test="speName!=null and speName!=''">
                    AND A.SPE_NAME LIKE  '%${speName}%'
                </if>
                <if test="enrollStartTime!=null and enrollStartTime!=''">
                    AND PL.ENROLL_START_TIME <![CDATA[ < ]]> #{enrollStartTime}
                </if>
                <if test="enrollEndTime!=null and enrollEndTime!=''">
                    AND PL.ENROLL_END_TIME <![CDATA[ > ]]> #{enrollEndTime}
                </if>
		) S
		LEFT JOIN (
			SELECT PLAN_FLOW, COUNT(*) AS APPEAR_NUM
			FROM RES_TEACH_PLAN_DOCTOR
			WHERE RECORD_STATUS = 'Y' AND APPEAR_FLAG = 'Y'
			GROUP BY PLAN_FLOW
		) P ON P.PLAN_FLOW = S.PLAN_FLOW
        LEFT JOIN (
            SELECT PLAN_FLOW, COUNT(*) AS TO_AFFIRM_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE APPEAR_FLAG = 'Y' AND AFFIRM_FLAG IS NULL AND PLAN_REMOVE IS NULL AND RECORD_STATUS = 'Y'
            GROUP BY PLAN_FLOW
        ) M ON M.PLAN_FLOW = S.PLAN_FLOW
        LEFT JOIN (
            SELECT PLAN_FLOW, COUNT(*) AS REMOVE_NUM
            FROM RES_TEACH_PLAN_DOCTOR
            WHERE PLAN_REMOVE = 'Y'
            AND RECORD_STATUS = 'Y'
            GROUP BY PLAN_FLOW
        ) G ON G.PLAN_FLOW = S.PLAN_FLOW
		LEFT JOIN (
			SELECT PLAN_FLOW, COUNT(*) AS AFFIRM_NUM
			FROM RES_TEACH_PLAN_DOCTOR
			WHERE AFFIRM_FLAG = 'Y'
				AND RECORD_STATUS = 'Y'
			GROUP BY PLAN_FLOW
		) E ON E.PLAN_FLOW = S.PLAN_FLOW
        LEFT JOIN (
            select PLAN_FLOW,(select count(1) from (SELECT plan_flow,org_flow FROM  RES_TEACH_PLAN_DOCTOR where RECORD_STATUS='Y' group by plan_flow,org_flow)) as F_NUM from RES_TEACH_PLAN_DOCTOR where RECORD_STATUS='Y' and rownum=1
        ) F ON F.PLAN_FLOW = S.PLAN_FLOW
    </select>


    <select id="planApperList" parameterType="java.util.Map" resultMap="searchPlanUserList">
        SELECT A.*,B.DEPT_NAME FROM (
            SELECT R.RECORD_FLOW,R.DOCTOR_CODE,R.DOCTOR_NAME,S.SEX_NAME,R.ORG_NAME,R.SPE_NAME,R.DOCTOR_ROLE_NAME,
                    S.USER_PHONE,S.ID_NO,S.USER_EMAIL,R.ORG_FLOW,R.SPE_ID
            FROM RES_TEACH_PLAN_DOCTOR  R
            LEFT JOIN SYS_USER S ON S.USER_FLOW=R.DOCTOR_FLOW
            LEFT JOIN RES_DOCTOR D ON D.DOCTOR_FLOW=R.DOCTOR_FLOW
            WHERE R.PLAN_FLOW= #{planFlow}
                AND R.APPEAR_FLAG = 'Y'
            <if test="userStatus!=null and userStatus!=''and userStatus=='toAffirm'">
                AND R.AFFIRM_FLAG IS NULL AND R.PLAN_REMOVE IS NULL
            </if>
            <if test="userStatus!=null and userStatus!=''and userStatus=='affirm'">
                AND R.AFFIRM_FLAG IS NOT NULL AND R.PLAN_REMOVE IS NULL
            </if>
            <if test="userStatus!=null and userStatus!=''and userStatus=='del'">
                AND R.PLAN_REMOVE IS NOT NULL
            </if>
            <if test="speId!=null and speId!=''">
                AND R.SPE_ID = #{speId}
            </if>
            <if test="orgFlow!=null and orgFlow!=''">
                AND R.ORG_FLOW = #{orgFlow}
            </if>
            <if test="doctorName!=null and doctorName!=''">
                AND R.DOCTOR_NAME = #{doctorName}
            </if>
            AND R.RECORD_STATUS='Y'
            AND S.RECORD_STATUS='Y'
        ) A
        LEFT JOIN (
            SELECT
                RD.RECORD_FLOW,
                WM_CONCAT(SUD.DEPT_FLOW) DEPT_FLOW,
                WM_CONCAT(SUD.DEPT_NAME) DEPT_NAME
            FROM RES_TEACH_PLAN_DOCTOR RD
            LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW=RD.DOCTOR_FLOW
            WHERE  RD.PLAN_FLOW= #{planFlow}
                AND RD.APPEAR_FLAG = 'Y'
            <if test="userStatus!=null and userStatus!=''and userStatus=='toAffirm'">
                AND RD.AFFIRM_FLAG IS NULL AND RD.PLAN_REMOVE IS NULL
            </if>
            <if test="userStatus!=null and userStatus!=''and userStatus=='affirm'">
                AND RD.AFFIRM_FLAG IS NOT NULL AND RD.PLAN_REMOVE IS NULL
            </if>
            <if test="userStatus!=null and userStatus!=''and userStatus=='del'">
                AND RD.PLAN_REMOVE IS NOT NULL
            </if>
            <if test="speId!=null and speId!=''">
                AND RD.SPE_ID = #{speId}
            </if>
            <if test="orgFlow!=null and orgFlow!=''">
                AND RD.ORG_FLOW = #{orgFlow}
            </if>
            <if test="doctorName!=null and doctorName!=''">
                AND RD.DOCTOR_NAME = #{doctorName}
            </if>
            AND RD.RECORD_STATUS = 'Y'
            AND SUD.RECORD_STATUS = 'Y'
            GROUP BY RD.RECORD_FLOW
        )B
        ON A.RECORD_FLOW=B.RECORD_FLOW
        ORDER BY A.ORG_FLOW,A.SPE_ID,A.DOCTOR_NAME
    </select>

    <resultMap type="HashMap" id="phyAssCertificateList">
        <result property="recordFlow" column="RECORD_FLOW" javaType="string"/>
        <result property="doctorName" column="DOCTOR_NAME" javaType="string"/>
        <result property="sexName" column="SEX_NAME" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="deptName" column="DEPT_NAME" javaType="string"/>
        <result property="gradeName" column="GRADE_NAME" javaType="string"/>
        <result property="certificateNo" column="CERTIFICATE_NO" javaType="string"/>
        <result property="certificateStartTime" column="CERTIFICATE_START_TIME" javaType="string"/>
        <result property="sendcertificateTime" column="SEND_CERTIFICATE_TIME" javaType="string"/>
        <result property="gaincertificateName" column="GAIN_CERTIFICATE_NAME" javaType="string"/>
        <result property="sendcertificateName" column="SEND_CERTIFICATE_NAME" javaType="string"/>
        <result property="endcertificateTime" column="END_CERTIFICATE_TIME" javaType="string"/>
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="speId" column="SPE_ID" javaType="string"/>
    </resultMap>
    <select id="phyAssCertificateList" parameterType="java.util.Map" resultMap="phyAssCertificateList">
        SELECT A.*,B.DEPT_NAME FROM (
            SELECT
                R.RECORD_FLOW,R.DOCTOR_NAME,S.SEX_NAME,P.PLAN_CONTENT,R.ORG_NAME,R.SPE_NAME,R.GRADE_NAME,R.CERTIFICATE_NO,
                R.CERTIFICATE_START_TIME,R.SEND_CERTIFICATE_TIME,R.GAIN_CERTIFICATE_NAME,R.SEND_CERTIFICATE_NAME,R.PLAN_FLOW,R.ORG_FLOW,R.SPE_ID,
                TO_CHAR(TO_DATE(R.SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL '60' DAY, 'yyyy-mm-dd') AS END_CERTIFICATE_TIME
            FROM RES_TEACH_PLAN_DOCTOR  R
            LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW=R.PLAN_FLOW
             LEFT JOIN SYS_USER S ON S.USER_FLOW=R.DOCTOR_FLOW
            WHERE R.RECORD_STATUS='Y'
            AND R.AFFIRM_FLAG='Y'
            AND P.RECORD_STATUS='Y'
            AND S.RECORD_STATUS='Y'
            <if test="planFlow!=null and planFlow!=''">
                AND R.PLAN_FLOW= #{planFlow}
            </if>
            <if test="orgFlow!=null and orgFlow!=''">
                AND R.ORG_FLOW= #{orgFlow}
            </if>
            <if test="speId!=null and speId!=''">
                AND R.SPE_ID= #{speId}
            </if>
            <if test="doctorName!=null and doctorName!=''">
                AND R.DOCTOR_NAME LIKE  '%${doctorName}%'
            </if>
            <if test="gradeId!=null and gradeId!=''">
                AND R.GRADE_ID= #{gradeId}
            </if>
            <if test="gainCertificateId!=null and gainCertificateId!=''">
                AND R.GAIN_CERTIFICATE_ID = #{gainCertificateId}
            </if>
            <if test="sendCertificateId!=null and sendCertificateId!=''">
                AND R.SEND_CERTIFICATE_ID = #{sendCertificateId}
            </if>
            <if test="enrollStartTime!=null and enrollStartTime!=''">
                AND P.ENROLL_START_TIME <![CDATA[ < ]]> #{enrollStartTime}
            </if>
            <if test="enrollEndTime!=null and enrollEndTime!=''">
                AND P.ENROLL_END_TIME <![CDATA[ > ]]> #{enrollEndTime}
            </if>
        ) A
        LEFT JOIN (
            SELECT
                RD.RECORD_FLOW,
                WM_CONCAT(SUD.DEPT_NAME) DEPT_NAME
            FROM RES_TEACH_PLAN_DOCTOR RD
            LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW=RD.DOCTOR_FLOW
            WHERE RD.RECORD_STATUS = 'Y'
            AND SUD.RECORD_STATUS = 'Y'
            GROUP BY RD.RECORD_FLOW
        )B
        ON A.RECORD_FLOW=B.RECORD_FLOW
        ORDER BY A.PLAN_FLOW,A.ORG_FLOW,A.SPE_ID,A.DOCTOR_NAME
    </select>




    <resultMap type="HashMap" id="planUserOrgList">
        <result property="recordFlow" column="RECORD_FLOW" javaType="string"/>
        <result property="doctorName" column="DOCTOR_NAME" javaType="string"/>
        <result property="sexName" column="SEX_NAME" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="speName" column="SPE_NAME" javaType="string"/>
        <result property="deptName" column="DEPT_NAME" javaType="string"/>
        <result property="gradeName" column="GRADE_NAME" javaType="string"/>
        <result property="certificateNo" column="CERTIFICATE_NO" javaType="string"/>
        <result property="certificateStartTime" column="CERTIFICATE_START_TIME" javaType="string"/>
        <result property="sendcertificateTime" column="SEND_CERTIFICATE_TIME" javaType="string"/>
        <result property="gaincertificateName" column="GAIN_CERTIFICATE_NAME" javaType="string"/>
        <result property="sendcertificateName" column="SEND_CERTIFICATE_NAME" javaType="string"/>
        <result property="endcertificateTime" column="END_CERTIFICATE_TIME" javaType="string"/>
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="orgName" column="ORG_NAME" javaType="string"/>
        <result property="speId" column="SPE_ID" javaType="string"/>
    </resultMap>
    <select id="planUserOrgList" parameterType="java.util.Map" resultMap="planUserOrgList">
        SELECT * FROM (
            SELECT A.*, B.DEPT_FLOW, B.DEPT_NAME
            FROM (
                SELECT R.RECORD_FLOW, R.DOCTOR_NAME, S.SEX_NAME, P.PLAN_CONTENT, R.ORG_FLOW, R.ORG_NAME
                , R.SPE_NAME, R.GRADE_NAME, R.CERTIFICATE_NO, R.CERTIFICATE_START_TIME, R.SEND_CERTIFICATE_TIME
                , R.GAIN_CERTIFICATE_NAME, R.SEND_CERTIFICATE_NAME, R.PLAN_FLOW, R.SPE_ID
                , TO_CHAR(TO_DATE(R.SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL '60' DAY, 'yyyy-mm-dd') AS END_CERTIFICATE_TIME
                FROM RES_TEACH_PLAN_DOCTOR R
                LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW = R.PLAN_FLOW
                LEFT JOIN SYS_USER S ON S.USER_FLOW = R.DOCTOR_FLOW
                WHERE R.RECORD_STATUS = 'Y'
                AND R.AFFIRM_FLAG = 'Y'
                AND P.RECORD_STATUS = 'Y'
                AND S.RECORD_STATUS = 'Y'
                AND R.GAIN_CERTIFICATE_ID = 'Y'
                AND R.SEND_CERTIFICATE_ID = 'Y'
                AND R.ORG_FLOW=#{orgFlow}
                <if test="doctorName!=null and doctorName!=''">
                    AND R.DOCTOR_NAME LIKE  '%${doctorName}%'
                </if>
                <if test="planFlow!=null and planFlow!=''">
                    AND R.PLAN_FLOW= #{planFlow}
                </if>
                <if test="speId!=null and speId!=''">
                    AND R.SPE_ID = #{speId}
                </if>
                <if test="certificateNo!=null and certificateNo!=''">
                    AND R.CERTIFICATE_NO = #{certificateNo}
                </if>
                <if test="gradeId!=null and gradeId!=''">
                    AND R.GRADE_ID = #{gradeId}
                </if>
                <if test="startTime!=null and startTime!=''">
                    AND R.SEND_CERTIFICATE_TIME <![CDATA[ <= ]]> #{startTime}
                </if>
                <if test="endTime!=null and endTime!=''">
                    AND R.RECORD_FLOW IN (
                    SELECT RECORD_FLOW
                    FROM RES_TEACH_PLAN_DOCTOR
                    WHERE TO_CHAR(TO_DATE(SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL '${dayNum}' DAY, 'yyyy-mm-dd') <![CDATA[ >= ]]> #{endTime}
                    )
                </if>
            ) A
            LEFT JOIN (
                SELECT RD.RECORD_FLOW, WM_CONCAT(SUD.DEPT_FLOW) AS DEPT_FLOW, WM_CONCAT(SUD.DEPT_NAME) AS DEPT_NAME
                FROM RES_TEACH_PLAN_DOCTOR RD
                LEFT JOIN SYS_USER_DEPT SUD ON SUD.USER_FLOW = RD.DOCTOR_FLOW
                WHERE RD.RECORD_STATUS = 'Y'
                AND SUD.RECORD_STATUS = 'Y'
                GROUP BY RD.RECORD_FLOW
            ) B ON A.RECORD_FLOW = B.RECORD_FLOW
            ORDER BY A.PLAN_FLOW, A.ORG_FLOW, A.SPE_ID, A.DOCTOR_NAME
        )
        <if test="deptFlow!=null and deptFlow!=''">
            WHERE DEPT_FLOW LIKE '%${deptFlow}%'
        </if>
    </select>





    <select id="gainPlanCertificateNo" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            LPAD(
                 NVL(
                      (SELECT COUNT(1) NUM
                      FROM RES_TEACH_PLAN_DOCTOR
                      WHERE RECORD_STATUS = 'Y'
                      AND PLAN_FLOW = #{planFlow}
                      AND CERTIFICATE_NO IS NOT NULL ), 0)
                 +1
            ,3, '0') num
        FROM RES_TEACH_PLAN_DOCTOR RD
        WHERE ROWNUM=1
    </select>

    <resultMap type="HashMap" id="phyAssDoctorList">
        <result property="recordFlow" column="RECORD_FLOW" javaType="string"/>
        <result property="planFlow" column="PLAN_FLOW" javaType="string"/>
        <result property="planContent" column="PLAN_CONTENT" javaType="string"/>
        <result property="certificateNo" column="CERTIFICATE_NO" javaType="string"/>
        <result property="planStartTime" column="PLAN_START_TIME" javaType="string"/>
        <result property="planEndTime" column="PLAN_END_TIME" javaType="string"/>
        <result property="sendCertificateTime" column="SEND_CERTIFICATE_TIME" javaType="string"/>
        <result property="endCertificateTime" column="END_CERTIFICATE_TIME" javaType="string"/>
    </resultMap>
    <!--<select id="phyAssDoctorList" parameterType="java.util.Map" resultMap="phyAssDoctorList">
        SELECT
            R.RECORD_FLOW,R.PLAN_FLOW,P.PLAN_CONTENT,P.PLAN_START_TIME,P.PLAN_END_TIME,
            R.CERTIFICATE_NO,R.SEND_CERTIFICATE_TIME,
            TO_CHAR(TO_DATE(SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL '${dayNum}' DAY, 'yyyy-mm-dd') END_CERTIFICATE_TIME
        FROM RES_TEACH_PLAN_DOCTOR R
        LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW = R.PLAN_FLOW
        WHERE R.RECORD_STATUS = 'Y'
        AND R.AFFIRM_FLAG = 'Y'
        AND P.RECORD_STATUS = 'Y'
        AND R.GAIN_CERTIFICATE_ID = 'Y'
        AND R.SEND_CERTIFICATE_ID = 'Y'
        <if test="userFlow!=null and userFlow!=''">
            AND R.DOCTOR_FLOW= #{userFlow}
        </if>
        <if test="planFlow!=null and planFlow!=''">
            AND R.PLAN_FLOW= #{planFlow}
        </if>
        <if test="certificateNo!=null and certificateNo!=''">
            AND R.CERTIFICATE_NO= #{certificateNo}
        </if>
        <if test="startTime!=null and startTime!=''">
            AND R.SEND_CERTIFICATE_TIME <![CDATA[ <= ]]> #{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            AND R.RECORD_FLOW IN (
                SELECT RECORD_FLOW
                FROM RES_TEACH_PLAN_DOCTOR
                WHERE TO_CHAR(TO_DATE(SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL '${dayNum}' DAY, 'yyyy-mm-dd') <![CDATA[ >= ]]> #{endTime}
            )
        </if>
    </select>-->

    <select id="phyAssDoctorList" parameterType="java.util.Map" resultMap="phyAssDoctorList">
        SELECT
        R.RECORD_FLOW, R.PLAN_FLOW, P.PLAN_CONTENT, P.PLAN_START_TIME, P.PLAN_END_TIME,
        R.CERTIFICATE_NO, R.SEND_CERTIFICATE_TIME,
        TO_CHAR(TO_DATE(R.SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL #{dayNum} DAY, 'yyyy-mm-dd') END_CERTIFICATE_TIME
        FROM RES_TEACH_PLAN_DOCTOR R
        LEFT JOIN RES_TEACH_QUALIFIED_PLAN P ON P.PLAN_FLOW = R.PLAN_FLOW
        WHERE R.RECORD_STATUS = 'Y'
        AND R.AFFIRM_FLAG = 'Y'
        AND P.RECORD_STATUS = 'Y'
        AND R.GAIN_CERTIFICATE_ID = 'Y'
        AND R.SEND_CERTIFICATE_ID = 'Y'
        <if test="userFlow != null and userFlow != ''">
            AND R.DOCTOR_FLOW = #{userFlow}
        </if>
        <if test="planFlow != null and planFlow != ''">
            AND R.PLAN_FLOW = #{planFlow}
        </if>
        <if test="certificateNo != null and certificateNo != ''">
            AND R.CERTIFICATE_NO = #{certificateNo}
        </if>
        <if test="startTime != null and startTime != ''">
            AND R.SEND_CERTIFICATE_TIME <![CDATA[ <= ]]> #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND TO_CHAR(TO_DATE(R.SEND_CERTIFICATE_TIME, 'yyyy-mm-dd') + INTERVAL #{dayNum} DAY, 'yyyy-mm-dd') <![CDATA[ >= ]]> #{endTime}
        </if>
    </select>
</mapper>
