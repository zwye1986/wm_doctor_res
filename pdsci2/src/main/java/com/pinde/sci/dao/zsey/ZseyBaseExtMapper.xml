<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.zsey.ZseyBaseExtMapper">
	<resultMap id="appointMap" type="java.util.Map">
		<result column="APPOINT_FLOW" jdbcType="VARCHAR" property="appointFlow"/>
		<result column="TRAIN_DATE" jdbcType="VARCHAR" property="trainDate"/>
		<result column="BEGIN_TIME" jdbcType="VARCHAR" property="beginTime"/>
		<result column="END_TIME" jdbcType="VARCHAR" property="endTime"/>
		<result column="TRAINEES_NAME" jdbcType="VARCHAR" property="traineesName"/>
		<result column="TRAINEES_SPE_NAME" jdbcType="VARCHAR" property="traineesSpeName"/>
		<result column="TRAINEES_NUMBER" jdbcType="VARCHAR" property="traineesNumber"/>
		<result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName"/>
		<result column="TEACHER_NAME" jdbcType="VARCHAR" property="teacherName"/>
		<result column="TEACHER_PHONE" jdbcType="VARCHAR" property="teacherPhone"/>
		<result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName"/>
		<result column="APPLICANT_NAME" jdbcType="VARCHAR" property="applicantName"/>
		<result column="APPLICANT_PHONE" jdbcType="VARCHAR" property="applicantPhone"/>
		<result column="TRAIN_ROOM_NAME" jdbcType="VARCHAR" property="trainRoomName"/>
		<result column="AUDIT_STATUS_ID" jdbcType="VARCHAR" property="auditStatusId"/>
		<result column="AUDIT_STATUS_NAME" jdbcType="VARCHAR" property="auditStatusName"/>
		<result column="DEVICE_STR" jdbcType="VARCHAR" property="deviceStr"/>
	</resultMap>
	<select id="queryAppointList"  parameterType="java.util.Map" resultMap="appointMap">
		select a.appoint_flow,
				a.train_date,
				a.begin_time,
				a.end_time,
				a.trainees_name,
				a.trainees_spe_name,
				a.trainees_number,
				a.project_name,
				a.teacher_name,
				a.teacher_phone,
				b.dept_name,
				a.applicant_name,
				a.applicant_phone,
				a.train_room_name,
				a.audit_status_id,
				a.audit_status_name,
				c.device_str
			from zsey_appoint_main a
			left join sys_user b
				on a.applicant_flow = b.user_flow
			left join (select appoint_flow,
					listagg(material_name || ' ' || material_number, ' / ') within group(order by appoint_flow) device_str
					from zsey_appoint_material
					group by appoint_flow) c
				on a.appoint_flow = c.appoint_flow
			where a.record_status = 'Y'
			<if test='trainBeginDate!=null and trainBeginDate!=""'>
				and a.train_date &gt;= #{trainBeginDate}
			</if>
			<if test='trainEndDate!=null and trainEndDate!=""'>
				and a.train_date &lt;= #{trainEndDate}
			</if>
			<if test='deptName!=null and deptName!=""'>
				and b.dept_name like '%${deptName}%'
			</if>
			<if test='teacherName!=null and teacherName!=""'>
				and a.teacher_name like '%${teacherName}%'
			</if>
			<if test='auditStatusId!=null and auditStatusId!=""'>
				and a.audit_status_id = #{auditStatusId}
			</if>
			<if test='traineesName!=null and traineesName!=""'>
				and a.trainees_name = #{traineesName}
			</if>
			order by a.train_date desc,a.begin_time desc
	</select>

	<select id="checkRoomInUsing"  parameterType="java.util.Map" resultMap="com.pinde.sci.dao.base.ZseyAppointMainMapper.BaseResultMap">
		select *
			from zsey_appoint_main
		  where record_status = 'Y'
		<if test='trainDate!=null and trainDate!=""'>
			and train_date = #{trainDate}
		</if>
		<if test='trainRoomId!=null and trainRoomId!=""'>
			and train_room_id = #{trainRoomId}
		</if>
		<if test='appointFlow!=null and appointFlow!=""'>
			and appoint_flow not in ('${appointFlow}')
		</if>
		<if test='beginTime!=null and beginTime!="" and endTime!=null and endTime!=""'>
			and ((begin_time &gt;= #{beginTime} and begin_time &lt; #{endTime}) or
			(end_time &gt; #{beginTime} and end_time &lt;= #{endTime}) or
			(begin_time &lt;= #{beginTime} and end_time &gt;= #{endTime}))
		</if>
	</select>

	<resultMap id="accountMap" type="java.util.Map">
		<result column="USER_FLOW" jdbcType="VARCHAR" property="userFlow"/>
		<result column="USER_CODE" jdbcType="VARCHAR" property="userCode"/>
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
		<result column="DEPT_FLOW" jdbcType="VARCHAR" property="deptFlow"/>
		<result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName"/>
		<result column="ROLE_FLOW" jdbcType="VARCHAR" property="roleFlow"/>
		<result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName"/>
		<result column="RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus"/>
	</resultMap>
	<select id="queryAccountList"  parameterType="java.util.Map" resultMap="accountMap">
		select a.user_flow,
			   a.user_code,
			   a.user_name,
			   a.dept_flow,
			   a.dept_name,
			   b.role_flow,
			   c.role_name,
			   a.record_status
		  from sys_user a
		  left join sys_user_role b
			on a.user_flow = b.user_flow
		   and b.record_status = 'Y'
		   and b.ws_id = 'zseylcjn'
		  left join sys_role c
			on c.role_flow = b.role_flow
		 where (a.org_flow is null or a.org_flow != '00000000000000000000000000000000')
		<if test='userCode!=null and userCode!=""'>
			and a.user_code like '${userCode}%'
		</if>
		<if test='userName!=null and userName!=""'>
			and a.user_name like '%${userName}%'
		</if>
		<if test='deptFlow!=null and deptFlow!=""'>
			and a.dept_flow = #{deptFlow}
		</if>
		<if test='roleFlow!=null and roleFlow!=""'>
			and b.role_flow = #{roleFlow}
		</if>
		<if test='userFlow!=null and userFlow!=""'>
			and a.user_flow = #{userFlow}
		</if>
		order by a.create_time desc,a.user_code
	</select>

	<select id="searchTeacher" resultMap="com.pinde.sci.dao.base.SysUserMapper.BaseResultMap">
		select a.*
			from sys_user a, sys_user_role b, sys_role c
		  where a.record_status = 'Y'
			and b.record_status = 'Y'
			and c.record_status = 'Y'
			and a.user_flow = b.user_flow
			and b.role_flow = c.role_flow
			and c.role_name like '%任课老师%'
			and b.ws_id = 'zseylcjn'
	</select>

	<resultMap id="materialMap" type="java.util.Map">
		<result column="MATERIAL_FLOW" jdbcType="VARCHAR" property="materialFlow"/>
		<result column="MATERIAL_NAME" jdbcType="VARCHAR" property="materialName"/>
		<result column="TYPE_ID" jdbcType="VARCHAR" property="typeId"/>
	</resultMap>
	<select id="queryAppointMaterialList" resultMap="materialMap">
		select device_flow material_Flow, device_name material_Name, create_time, 'DEVICES' type_id
		  from zsey_devices
		 where record_status = 'Y'
		<if test='materialName!=null and materialName!=""'>
			and device_name like '%${materialName}%'
		</if>
		union
		select supplies_flow material_Flow, supplies_name material_Name, create_time, 'SUPPLIES' type_id
		  from zsey_supplies
		 where record_status = 'Y'
		<if test='materialName!=null and materialName!=""'>
			and supplies_name like '%${materialName}%'
		</if>
		 order by type_id,create_time desc
	</select>

	<resultMap id="statisticsMap" type="java.util.Map">
		<result column="DICT_ID" jdbcType="VARCHAR" property="dictId"/>
		<result column="DICT_NAME" jdbcType="VARCHAR" property="dictName"/>
		<result column="USE_NUM" jdbcType="VARCHAR" property="useNum"/>
	</resultMap>
	<select id="roomUseNumList" resultMap="statisticsMap">
		select *
		  from (select distinct a.dict_id,
                        a.dict_name,
                        count(b.appoint_flow) over(partition by b.train_room_id) use_num
          from sys_dict a
          left join zsey_appoint_main b
            on a.dict_id = b.train_room_id
           and b.record_status = 'Y'
           and train_date between #{beginDate} and #{endDate}
         where a.record_status = 'Y'
           and a.dict_type_id = 'ZseyTrainRoom')
 		order by dict_id
	</select>

	<resultMap id="monthMap" type="java.util.Map">
		<result column="TRAIN_ROOM_ID" jdbcType="VARCHAR" property="trainRoomId"/>
		<result column="TRAIN_ROOM_NAME" jdbcType="VARCHAR" property="trainRoomName"/>
		<result column="TRAIN_DATE" jdbcType="VARCHAR" property="trainDate"/>
		<result column="MONTH_TOTAL" jdbcType="VARCHAR" property="monthTotal"/>
	</resultMap>
	<select id="monthStatistics" resultMap="monthMap">
		 select train_room_id, train_room_name, substr(train_date, 1, 7) train_date, count(1) month_total
		   from zsey_appoint_main
		  where record_status = 'Y'
		  	and train_room_id is not null
		  	and substr(train_date, 1, 7) between substr(#{beginDate}, 1, 7) and substr(#{endDate}, 1, 7)
		  group by train_room_id, train_room_name, substr(train_date, 1, 7)
		  order by train_room_id, train_room_name, substr(train_date, 1, 7)
	</select>

	<resultMap id="situationMap" type="java.util.Map">
		<result column="TRAIN_ROOM_ID" jdbcType="VARCHAR" property="trainRoomId"/>
		<result column="BEGIN_TIME" jdbcType="VARCHAR" property="beginTime"/>
		<result column="END_TIME" jdbcType="VARCHAR" property="endTime"/>
		<result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName"/>
		<result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName"/>
	</resultMap>
	<select id="deptAppointList" resultMap="situationMap">
		select a.train_room_id, a.begin_time, a.end_time, a.project_name, b.dept_name
		  from zsey_appoint_main a
		  left join sys_user b
			on a.applicant_flow = b.user_flow
		 where a.record_status = 'Y'
		   and a.train_date = #{trainDate}
	</select>

	<resultMap id="deptMap" type="java.util.Map">
		<result column="DEPT_FLOW" jdbcType="VARCHAR" property="deptFlow"/>
		<result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName"/>
		<result column="SUPPLIES_FLOW" jdbcType="VARCHAR" property="suppliesFlow"/>
		<result column="SUPPLIES_NAME" jdbcType="VARCHAR" property="suppliesName"/>
		<result column="TOTAL" jdbcType="VARCHAR" property="total"/>
		<result column="INX" jdbcType="VARCHAR" property="inx"/>
	</resultMap>
	<select id="deptStatisticsList"  parameterType="java.util.Map" resultMap="deptMap">
		select a.dept_flow, c.dept_name, a.supplies_flow, b.supplies_name, a.total,a.inx
			from (select dept_flow, supplies_flow, sum(one_number) + sum(repeat_number) total,
					count(supplies_flow) over(partition by dept_flow) inx
				from zsey_supplies_batch
				where batch_type = 'OUT'
				<if test='beginDate!=null and beginDate!=""'>
					and batch_date &gt;= #{beginDate}
				</if>
				<if test='endDate!=null and endDate!=""'>
					and batch_date &lt;= #{endDate}
				</if>
				group by dept_flow, supplies_flow
				order by dept_flow) a
			left join zsey_supplies b on a.supplies_flow = b.supplies_flow
			left join sys_dept c on a.dept_flow = c.dept_flow
			<if test='deptFlow!=null and deptFlow!=""'>
				where a.dept_flow = #{deptFlow}
			</if>
	</select>
</mapper>