<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.base.SchArrangeMapper" >
    <resultMap id="BaseResultMap" type="com.pinde.core.model.SchArrange">
    <id column="ARRANGE_FLOW" property="arrangeFlow" jdbcType="VARCHAR" />
    <result column="DOCTOR_NUM" property="doctorNum" jdbcType="DECIMAL" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="OPER_TIME" property="operTime" jdbcType="VARCHAR" />
    <result column="OPER_USER_FLOW" property="operUserFlow" jdbcType="VARCHAR" />
    <result column="OPER_USER_NAME" property="operUserName" jdbcType="VARCHAR" />
    <result column="ARRANGE_TYPE_ID" property="arrangeTypeId" jdbcType="VARCHAR" />
    <result column="ARRANGE_TYPE_NAME" property="arrangeTypeName" jdbcType="VARCHAR" />
    <result column="ARRANGE_STATUS_ID" property="arrangeStatusId" jdbcType="VARCHAR" />
    <result column="ARRANGE_STATUS_NAME" property="arrangeStatusName" jdbcType="VARCHAR" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="VARCHAR" />
    <result column="BEGIN_INDEX" property="beginIndex" jdbcType="VARCHAR" />
    <result column="END_INDEX" property="endIndex" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ARRANGE_FLOW, DOCTOR_NUM, ORG_FLOW, ORG_NAME, OPER_TIME, OPER_USER_FLOW, OPER_USER_NAME, 
    ARRANGE_TYPE_ID, ARRANGE_TYPE_NAME, ARRANGE_STATUS_ID, ARRANGE_STATUS_NAME, BEGIN_DATE, 
    BEGIN_INDEX, END_INDEX, RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
    MODIFY_USER_FLOW
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.SchArrangeExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
      from SCH_ARRANGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
      from SCH_ARRANGE
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
      delete from SCH_ARRANGE
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.pinde.core.model.SchArrangeExample">
      delete from SCH_ARRANGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.pinde.core.model.SchArrange">
      insert into SCH_ARRANGE (ARRANGE_FLOW, DOCTOR_NUM, ORG_FLOW,
      ORG_NAME, OPER_TIME, OPER_USER_FLOW, 
      OPER_USER_NAME, ARRANGE_TYPE_ID, ARRANGE_TYPE_NAME, 
      ARRANGE_STATUS_ID, ARRANGE_STATUS_NAME, BEGIN_DATE, 
      BEGIN_INDEX, END_INDEX, RECORD_STATUS, 
      CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, 
      MODIFY_USER_FLOW)
    values (#{arrangeFlow,jdbcType=VARCHAR}, #{doctorNum,jdbcType=DECIMAL}, #{orgFlow,jdbcType=VARCHAR}, 
      #{orgName,jdbcType=VARCHAR}, #{operTime,jdbcType=VARCHAR}, #{operUserFlow,jdbcType=VARCHAR}, 
      #{operUserName,jdbcType=VARCHAR}, #{arrangeTypeId,jdbcType=VARCHAR}, #{arrangeTypeName,jdbcType=VARCHAR}, 
      #{arrangeStatusId,jdbcType=VARCHAR}, #{arrangeStatusName,jdbcType=VARCHAR}, #{beginDate,jdbcType=VARCHAR}, 
      #{beginIndex,jdbcType=VARCHAR}, #{endIndex,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUserFlow,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.pinde.core.model.SchArrange">
      insert into SCH_ARRANGE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="arrangeFlow != null" >
        ARRANGE_FLOW,
      </if>
      <if test="doctorNum != null" >
        DOCTOR_NUM,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="operTime != null" >
        OPER_TIME,
      </if>
      <if test="operUserFlow != null" >
        OPER_USER_FLOW,
      </if>
      <if test="operUserName != null" >
        OPER_USER_NAME,
      </if>
      <if test="arrangeTypeId != null" >
        ARRANGE_TYPE_ID,
      </if>
      <if test="arrangeTypeName != null" >
        ARRANGE_TYPE_NAME,
      </if>
      <if test="arrangeStatusId != null" >
        ARRANGE_STATUS_ID,
      </if>
      <if test="arrangeStatusName != null" >
        ARRANGE_STATUS_NAME,
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE,
      </if>
      <if test="beginIndex != null" >
        BEGIN_INDEX,
      </if>
      <if test="endIndex != null" >
        END_INDEX,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="arrangeFlow != null" >
        #{arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="doctorNum != null" >
        #{doctorNum,jdbcType=DECIMAL},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null" >
        #{operTime,jdbcType=VARCHAR},
      </if>
      <if test="operUserFlow != null" >
        #{operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserName != null" >
        #{operUserName,jdbcType=VARCHAR},
      </if>
      <if test="arrangeTypeId != null" >
        #{arrangeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="arrangeTypeName != null" >
        #{arrangeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="arrangeStatusId != null" >
        #{arrangeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="arrangeStatusName != null" >
        #{arrangeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=VARCHAR},
      </if>
      <if test="beginIndex != null" >
        #{beginIndex,jdbcType=VARCHAR},
      </if>
      <if test="endIndex != null" >
        #{endIndex,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.pinde.core.model.SchArrangeExample" resultType="java.lang.Integer">
      select count(*) from SCH_ARRANGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
      update SCH_ARRANGE
    <set >
      <if test="record.arrangeFlow != null" >
        ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorNum != null" >
        DOCTOR_NUM = #{record.doctorNum,jdbcType=DECIMAL},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.operTime != null" >
        OPER_TIME = #{record.operTime,jdbcType=VARCHAR},
      </if>
      <if test="record.operUserFlow != null" >
        OPER_USER_FLOW = #{record.operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.operUserName != null" >
        OPER_USER_NAME = #{record.operUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangeTypeId != null" >
        ARRANGE_TYPE_ID = #{record.arrangeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangeTypeName != null" >
        ARRANGE_TYPE_NAME = #{record.arrangeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangeStatusId != null" >
        ARRANGE_STATUS_ID = #{record.arrangeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangeStatusName != null" >
        ARRANGE_STATUS_NAME = #{record.arrangeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.beginDate != null" >
        BEGIN_DATE = #{record.beginDate,jdbcType=VARCHAR},
      </if>
      <if test="record.beginIndex != null" >
        BEGIN_INDEX = #{record.beginIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.endIndex != null" >
        END_INDEX = #{record.endIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
      update SCH_ARRANGE
    set ARRANGE_FLOW = #{record.arrangeFlow,jdbcType=VARCHAR},
      DOCTOR_NUM = #{record.doctorNum,jdbcType=DECIMAL},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      OPER_TIME = #{record.operTime,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{record.operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{record.operUserName,jdbcType=VARCHAR},
      ARRANGE_TYPE_ID = #{record.arrangeTypeId,jdbcType=VARCHAR},
      ARRANGE_TYPE_NAME = #{record.arrangeTypeName,jdbcType=VARCHAR},
      ARRANGE_STATUS_ID = #{record.arrangeStatusId,jdbcType=VARCHAR},
      ARRANGE_STATUS_NAME = #{record.arrangeStatusName,jdbcType=VARCHAR},
      BEGIN_DATE = #{record.beginDate,jdbcType=VARCHAR},
      BEGIN_INDEX = #{record.beginIndex,jdbcType=VARCHAR},
      END_INDEX = #{record.endIndex,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.SchArrange">
      update SCH_ARRANGE
    <set >
      <if test="doctorNum != null" >
        DOCTOR_NUM = #{doctorNum,jdbcType=DECIMAL},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null" >
        OPER_TIME = #{operTime,jdbcType=VARCHAR},
      </if>
      <if test="operUserFlow != null" >
        OPER_USER_FLOW = #{operUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="operUserName != null" >
        OPER_USER_NAME = #{operUserName,jdbcType=VARCHAR},
      </if>
      <if test="arrangeTypeId != null" >
        ARRANGE_TYPE_ID = #{arrangeTypeId,jdbcType=VARCHAR},
      </if>
      <if test="arrangeTypeName != null" >
        ARRANGE_TYPE_NAME = #{arrangeTypeName,jdbcType=VARCHAR},
      </if>
      <if test="arrangeStatusId != null" >
        ARRANGE_STATUS_ID = #{arrangeStatusId,jdbcType=VARCHAR},
      </if>
      <if test="arrangeStatusName != null" >
        ARRANGE_STATUS_NAME = #{arrangeStatusName,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE = #{beginDate,jdbcType=VARCHAR},
      </if>
      <if test="beginIndex != null" >
        BEGIN_INDEX = #{beginIndex,jdbcType=VARCHAR},
      </if>
      <if test="endIndex != null" >
        END_INDEX = #{endIndex,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.SchArrange">
      update SCH_ARRANGE
    set DOCTOR_NUM = #{doctorNum,jdbcType=DECIMAL},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      OPER_TIME = #{operTime,jdbcType=VARCHAR},
      OPER_USER_FLOW = #{operUserFlow,jdbcType=VARCHAR},
      OPER_USER_NAME = #{operUserName,jdbcType=VARCHAR},
      ARRANGE_TYPE_ID = #{arrangeTypeId,jdbcType=VARCHAR},
      ARRANGE_TYPE_NAME = #{arrangeTypeName,jdbcType=VARCHAR},
      ARRANGE_STATUS_ID = #{arrangeStatusId,jdbcType=VARCHAR},
      ARRANGE_STATUS_NAME = #{arrangeStatusName,jdbcType=VARCHAR},
      BEGIN_DATE = #{beginDate,jdbcType=VARCHAR},
      BEGIN_INDEX = #{beginIndex,jdbcType=VARCHAR},
      END_INDEX = #{endIndex,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR}
    where ARRANGE_FLOW = #{arrangeFlow,jdbcType=VARCHAR}
  </update>
</mapper>