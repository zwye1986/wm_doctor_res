<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.xjgl.XjEduTermExtMapper">

    <resultMap id="extMap" type="com.pinde.sci.model.xjgl.XjEduScheduleClassExt"
               extends="com.pinde.sci.dao.base.EduScheduleClassMapper.BaseResultMap">
        <association property="course" javaType="com.pinde.sci.model.mo.EduCourse" column="EC_COURSE_FLOW">
            <id column="EC_COURSE_FLOW" jdbcType="VARCHAR" property="courseFlow" />
            <result column="EC_COURSE_NAME" jdbcType="VARCHAR" property="courseName" />
            <result column="EC_COURSE_MAJOR_ID" jdbcType="VARCHAR" property="courseMajorId" />
            <result column="EC_COURSE_MAJOR_NAME" jdbcType="VARCHAR" property="courseMajorName" />
            <result column="EC_COURSE_CREDIT" jdbcType="VARCHAR" property="courseCredit" />
            <result column="EC_COURSE_TYPE_ID" jdbcType="VARCHAR" property="courseTypeId" />
            <result column="EC_COURSE_TYPE_NAME" jdbcType="VARCHAR" property="courseTypeName" />
            <result column="EC_COURSE_PERIOD" jdbcType="VARCHAR" property="coursePeriod" />
            <result column="EC_COURSE_IMG" jdbcType="VARCHAR" property="courseImg" />
            <result column="EC_COURSE_ORDER" jdbcType="DECIMAL" property="courseOrder" />
            <result column="EC_RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus" />
            <result column="EC_CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
            <result column="EC_CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow" />
            <result column="EC_MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
            <result column="EC_MODIFY_USER_FLOW" jdbcType="VARCHAR" property="modifyUserFlow" />
            <result column="EC_UPLOAD_TIME" jdbcType="VARCHAR" property="uploadTime" />
            <result column="EC_COURSE_CATEGORY_ID" jdbcType="VARCHAR" property="courseCategoryId" />
            <result column="EC_COURSE_CATEGORY_NAME" jdbcType="VARCHAR" property="courseCategoryName" />
            <result column="EC_COURSE_STATUS_ID" jdbcType="VARCHAR" property="courseStatusId" />
            <result column="EC_COURSE_STATUS_NAME" jdbcType="VARCHAR" property="courseStatusName" />
            <result column="EC_COURSE_SPEAKER" jdbcType="VARCHAR" property="courseSpeaker" />
            <result column="EC_DEPT_FLOW" jdbcType="VARCHAR" property="deptFlow" />
            <result column="EC_DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
            <result column="EC_COURSE_IMG_NAME" jdbcType="VARCHAR" property="courseImgName" />
            <result column="EC_CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
            <result column="EC_GRADATION_ID" jdbcType="VARCHAR" property="gradationId" />
            <result column="EC_GRADATION_NAME" jdbcType="VARCHAR" property="gradationName" />
            <result column="EC_COURSE_PERIOD_TEACH" jdbcType="VARCHAR" property="coursePeriodTeach" />
            <result column="EC_COURSE_PERIOD_EXPER" jdbcType="VARCHAR" property="coursePeriodExper" />
            <result column="EC_COURSE_PERIOD_MACHINE" jdbcType="VARCHAR" property="coursePeriodMachine" />
            <result column="EC_COURSE_PERIOD_OTHER" jdbcType="VARCHAR" property="coursePeriodOther" />
            <result column="EC_COURSE_CODE" jdbcType="VARCHAR" property="courseCode" />
            <result column="EC_COURSE_NAME_EN" jdbcType="VARCHAR" property="courseNameEn" />
            <result column="EC_COURSE_USER_COUNT" jdbcType="VARCHAR" property="courseUserCount" />
            <result column="EC_COURSE_MOUDLE_ID" jdbcType="VARCHAR" property="courseMoudleId" />
            <result column="EC_COURSE_MOUDLE_NAME" jdbcType="VARCHAR" property="courseMoudleName" />
            <result column="EC_ASSUME_ORG_FLOW" jdbcType="VARCHAR" property="assumeOrgFlow" />
            <result column="EC_ASSUME_ORG_NAME" jdbcType="VARCHAR" property="assumeOrgName" />
            <result column="EC_COURSE_SPEAKER_FLOW" jdbcType="VARCHAR" property="courseSpeakerFlow" />
            <result column="EC_COURSE_SPEAKER_PHONE" jdbcType="VARCHAR" property="courseSpeakerPhone" />
        </association>
        <collection property="scheduleTeacherList" ofType="com.pinde.sci.model.mo.EduScheduleTeacher" column="EST_RECORD_FLOW">
            <id column="EST_RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow"/>
            <result column="EST_SCHEDULE_CLASS_FLOW" jdbcType="VARCHAR" property="scheduleClassFlow"/>
            <result column="EST_CLASS_TEACHER_FLOW" jdbcType="VARCHAR" property="classTeacherFlow"/>
            <result column="EST_CLASS_TEACHER_NAME" jdbcType="VARCHAR" property="classTeacherName"/>
            <result column="EST_GROUP_TYPE_ID" jdbcType="VARCHAR" property="groupTypeId"/>
            <result column="EST_MASTER_FLAG" jdbcType="VARCHAR" property="masterFlag"/>
            <result column="EST_RECORD_STATUS" jdbcType="VARCHAR" property="recordStatus"/>
            <result column="EST_CREATE_TIME" jdbcType="VARCHAR" property="createTime"/>
            <result column="EST_CREATE_USER_FLOW" jdbcType="VARCHAR" property="createUserFlow"/>
            <result column="EST_MODIFY_TIME" jdbcType="DECIMAL" property="modifyTime"/>
            <result column="EST_MODIFY_USER_FLOW" jdbcType="DECIMAL" property="modifyUserFlow"/>
        </collection>
    </resultMap>

    <select id="seachClassByMap" parameterType="java.util.Map" resultMap="extMap">
        select ESC.RECORD_FLOW,
        ESC.SESSION_NUMBER,
        ESC.GRADE_TERM_ID,
        ESC.GRADE_TERM_NAME,
        ESC.CLASS_ID,
        ESC.CLASS_NAME,
        ESC.GRADATION_ID,
        ESC.GRADATION_NAME,
        ESC.COURSE_FLOW,
        ESC.COURSE_CODE,
        ESC.CLASS_COURSE_NAME,
        ESC.CLASS_PERIOD,
        ESC.CLASS_TIME ,
        ESC.CLASS_ORDER,
        ESC.ASSUME_ORG_FLOW,
        ESC.ASSUME_ORG_NAME,
        ESC.CLASSROOM_ID,
        ESC.CLASSROOM_NAME,
        ESC.STUDENT_MAXMUN,
        ESC.MEMO,
        EST.RECORD_FLOW EST_RECORD_FLOW,
        EST.SCHEDULE_CLASS_FLOW EST_SCHEDULE_CLASS_FLOW,
        EST.CLASS_TEACHER_FLOW EST_CLASS_TEACHER_FLOW,
        EST.CLASS_TEACHER_NAME EST_CLASS_TEACHER_NAME,
        EST.GROUP_TYPE_ID EST_GROUP_TYPE_ID,
        EST.MASTER_FLAG EST_MASTER_FLAG,
        EST.RECORD_STATUS EST_RECORD_STATUS,
        EST.CREATE_TIME EST_CREATE_TIME,
        EST.CREATE_USER_FLOW EST_CREATE_USER_FLOW,
        EST.MODIFY_TIME EST_MODIFY_TIME,
        EST.MODIFY_USER_FLOW  EST_MODIFY_USER_FLOW,
        EC.COURSE_FLOW EC_COURSE_FLOW,
        EC.COURSE_CODE EC_COURSE_CODE,
        EC.COURSE_NAME EC_COURSE_NAME,
        EC.COURSE_NAME_EN EC_COURSE_NAME_EN,
        EC.DEPT_FLOW EC_DEPT_FLOW,
        EC.DEPT_NAME EC_DEPT_NAME,
        EC.GRADATION_ID EC_GRADATION_ID,
        EC.GRADATION_NAME EC_GRADATION_NAME,
        EC.COURSE_SESSION EC_COURSE_SESSION,
        EC.COURSE_MAJOR_ID EC_COURSE_MAJOR_ID,
        EC.COURSE_MAJOR_NAME EC_COURSE_MAJOR_NAME,
        EC.COURSE_CREDIT EC_COURSE_CREDIT,
        EC.COURSE_TYPE_ID EC_COURSE_TYPE_ID,
        EC.COURSE_TYPE_NAME EC_COURSE_TYPE_NAME,
        EC.COURSE_SPEAKER EC_COURSE_SPEAKER,
        EC.COURSE_SPEAKER_FLOW EC_COURSE_SPEAKER_FLOW,
        EC.COURSE_SPEAKER_PHONE EC_COURSE_SPEAKER_PHONE,
        EC.CREATE_USER_NAME EC_CREATE_USER_NAME,
        EC.UPLOAD_TIME EC_UPLOAD_TIME,
        EC.COURSE_PERIOD EC_COURSE_PERIOD,
        EC.COURSE_CATEGORY_ID EC_COURSE_CATEGORY_ID,
        EC.COURSE_CATEGORY_NAME EC_COURSE_CATEGORY_NAME,
        EC.COURSE_STATUS_ID EC_COURSE_STATUS_ID,
        EC.COURSE_STATUS_NAME EC_COURSE_STATUS_NAME,
        EC.COURSE_INTRO EC_COURSE_INTRO,
        EC.COURSE_PERIOD_TEACH EC_COURSE_PERIOD_TEACH,
        EC.COURSE_PERIOD_EXPER EC_COURSE_PERIOD_EXPER,
        EC.COURSE_PERIOD_MACHINE EC_COURSE_PERIOD_MACHINE,
        EC.COURSE_PERIOD_OTHER EC_COURSE_PERIOD_OTHER,
        EC.COURSE_USER_COUNT EC_COURSE_USER_COUNT,
        EC.COURSE_MOUDLE_ID EC_COURSE_MOUDLE_ID,
        EC.COURSE_MOUDLE_NAME EC_COURSE_MOUDLE_NAME,
        EC.ASSUME_ORG_FLOW EC_ASSUME_ORG_FLOW,
        EC.ASSUME_ORG_NAME EC_ASSUME_ORG_NAME,
        EC.COURSE_IMG EC_COURSE_IMG,
        EC.COURSE_IMG_NAME EC_COURSE_IMG_NAME,
        EC.COURSE_ORDER EC_COURSE_ORDER,
        EC.RECORD_STATUS EC_RECORD_STATUS,
        EC.CREATE_TIME EC_CREATE_TIME,
        EC.CREATE_USER_FLOW EC_CREATE_USER_FLOW,
        EC.MODIFY_TIME EC_MODIFY_TIME,
        EC.MODIFY_USER_FLOW EC_MODIFY_USER_FLOW
        from edu_schedule_class esc
        left join edu_schedule_teacher est
        on esc.record_flow = est.schedule_class_flow
        and est.record_status = 'Y'
        left join edu_course ec on esc.course_flow=ec.course_flow  and ec.record_status='Y'
        where esc.record_status = 'Y'

        <if test="term!=null">
            <if test="term.recordFlow!=null and term.recordFlow!=''">
                and esc.term_flow = #{term.recordFlow}
            </if>
        </if>
        <if test="courseFlow!=null and courseFlow!=''">
            and esc.COURSE_FLOW = #{courseFlow}
        </if>
        <if test="assumeOrgFlow!=null and assumeOrgFlow!=''">
            and esc.assume_org_flow = #{assumeOrgFlow}
        </if>
        <if test="classTeacherName!=null and classTeacherName!=''">
            and est.class_teacher_name like '%${classTeacherName}%'
        </if>
        <if test='termStartTime!=null and termStartTime!=""'>
            and to_char(to_date(esc.class_time,'yyyy-mm-dd'),'yyyy-mm-dd') <![CDATA[>=]]> #{termStartTime}
        </if>
        <if test='termEndTime!=null and termEndTime!=""'>
            and to_char(to_date(esc.class_time,'yyyy-mm-dd'),'yyyy-mm-dd') <![CDATA[<=]]> #{termEndTime}
        </if>
    </select>
    <resultMap id="teachersClassScheduleMap" type="java.util.HashMap">
        <result column="COURSE_MAJOR_ID" jdbcType="VARCHAR" property="courseMajorId"/>
        <result column="COURSE_MAJOR_NAME" jdbcType="VARCHAR" property="courseMajorName"/>
        <result column="CLASSROOM_NAME" jdbcType="VARCHAR" property="classroomName"/>
        <result column="CLASS_COURSE_NAME" jdbcType="VARCHAR" property="classCourseName"/>
        <result column="STUDENT_MAXMUN" jdbcType="VARCHAR" property="studentMaxmun"/>
        <result column="studentcount" jdbcType="VARCHAR" property="count"/>
        <result column="CLASS_TIME" jdbcType="VARCHAR" property="classTime"/>
        <result column="CLASS_ORDER" jdbcType="VARCHAR" property="classOrder"/>
        <result column="RECORD_FLOW" jdbcType="VARCHAR" property="recordFlow"/>
    </resultMap>
    <select id="searchTeachersClassSchedule" parameterType="java.util.Map" resultMap="teachersClassScheduleMap">
        select ec.COURSE_MAJOR_ID,ec.COURSE_MAJOR_NAME,esc.CLASSROOM_NAME,esc.CLASS_COURSE_NAME,esc.STUDENT_MAXMUN,est.CLASS_TEACHER_NAME,
        (select count(1) from edu_schedule_student where record_status='Y' and esc.record_flow=SCHEDULE_CLASS_FLOW) as studentcount,esc.CLASS_TIME,
        esc.CLASS_ORDER,esc.RECORD_FLOW
        from edu_schedule_class esc
        left join edu_schedule_teacher est
        on esc.record_flow = est.schedule_class_flow and est.record_status = 'Y'
        left join edu_course ec on esc.course_flow=ec.course_flow and ec.record_status='Y'
        where esc.record_status = 'Y'

        <if test="courseSession!=null and courseSession!=''">
            and esc.session_number = #{courseSession}
        </if>
        <if test="gradeTermId!=null and gradeTermId!=''">
            and esc.grade_Term_Id = #{gradeTermId}
        </if>
        <if test="assumeOrgFlow!=null and assumeOrgFlow!=''">
            and esc.assume_org_flow = #{assumeOrgFlow}
        </if>
        <if test="classTeacherName!=null and classTeacherName!=''">
            and est.class_teacher_name like '%${classTeacherName}%'
        </if>
        <if test="classId!=null and classId!=''">
            and esc.class_id = #{classId}
        </if>
        <if test='termStartTime!=null and termStartTime!=""'>
            and to_char(to_date(esc.class_time,'yyyy-mm-dd'),'yyyy-mm-dd') <![CDATA[>=]]> #{termStartTime}
        </if>
        <if test='termEndTime!=null and termEndTime!=""'>
            and to_char(to_date(esc.class_time,'yyyy-mm-dd'),'yyyy-mm-dd') <![CDATA[<=]]> #{termEndTime}
        </if>
    </select>
    <resultMap id="firstClassMap" type="java.util.HashMap">
        <result column="COURSE_FLOW" jdbcType="VARCHAR" property="courseFlow"/>
        <result column="COURSE_CODE" jdbcType="VARCHAR" property="courseCode"/>
        <result column="CLASS_COURSE_NAME" jdbcType="VARCHAR" property="classCourseName"/>
        <result column="CLASS_TIME" jdbcType="VARCHAR" property="classTime"/>
        <result column="CLASS_ORDER" jdbcType="VARCHAR" property="classOrder"/>
    </resultMap>
    <select id="getFirstClassByFlow" parameterType="java.lang.String" resultMap="firstClassMap">
     SELECT *
       FROM (SELECT A.*,
                    ROW_NUMBER() OVER(PARTITION BY A.COURSE_CODE, A.CLASS_TIME ORDER BY CLASS_ORDER_NUM ASC) AS RN
               FROM (

                     SELECT D.COURSE_FLOW,
                             D.COURSE_CODE,
                             D.CLASS_COURSE_NAME,
                             D.CLASS_TIME,
                             ESC.CLASS_ORDER,
                             CASE ESC.CLASS_ORDER
                               WHEN '一' THEN
                                1
                               WHEN '二' THEN
                                2
                               WHEN '三' THEN
                                3
                               WHEN '四' THEN
                                4
                               WHEN '五' THEN
                                5
                               WHEN '六' THEN
                                6
                               WHEN '七' THEN
                                7
                               WHEN '八' THEN
                                8
                               WHEN '九' THEN
                                9
                               WHEN '晚上' THEN
                                10
                             END CLASS_ORDER_NUM
                       FROM (SELECT ROW_NUMBER() OVER(PARTITION BY COURSE_CODE ORDER BY CLASS_TIME ASC) RN,
                                     COURSE_FLOW,
                                     COURSE_CODE,
                                     CLASS_COURSE_NAME,
                                     CLASS_TIME
                                FROM EDU_SCHEDULE_CLASS
                               WHERE TERM_FLOW = #{recordFlow}
                                 AND RECORD_STATUS = 'Y'
                               GROUP BY COURSE_FLOW,
                                        COURSE_CODE,
                                        CLASS_COURSE_NAME,
                                        CLASS_TIME) D
                       LEFT JOIN EDU_SCHEDULE_CLASS ESC
                         ON ESC.RECORD_STATUS = 'Y'
                        AND D.CLASS_COURSE_NAME = ESC.CLASS_COURSE_NAME
                        AND D.CLASS_TIME = ESC.CLASS_TIME
                      WHERE RN = 1

                     ) A
              GROUP BY COURSE_FLOW,
                       COURSE_CODE,
                       CLASS_COURSE_NAME,
                       CLASS_TIME,
                       CLASS_ORDER,
                       CLASS_ORDER_NUM)
      WHERE RN = 1
    </select>
    <select id="getFirstClassOfGzByFlow" parameterType="java.lang.String" resultMap="firstClassMap">
        SELECT *
       FROM (SELECT A.*,
                    ROW_NUMBER() OVER(PARTITION BY A.COURSE_CODE, A.CLASS_TIME ORDER BY CLASS_ORDER_NUM ASC) AS RN
               FROM (

                     SELECT D.COURSE_FLOW,
                             D.COURSE_CODE,
                             D.CLASS_COURSE_NAME,
                             D.CLASS_TIME,
                             ESC.CLASS_ORDER,
                             CASE ESC.CLASS_ORDER
                               WHEN '一' THEN 1
                               WHEN '二' THEN 2
                               WHEN '三' THEN 3
                               WHEN '四' THEN 4
                               WHEN '五' THEN 5
                               WHEN '六' THEN 6
                               WHEN '七' THEN 7
                               WHEN '八' THEN 8
                               WHEN '九' THEN 9
                               WHEN '十' THEN 10
                               WHEN '十一' THEN 11
                               WHEN '十二' THEN 12
                             END CLASS_ORDER_NUM
                       FROM (SELECT ROW_NUMBER() OVER(PARTITION BY COURSE_CODE ORDER BY CLASS_TIME ASC) RN,
                                     COURSE_FLOW,
                                     COURSE_CODE,
                                     CLASS_COURSE_NAME,
                                     CLASS_TIME
                                FROM EDU_SCHEDULE_CLASS
                               WHERE TERM_FLOW = #{recordFlow}
                                 AND RECORD_STATUS = 'Y'
                               GROUP BY COURSE_FLOW,
                                        COURSE_CODE,
                                        CLASS_COURSE_NAME,
                                        CLASS_TIME) D
                       LEFT JOIN EDU_SCHEDULE_CLASS ESC
                         ON ESC.RECORD_STATUS = 'Y'
                        AND D.CLASS_COURSE_NAME = ESC.CLASS_COURSE_NAME
                        AND D.CLASS_TIME = ESC.CLASS_TIME
                      WHERE RN = 1

                     ) A
              GROUP BY COURSE_FLOW,
                       COURSE_CODE,
                       CLASS_COURSE_NAME,
                       CLASS_TIME,
                       CLASS_ORDER,
                       CLASS_ORDER_NUM)
      WHERE RN = 1
    </select>
    <select id="seachStudentClassByMap" parameterType="java.util.Map" resultMap="extMap">
        select ESC.RECORD_FLOW,
        ESC.SESSION_NUMBER,
        ESC.GRADE_TERM_ID,
        ESC.GRADE_TERM_NAME,
        ESC.CLASS_ID,
        ESC.CLASS_NAME,
        ESC.GRADATION_ID,
        ESC.GRADATION_NAME,
        ESC.COURSE_FLOW,
        ESC.COURSE_CODE,
        ESC.CLASS_COURSE_NAME,
        ESC.CLASS_PERIOD,
        ESC.CLASS_TIME ,
        ESC.CLASS_ORDER,
        ESC.ASSUME_ORG_FLOW,
        ESC.ASSUME_ORG_NAME,
        ESC.CLASSROOM_ID,
        ESC.CLASSROOM_NAME,
        ESC.STUDENT_MAXMUN,
        EST.RECORD_FLOW EST_RECORD_FLOW,
        EST.SCHEDULE_CLASS_FLOW EST_SCHEDULE_CLASS_FLOW,
        EST.CLASS_TEACHER_FLOW EST_CLASS_TEACHER_FLOW,
        EST.CLASS_TEACHER_NAME EST_CLASS_TEACHER_NAME,
        EST.GROUP_TYPE_ID EST_GROUP_TYPE_ID,
        EST.MASTER_FLAG EST_MASTER_FLAG,
        EST.RECORD_STATUS EST_RECORD_STATUS,
        EST.CREATE_TIME EST_CREATE_TIME,
        EST.CREATE_USER_FLOW EST_CREATE_USER_FLOW,
        EST.MODIFY_TIME EST_MODIFY_TIME,
        EST.MODIFY_USER_FLOW  EST_MODIFY_USER_FLOW,
        EC.COURSE_FLOW EC_COURSE_FLOW,
        EC.COURSE_CODE EC_COURSE_CODE,
        EC.COURSE_NAME EC_COURSE_NAME,
        EC.COURSE_NAME_EN EC_COURSE_NAME_EN,
        EC.DEPT_FLOW EC_DEPT_FLOW,
        EC.DEPT_NAME EC_DEPT_NAME,
        EC.GRADATION_ID EC_GRADATION_ID,
        EC.GRADATION_NAME EC_GRADATION_NAME,
        EC.COURSE_SESSION EC_COURSE_SESSION,
        EC.COURSE_MAJOR_ID EC_COURSE_MAJOR_ID,
        EC.COURSE_MAJOR_NAME EC_COURSE_MAJOR_NAME,
        EC.COURSE_CREDIT EC_COURSE_CREDIT,
        EC.COURSE_TYPE_ID EC_COURSE_TYPE_ID,
        EC.COURSE_TYPE_NAME EC_COURSE_TYPE_NAME,
        EC.COURSE_SPEAKER EC_COURSE_SPEAKER,
        EC.COURSE_SPEAKER_FLOW EC_COURSE_SPEAKER_FLOW,
        EC.COURSE_SPEAKER_PHONE EC_COURSE_SPEAKER_PHONE,
        EC.CREATE_USER_NAME EC_CREATE_USER_NAME,
        EC.UPLOAD_TIME EC_UPLOAD_TIME,
        EC.COURSE_PERIOD EC_COURSE_PERIOD,
        EC.COURSE_CATEGORY_ID EC_COURSE_CATEGORY_ID,
        EC.COURSE_CATEGORY_NAME EC_COURSE_CATEGORY_NAME,
        EC.COURSE_STATUS_ID EC_COURSE_STATUS_ID,
        EC.COURSE_STATUS_NAME EC_COURSE_STATUS_NAME,
        EC.COURSE_INTRO EC_COURSE_INTRO,
        EC.COURSE_PERIOD_TEACH EC_COURSE_PERIOD_TEACH,
        EC.COURSE_PERIOD_EXPER EC_COURSE_PERIOD_EXPER,
        EC.COURSE_PERIOD_MACHINE EC_COURSE_PERIOD_MACHINE,
        EC.COURSE_PERIOD_OTHER EC_COURSE_PERIOD_OTHER,
        EC.COURSE_USER_COUNT EC_COURSE_USER_COUNT,
        EC.COURSE_MOUDLE_ID EC_COURSE_MOUDLE_ID,
        EC.COURSE_MOUDLE_NAME EC_COURSE_MOUDLE_NAME,
        EC.ASSUME_ORG_FLOW EC_ASSUME_ORG_FLOW,
        EC.ASSUME_ORG_NAME EC_ASSUME_ORG_NAME,
        EC.COURSE_IMG EC_COURSE_IMG,
        EC.COURSE_IMG_NAME EC_COURSE_IMG_NAME,
        EC.COURSE_ORDER EC_COURSE_ORDER,
        EC.RECORD_STATUS EC_RECORD_STATUS,
        EC.CREATE_TIME EC_CREATE_TIME,
        EC.CREATE_USER_FLOW EC_CREATE_USER_FLOW,
        EC.MODIFY_TIME EC_MODIFY_TIME,
        EC.MODIFY_USER_FLOW EC_MODIFY_USER_FLOW
        from edu_schedule_class esc
        left join edu_schedule_teacher est on esc.record_flow = est.schedule_class_flow
        left join edu_course ec on esc.course_flow=ec.course_flow
            where esc.record_status = 'Y'
                and ec.record_status='Y'
        <if test="term!=null">
            <if test="term.recordFlow!=null and term.recordFlow!=''">
                and esc.term_flow = #{term.recordFlow}
            </if>
        </if>
        and esc.course_flow in(
        select course_flow from edu_student_course
        WHERE record_status = 'Y'
        <if test="userFlow!=null and userFlow!=''">
            and user_flow = #{userFlow}
        </if>)
    </select>
    <insert id="insertScheduleCourse" parameterType="com.pinde.sci.model.mo.EduScheduleStudent">
        insert into edu_schedule_student
          select #{recordFlow},#{scheduleClassFlow},#{userFlow},session_number,grade_term_id,grade_term_name,class_id,class_name,gradation_id,gradation_name,course_flow,course_code,class_course_name,
            class_period,class_time,class_order,assume_org_flow,assume_org_name,classroom_id,classroom_name,student_maxmun, #{recordStatus},#{createTime},#{createUserFlow},#{modifyTime}, #{modifyUserFlow}
          from edu_schedule_class where record_flow=#{scheduleClassFlow}
    </insert>
    <select id="checkConflict" parameterType="java.util.Map" resultType="java.util.Map">
        select b.class_teacher_name, count(1)
        from edu_schedule_class a
        left join edu_schedule_teacher b
        on a.record_flow = b.schedule_class_flow
        where 1=1
        <if test="termFlow!=null and termFlow!=''">
            and a.term_flow = #{termFlow}
        </if>
        <if test="classTime!=null and classTime!=''">
            and a.class_time = #{classTime}
        </if>
        <if test="classOrder!=null and classOrder!=''">
            and a.class_order = #{classOrder}
        </if>
        <if test="teaList!=null and teaList.size>0">
            and b.class_teacher_name in <foreach collection="teaList" open="(" separator="," close=")" item="item">#{item}</foreach>
        </if>
        <if test="courseFlow!=null and courseFlow!=''">
            and a.course_flow != #{courseFlow}
        </if>
        group by b.class_teacher_name
    </select>
</mapper>