<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.sci.dao.res.ResDiscipleInfoExtMapper" >
	<select id="getTeacherNames" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT  LISTAGG(TEACHER_NAME,'ï¼Œ') WITHIN GROUP( ORDER BY CREATE_TIME) TEACHER_NAMES
    FROM RES_STUDENT_DISCIPLE_TEACHER T
    WHERE RECORD_STATUS='Y' AND DOCTOR_FLOW=#{userFlow}
    GROUP BY DOCTOR_FLOW
	</select>

    <resultMap id="discipleInfoByDocFlowMap" type="java.util.HashMap" >
        <result column="discipleCount" property="discipleCount" jdbcType="VARCHAR" />
        <result column="NOTE_TYPE_ID" property="noteTypeId" jdbcType="VARCHAR" />
        <result column="DOCTOR_FLOW" property="doctorFlow" jdbcType="VARCHAR" />
    </resultMap>
    <select id="searchDiscipleInfoFinbyDocFlow" parameterType="java.util.List" resultMap="discipleInfoByDocFlowMap">
        select to_char(nvl(count(1),0)) discipleCount,NOTE_TYPE_ID,doctor_flow
        from res_disciple_note_info
        where record_status = 'Y'
        and AUDIT_STATUS_ID != 'Apply'
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by NOTE_TYPE_ID,doctor_flow
        union
        select to_char(nvl(count(1),0)) discipleCount,case when doctor_flow is not null then 'FollowTeacherRecord' end NOTE_TYPE_ID,doctor_flow
        from res_disciple_record_info
        where record_status = 'Y'
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by doctor_flow
        union
        select to_char(nvl(count(1),0)) discipleCount,case when doctor_flow is not null then 'BookRecord' end NOTE_TYPE_ID,doctor_flow
        from res_book_study_record
        where record_status = 'Y'
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by doctor_flow
        union
        select to_char(nvl(count(1),0)) discipleCount,case when doctor_flow is not null then 'TypicalCases' end NOTE_TYPE_ID,doctor_flow
        from res_typical_cases
        where record_status = 'Y'
        and AUDIT_STATUS_ID != 'Apply'
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by doctor_flow
        union
        select to_char(nvl(count(1),0)) discipleCount,case when doctor_flow is not null then 'AnnualAssessment' end NOTE_TYPE_ID,doctor_flow
        from res_annual_assessment
        where record_status = 'Y'
        and AUDIT_STATUS_ID != 'Apply'
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by doctor_flow
        union
        select to_char(nvl(count(1),0)) discipleCount,case when doctor_flow is not null then 'GraduationAssessment' end NOTE_TYPE_ID,doctor_flow
        from res_graduation_assessment
        where record_status = 'Y'
        and AUDIT_STATUS_ID IS NOT NULL
        <if test='discipleDocFlows != null and discipleDocFlows.size()>0'>
            and doctor_flow in
            <foreach collection="discipleDocFlows" item="doctorFlow" open="(" separator="," close=")">
                #{doctorFlow}
            </foreach>
        </if>
        group by doctor_flow
    </select>
    <resultMap id="discipleInfoReqMap" type="java.util.HashMap" >
        <result column="req_number" property="reqNumber" jdbcType="VARCHAR" />
        <result column="key" property="key" jdbcType="VARCHAR" />
    </resultMap>
    <select id="findEveDiscipleInfoReq" parameterType="java.util.List" resultMap="discipleInfoReqMap">
        select to_char(nvl(sum(req_number),0)) req_number,session_number||training_type_id||disciple_type_id key
        from res_disciple_req
        where record_status = 'Y'
        group By session_number,training_type_id,disciple_type_id
    </select>
</mapper>