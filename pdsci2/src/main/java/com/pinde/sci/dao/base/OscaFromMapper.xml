<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pinde.core.common.sci.dao.OscaFromMapper" >
    <resultMap id="BaseResultMap" type="com.pinde.core.model.OscaFrom">
    <id column="FROM_FLOW" property="fromFlow" jdbcType="VARCHAR" />
    <result column="FROM_NAME" property="fromName" jdbcType="VARCHAR" />
    <result column="FROM_TYPE_ID" property="fromTypeId" jdbcType="VARCHAR" />
    <result column="FROM_TYPE_NAME" property="fromTypeName" jdbcType="VARCHAR" />
    <result column="FROM_URL" property="fromUrl" jdbcType="VARCHAR" />
    <result column="IS_RELEASED" property="isReleased" jdbcType="CHAR" />
    <result column="FROM_SCORE" property="fromScore" jdbcType="VARCHAR" />
    <result column="RECORD_STATUS" property="recordStatus" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="CREATE_USER_FLOW" property="createUserFlow" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_FLOW" property="modifyUserFlow" jdbcType="VARCHAR" />
    <result column="ORG_FLOW" property="orgFlow" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
  </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.pinde.core.model.OscaFrom" extends="BaseResultMap">
    <result column="RROM_CONTENT" property="rromContent" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FROM_FLOW, FROM_NAME, FROM_TYPE_ID, FROM_TYPE_NAME, FROM_URL, IS_RELEASED, FROM_SCORE, 
    RECORD_STATUS, CREATE_TIME, CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, ORG_FLOW, 
    ORG_NAME
  </sql>
  <sql id="Blob_Column_List" >
    RROM_CONTENT
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.pinde.core.model.OscaFromExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
        from OSCA_FROM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pinde.core.model.OscaFromExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
        from OSCA_FROM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from OSCA_FROM
    where FROM_FLOW = #{fromFlow,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
      delete from OSCA_FROM
    where FROM_FLOW = #{fromFlow,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.pinde.core.model.OscaFromExample">
        delete from OSCA_FROM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.pinde.core.model.OscaFrom">
        insert into OSCA_FROM (FROM_FLOW, FROM_NAME, FROM_TYPE_ID,
      FROM_TYPE_NAME, FROM_URL, IS_RELEASED, 
      FROM_SCORE, RECORD_STATUS, CREATE_TIME, 
      CREATE_USER_FLOW, MODIFY_TIME, MODIFY_USER_FLOW, 
      ORG_FLOW, ORG_NAME, RROM_CONTENT
      )
    values (#{fromFlow,jdbcType=VARCHAR}, #{fromName,jdbcType=VARCHAR}, #{fromTypeId,jdbcType=VARCHAR}, 
      #{fromTypeName,jdbcType=VARCHAR}, #{fromUrl,jdbcType=VARCHAR}, #{isReleased,jdbcType=CHAR}, 
      #{fromScore,jdbcType=VARCHAR}, #{recordStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUserFlow,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{modifyUserFlow,jdbcType=VARCHAR}, 
      #{orgFlow,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{rromContent,jdbcType=CLOB}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.pinde.core.model.OscaFrom">
        insert into OSCA_FROM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fromFlow != null" >
        FROM_FLOW,
      </if>
      <if test="fromName != null" >
        FROM_NAME,
      </if>
      <if test="fromTypeId != null" >
        FROM_TYPE_ID,
      </if>
      <if test="fromTypeName != null" >
        FROM_TYPE_NAME,
      </if>
      <if test="fromUrl != null" >
        FROM_URL,
      </if>
      <if test="isReleased != null" >
        IS_RELEASED,
      </if>
      <if test="fromScore != null" >
        FROM_SCORE,
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW,
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="rromContent != null" >
        RROM_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fromFlow != null" >
        #{fromFlow,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null" >
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromTypeId != null" >
        #{fromTypeId,jdbcType=VARCHAR},
      </if>
      <if test="fromTypeName != null" >
        #{fromTypeName,jdbcType=VARCHAR},
      </if>
      <if test="fromUrl != null" >
        #{fromUrl,jdbcType=VARCHAR},
      </if>
      <if test="isReleased != null" >
        #{isReleased,jdbcType=CHAR},
      </if>
      <if test="fromScore != null" >
        #{fromScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="rromContent != null" >
        #{rromContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.pinde.core.model.OscaFromExample" resultType="java.lang.Integer">
        select count(*) from OSCA_FROM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
      update OSCA_FROM
    <set >
      <if test="record.fromFlow != null" >
        FROM_FLOW = #{record.fromFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.fromName != null" >
        FROM_NAME = #{record.fromName,jdbcType=VARCHAR},
      </if>
      <if test="record.fromTypeId != null" >
        FROM_TYPE_ID = #{record.fromTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromTypeName != null" >
        FROM_TYPE_NAME = #{record.fromTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUrl != null" >
        FROM_URL = #{record.fromUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isReleased != null" >
        IS_RELEASED = #{record.isReleased,jdbcType=CHAR},
      </if>
      <if test="record.fromScore != null" >
        FROM_SCORE = #{record.fromScore,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserFlow != null" >
        CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFlow != null" >
        ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.rromContent != null" >
        RROM_CONTENT = #{record.rromContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
      update OSCA_FROM
    set FROM_FLOW = #{record.fromFlow,jdbcType=VARCHAR},
      FROM_NAME = #{record.fromName,jdbcType=VARCHAR},
      FROM_TYPE_ID = #{record.fromTypeId,jdbcType=VARCHAR},
      FROM_TYPE_NAME = #{record.fromTypeName,jdbcType=VARCHAR},
      FROM_URL = #{record.fromUrl,jdbcType=VARCHAR},
      IS_RELEASED = #{record.isReleased,jdbcType=CHAR},
      FROM_SCORE = #{record.fromScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      RROM_CONTENT = #{record.rromContent,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
      update OSCA_FROM
    set FROM_FLOW = #{record.fromFlow,jdbcType=VARCHAR},
      FROM_NAME = #{record.fromName,jdbcType=VARCHAR},
      FROM_TYPE_ID = #{record.fromTypeId,jdbcType=VARCHAR},
      FROM_TYPE_NAME = #{record.fromTypeName,jdbcType=VARCHAR},
      FROM_URL = #{record.fromUrl,jdbcType=VARCHAR},
      IS_RELEASED = #{record.isReleased,jdbcType=CHAR},
      FROM_SCORE = #{record.fromScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{record.recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{record.createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{record.modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{record.orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pinde.core.model.OscaFrom">
        update OSCA_FROM
    <set >
      <if test="fromName != null" >
        FROM_NAME = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromTypeId != null" >
        FROM_TYPE_ID = #{fromTypeId,jdbcType=VARCHAR},
      </if>
      <if test="fromTypeName != null" >
        FROM_TYPE_NAME = #{fromTypeName,jdbcType=VARCHAR},
      </if>
      <if test="fromUrl != null" >
        FROM_URL = #{fromUrl,jdbcType=VARCHAR},
      </if>
      <if test="isReleased != null" >
        IS_RELEASED = #{isReleased,jdbcType=CHAR},
      </if>
      <if test="fromScore != null" >
        FROM_SCORE = #{fromScore,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserFlow != null" >
        CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserFlow != null" >
        MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgFlow != null" >
        ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="rromContent != null" >
        RROM_CONTENT = #{rromContent,jdbcType=CLOB},
      </if>
    </set>
    where FROM_FLOW = #{fromFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pinde.core.model.OscaFrom">
        update OSCA_FROM
    set FROM_NAME = #{fromName,jdbcType=VARCHAR},
      FROM_TYPE_ID = #{fromTypeId,jdbcType=VARCHAR},
      FROM_TYPE_NAME = #{fromTypeName,jdbcType=VARCHAR},
      FROM_URL = #{fromUrl,jdbcType=VARCHAR},
      IS_RELEASED = #{isReleased,jdbcType=CHAR},
      FROM_SCORE = #{fromScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      RROM_CONTENT = #{rromContent,jdbcType=CLOB}
    where FROM_FLOW = #{fromFlow,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.pinde.core.model.OscaFrom">
        update OSCA_FROM
    set FROM_NAME = #{fromName,jdbcType=VARCHAR},
      FROM_TYPE_ID = #{fromTypeId,jdbcType=VARCHAR},
      FROM_TYPE_NAME = #{fromTypeName,jdbcType=VARCHAR},
      FROM_URL = #{fromUrl,jdbcType=VARCHAR},
      IS_RELEASED = #{isReleased,jdbcType=CHAR},
      FROM_SCORE = #{fromScore,jdbcType=VARCHAR},
      RECORD_STATUS = #{recordStatus,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_FLOW = #{createUserFlow,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},
      MODIFY_USER_FLOW = #{modifyUserFlow,jdbcType=VARCHAR},
      ORG_FLOW = #{orgFlow,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR}
    where FROM_FLOW = #{fromFlow,jdbcType=VARCHAR}
  </update>
</mapper>