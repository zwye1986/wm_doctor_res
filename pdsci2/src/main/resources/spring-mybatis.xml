<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd


    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${pdsci.jdbc.url}" />
		<property name="username" value="${pdsci.jdbc.username}" />
		<property name="password" value="${pdsci.jdbc.password}" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="idleMaxAge" value="240" />
		<property name="maxConnectionsPerPartition" value="10" />
		<property name="minConnectionsPerPartition" value="3" />
		<property name="partitionCount" value="1" />
		<property name="acquireIncrement" value="5" />
		<property name="statementsCacheSize" value="100" />
		<property name="releaseHelperThreads" value="3" />
	</bean> -->
	
	<!--<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <property name="slowSqlMillis" value="3000" />
	    <property name="logSlowSql" value="true" />
	    <property name="mergeSql" value="false" />
	</bean>
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
	
        <property name="dataSourceLogEnabled" value="false" />
        <property name="connectionLogEnabled" value="false" />
        <property name="connectionLogErrorEnabled" value="true" />
        
        <property name="statementLogEnabled" value="false" />
        <property name="statementLogErrorEnabled" value="true" />
        
        <property name="resultSetLogEnabled" value="false" />
        <property name="resultSetLogErrorEnabled" value="true" />
	
        <property name="connectionConnectBeforeLogEnabled" value="false" />
        <property name="connectionConnectAfterLogEnabled" value="false" />
        <property name="connectionCommitAfterLogEnabled" value="false" />
        <property name="connectionRollbackAfterLogEnabled" value="false" />
        <property name="connectionCloseAfterLogEnabled" value="false" />
        
        <property name="statementCreateAfterLogEnabled" value="false" />
        <property name="statementPrepareAfterLogEnabled" value="false" />
        <property name="statementPrepareCallAfterLogEnabled" value="false" />
        <property name="statementExecuteAfterLogEnabled" value="false" />
        <property name="statementExecuteQueryAfterLogEnabled" value="false" />
        <property name="statementExecuteUpdateAfterLogEnabled" value="false" />
        <property name="statementExecuteBatchAfterLogEnabled" value="false" />
        <property name="statementCloseAfterLogEnabled" value="false" />
        <property name="statementParameterSetLogEnabled" value="false" />
        <property name="statementParameterClearLogEnable" value="false" />
        
        <property name="resultSetNextAfterLogEnabled" value="false" />
        <property name="resultSetOpenAfterLogEnabled" value="false" />
        <property name="resultSetCloseAfterLogEnabled" value="false" />
        
        &lt;!&ndash; <property name="statementExecutableSqlLogEnable" value="false" /> &ndash;&gt;
  	</bean>
	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig">
		<property name="functionCheck" value="false"/>
		<property name="multiStatementAllow" value="true" />
		<property name="noneBaseStatementAllow" value="true" />
		<property name="doPrivilegedAllow" value="true" />
		<property name="selectIntoAllow" value="true" />
		<property name="strictSyntaxCheck" value="false"/>
		<property name="commentAllow" value="true"/>
	</bean>
  	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
      	<property name="dbType" value="oracle" />
		<property name="config" ref="wall-filter-config" />
  	</bean>-->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${pdsci.jdbc.url}" />
		<property name="username" value="${pdsci.jdbc.username}" />
		<property name="password" value="${pdsci.jdbc.password}" />
		<property name="maxActive" value="500" />
		<property name="initialSize" value="100" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="10" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="select sysdate from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="100" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="timeBetweenLogStatsMillis" value="300000" />
	    <property name="proxyFilters">
	        <list>
	            <ref bean="stat-filter" />
	            <ref bean="log-filter" />
	            <ref bean="wall-filter" />
	        </list>
	    </property>
	</bean>   -->
	
<!--	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager ="transactionManager" />
	
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true" />	

	&lt;!&ndash; mybatis文件配置，扫描所有mapper文件 &ndash;&gt;
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/pinde/*/dao/*/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property> 
    </bean>

	&lt;!&ndash; spring与mybatis整合配置，扫描所有dao &ndash;&gt;
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
   		<property name="basePackage" value="com.pinde.*.dao.*" />
   		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	</bean> 
	
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
    	<property name="patterns">
	        <list>
	            <value>com.pinde.*.biz.*.*</value>
	        </list>
    	</property>
	</bean>-->
<!--
	<aop:config proxy-target-class="true">
    	<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>-->
</beans>